

// C:\grua-booking-system-25\.github\workflows\build.yml
name: Build and Deploy

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '14'

    - name: Install dependencies
      run: npm install

    - name: Build the project
      run: npm run build

    - name: Deploy
      run: npm run deploy


// C:\grua-booking-system-25\.github\workflows\build.yml
name: Build and Deploy

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '14'

    - name: Install dependencies
      run: npm install

    - name: Build the project
      run: npm run build

    - name: Deploy
      run: npm run deploy


// C:\grua-booking-system-25\.gpt_engineer_internals\report-url-change.js
const main = () => {
  /**
   * Listen to URL changes and report them to the parent window
   *
   * See https://stackoverflow.com/a/46428962
   * The Navigation API https://developer.mozilla.org/en-US/docs/Web/API/Navigation_API seemed promising,
   * but it is not supported in all major browsers.
   */
  const observeUrlChange = () => {
    let oldHref = document.location.href;
    const body = document.querySelector("body");
    const observer = new MutationObserver(() => {
      if (oldHref !== document.location.href) {
        oldHref = document.location.href;
        window.top.postMessage({ type: "URL_CHANGED", url: document.location.href }, "https://run.gptengineer.app");
        window.top.postMessage({ type: "URL_CHANGED", url: document.location.href }, "http://localhost:3000");
      }
    });
    observer.observe(body, { childList: true, subtree: true });
  };

  window.addEventListener("load", observeUrlChange);
};

main().catch(console.error);


// C:\grua-booking-system-25\.vscode\launch.json
{
    // Use IntelliSense para saber los atributos posibles.
    // Mantenga el puntero para ver las descripciones de los existentes atributos.
    // Para más información, visite: https://go.microsoft.com/fwlink/?linkid=830387
    "version": "0.2.0",
    "configurations": [
        {
            "name": "PowerShell: Launch Current File",
            "type": "PowerShell",
            "request": "launch",
            "script": "${file}",
            "args": []
        }
    ]
}


// C:\grua-booking-system-25\client\src\authentication\auth.controller.ts
import { Controller, Post, Body } from '@nestjs/common';
import { AuthenticationDomainFacade } from './authentication.domain.facade';

@Controller('auth')
export class AuthController {
  constructor(private readonly authFacade: AuthenticationDomainFacade) {}

  @Post('register')
  register(@Body() body: { username: string, password: string }) {
    this.authFacade.register(body.username, body.password);
    return { message: 'User registered successfully' };
  }

  @Post('login')
  login(@Body() body: { username: string, password: string }) {
    const authenticated = this.authFacade.authenticate(body.username, body.password);
    if (authenticated) {
      return { message: 'Login successful' };
    } else {
      return { message: 'Invalid credentials' };
    }
  }

  @Post('change-password')
  changePassword(@Body() body: { username: string, newPassword: string }) {
    this.authFacade.changePassword(body.username, body.newPassword);
    return { message: 'Password changed successfully' };
  }
}


// C:\grua-booking-system-25\client\src\authentication\authentication.domain.facade.ts
import { Injectable } from '@nestjs/common';

@Injectable()
export class AuthenticationDomainFacade {
  private users = new Map<string, string>();

  register(username: string, password: string): void {
    if (this.users.has(username)) {
      throw new Error('User already exists');
    }
    this.users.set(username, password);
  }

  authenticate(username: string, password: string): boolean {
    return this.users.get(username) === password;
  }

  changePassword(username: string, newPassword: string): void {
    if (this.users.has(username)) {
      this.users.set(username, newPassword);
    } else {
      throw new Error('User not found');
    }
  }
}
¿

// C:\grua-booking-system-25\client\src\authentication\authentication.domain.module.ts
import { Module } from '@nestjs/common';
import { AuthenticationDomainFacade } from './authentication.domain.facade';

@Module({
  providers: [AuthenticationDomainFacade],
  exports: [AuthenticationDomainFacade],
})
export class AuthenticationDomainModule {}


// C:\grua-booking-system-25\client\src\authentication\authMiddleware.js
const jwt = require('jsonwebtoken');

const authMiddleware = (req, res, next) => {
  const token = req.headers['x-access-token'] || req.headers['authorization'];

  if (!token) {
    return res.status(401).json({ error: 'Unauthorized' });
  }

  jwt.verify(token, process.env.SECRET_KEY, (err, decoded) => {
    if (err) {
      return res.status(401).json({ error: 'Invalid token' });
    }

    req.user = decoded;
    next();
  });
};

module.exports = authMiddleware;


// C:\grua-booking-system-25\client\src\components\booking-status.enum.ts
export enum BookingStatus {
  PENDING = 'PENDING',
  CONFIRMED = 'CONFIRMED',
  CANCELLED = 'CANCELLED',
  COMPLETED = 'COMPLETED',
  NO_SHOW = 'NO_SHOW'
}


// C:\grua-booking-system-25\client\src\components\booking.entity.ts
import { Entity, PrimaryGeneratedColumn, Column, ManyToOne } from 'typeorm';
import { User } from './user.entity.ts';
import { Room } from './room.entity.ts/index.js';

@Entity()
export class Booking {
  @PrimaryGeneratedColumn()
  id: number;

  @Column({ type: 'datetime' })
  startTime: Date;

  @Column({ type: 'datetime' })
  endTime: Date;

  @ManyToOne(() => User, user => user.bookings)
  user: User;

  @ManyToOne(() => Room, room => room.bookings)
  room: Room;

  @Column({ default: false })
  isCancelled: boolean;

  @Column({ type: 'datetime', default: () => 'CURRENT_TIMESTAMP' })
  createdAt: Date;

  @Column({ type: 'datetime', default: () => 'CURRENT_TIMESTAMP', onUpdate: 'CURRENT_TIMESTAMP' })
  updatedAt: Date;
}


// C:\grua-booking-system-25\client\src\components\booking.repository.ts
import axios from 'axios';

const API_BASE_URL = 'http://localhost:3000/api';

export const BookingRepository = {
  createBooking: async (bookingData) => {
    try {
      const response = await axios.post(`${API_BASE_URL}/bookings`, bookingData);
      return response.data;
    } catch (error) {
      console.error('Error creating booking:', error);
      throw error;
    }
  },

  getBookings: async () => {
    try {
      const response = await axios.get(`${API_BASE_URL}/bookings`);
      return response.data;
    } catch (error) {
      console.error('Error fetching bookings:', error);
      throw error;
    }
  },

  getBookingById: async (id) => {
    try {
      const response = await axios.get(`${API_BASE_URL}/bookings/${id}`);
      return response.data;
    } catch (error) {
      console.error(`Error fetching booking with id ${id}:`, error);
      throw error;
    }
  },

  updateBooking: async (id, bookingData) => {
    try {
      const response = await axios.put(`${API_BASE_URL}/bookings/${id}`, bookingData);
      return response.data;
    } catch (error) {
      console.error(`Error updating booking with id ${id}:`, error);
      throw error;
    }
  },

  deleteBooking: async (id) => {
    try {
      const response = await axios.delete(`${API_BASE_URL}/bookings/${id}`);
      return response.data;
    } catch (error) {
      console.error(`Error deleting booking with id ${id}:`, error);
      throw error;
    }
  }
};


// C:\grua-booking-system-25\client\src\components\bookings.controller.ts
import { Controller, Post, Body, Get, Param, Patch } from '@nestjs/common';
import { BookingsService } from './bookings.service';

@Controller('bookings')
export class BookingsController {
  constructor(private readonly bookingsService: BookingsService) {}

  @Post()
  createBooking(@Body() body: { user: string, details: any }) {
    this.bookingsService.createBooking(body.user, body.details);
    return { message: 'Booking created successfully' };
  }

  @Get(':user')
  getUserBookings(@Param('user') user: string) {
    return this.bookingsService.getUserBookings(user);
  }

  @Patch(':id/status')
  updateBookingStatus(@Param('id') id: number, @Body() body: { status: string }) {
    this.bookingsService.updateBookingStatus(id, body.status);
    return { message: 'Booking status updated successfully' };
  }
}


// C:\grua-booking-system-25\client\src\components\bookings.module.ts
import { Module } from '@nestjs/common';
import { BookingsService } from './bookings.service';
import { BookingsController } from './bookings.controller';

@Module({
  providers: [BookingsService],
  controllers: [BookingsController],
})
export class BookingsModule {}


// C:\grua-booking-system-25\client\src\components\bookings.service.ts
// src/components/bookings.service.ts
import { Injectable, NotFoundException } from '@nestjs/common';
import { EventService } from '../event/event.service';
import { BookingRepository } from './booking.repository.ts'; // Asegúrate de que esta ruta es correcta
import { BookingStatus } from './booking-status.enum.ts'; // Enum para los estados de la reserva

@Injectable()
export class BookingsService {
  constructor(
    private eventService: EventService,
    private bookingRepository: BookingRepository,
  ) {}

  async updateBookingStatus(bookingId: string, status: BookingStatus): Promise<void> {
    // Encuentra la reserva por su ID
    const booking = await this.bookingRepository.findOne(bookingId);
    if (!booking) {
      throw new NotFoundException(`Booking with ID ${bookingId} not found`);
    }

    // Actualiza el estado de la reserva
    booking.status = status;

    // Guarda la reserva actualizada en el repositorio
    await this.bookingRepository.save(booking);

    // Emite un evento después de actualizar el estado
    this.eventService.emitEvent({ bookingId, status });
  }
}

// src/components/booking-status.enum.ts
export enum BookingStatus {
  PENDING = 'PENDING',
  CONFIRMED = 'CONFIRMED',
  COMPLETED = 'COMPLETED',
  CANCELLED = 'CANCELLED',
}

// src/components/booking.repository.ts
import { EntityRepository, Repository } from 'typeorm';
import { Booking } from './booking.entity.ts'; // Asegúrate de que esta ruta es correcta

@EntityRepository(Booking)
export class BookingRepository extends Repository<Booking> {}

// src/components/booking.entity.ts
import { Entity, Column, PrimaryGeneratedColumn } from 'typeorm';
import { BookingStatus } from './booking-status.enum.ts';

@Entity()
export class Booking {
  @PrimaryGeneratedColumn('uuid')
  id: string;

  @Column()
  customerName: string;

  @Column()
  serviceType: string;

  @Column()
  status: BookingStatus;
}


// C:\grua-booking-system-25\client\src\components\BookingStatus.jsx
// src/components/BookingStatus.jsx
import React, { useEffect, useState } from 'react';

const BookingStatus = () => {
  const [status, setStatus] = useState('Pending');

  useEffect(() => {
    const eventSource = new EventSource('http://localhost:3000/events/sse');

    eventSource.onmessage = (event) => {
      const newData = JSON.parse(event.data);
      setStatus(newData.status);
    };

    return () => {
      eventSource.close();
    };
  }, []);

  return (
    <div>
      <h1>Booking Status: {status}</h1>
    </div>
  );
};

export default BookingStatus;


// C:\grua-booking-system-25\client\src\components\conversation.entity.ts
import { Entity, Column, PrimaryGeneratedColumn, ManyToOne, OneToMany } from 'typeorm';
import { User } from './user.entity';
import { Message } from './message.entity';

@Entity()
export class Conversation {
  @PrimaryGeneratedColumn('uuid')
  id: string;

  @Column({ type: 'timestamp', default: () => 'CURRENT_TIMESTAMP' })
  createdAt: Date;

  @Column({ type: 'timestamp', default: () => 'CURRENT_TIMESTAMP', onUpdate: 'CURRENT_TIMESTAMP' })
  updatedAt: Date;

  @ManyToOne(() => User, user => user.conversations)
  user: User;

  @OneToMany(() => Message, message => message.conversation)
  messages: Message[];

  @Column({ nullable: true })
  title: string;

  @Column({ default: false })
  isArchived: boolean;
}


// C:\grua-booking-system-25\client\src\components\GoogleMapsRoute.jsx
import React, { useState, useEffect } from 'react';
import { Box, Button, FormControl, FormLabel, Heading, Input, Text } from '@chakra-ui/react';
import { GoogleMap, LoadScript, Marker, DirectionsService, DirectionsRenderer } from '@react-google-maps/api';
import PropTypes from 'prop-types';

const GoogleMapsRoute = ({ setDistance }) => {
  const [pickup, setPickup] = useState(null);
  const [destination, setDestination] = useState(null);
  const [error, setError] = useState(null);
  const [totalPrice, setTotalPrice] = useState(0);
  const [directions, setDirections] = useState(null);
  const [map, setMap] = useState(null);
  const [tollCost, setTollCost] = useState(0);
  const origin = { lng: -100.0095504, lat: 26.509672 }; // Updated starting point
  const pricePerKm = 19;

  useEffect(() => {
    if (navigator.geolocation) {
      navigator.geolocation.getCurrentPosition(
        (position) => {
          const userLocation = {
            lat: position.coords.latitude,
            lng: position.coords.longitude,
          };
          setPickup(userLocation);
          if (map) {
            map.panTo(userLocation);
          }
        },
        (error) => {
          console.error('Error getting user location:', error);
          setError('Error getting user location: ' + error.message);
        }
      );
    } else {
      console.error('Geolocation is not supported by this browser.');
      setError('Geolocation is not supported by this browser.');
    }
  }, [map]);

  const calculateRoute = () => {
    setError(null);
    if (!pickup || !destination) {
      setError('Please fill in all required fields.');
      return;
    }

    const directionsService = new window.google.maps.DirectionsService();
    directionsService.route(
      {
        origin: pickup,
        destination: destination,
        travelMode: window.google.maps.TravelMode.DRIVING,
        waypoints: [{ location: pickup, stopover: true }],
      },
      (result, status) => {
        if (status === window.google.maps.DirectionsStatus.OK) {
          setDirections(result);
          const distanceToDestination = result.routes[0].legs[0].distance.value / 1000; // Distance in kilometers
          setDistance(distanceToDestination);
          const price = calculatePrice(distanceToDestination);
          setTotalPrice(price);
          fetchTollData(pickup, destination);
        } else if (status === window.google.maps.DirectionsStatus.REQUEST_DENIED) {
          setError('Request denied. Please check your API key and permissions.');
          console.error('Request denied:', status, result);
        } else {
          setError('Error calculating the route: ' + status);
          console.error('Error calculating the route:', status, result);
        }
      }
    );
  };

  const calculatePrice = (distance) => {
    return distance * pricePerKm + 558 + tollCost; // Tarifa base de $558 más $19 por kilómetro más el costo de las casetas
  };

  const fetchTollData = async (origin, destination) => {
    try {
      const response = await fetch(`https://api.tollguru.com/v1/calc/route?source=${origin.lat},${origin.lng}&destination=${destination.lat},${destination.lng}`, {
        headers: {
          'x-api-key': process.env.REACT_APP_TOLLGURU_API_KEY,
        },
      });
      const data = await response.json();
      const tolls = data.tollCosts || 0;
      setTollCost(tolls);
    } catch (error) {
      console.error('Error fetching toll data:', error);
      setError('Error fetching toll data: ' + error.message);
    }
  };

  return (
    <Box>
      <Heading as="h1" mb={4}>Selecciona recogida y destino</Heading>
      {error && <Text color="red.500">Error: {error}</Text>}
      <FormControl mb={4}>
        <FormLabel htmlFor="pickup">Punto de recogida:</FormLabel>
        <Input type="text" id="pickup" value={pickup ? `${pickup.lat}, ${pickup.lng}` : ''} readOnly />
      </FormControl>
      <FormControl mb={4}>
        <FormLabel htmlFor="destination">Destino:</FormLabel>
        <Input type="text" id="destination" value={destination ? `${destination.lat}, ${destination.lng}` : ''} readOnly />
      </FormControl>
      <Button onClick={calculateRoute} colorScheme="blue" disabled={!pickup || !destination}>Calcular Ruta</Button>
      <Text mt={4} fontSize="xl">Precio total: ${totalPrice.toFixed(2)}</Text>
      <LoadScript googleMapsApiKey={process.env.REACT_APP_GOOGLE_MAPS_API_KEY} libraries={['places', 'geometry']}>
        <GoogleMap
          center={{ lat: origin.lat, lng: origin.lng }}
          zoom={7}
          maxZoom={20} // Allow more zoom
          mapContainerStyle={{ height: '400px', width: '100%', marginTop: '20px' }}
          onLoad={(map) => setMap(map)}
          onClick={(event) => {
            try {
              if (!pickup) {
                setPickup(event.latLng.toJSON());
              } else if (!destination) {
                setDestination(event.latLng.toJSON());
              }
            } catch (err) {
              setError('Error setting location: ' + err.message);
              console.error('Error setting location:', err);
            }
          }}
        >
          {pickup && <Marker position={pickup} draggable={true} onDragEnd={(e) => setPickup(e.latLng.toJSON())} />}
          {destination && <Marker position={destination} draggable={true} onDragEnd={(e) => setDestination(e.latLng.toJSON())} />}
          {pickup && destination && (
            <DirectionsService
              options={{
                origin: pickup,
                destination: destination,
                travelMode: window.google.maps.TravelMode.DRIVING,
                waypoints: [{ location: pickup, stopover: true }],
              }}
              callback={(response, status) => {
                if (status === window.google.maps.DirectionsStatus.OK) {
                  setDirections(response);
                } else {
                  setError('Error fetching directions: ' + status);
                  console.error('Error fetching directions:', status, response);
                }
              }}
            />
          )}
          {directions && (
            <DirectionsRenderer
              options={{
                directions: directions,
              }}
            />
          )}
        </GoogleMap>
      </LoadScript>
    </Box>
  );
};

GoogleMapsRoute.propTypes = {
  setDistance: PropTypes.func.isRequired,
};

export default GoogleMapsRoute;


// C:\grua-booking-system-25\client\src\components\InstructionsSidebar.jsx
import { Box, Button, Heading, Input, List, ListIcon, ListItem } from "@chakra-ui/react";
import React, { useState } from "react";
import { FaRegLightbulb } from "react-icons/fa";

const InstructionsSidebar = () => {
  const [contactInput, setContactInput] = useState('');

  const handleInputChange = (event) => {
    setContactInput(event.target.value);
  };

  const handleSubmit = (event) => {
    event.preventDefault();
    // Handle form submission here
  };

  return (
    <Box p={5} border="1px" borderColor="gray.200" borderRadius="md" bg="gray.50">
      <Heading size="md" mb={3}>
        How to Book a Service
      </Heading>
      <List spacing={3}>
        <ListItem>
          <ListIcon as={FaRegLightbulb} color="green.500" />
          Select the type of service you need.
        </ListItem>
        <ListItem>
          <ListIcon as={FaRegLightbulb} color="green.500" />
          Enter your current location and destination.
        </ListItem>
        <ListItem>
          <ListIcon as={FaRegLightbulb} color="green.500" />
          Choose a convenient date and time.
        </ListItem>
        <ListItem>
          <ListIcon as={FaRegLightbulb} color="green.500" />
          Enter your contact information <Input value={contactInput} onChange={handleInputChange} />
        </ListItem>
        <ListItem>
          <ListIcon as={FaRegLightbulb} color="green.500" />
          Confirm your booking and get instant assistance.
        </ListItem>
      </List>
      <Button mt={4} onClick={handleSubmit}>Next Step</Button>
    </Box>
  );
};

export default InstructionsSidebar;


// C:\grua-booking-system-25\client\src\components\message.entity.ts
import { Entity, Column, PrimaryGeneratedColumn, ManyToOne } from 'typeorm';
import { User } from './user.entity';
import { Conversation } from './conversation.entity.ts';

@Entity()
export class Message {
  @PrimaryGeneratedColumn()
  id: number;

  @Column('text')
  content: string;

  @Column({ type: 'timestamp', default: () => 'CURRENT_TIMESTAMP' })
  timestamp: Date;

  @ManyToOne(() => User, user => user.messages)
  sender: User;

  @ManyToOne(() => Conversation, conversation => conversation.messages)
  conversation: Conversation;

  @Column({ default: false })
  isRead: boolean;
}


// C:\grua-booking-system-25\client\src\components\Navbar.jsx
import { Box, Flex, Link, Spacer, Text } from "@chakra-ui/react";
import { Link as RouterLink } from "react-router-dom";

const Navbar = () => {
  return (
    <Box bg="blue.500" p={4} color="white">
      <Flex maxW="1200px" mx="auto" align="center">
        <Text fontSize="xl" fontWeight="bold">Tow Service</Text>
        <Spacer />
        <Flex>
          <Link as={RouterLink} to="/" p={2} mx={2} _hover={{ textDecoration: "none", bg: "blue.600" }}>Home</Link>
          <Link as={RouterLink} to="/about" p={2} mx={2} _hover={{ textDecoration: "none", bg: "blue.600" }}>About</Link>
          <Link as={RouterLink} to="/contact" p={2} mx={2} _hover={{ textDecoration: "none", bg: "blue.600" }}>Contact</Link>
          <Link as={RouterLink} to="/booking" p={2} mx={2} _hover={{ textDecoration: "none", bg: "blue.600" }}>Book Now</Link>
        </Flex>
      </Flex>
    </Box>
  );
};

export default Navbar;


// C:\grua-booking-system-25\client\src\components\room.entity.ts
import { Entity, Column, PrimaryGeneratedColumn, ManyToOne, OneToMany } from 'typeorm'
import { User } from './user.entity'
import { Message } from './message.entity.ts'

@Entity()
export class Room {
  @PrimaryGeneratedColumn()
  id: number

  @Column()
  name: string

  @Column({ nullable: true })
  description: string

  @Column({ default: false })
  isPrivate: boolean

  @ManyToOne(() => User, user => user.createdRooms)
  creator: User

  @OneToMany(() => Message, message => message.room)
  messages: Message[]

  @Column({ type: 'timestamp', default: () => 'CURRENT_TIMESTAMP' })
  createdAt: Date

  @Column({ type: 'timestamp', default: () => 'CURRENT_TIMESTAMP', onUpdate: 'CURRENT_TIMESTAMP' })
  updatedAt: Date
}


// C:\grua-booking-system-25\client\src\components\user.entity.ts
import { Entity, PrimaryGeneratedColumn, Column } from 'typeorm'

@Entity()
export class User {
  @PrimaryGeneratedColumn()
  id: number

  @Column()
  firstName: string

  @Column()
  lastName: string

  @Column({ unique: true })
  email: string

  @Column()
  password: string

  @Column({ default: false })
  isAdmin: boolean

  @Column({ type: 'timestamp', default: () => 'CURRENT_TIMESTAMP' })
  createdAt: Date

  @Column({ type: 'timestamp', default: () => 'CURRENT_TIMESTAMP', onUpdate: 'CURRENT_TIMESTAMP' })
  updatedAt: Date
}


// C:\grua-booking-system-25\client\src\components\UserLocationMarker.jsx
import { useEffect } from 'react';

const UserLocationMarker = ({ map, setPickupLocation }) => {
  useEffect(() => {
    if (navigator.geolocation) {
      navigator.geolocation.getCurrentPosition(
        (position) => {
          const userLocation = {
            lat: position.coords.latitude,
            lng: position.coords.longitude,
          };
          setPickupLocation(userLocation);
          if (map) {
            map.panTo(userLocation);
          }
        },
        (error) => {
          console.error('Error getting user location:', error);
        }
      );
    } else {
      console.error('Geolocation is not supported by this browser.');
    }
  }, [map, setPickupLocation]);

  return null;
};

export default UserLocationMarker;


// C:\grua-booking-system-25\client\src\event\app.module.ts
import { Module } from '@nestjs/common';
import { EventsModule } from './events.module';
import { BookingsModule } from '../components/bookings.module';

@Module({
  imports: [EventsModule, BookingsModule],
})
export class AppModule {}


// C:\grua-booking-system-25\client\src\event\event.controller.ts
import { Controller, Get, Sse } from '@nestjs/common';
import { interval, map } from 'rxjs';
import { EventService } from './event.service';

@Controller('events')
export class EventController {
  constructor(private readonly eventService: EventService) {}

  @Sse('stream')
  streamEvents() {
    return this.eventService.getEvents();
  }
}


// C:\grua-booking-system-25\client\src\event\event.service.ts
import { Injectable } from '@nestjs/common';
import { interval, map } from 'rxjs';

@Injectable()
export class EventService {
  private events = [];

  emitEvent(event: any) {
    this.events.push(event);
  }

  getEvents() {
    return interval(1000).pipe(map(() => ({ data: this.events })));
  }
}


// C:\grua-booking-system-25\client\src\event\events.module.ts
import { Module } from '@nestjs/common';
import { EventController } from './event.controller';
import { EventService } from './event.service';

@Module({
  controllers: [EventController],
  providers: [EventService],
  exports: [EventService],
},)
export class EventsModule {}


// C:\grua-booking-system-25\client\src\integrations\supabase\auth.jsx
import React, { useState } from 'react';
import { supabase } from './supabaseClient';

const Auth = () => {
  const [email, setEmail] = useState('');
  const [password, setPassword] = useState('');

  const handleLogin = async (event) => {
    event.preventDefault();
    const { user, error } = await supabase.auth.signIn({ email, password });
    if (error) {
      console.error('Error logging in:', error.message);
    } else {
      console.log('User logged in:', user);
    }
  };

  const handleSignup = async (event) => {
    event.preventDefault();
    const { user, error } = await supabase.auth.signUp({ email, password });
    if (error) {
      console.error('Error signing up:', error.message);
    } else {
      console.log('User signed up:', user);
    }
  };

  return (
    <div>
      <form onSubmit={handleLogin}>
        <input type="email" value={email} onChange={(e) => setEmail(e.target.value)} placeholder="Email" />
        <input type="password" value={password} onChange={(e) => setPassword(e.target.value)} placeholder="Password" />
        <button type="submit">Login</button>
      </form>
      <form onSubmit={handleSignup}>
        <input type="email" value={email} onChange={(e) => setEmail(e.target.value)} placeholder="Email" />
        <input type="password" value={password} onChange={(e) => setPassword(e.target.value)} placeholder="Password" />
        <button type="submit">Sign Up</button>
      </form>
    </div>
  );
};

export default Auth;


// C:\grua-booking-system-25\client\src\integrations\supabase\index.js
import { createClient } from '@supabase/supabase-js';
import { useQuery, useMutation, useQueryClient, QueryClient, QueryClientProvider } from '@tanstack/react-query';

const supabaseUrl = import.meta.env.VITE_SUPABASE_PROJECT_URL;
const supabaseKey = import.meta.env.VITE_SUPABASE_API_KEY;
export const supabase = createClient(supabaseUrl, supabaseKey);

import React from "react";
export const queryClient = new QueryClient();
export function SupabaseProvider({ children }) {
    return React.createElement(QueryClientProvider, { client: queryClient }, children);
}

const fromSupabase = async (query) => {
    const { data, error } = await query;
    if (error) throw new Error(error.message);
    return data;
};

/* supabase integration types

### TOW

| name       | type        | format | required |
|------------|-------------|--------|----------|
| id         | int8        | number | true     |
| created_at | timestamptz | string | true     |

*/

// Example hook for models

export const useFoo = ()=> useQuery({
    queryKey: ['foos'],
    queryFn: fromSupabase(supabase.from('foos')),
})
export const useAddFoo = () => {
    const queryClient = useQueryClient();
    return useMutation({
        mutationFn: (newFoo)=> fromSupabase(supabase.from('foos').insert([{ title: newFoo.title }])),
        onSuccess: ()=> {
            queryClient.invalidateQueries('foos');
        },
    });
};

export const useBar = ()=> useQuery({
    queryKey: ['bars'],
    queryFn: fromSupabase(supabase.from('bars')),
})
export const useAddBar = () => {
    const queryClient = useQueryClient();
    return useMutation({
        mutationFn: (newBar)=> fromSupabase(supabase.from('bars').insert([{ foo_id: newBar.foo_id }])),
        onSuccess: ()=> {
            queryClient.invalidateQueries('bars');
        },
    });
};

export const useTOWs = () => useQuery({
    queryKey: ['TOWs'],
    queryFn: () => fromSupabase(supabase.from('TOW').select('*')),
});

export const useTOW = (id) => useQuery({
    queryKey: ['TOW', id],
    queryFn: () => fromSupabase(supabase.from('TOW').select('*').eq('id', id).single()),
});

export const useAddTOW = () => {
    const queryClient = useQueryClient();
    return useMutation({
        mutationFn: (newTOW) => fromSupabase(supabase.from('TOW').insert([newTOW])),
        onSuccess: () => {
            queryClient.invalidateQueries('TOWs');
        },
    });
};

export const useUpdateTOW = () => {
    const queryClient = useQueryClient();
    return useMutation({
        mutationFn: (updatedTOW) => fromSupabase(supabase.from('TOW').update(updatedTOW).eq('id', updatedTOW.id)),
        onSuccess: () => {
            queryClient.invalidateQueries('TOWs');
            queryClient.invalidateQueries(['TOW', updatedTOW.id]);
        },
    });
};

export const useDeleteTOW = () => {
    const queryClient = useQueryClient();
    return useMutation({
        mutationFn: (id) => fromSupabase(supabase.from('TOW').delete().eq('id', id)),
        onSuccess: () => {
            queryClient.invalidateQueries('TOWs');
        },
    });
};


// C:\grua-booking-system-25\client\src\integrations\supabase\openapi.json
{"swagger":"2.0","info":{"description":"","title":"standard public schema","version":"12.1 (8cbcf98)"},"host":"gjwhxrajesykwmomorhw.supabase.co:443","basePath":"/","schemes":["https"],"consumes":["application/json","application/vnd.pgrst.object+json;nulls=stripped","application/vnd.pgrst.object+json","text/csv"],"produces":["application/json","application/vnd.pgrst.object+json;nulls=stripped","application/vnd.pgrst.object+json","text/csv"],"paths":{"/":{"get":{"produces":["application/openapi+json","application/json"],"responses":{"200":{"description":"OK"}},"summary":"OpenAPI description (this document)","tags":["Introspection"]}},"/TOW":{"get":{"parameters":[{"$ref":"#/parameters/rowFilter.TOW.id"},{"$ref":"#/parameters/rowFilter.TOW.created_at"},{"$ref":"#/parameters/select"},{"$ref":"#/parameters/order"},{"$ref":"#/parameters/range"},{"$ref":"#/parameters/rangeUnit"},{"$ref":"#/parameters/offset"},{"$ref":"#/parameters/limit"},{"$ref":"#/parameters/preferCount"}],"responses":{"200":{"description":"OK","schema":{"items":{"$ref":"#/definitions/TOW"},"type":"array"}},"206":{"description":"Partial Content"}},"summary":"TOW","tags":["TOW"]},"post":{"parameters":[{"$ref":"#/parameters/body.TOW"},{"$ref":"#/parameters/select"},{"$ref":"#/parameters/preferPost"}],"responses":{"201":{"description":"Created"}},"summary":"TOW","tags":["TOW"]},"delete":{"parameters":[{"$ref":"#/parameters/rowFilter.TOW.id"},{"$ref":"#/parameters/rowFilter.TOW.created_at"},{"$ref":"#/parameters/preferReturn"}],"responses":{"204":{"description":"No Content"}},"summary":"TOW","tags":["TOW"]},"patch":{"parameters":[{"$ref":"#/parameters/rowFilter.TOW.id"},{"$ref":"#/parameters/rowFilter.TOW.created_at"},{"$ref":"#/parameters/body.TOW"},{"$ref":"#/parameters/preferReturn"}],"responses":{"204":{"description":"No Content"}},"summary":"TOW","tags":["TOW"]}}},"definitions":{"TOW":{"description":"TOW","required":["id","created_at"],"properties":{"id":{"description":"Note:\nThis is a Primary Key.<pk/>","format":"bigint","type":"integer"},"created_at":{"default":"now()","format":"timestamp with time zone","type":"string"}},"type":"object"}},"parameters":{"preferParams":{"name":"Prefer","description":"Preference","required":false,"enum":["params=single-object"],"in":"header","type":"string"},"preferReturn":{"name":"Prefer","description":"Preference","required":false,"enum":["return=representation","return=minimal","return=none"],"in":"header","type":"string"},"preferCount":{"name":"Prefer","description":"Preference","required":false,"enum":["count=none"],"in":"header","type":"string"},"preferPost":{"name":"Prefer","description":"Preference","required":false,"enum":["return=representation","return=minimal","return=none","resolution=ignore-duplicates","resolution=merge-duplicates"],"in":"header","type":"string"},"select":{"name":"select","description":"Filtering Columns","required":false,"in":"query","type":"string"},"on_conflict":{"name":"on_conflict","description":"On Conflict","required":false,"in":"query","type":"string"},"order":{"name":"order","description":"Ordering","required":false,"in":"query","type":"string"},"range":{"name":"Range","description":"Limiting and Pagination","required":false,"in":"header","type":"string"},"rangeUnit":{"name":"Range-Unit","description":"Limiting and Pagination","required":false,"default":"items","in":"header","type":"string"},"offset":{"name":"offset","description":"Limiting and Pagination","required":false,"in":"query","type":"string"},"limit":{"name":"limit","description":"Limiting and Pagination","required":false,"in":"query","type":"string"},"body.TOW":{"name":"TOW","description":"TOW","required":false,"in":"body","schema":{"$ref":"#/definitions/TOW"}},"rowFilter.TOW.id":{"name":"id","required":false,"format":"bigint","in":"query","type":"string"},"rowFilter.TOW.created_at":{"name":"created_at","required":false,"format":"timestamp with time zone","in":"query","type":"string"}},"externalDocs":{"description":"PostgREST Documentation","url":"https://postgrest.org/en/v12.1/api.html"}}


// C:\grua-booking-system-25\client\src\integrations\supabase\supabaseClient.js
import { createClient } from '@supabase/supabase-js';

const supabaseUrl = 'https://your-supabase-url.supabase.co';
const supabaseKey = 'your-supabase-key';

export const supabase = createClient(supabaseUrl, supabaseKey);


// C:\grua-booking-system-25\client\src\integrations\supabase\auth.jsx
import React, { useState } from 'react';
import { supabase } from './supabaseClient';

const Auth = () => {
  const [email, setEmail] = useState('');
  const [password, setPassword] = useState('');

  const handleLogin = async (event) => {
    event.preventDefault();
    const { user, error } = await supabase.auth.signIn({ email, password });
    if (error) {
      console.error('Error logging in:', error.message);
    } else {
      console.log('User logged in:', user);
    }
  };

  const handleSignup = async (event) => {
    event.preventDefault();
    const { user, error } = await supabase.auth.signUp({ email, password });
    if (error) {
      console.error('Error signing up:', error.message);
    } else {
      console.log('User signed up:', user);
    }
  };

  return (
    <div>
      <form onSubmit={handleLogin}>
        <input type="email" value={email} onChange={(e) => setEmail(e.target.value)} placeholder="Email" />
        <input type="password" value={password} onChange={(e) => setPassword(e.target.value)} placeholder="Password" />
        <button type="submit">Login</button>
      </form>
      <form onSubmit={handleSignup}>
        <input type="email" value={email} onChange={(e) => setEmail(e.target.value)} placeholder="Email" />
        <input type="password" value={password} onChange={(e) => setPassword(e.target.value)} placeholder="Password" />
        <button type="submit">Sign Up</button>
      </form>
    </div>
  );
};

export default Auth;


// C:\grua-booking-system-25\client\src\integrations\supabase\index.js
import { createClient } from '@supabase/supabase-js';
import { useQuery, useMutation, useQueryClient, QueryClient, QueryClientProvider } from '@tanstack/react-query';

const supabaseUrl = import.meta.env.VITE_SUPABASE_PROJECT_URL;
const supabaseKey = import.meta.env.VITE_SUPABASE_API_KEY;
export const supabase = createClient(supabaseUrl, supabaseKey);

import React from "react";
export const queryClient = new QueryClient();
export function SupabaseProvider({ children }) {
    return React.createElement(QueryClientProvider, { client: queryClient }, children);
}

const fromSupabase = async (query) => {
    const { data, error } = await query;
    if (error) throw new Error(error.message);
    return data;
};

/* supabase integration types

### TOW

| name       | type        | format | required |
|------------|-------------|--------|----------|
| id         | int8        | number | true     |
| created_at | timestamptz | string | true     |

*/

// Example hook for models

export const useFoo = ()=> useQuery({
    queryKey: ['foos'],
    queryFn: fromSupabase(supabase.from('foos')),
})
export const useAddFoo = () => {
    const queryClient = useQueryClient();
    return useMutation({
        mutationFn: (newFoo)=> fromSupabase(supabase.from('foos').insert([{ title: newFoo.title }])),
        onSuccess: ()=> {
            queryClient.invalidateQueries('foos');
        },
    });
};

export const useBar = ()=> useQuery({
    queryKey: ['bars'],
    queryFn: fromSupabase(supabase.from('bars')),
})
export const useAddBar = () => {
    const queryClient = useQueryClient();
    return useMutation({
        mutationFn: (newBar)=> fromSupabase(supabase.from('bars').insert([{ foo_id: newBar.foo_id }])),
        onSuccess: ()=> {
            queryClient.invalidateQueries('bars');
        },
    });
};

export const useTOWs = () => useQuery({
    queryKey: ['TOWs'],
    queryFn: () => fromSupabase(supabase.from('TOW').select('*')),
});

export const useTOW = (id) => useQuery({
    queryKey: ['TOW', id],
    queryFn: () => fromSupabase(supabase.from('TOW').select('*').eq('id', id).single()),
});

export const useAddTOW = () => {
    const queryClient = useQueryClient();
    return useMutation({
        mutationFn: (newTOW) => fromSupabase(supabase.from('TOW').insert([newTOW])),
        onSuccess: () => {
            queryClient.invalidateQueries('TOWs');
        },
    });
};

export const useUpdateTOW = () => {
    const queryClient = useQueryClient();
    return useMutation({
        mutationFn: (updatedTOW) => fromSupabase(supabase.from('TOW').update(updatedTOW).eq('id', updatedTOW.id)),
        onSuccess: () => {
            queryClient.invalidateQueries('TOWs');
            queryClient.invalidateQueries(['TOW', updatedTOW.id]);
        },
    });
};

export const useDeleteTOW = () => {
    const queryClient = useQueryClient();
    return useMutation({
        mutationFn: (id) => fromSupabase(supabase.from('TOW').delete().eq('id', id)),
        onSuccess: () => {
            queryClient.invalidateQueries('TOWs');
        },
    });
};


// C:\grua-booking-system-25\client\src\integrations\supabase\openapi.json
{"swagger":"2.0","info":{"description":"","title":"standard public schema","version":"12.1 (8cbcf98)"},"host":"gjwhxrajesykwmomorhw.supabase.co:443","basePath":"/","schemes":["https"],"consumes":["application/json","application/vnd.pgrst.object+json;nulls=stripped","application/vnd.pgrst.object+json","text/csv"],"produces":["application/json","application/vnd.pgrst.object+json;nulls=stripped","application/vnd.pgrst.object+json","text/csv"],"paths":{"/":{"get":{"produces":["application/openapi+json","application/json"],"responses":{"200":{"description":"OK"}},"summary":"OpenAPI description (this document)","tags":["Introspection"]}},"/TOW":{"get":{"parameters":[{"$ref":"#/parameters/rowFilter.TOW.id"},{"$ref":"#/parameters/rowFilter.TOW.created_at"},{"$ref":"#/parameters/select"},{"$ref":"#/parameters/order"},{"$ref":"#/parameters/range"},{"$ref":"#/parameters/rangeUnit"},{"$ref":"#/parameters/offset"},{"$ref":"#/parameters/limit"},{"$ref":"#/parameters/preferCount"}],"responses":{"200":{"description":"OK","schema":{"items":{"$ref":"#/definitions/TOW"},"type":"array"}},"206":{"description":"Partial Content"}},"summary":"TOW","tags":["TOW"]},"post":{"parameters":[{"$ref":"#/parameters/body.TOW"},{"$ref":"#/parameters/select"},{"$ref":"#/parameters/preferPost"}],"responses":{"201":{"description":"Created"}},"summary":"TOW","tags":["TOW"]},"delete":{"parameters":[{"$ref":"#/parameters/rowFilter.TOW.id"},{"$ref":"#/parameters/rowFilter.TOW.created_at"},{"$ref":"#/parameters/preferReturn"}],"responses":{"204":{"description":"No Content"}},"summary":"TOW","tags":["TOW"]},"patch":{"parameters":[{"$ref":"#/parameters/rowFilter.TOW.id"},{"$ref":"#/parameters/rowFilter.TOW.created_at"},{"$ref":"#/parameters/body.TOW"},{"$ref":"#/parameters/preferReturn"}],"responses":{"204":{"description":"No Content"}},"summary":"TOW","tags":["TOW"]}}},"definitions":{"TOW":{"description":"TOW","required":["id","created_at"],"properties":{"id":{"description":"Note:\nThis is a Primary Key.<pk/>","format":"bigint","type":"integer"},"created_at":{"default":"now()","format":"timestamp with time zone","type":"string"}},"type":"object"}},"parameters":{"preferParams":{"name":"Prefer","description":"Preference","required":false,"enum":["params=single-object"],"in":"header","type":"string"},"preferReturn":{"name":"Prefer","description":"Preference","required":false,"enum":["return=representation","return=minimal","return=none"],"in":"header","type":"string"},"preferCount":{"name":"Prefer","description":"Preference","required":false,"enum":["count=none"],"in":"header","type":"string"},"preferPost":{"name":"Prefer","description":"Preference","required":false,"enum":["return=representation","return=minimal","return=none","resolution=ignore-duplicates","resolution=merge-duplicates"],"in":"header","type":"string"},"select":{"name":"select","description":"Filtering Columns","required":false,"in":"query","type":"string"},"on_conflict":{"name":"on_conflict","description":"On Conflict","required":false,"in":"query","type":"string"},"order":{"name":"order","description":"Ordering","required":false,"in":"query","type":"string"},"range":{"name":"Range","description":"Limiting and Pagination","required":false,"in":"header","type":"string"},"rangeUnit":{"name":"Range-Unit","description":"Limiting and Pagination","required":false,"default":"items","in":"header","type":"string"},"offset":{"name":"offset","description":"Limiting and Pagination","required":false,"in":"query","type":"string"},"limit":{"name":"limit","description":"Limiting and Pagination","required":false,"in":"query","type":"string"},"body.TOW":{"name":"TOW","description":"TOW","required":false,"in":"body","schema":{"$ref":"#/definitions/TOW"}},"rowFilter.TOW.id":{"name":"id","required":false,"format":"bigint","in":"query","type":"string"},"rowFilter.TOW.created_at":{"name":"created_at","required":false,"format":"timestamp with time zone","in":"query","type":"string"}},"externalDocs":{"description":"PostgREST Documentation","url":"https://postgrest.org/en/v12.1/api.html"}}


// C:\grua-booking-system-25\client\src\integrations\supabase\supabaseClient.js
import { createClient } from '@supabase/supabase-js';

const supabaseUrl = 'https://your-supabase-url.supabase.co';
const supabaseKey = 'your-supabase-key';

export const supabase = createClient(supabaseUrl, supabaseKey);


// C:\grua-booking-system-25\client\src\pages\About.jsx
import { Box, Text, Heading, VStack, Flex } from '@chakra-ui/react';
import { FaCheckCircle } from 'react-icons/fa';

const About = () => (
  <Box p={4}>
    <Flex direction="column" align="center" justify="center" p={10}>
      <Heading mb={4}>About Our Tow Service</Heading>
      <Text fontSize="lg" mb={6}>We provide reliable and efficient tow services to get you back on the road quickly.</Text>
    </Flex>
    <Box bg="gray.100" p={10}>
      <Heading size="lg" textAlign="center" mb={4}>Our Features</Heading>
      <VStack spacing={5}>
        <Flex align="center">
          <FaCheckCircle size="24px" />
          <Text ml={2}>24/7 Availability</Text>
        </Flex>
        <Flex align="center">
          <FaCheckCircle size="24px" />
          <Text ml={2}>Professional Staff</Text>
        </Flex>
        <Flex align="center">
          <FaCheckCircle size="24px" />
          <Text ml={2}>Affordable Pricing</Text>
        </Flex>
      </VStack>
    </Box>
  </Box>
);

export default About;


// C:\grua-booking-system-25\client\src\pages\BookingForm.jsx
import { useState, useEffect, useRef } from 'react';
import { Box, Button, FormControl, FormLabel, Input, Select, Textarea, VStack, useToast, Heading, Text, Checkbox, Modal, ModalOverlay, ModalContent, ModalHeader, ModalBody, ModalCloseButton } from '@chakra-ui/react';
import { useNavigate, useLocation } from 'react-router-dom';
import { LoadScript, GoogleMap, Marker, DirectionsService, DirectionsRenderer } from '@react-google-maps/api';

const BookingForm = () => {
  const [formData, setFormData] = useState({
    serviceType: '',
    userName: '',
    phoneNumber: '',
    carBrand: '',
    vehicleModel: '',
    vehicleSize: '',
    additionalInfo: '',
    pickupDate: '',
    pickupTime: '',
    origin: { lat: 26.509672, lng: -100.0095504 },
    pickupLocation: null,
    destinationLocation: null,
    distance: 0,
    streetLevel: '',
    neutralPossible: '',
    adaptations: '',
    passengers: '',
  });

  const [directions, setDirections] = useState(null);
  const [tollCost, setTollCost] = useState(0);
  const [isMapLoaded, setIsMapLoaded] = useState(false);
  const [isTermsOpen, setIsTermsOpen] = useState(false);

  const toast = useToast();
  const navigate = useNavigate();
  const location = useLocation();
  const mapRef = useRef(null);

  useEffect(() => {
    if (location.state) {
      const { origin, pickupLocation, destinationLocation } = location.state;
      setFormData((prevData) => ({ ...prevData, origin, pickupLocation, destinationLocation }));
    }
  }, [location.state]);

  const handleChange = (e) => {
    const { name, value } = e.target;
    setFormData({ ...formData, [name]: value });
  };

  const handleSubmit = async (e) => {
    e.preventDefault();
    const { serviceType, userName, phoneNumber, carBrand, vehicleModel, vehicleSize, pickupDate, pickupTime, origin, pickupLocation, destinationLocation, distance, streetLevel, neutralPossible, adaptations, passengers } = formData;

    if (!serviceType || !userName || !phoneNumber || !carBrand || !vehicleModel || !vehicleSize || !pickupDate || !pickupTime || !origin || !pickupLocation || !destinationLocation || !streetLevel || !neutralPossible || !adaptations || !passengers) {
      toast({
        title: 'Error',
        description: 'Please fill in all required fields.',
        status: 'error',
        duration: 5000,
        isClosable: true,
      });
      return;
    }

    const baseCost = 558;
    const costPerKm = 19;
    const totalCost = baseCost + (distance * costPerKm) + tollCost;

    try {
      console.log('Submitting form with data:', formData);
      const response = await fetch('https://valid-endpoint-for-booking.com/bookings', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({ ...formData, totalCost }),
      });

      if (!response.ok) {
        throw new Error('Network response was not ok');
      }

      const data = await response.json();
      navigate('/payment', { state: { formData, totalCost, serviceDetails: { serviceType, distance, pickupLocation, destinationLocation } } });
    } catch (error) {
      console.error('Error submitting form:', error);
      toast({
        title: 'Error',
        description: 'There was a problem processing your booking. Please try again later.',
        status: 'error',
        duration: 5000,
        isClosable: true,
      });
    }
  };

  const handleMapClick = (event) => {
    try {
      if (!formData.pickupLocation) {
        setFormData({ ...formData, pickupLocation: { lat: event.latLng.lat(), lng: event.latLng.lng() } });
      } else if (!formData.destinationLocation) {
        setFormData({ ...formData, destinationLocation: { lat: event.latLng.lat(), lng: event.latLng.lng() } });
      }
    } catch (error) {
      console.error('Error handling map click:', error);
      toast({
        title: 'Error',
        description: 'There was a problem handling the map click. Please try again later.',
        status: 'error',
        duration: 5000,
        isClosable: true,
      });
    }
  };

  const handleReset = () => {
    setFormData({ ...formData, pickupLocation: null, destinationLocation: null });
    setDirections(null);
  };

  const centerPickupMarker = () => {
    if (navigator.geolocation) {
      navigator.geolocation.getCurrentPosition(
        (position) => {
          const userLocation = {
            lat: position.coords.latitude,
            lng: position.coords.longitude,
          };
          setFormData({ ...formData, pickupLocation: userLocation });
          if (mapRef.current) {
            mapRef.current.panTo(userLocation);
          }
        },
        (error) => {
          console.error('Error getting user location:', error);
          toast({
            title: 'Error',
            description: 'There was a problem getting your location. Please try again later.',
            status: 'error',
            duration: 5000,
            isClosable: true,
          });
        }
      );
    } else {
      toast({
        title: 'Error',
        description: 'Geolocation is not supported by this browser.',
        status: 'error',
        duration: 5000,
        isClosable: true,
      });
    }
  };

  const calculateRoute = () => {
    if (formData.pickupLocation && formData.destinationLocation) {
      return (
        <DirectionsService
          options={{
            origin: formData.pickupLocation,
            destination: formData.destinationLocation,
            travelMode: 'DRIVING',
          }}
          callback={(response, status) => {
            if (status === 'OK') {
              setDirections(response);
              const distanceInKm = response.routes[0].legs[0].distance.value / 1000;
              setFormData((prevData) => ({ ...prevData, distance: distanceInKm }));
              fetchTollData(formData.pickupLocation, formData.destinationLocation);
            } else {
              console.error('Error calculating route:', status);
              toast({
                title: 'Error',
                description: 'There was a problem calculating the route. Please try again later.',
                status: 'error',
                duration: 5000,
                isClosable: true,
              });
            }
          }}
        />
      );
    }
    return null;
  };

  const fetchTollData = async (origin, destination) => {
    try {
      const response = await fetch(`https://api.tollguru.com/v1/calc/route?source=${origin.lat},${origin.lng}&destination=${destination.lat},${destination.lng}`);
      const data = await response.json();
      const tolls = data.tolls || 0;
      setTollCost(tolls);
    } catch (error) {
      console.error('Error fetching toll data:', error);
      toast({
        title: 'Error',
        description: 'There was a problem fetching toll data. Please try again later.',
        status: 'error',
        duration: 5000,
        isClosable: true,
      });
    }
  };

  return (
    <Box p={4}>
      <VStack spacing={4} align="stretch">
        <Heading as="h1" mb={4}>Booking Form</Heading>
        <form onSubmit={handleSubmit}>
          <FormControl id="serviceType" isRequired>
            <FormLabel>Service Type</FormLabel>
            <Select name="serviceType" value={formData.serviceType} onChange={handleChange}>
              <option value="">Select Service Type</option>
              <option value="Tow">Tow</option>
              <option value="Platform">Platform</option>
              <option value="Roadside Assistance">Roadside Assistance</option>
            </Select>
          </FormControl>
          <FormControl id="userName" isRequired>
            <FormLabel>User Name</FormLabel>
            <Input type="text" name="userName" value={formData.userName} onChange={handleChange} />
          </FormControl>
          <FormControl id="phoneNumber" isRequired>
            <FormLabel>Phone Number</FormLabel>
            <Input type="tel" name="phoneNumber" value={formData.phoneNumber} onChange={handleChange} />
          </FormControl>
          <FormControl id="carBrand" isRequired>
            <FormLabel>Car Brand</FormLabel>
            <Input type="text" name="carBrand" value={formData.carBrand} onChange={handleChange} />
          </FormControl>
          <FormControl id="vehicleModel" isRequired>
            <FormLabel>Vehicle Model</FormLabel>
            <Input type="text" name="vehicleModel" value={formData.vehicleModel} onChange={handleChange} />
          </FormControl>
          <FormControl id="vehicleSize" isRequired>
            <FormLabel>Vehicle Size</FormLabel>
            <Select name="vehicleSize" value={formData.vehicleSize} onChange={handleChange}>
              <option value="">Select Vehicle Size</option>
              <option value="Small">Small</option>
              <option value="Medium">Medium</option>
              <option value="Large">Large</option>
            </Select>
          </FormControl>
          <FormControl id="additionalInfo">
            <FormLabel>Additional Information</FormLabel>
            <Textarea name="additionalInfo" value={formData.additionalInfo} onChange={handleChange} />
          </FormControl>
          <FormControl id="pickupDate" isRequired>
            <FormLabel>Pickup Date</FormLabel>
            <Input type="date" name="pickupDate" value={formData.pickupDate} onChange={handleChange} />
          </FormControl>
          <FormControl id="pickupTime" isRequired>
            <FormLabel>Pickup Time</FormLabel>
            <Input type="time" name="pickupTime" value={formData.pickupTime} onChange={handleChange} />
          </FormControl>
          <FormControl id="streetLevel" isRequired>
            <FormLabel>Is the vehicle at street level?</FormLabel>
            <Select name="streetLevel" value={formData.streetLevel} onChange={handleChange}>
              <option value="">Select</option>
              <option value="Yes">Yes</option>
              <option value="No">No</option>
            </Select>
          </FormControl>
          <FormControl id="neutralPossible" isRequired>
            <FormLabel>Is it possible to put neutral?</FormLabel>
            <Select name="neutralPossible" value={formData.neutralPossible} onChange={handleChange}>
              <option value="">Select</option>
              <option value="Yes">Yes</option>
              <option value="No">No</option>
            </Select>
          </FormControl>
          <FormControl id="adaptations" isRequired>
            <FormLabel>Does the vehicle have adaptations that increase its length or width?</FormLabel>
            <Select name="adaptations" value={formData.adaptations} onChange={handleChange}>
              <option value="">Select</option>
              <option value="Yes">Yes</option>
              <option value="No">No</option>
            </Select>
          </FormControl>
          <FormControl id="passengers" isRequired>
            <FormLabel>Number of passengers</FormLabel>
            <Input type="number" name="passengers" value={formData.passengers} onChange={handleChange} />
          </FormControl>
          <FormControl id="terms" isRequired>
            <Checkbox onChange={() => setIsTermsOpen(true)}>I accept terms and conditions</Checkbox>
          </FormControl>
          <Button colorScheme="blue" type="submit">Book Now</Button>
        </form>
        <LoadScript
          googleMapsApiKey={process.env.REACT_APP_GOOGLE_MAPS_API_KEY}
          onLoad={() => setIsMapLoaded(true)}
          onError={() => {
            toast({
              title: 'Error',
              description: 'Failed to load Google Maps API. Please check your API key and internet connection.',
              status: 'error',
              duration: 5000,
              isClosable: true,
            });
          }}
        >
          {isMapLoaded ? (
            <GoogleMap
              center={formData.origin}
              zoom={10}
              mapContainerStyle={{ height: '400px', width: '100%' }}
              onClick={handleMapClick}
              onLoad={(map) => (mapRef.current = map)}
              options={{
                zoomControl: true,
                zoomControlOptions: {
                  position: window.google.maps.ControlPosition.RIGHT_CENTER,
                },
                streetViewControl: false,
                mapTypeControl: false,
                fullscreenControl: false,
              }}
            >
              {formData.pickupLocation && (
                <Marker
                  position={formData.pickupLocation}
                  draggable={true}
                  onDragEnd={(e) => setFormData({ ...formData, pickupLocation: { lat: e.latLng.lat(), lng: e.latLng.lng() } })}
                />
              )}
              {formData.destinationLocation && (
                <Marker
                  position={formData.destinationLocation}
                  draggable={true}
                  onDragEnd={(e) => setFormData({ ...formData, destinationLocation: { lat: e.latLng.lat(), lng: e.latLng.lng() } })}
                />
              )}
              {calculateRoute()}
              {directions && <DirectionsRenderer directions={directions} onError={(error) => {
                console.error('Error rendering directions:', error);
                toast({
                  title: 'Error',
                  description: 'There was a problem rendering the directions. Please try again later.',
                  status: 'error',
                  duration: 5000,
                  isClosable: true,
                });
              }} />}
            </GoogleMap>
          ) : (
            <Text>Loading map...</Text>
          )}
        </LoadScript>
        <Button onClick={handleReset} mt={4}>Reset</Button>
        <Button onClick={centerPickupMarker} mt={4} ml={4} colorScheme="blue">Center User</Button>
      </VStack>
      <Modal isOpen={isTermsOpen} onClose={() => setIsTermsOpen(false)}>
        <ModalOverlay />
        <ModalContent>
          <ModalHeader>Terms and Conditions</ModalHeader>
          <ModalCloseButton />
          <ModalBody>
            <Text>The services may have a higher cost which must be paid when arriving at the destination, otherwise the vehicle will not leave the platform and will be taken to the corralon.</Text>
            <Text>Remember that only two passengers can go in the tow truck, if you require a taxi we can provide it.</Text>
          </ModalBody>
        </ModalContent>
      </Modal>
    </Box>
  );
};

export default BookingForm;


// C:\grua-booking-system-25\client\src\pages\Confirmation.jsx
import { Box, Text, VStack } from '@chakra-ui/react';
import { useLocation } from 'react-router-dom';

const Confirmation = () => {
  const location = useLocation();
  const { formData } = location.state || {};

  return (
    <Box p={4}>
      <VStack spacing={4} align="stretch">
        <Text fontSize="2xl">Booking Confirmation</Text>
        {formData ? (
          <>
            <Text>Service Type: {formData.serviceType}</Text>
            <Text>User Name: {formData.userName}</Text>
            <Text>Phone Number: {formData.phoneNumber}</Text>
            <Text>Vehicle Make: {formData.vehicleMake}</Text>
            <Text>Vehicle Model: {formData.vehicleModel}</Text>
            <Text>Vehicle Size: {formData.vehicleSize}</Text>
            <Text>Additional Information: {formData.additionalInfo}</Text>
            <Text>Pickup Date: {formData.pickupDate}</Text>
            <Text>Pickup Time: {formData.pickupTime}</Text>
          </>
        ) : (
          <Text>No booking details available.</Text>
        )}
      </VStack>
    </Box>
  );
};

export default Confirmation;


// C:\grua-booking-system-25\client\src\pages\Contact.jsx
import { Box, Text, Heading, VStack, FormControl, FormLabel, Input, Textarea, Button } from '@chakra-ui/react';

const Contact = () => (
  <Box p={4}>
    <Heading mb={4} textAlign="center">Contact Us</Heading>
    <VStack spacing={4} align="stretch" maxW="md" mx="auto">
      <FormControl id="name">
        <FormLabel>Name</FormLabel>
        <Input type="text" />
      </FormControl>
      <FormControl id="email">
        <FormLabel>Email</FormLabel>
        <Input type="email" />
      </FormControl>
      <FormControl id="message">
        <FormLabel>Message</FormLabel>
        <Textarea />
      </FormControl>
      <Button colorScheme="blue" type="submit">Send Message</Button>
    </VStack>
  </Box>
);

export default Contact;


// C:\grua-booking-system-25\client\src\pages\Index.jsx
import { Container, Text, VStack, Button } from "@chakra-ui/react";
import { useNavigate } from "react-router-dom";

const Index = () => {
  const navigate = useNavigate();

  const handleBookNow = () => {
    navigate("/booking");
  };

  return (
    <Container centerContent maxW="container.md" height="100vh" display="flex" flexDirection="column" justifyContent="center" alignItems="center">
      <VStack spacing={4}>
        <Text fontSize="2xl">Welcome to Tow Service Booking</Text>
        <Text>Start by selecting a service or navigating through the menu.</Text>
      <Button colorScheme="blue" onClick={handleBookNow}>Book Now</Button>
      </VStack>
    </Container>
  );
};

export default Index;


// C:\grua-booking-system-25\client\src\pages\Payment.jsx
import { Box, Text, VStack, Button, useToast } from '@chakra-ui/react';
import { useLocation, useNavigate } from 'react-router-dom';
import { useState } from 'react';

const Payment = () => {
  const location = useLocation();
  const navigate = useNavigate();
  const toast = useToast();
  const { formData, totalCost, serviceDetails } = location.state || {};
  const [isProcessing, setIsProcessing] = useState(false);

  const handlePayment = async () => {
    setIsProcessing(true);
    try {
      // Simulate payment processing delay
      await new Promise((resolve) => setTimeout(resolve, 2000));
      
      // Simulate successful payment
      const paymentSuccess = true;

      if (paymentSuccess) {
        console.log('Payment processed for:', totalCost);
        navigate('/confirmation', { state: { formData } });
      } else {
        throw new Error('Payment failed');
      }
    } catch (error) {
      toast({
        title: 'Payment Error',
        description: error.message,
        status: 'error',
        duration: 5000,
        isClosable: true,
      });
    } finally {
      setIsProcessing(false);
    }
  };

  return (
    <Box p={4}>
      <VStack spacing={4} align="stretch">
        <Text fontSize="2xl">Payment</Text>
        {formData ? (
          <>
            <Text>Service Type: {formData.serviceType}</Text>
            <Text>User Name: {formData.userName}</Text>
            <Text>Phone Number: {formData.phoneNumber}</Text>
            <Text>Vehicle Make: {formData.vehicleMake}</Text>
            <Text>Vehicle Model: {formData.vehicleModel}</Text>
            <Text>Vehicle Size: {formData.vehicleSize}</Text>
            <Text>Pickup Date: {formData.pickupDate}</Text>
            <Text>Pickup Time: {formData.pickupTime}</Text>
            <Text>Total Cost: ${totalCost}</Text>
            <Text>Distance: {serviceDetails.distance} km</Text>
            <Text>Pickup Location: {JSON.stringify(serviceDetails.pickupLocation)}</Text>
            <Text>Destination Location: {JSON.stringify(serviceDetails.destinationLocation)}</Text>
            <Button 
              colorScheme="blue" 
              onClick={handlePayment} 
              isLoading={isProcessing}
            >
              Pay Now
            </Button>
          </>
        ) : (
          <Text>No payment details available.</Text>
        )}
      </VStack>
    </Box>
  );
};

export default Payment;


// C:\grua-booking-system-25\client\src\sse\sse.controller.ts
import { Controller, Sse, MessageEvent } from '@nestjs/common';
import { Observable } from 'rxjs';
import { EventEmitter2 } from '@nestjs/event-emitter';
import { TowingRequestApplicationEvent } from '../towingRequest/application/towingRequest.application.event';

@Controller('sse')
export class SseController {
  constructor(private eventEmitter: EventEmitter2) {}

  @Sse('events')
  sendEvents(): Observable<MessageEvent> {
    return new Observable((observer) => {
      const onTowingRequestCreated = (payload) => {
        observer.next({ data: payload });
      };

      this.eventEmitter.on(TowingRequestApplicationEvent.TowingRequestCreated.key, onTowingRequestCreated);

      return () => {
        this.eventEmitter.off(TowingRequestApplicationEvent.TowingRequestCreated.key, onTowingRequestCreated);
      };
    });
  }
}


// C:\grua-booking-system-25\client\src\sse\sse.module.ts
import { Module } from '@nestjs/common';
import { SseController } from './sse.controller';
import { EventEmitterModule } from '@nestjs/event-emitter';

@Module({
  imports: [EventEmitterModule.forRoot()],
  controllers: [SseController],
})
export class SseModule {}


// C:\grua-booking-system-25\client\src\towingRequest\application\towingRequest.application.event.ts
export namespace TowingRequestApplicationEvent {
  export class TowingRequestCreated {
    static readonly key = 'towingRequest.created';
    constructor(public readonly id: string, public readonly userId: string) {}
  }
}


// C:\grua-booking-system-25\client\src\towingRequest\application\towingRequest.application.module.ts
import { Module } from '@nestjs/common';
import { AuthenticationDomainModule } from '../authentication/authentication.domain.module';
import { TowingRequestDomainModule } from '../towing-request/towingRequest.domain.module';
import { UserDomainModule } from '../user/user.domain.module';
import { TowingRequestController } from './towingRequest.controller';
import { TowingRequestByUserController } from './towingRequestByUser.controller';
import { EventService } from '../event/event.service';
import { TowingRequestDomainFacade } from '../towingRequest/towingRequest.domain.facade';
import { AuthenticationDomainFacade } from '../authentication/authentication.domain.facade';
import { NewService } from '../new/new.service';

@Module({
  imports: [
    AuthenticationDomainModule,
    TowingRequestDomainModule,
    UserDomainModule,
  ],
  controllers: [TowingRequestController, TowingRequestByUserController],
  providers: [
    EventService,
    TowingRequestDomainFacade,
    {
      provide: 'AuthenticationDomainFacade',
      useClass: AuthenticationDomainFacade,
    },
    NewService,
  ],
})
export class TowingRequestApplicationModule {}


// C:\grua-booking-system-25\client\src\towingRequest\application\towingRequest.controller.ts
import { Controller, Get, Post, Patch, Delete, Body, Param } from '@nestjs/common';
import { EventService } from '../event/event.service';
import { TowingRequestDomainFacade } from '../towingRequest/towingRequest.domain.facade';
import { AuthenticationDomainFacade } from '../authentication/authentication.domain.facade';
import { TowingRequestCreateDto, TowingRequestUpdateDto } from './towingRequest.dto';
import { TowingRequestApplicationEvent } from './towingRequest.application.event;

@Controller('/v1/towingRequests')
export class TowingRequestController {
  constructor(
    private readonly eventService: EventService,
    private readonly towingRequestDomainFacade: TowingRequestDomainFacade,
    private readonly authenticationDomainFacade: AuthenticationDomainFacade,
  ) {}

  @Get()
  async findMany() {
    return this.towingRequestDomainFacade.findMany();
  }

  @Post()
  async create(@Body() createDto: TowingRequestCreateDto) {
    const towingRequest = await this.towingRequestDomainFacade.create(createDto);
    this.eventService.emit(new TowingRequestApplicationEvent.TowingRequestCreated(towingRequest.id, towingRequest.userId));
    return towingRequest;
  }

  @Get(':id')
  async findOne(@Param('id') id: string) {
    return this.towingRequestDomainFacade.findOne(id);
  }

  @Patch(':id')
  async update(@Param('id') id: string, @Body() updateDto: TowingRequestUpdateDto) {
    return this.towingRequestDomainFacade.update(id, updateDto);
  }

  @Delete(':id')
  async delete(@Param('id') id: string) {
    return this.towingRequestDomainFacade.delete(id);
  }
}


// C:\grua-booking-system-25\client\src\towingRequest\application\towingRequest.dto.ts
import { IsString, IsNotEmpty, IsOptional } from 'class-validator';

export class TowingRequestCreateDto {
  @IsString()
  @IsNotEmpty()
  pickupLocation: string;

  @IsString()
  @IsNotEmpty()
  destinationLocation: string;

  @IsString()
  @IsOptional()
  additionalInfo?: string;
}

export class TowingRequestUpdateDto {
  @IsString()
  @IsOptional()
  pickupLocation?: string;

  @IsString()
  @IsOptional()
  destinationLocation?: string;

  @IsString()
  @IsOptional()
  additionalInfo?: string;
}


// C:\grua-booking-system-25\client\src\towingRequest\application\towingRequestByUser.controller.ts
import { Controller, Get, Param } from '@nestjs/common';
import { TowingRequestDomainFacade } from '../towingRequest/towingRequest.domain.facade';

@Controller('/v1/users/:userId/towingRequests')
export class TowingRequestByUserController {
  constructor(private readonly towingRequestDomainFacade: TowingRequestDomainFacade) {}

  @Get()
  async findByUser(@Param('userId') userId: string) {
    return this.towingRequestDomainFacade.findByUser(userId);
  }
}


// C:\grua-booking-system-25\client\src\towingRequest\towingRequest.domain.facade.ts
import { Injectable } from '@nestjs/common';
import { TowingRequest } from './towingRequest.entity';

@Injectable()
export class TowingRequestDomainFacade {
  private towingRequests: TowingRequest[] = [];

  public findMany(): TowingRequest[] {
    return this.towingRequests;
  }

  public create(createDto: TowingRequest): TowingRequest {
    const newRequest = { ...createDto, id: Date.now().toString() };
    this.towingRequests.push(newRequest);
    return newRequest;
  }

  public findOne(id: string): TowingRequest | undefined {
    return this.towingRequests.find(request => request.id === id);
  }

  public update(id: string, updateDto: Partial<TowingRequest>): TowingRequest | undefined {
    const requestIndex = this.towingRequests.findIndex(request => request.id === id);
    if (requestIndex > -1) {
      this.towingRequests[requestIndex] = { ...this.towingRequests[requestIndex], ...updateDto };
      return this.towingRequests[requestIndex];
    }
    return undefined;
  }

  public delete(id: string): boolean {
    const requestIndex = this.towingRequests.findIndex(request => request.id === id);
    if (requestIndex > -1) {
      this.towingRequests.splice(requestIndex, 1);
      return true;
    }
    return false;
  }

  public findByUser(userId: string): TowingRequest[] {
    return this.towingRequests.filter(request => request.userId === userId);
  }
}


// C:\grua-booking-system-25\client\src\towingRequest\towingRequest.domain.module.ts
import { Module } from '@nestjs/common';
import { TowingRequestDomainFacade } from './towingRequest.domain.facade';

@Module({
  providers: [TowingRequestDomainFacade],
  exports: [TowingRequestDomainFacade],
})
export class TowingRequestDomainModule {}


// C:\grua-booking-system-25\client\src\towingRequest\towingRequest.entity.ts
export class TowingRequest {
  id: string;
  userId: string;
  pickupLocation: string;
  destinationLocation: string;
  additionalInfo?: string;
}


// C:\grua-booking-system-25\client\src\towingRequest\application\towingRequest.application.event.ts
export namespace TowingRequestApplicationEvent {
  export class TowingRequestCreated {
    static readonly key = 'towingRequest.created';
    constructor(public readonly id: string, public readonly userId: string) {}
  }
}


// C:\grua-booking-system-25\client\src\towingRequest\application\towingRequest.application.module.ts
import { Module } from '@nestjs/common';
import { AuthenticationDomainModule } from '../authentication/authentication.domain.module';
import { TowingRequestDomainModule } from '../towing-request/towingRequest.domain.module';
import { UserDomainModule } from '../user/user.domain.module';
import { TowingRequestController } from './towingRequest.controller';
import { TowingRequestByUserController } from './towingRequestByUser.controller';
import { EventService } from '../event/event.service';
import { TowingRequestDomainFacade } from '../towingRequest/towingRequest.domain.facade';
import { AuthenticationDomainFacade } from '../authentication/authentication.domain.facade';
import { NewService } from '../new/new.service';

@Module({
  imports: [
    AuthenticationDomainModule,
    TowingRequestDomainModule,
    UserDomainModule,
  ],
  controllers: [TowingRequestController, TowingRequestByUserController],
  providers: [
    EventService,
    TowingRequestDomainFacade,
    {
      provide: 'AuthenticationDomainFacade',
      useClass: AuthenticationDomainFacade,
    },
    NewService,
  ],
})
export class TowingRequestApplicationModule {}


// C:\grua-booking-system-25\client\src\towingRequest\application\towingRequest.controller.ts
import { Controller, Get, Post, Patch, Delete, Body, Param } from '@nestjs/common';
import { EventService } from '../event/event.service';
import { TowingRequestDomainFacade } from '../towingRequest/towingRequest.domain.facade';
import { AuthenticationDomainFacade } from '../authentication/authentication.domain.facade';
import { TowingRequestCreateDto, TowingRequestUpdateDto } from './towingRequest.dto';
import { TowingRequestApplicationEvent } from './towingRequest.application.event;

@Controller('/v1/towingRequests')
export class TowingRequestController {
  constructor(
    private readonly eventService: EventService,
    private readonly towingRequestDomainFacade: TowingRequestDomainFacade,
    private readonly authenticationDomainFacade: AuthenticationDomainFacade,
  ) {}

  @Get()
  async findMany() {
    return this.towingRequestDomainFacade.findMany();
  }

  @Post()
  async create(@Body() createDto: TowingRequestCreateDto) {
    const towingRequest = await this.towingRequestDomainFacade.create(createDto);
    this.eventService.emit(new TowingRequestApplicationEvent.TowingRequestCreated(towingRequest.id, towingRequest.userId));
    return towingRequest;
  }

  @Get(':id')
  async findOne(@Param('id') id: string) {
    return this.towingRequestDomainFacade.findOne(id);
  }

  @Patch(':id')
  async update(@Param('id') id: string, @Body() updateDto: TowingRequestUpdateDto) {
    return this.towingRequestDomainFacade.update(id, updateDto);
  }

  @Delete(':id')
  async delete(@Param('id') id: string) {
    return this.towingRequestDomainFacade.delete(id);
  }
}


// C:\grua-booking-system-25\client\src\towingRequest\application\towingRequest.dto.ts
import { IsString, IsNotEmpty, IsOptional } from 'class-validator';

export class TowingRequestCreateDto {
  @IsString()
  @IsNotEmpty()
  pickupLocation: string;

  @IsString()
  @IsNotEmpty()
  destinationLocation: string;

  @IsString()
  @IsOptional()
  additionalInfo?: string;
}

export class TowingRequestUpdateDto {
  @IsString()
  @IsOptional()
  pickupLocation?: string;

  @IsString()
  @IsOptional()
  destinationLocation?: string;

  @IsString()
  @IsOptional()
  additionalInfo?: string;
}


// C:\grua-booking-system-25\client\src\towingRequest\application\towingRequestByUser.controller.ts
import { Controller, Get, Param } from '@nestjs/common';
import { TowingRequestDomainFacade } from '../towingRequest/towingRequest.domain.facade';

@Controller('/v1/users/:userId/towingRequests')
export class TowingRequestByUserController {
  constructor(private readonly towingRequestDomainFacade: TowingRequestDomainFacade) {}

  @Get()
  async findByUser(@Param('userId') userId: string) {
    return this.towingRequestDomainFacade.findByUser(userId);
  }
}


// C:\grua-booking-system-25\client\src\user\user.domain.module.ts
import { Module } from '@nestjs/common';

@Module({})
export class UserDomainModule {}


// C:\grua-booking-system-25\client\src\App.jsx
import React, { useEffect, useState } from 'react';
import { Route, BrowserRouter as Router, Routes } from 'react-router-dom';
import Index from './pages/Index.jsx';
import About from './pages/About.jsx';
import Contact from './pages/Contact.jsx';
import Navbar from './components/Navbar.jsx';
import BookingForm from './pages/BookingForm.jsx';
import Confirmation from './pages/Confirmation.jsx';
import Payment from './pages/Payment.jsx'; // Import Payment component

function App() {
  const [towingRequests, setTowingRequests] = useState([]);

  useEffect(() => {
    const eventSource = new EventSource('http://localhost:3000/sse/events');
    eventSource.onmessage = function (event) {
      const newTowingRequest = JSON.parse(event.data);
      setTowingRequests((prev) => [...prev, newTowingRequest]);
    };

    return () => {
      eventSource.close();
    };
  }, []);

  return (
    <>
      <Router>
        <Navbar />
        <Routes>
          <Route exact path="/" element={<Index />} />
          <Route exact path="/about" element={<About />} />
          <Route exact path="/contact" element={<Contact />} />
          <Route exact path="/booking" element={<BookingForm />} />
          <Route exact path="/confirmation" element={<Confirmation />} />
          <Route exact path="/payment" element={<Payment />} />
        </Routes>
      </Router>

      <div>
        <h1>Solicitudes de Grúa</h1>
        <ul>
          {towingRequests.map((request) => (
            <li key={request.id}>
              {request.pickupLocation} -&gt; {request.destinationLocation}
            </li>
          ))}
        </ul>
      </div>
    </>
  );
}

export default App;


// C:\grua-booking-system-25\client\src\main.jsx
import React from "react";
import ReactDOM from "react-dom/client";
import App from "./App.jsx";
import { ChakraProvider, extendTheme } from "@chakra-ui/react";
import { SupabaseProvider } from './integrations/supabase/index.js';

const colors = {
  brand: {
    900: "#1a365d",
    800: "#153e75",
    700: "#2a69ac",
  },
};

const theme = extendTheme({ colors });

ReactDOM.createRoot(document.getElementById("root")).render(
  <React.StrictMode>
    <SupabaseProvider>
      <ChakraProvider theme={theme}>
        <App />
      </ChakraProvider>
    </SupabaseProvider>
  </React.StrictMode>
);
import { Controller, Post, Body } from '@nestjs/common';
import { AuthenticationDomainFacade } from './authentication.domain.facade';

@Controller('auth')
export class AuthController {
  constructor(private readonly authFacade: AuthenticationDomainFacade) {}

  @Post('register')
  register(@Body() body: { username: string, password: string }) {
    this.authFacade.register(body.username, body.password);
    return { message: 'User registered successfully' };
  }

  @Post('login')
  login(@Body() body: { username: string, password: string }) {
    const authenticated = this.authFacade.authenticate(body.username, body.password);
    if (authenticated) {
      return { message: 'Login successful' };
    } else {
      return { message: 'Invalid credentials' };
    }
  }

  @Post('change-password')
  changePassword(@Body() body: { username: string, newPassword: string }) {
    this.authFacade.changePassword(body.username, body.newPassword);
    return { message: 'Password changed successfully' };
  }
}


// C:\grua-booking-system-25\client\src\authentication\authentication.domain.facade.ts
import { Injectable } from '@nestjs/common';

@Injectable()
export class AuthenticationDomainFacade {
  private users = new Map<string, string>();

  register(username: string, password: string): void {
    if (this.users.has(username)) {
      throw new Error('User already exists');
    }
    this.users.set(username, password);
  }

  authenticate(username: string, password: string): boolean {
    return this.users.get(username) === password;
  }

  changePassword(username: string, newPassword: string): void {
    if (this.users.has(username)) {
      this.users.set(username, newPassword);
    } else {
      throw new Error('User not found');
    }
  }
}


// C:\grua-booking-system-25\client\src\authentication\authentication.domain.module.ts
import { Module } from '@nestjs/common';
import { AuthenticationDomainFacade } from './authentication.domain.facade';

@Module({
  providers: [AuthenticationDomainFacade],
  exports: [AuthenticationDomainFacade],
})
export class AuthenticationDomainModule {}


// C:\grua-booking-system-25\client\src\authentication\authMiddleware.js
const jwt = require('jsonwebtoken');

const authMiddleware = (req, res, next) => {
  const token = req.headers['x-access-token'] || req.headers['authorization'];

  if (!token) {
    return res.status(401).json({ error: 'Unauthorized' });
  }

  jwt.verify(token, process.env.SECRET_KEY, (err, decoded) => {
    if (err) {
      return res.status(401).json({ error: 'Invalid token' });
    }

    req.user = decoded;
    next();
  });
};

module.exports = authMiddleware;


// C:\grua-booking-system-25\client\src\components\booking-status.enum.ts
export enum BookingStatus {
  PENDING = 'PENDING',
  CONFIRMED = 'CONFIRMED',
  CANCELLED = 'CANCELLED',
  COMPLETED = 'COMPLETED',
  NO_SHOW = 'NO_SHOW'
}


// C:\grua-booking-system-25\client\src\components\booking.entity.ts
import { Entity, PrimaryGeneratedColumn, Column, ManyToOne } from 'typeorm';
import { User } from './user.entity.ts';
import { Room } from './room.entity.ts/index.js';

@Entity()
export class Booking {
  @PrimaryGeneratedColumn()
  id: number;

  @Column({ type: 'datetime' })
  startTime: Date;

  @Column({ type: 'datetime' })
  endTime: Date;

  @ManyToOne(() => User, user => user.bookings)
  user: User;

  @ManyToOne(() => Room, room => room.bookings)
  room: Room;

  @Column({ default: false })
  isCancelled: boolean;

  @Column({ type: 'datetime', default: () => 'CURRENT_TIMESTAMP' })
  createdAt: Date;

  @Column({ type: 'datetime', default: () => 'CURRENT_TIMESTAMP', onUpdate: 'CURRENT_TIMESTAMP' })
  updatedAt: Date;
}


// C:\grua-booking-system-25\client\src\components\booking.repository.ts
import axios from 'axios';

const API_BASE_URL = 'http://localhost:3000/api';

export const BookingRepository = {
  createBooking: async (bookingData) => {
    try {
      const response = await axios.post(`${API_BASE_URL}/bookings`, bookingData);
      return response.data;
    } catch (error) {
      console.error('Error creating booking:', error);
      throw error;
    }
  },

  getBookings: async () => {
    try {
      const response = await axios.get(`${API_BASE_URL}/bookings`);
      return response.data;
    } catch (error) {
      console.error('Error fetching bookings:', error);
      throw error;
    }
  },

  getBookingById: async (id) => {
    try {
      const response = await axios.get(`${API_BASE_URL}/bookings/${id}`);
      return response.data;
    } catch (error) {
      console.error(`Error fetching booking with id ${id}:`, error);
      throw error;
    }
  },

  updateBooking: async (id, bookingData) => {
    try {
      const response = await axios.put(`${API_BASE_URL}/bookings/${id}`, bookingData);
      return response.data;
    } catch (error) {
      console.error(`Error updating booking with id ${id}:`, error);
      throw error;
    }
  },

  deleteBooking: async (id) => {
    try {
      const response = await axios.delete(`${API_BASE_URL}/bookings/${id}`);
      return response.data;
    } catch (error) {
      console.error(`Error deleting booking with id ${id}:`, error);
      throw error;
    }
  }
};


// C:\grua-booking-system-25\client\src\components\bookings.controller.ts
import { Controller, Post, Body, Get, Param, Patch } from '@nestjs/common';
import { BookingsService } from './bookings.service';

@Controller('bookings')
export class BookingsController {
  constructor(private readonly bookingsService: BookingsService) {}

  @Post()
  createBooking(@Body() body: { user: string, details: any }) {
    this.bookingsService.createBooking(body.user, body.details);
    return { message: 'Booking created successfully' };
  }

  @Get(':user')
  getUserBookings(@Param('user') user: string) {
    return this.bookingsService.getUserBookings(user);
  }

  @Patch(':id/status')
  updateBookingStatus(@Param('id') id: number, @Body() body: { status: string }) {
    this.bookingsService.updateBookingStatus(id, body.status);
    return { message: 'Booking status updated successfully' };
  }
}


// C:\grua-booking-system-25\client\src\components\bookings.module.ts
import { Module } from '@nestjs/common';
import { BookingsService } from './bookings.service';
import { BookingsController } from './bookings.controller';

@Module({
  providers: [BookingsService],
  controllers: [BookingsController],
})
export class BookingsModule {}


// C:\grua-booking-system-25\client\src\components\bookings.service.ts
// src/components/bookings.service.ts
import { Injectable, NotFoundException } from '@nestjs/common';
import { EventService } from '../event/event.service';
import { BookingRepository } from './booking.repository.ts'; // Asegúrate de que esta ruta es correcta
import { BookingStatus } from './booking-status.enum.ts'; // Enum para los estados de la reserva

@Injectable()
export class BookingsService {
  constructor(
    private eventService: EventService,
    private bookingRepository: BookingRepository,
  ) {}

  async updateBookingStatus(bookingId: string, status: BookingStatus): Promise<void> {
    // Encuentra la reserva por su ID
    const booking = await this.bookingRepository.findOne(bookingId);
    if (!booking) {
      throw new NotFoundException(`Booking with ID ${bookingId} not found`);
    }

    // Actualiza el estado de la reserva
    booking.status = status;

    // Guarda la reserva actualizada en el repositorio
    await this.bookingRepository.save(booking);

    // Emite un evento después de actualizar el estado
    this.eventService.emitEvent({ bookingId, status });
  }
}

// src/components/booking-status.enum.ts
export enum BookingStatus {
  PENDING = 'PENDING',
  CONFIRMED = 'CONFIRMED',
  COMPLETED = 'COMPLETED',
  CANCELLED = 'CANCELLED',
}

// src/components/booking.repository.ts
import { EntityRepository, Repository } from 'typeorm';
import { Booking } from './booking.entity.ts'; // Asegúrate de que esta ruta es correcta

@EntityRepository(Booking)
export class BookingRepository extends Repository<Booking> {}

// src/components/booking.entity.ts
import { Entity, Column, PrimaryGeneratedColumn } from 'typeorm';
import { BookingStatus } from './booking-status.enum.ts';

@Entity()
export class Booking {
  @PrimaryGeneratedColumn('uuid')
  id: string;

  @Column()
  customerName: string;

  @Column()
  serviceType: string;

  @Column()
  status: BookingStatus;
}


// C:\grua-booking-system-25\client\src\components\BookingStatus.jsx
// src/components/BookingStatus.jsx
import React, { useEffect, useState } from 'react';

const BookingStatus = () => {
  const [status, setStatus] = useState('Pending');

  useEffect(() => {
    const eventSource = new EventSource('http://localhost:3000/events/sse');

    eventSource.onmessage = (event) => {
      const newData = JSON.parse(event.data);
      setStatus(newData.status);
    };

    return () => {
      eventSource.close();
    };
  }, []);

  return (
    <div>
      <h1>Booking Status: {status}</h1>
    </div>
  );
};

export default BookingStatus;


// C:\grua-booking-system-25\client\src\components\conversation.entity.ts
import { Entity, Column, PrimaryGeneratedColumn, ManyToOne, OneToMany } from 'typeorm';
import { User } from './user.entity';
import { Message } from './message.entity';

@Entity()
export class Conversation {
  @PrimaryGeneratedColumn('uuid')
  id: string;

  @Column({ type: 'timestamp', default: () => 'CURRENT_TIMESTAMP' })
  createdAt: Date;

  @Column({ type: 'timestamp', default: () => 'CURRENT_TIMESTAMP', onUpdate: 'CURRENT_TIMESTAMP' })
  updatedAt: Date;

  @ManyToOne(() => User, user => user.conversations)
  user: User;

  @OneToMany(() => Message, message => message.conversation)
  messages: Message[];

  @Column({ nullable: true })
  title: string;

  @Column({ default: false })
  isArchived: boolean;
}


// C:\grua-booking-system-25\client\src\components\GoogleMapsRoute.jsx
import React, { useState, useEffect } from 'react';
import { Box, Button, FormControl, FormLabel, Heading, Input, Text } from '@chakra-ui/react';
import { GoogleMap, LoadScript, Marker, DirectionsService, DirectionsRenderer } from '@react-google-maps/api';
import PropTypes from 'prop-types';

const GoogleMapsRoute = ({ setDistance }) => {
  const [pickup, setPickup] = useState(null);
  const [destination, setDestination] = useState(null);
  const [error, setError] = useState(null);
  const [totalPrice, setTotalPrice] = useState(0);
  const [directions, setDirections] = useState(null);
  const [map, setMap] = useState(null);
  const [tollCost, setTollCost] = useState(0);
  const origin = { lng: -100.0095504, lat: 26.509672 }; // Updated starting point
  const pricePerKm = 19;

  useEffect(() => {
    if (navigator.geolocation) {
      navigator.geolocation.getCurrentPosition(
        (position) => {
          const userLocation = {
            lat: position.coords.latitude,
            lng: position.coords.longitude,
          };
          setPickup(userLocation);
          if (map) {
            map.panTo(userLocation);
          }
        },
        (error) => {
          console.error('Error getting user location:', error);
          setError('Error getting user location: ' + error.message);
        }
      );
    } else {
      console.error('Geolocation is not supported by this browser.');
      setError('Geolocation is not supported by this browser.');
    }
  }, [map]);

  const calculateRoute = () => {
    setError(null);
    if (!pickup || !destination) {
      setError('Please fill in all required fields.');
      return;
    }

    const directionsService = new window.google.maps.DirectionsService();
    directionsService.route(
      {
        origin: pickup,
        destination: destination,
        travelMode: window.google.maps.TravelMode.DRIVING,
        waypoints: [{ location: pickup, stopover: true }],
      },
      (result, status) => {
        if (status === window.google.maps.DirectionsStatus.OK) {
          setDirections(result);
          const distanceToDestination = result.routes[0].legs[0].distance.value / 1000; // Distance in kilometers
          setDistance(distanceToDestination);
          const price = calculatePrice(distanceToDestination);
          setTotalPrice(price);
          fetchTollData(pickup, destination);
        } else if (status === window.google.maps.DirectionsStatus.REQUEST_DENIED) {
          setError('Request denied. Please check your API key and permissions.');
          console.error('Request denied:', status, result);
        } else {
          setError('Error calculating the route: ' + status);
          console.error('Error calculating the route:', status, result);
        }
      }
    );
  };

  const calculatePrice = (distance) => {
    return distance * pricePerKm + 558 + tollCost; // Tarifa base de $558 más $19 por kilómetro más el costo de las casetas
  };

  const fetchTollData = async (origin, destination) => {
    try {
      const response = await fetch(`https://api.tollguru.com/v1/calc/route?source=${origin.lat},${origin.lng}&destination=${destination.lat},${destination.lng}`, {
        headers: {
          'x-api-key': process.env.REACT_APP_TOLLGURU_API_KEY,
        },
      });
      const data = await response.json();
      const tolls = data.tollCosts || 0;
      setTollCost(tolls);
    } catch (error) {
      console.error('Error fetching toll data:', error);
      setError('Error fetching toll data: ' + error.message);
    }
  };

  return (
    <Box>
      <Heading as="h1" mb={4}>Selecciona recogida y destino</Heading>
      {error && <Text color="red.500">Error: {error}</Text>}
      <FormControl mb={4}>
        <FormLabel htmlFor="pickup">Punto de recogida:</FormLabel>
        <Input type="text" id="pickup" value={pickup ? `${pickup.lat}, ${pickup.lng}` : ''} readOnly />
      </FormControl>
      <FormControl mb={4}>
        <FormLabel htmlFor="destination">Destino:</FormLabel>
        <Input type="text" id="destination" value={destination ? `${destination.lat}, ${destination.lng}` : ''} readOnly />
      </FormControl>
      <Button onClick={calculateRoute} colorScheme="blue" disabled={!pickup || !destination}>Calcular Ruta</Button>
      <Text mt={4} fontSize="xl">Precio total: ${totalPrice.toFixed(2)}</Text>
      <LoadScript googleMapsApiKey={process.env.REACT_APP_GOOGLE_MAPS_API_KEY} libraries={['places', 'geometry']}>
        <GoogleMap
          center={{ lat: origin.lat, lng: origin.lng }}
          zoom={7}
          maxZoom={20} // Allow more zoom
          mapContainerStyle={{ height: '400px', width: '100%', marginTop: '20px' }}
          onLoad={(map) => setMap(map)}
          onClick={(event) => {
            try {
              if (!pickup) {
                setPickup(event.latLng.toJSON());
              } else if (!destination) {
                setDestination(event.latLng.toJSON());
              }
            } catch (err) {
              setError('Error setting location: ' + err.message);
              console.error('Error setting location:', err);
            }
          }}
        >
          {pickup && <Marker position={pickup} draggable={true} onDragEnd={(e) => setPickup(e.latLng.toJSON())} />}
          {destination && <Marker position={destination} draggable={true} onDragEnd={(e) => setDestination(e.latLng.toJSON())} />}
          {pickup && destination && (
            <DirectionsService
              options={{
                origin: pickup,
                destination: destination,
                travelMode: window.google.maps.TravelMode.DRIVING,
                waypoints: [{ location: pickup, stopover: true }],
              }}
              callback={(response, status) => {
                if (status === window.google.maps.DirectionsStatus.OK) {
                  setDirections(response);
                } else {
                  setError('Error fetching directions: ' + status);
                  console.error('Error fetching directions:', status, response);
                }
              }}
            />
          )}
          {directions && (
            <DirectionsRenderer
              options={{
                directions: directions,
              }}
            />
          )}
        </GoogleMap>
      </LoadScript>
    </Box>
  );
};

GoogleMapsRoute.propTypes = {
  setDistance: PropTypes.func.isRequired,
};

export default GoogleMapsRoute;


// C:\grua-booking-system-25\client\src\components\InstructionsSidebar.jsx
import { Box, Button, Heading, Input, List, ListIcon, ListItem } from "@chakra-ui/react";
import React, { useState } from "react";
import { FaRegLightbulb } from "react-icons/fa";

const InstructionsSidebar = () => {
  const [contactInput, setContactInput] = useState('');

  const handleInputChange = (event) => {
    setContactInput(event.target.value);
  };

  const handleSubmit = (event) => {
    event.preventDefault();
    // Handle form submission here
  };

  return (
    <Box p={5} border="1px" borderColor="gray.200" borderRadius="md" bg="gray.50">
      <Heading size="md" mb={3}>
        How to Book a Service
      </Heading>
      <List spacing={3}>
        <ListItem>
          <ListIcon as={FaRegLightbulb} color="green.500" />
          Select the type of service you need.
        </ListItem>
        <ListItem>
          <ListIcon as={FaRegLightbulb} color="green.500" />
          Enter your current location and destination.
        </ListItem>
        <ListItem>
          <ListIcon as={FaRegLightbulb} color="green.500" />
          Choose a convenient date and time.
        </ListItem>
        <ListItem>
          <ListIcon as={FaRegLightbulb} color="green.500" />
          Enter your contact information <Input value={contactInput} onChange={handleInputChange} />
        </ListItem>
        <ListItem>
          <ListIcon as={FaRegLightbulb} color="green.500" />
          Confirm your booking and get instant assistance.
        </ListItem>
      </List>
      <Button mt={4} onClick={handleSubmit}>Next Step</Button>
    </Box>
  );
};

export default InstructionsSidebar;


// C:\grua-booking-system-25\client\src\components\message.entity.ts
import { Entity, Column, PrimaryGeneratedColumn, ManyToOne } from 'typeorm';
import { User } from './user.entity';
import { Conversation } from './conversation.entity.ts';

@Entity()
export class Message {
  @PrimaryGeneratedColumn()
  id: number;

  @Column('text')
  content: string;

  @Column({ type: 'timestamp', default: () => 'CURRENT_TIMESTAMP' })
  timestamp: Date;

  @ManyToOne(() => User, user => user.messages)
  sender: User;

  @ManyToOne(() => Conversation, conversation => conversation.messages)
  conversation: Conversation;

  @Column({ default: false })
  isRead: boolean;
}


// C:\grua-booking-system-25\client\src\components\Navbar.jsx
import { Box, Flex, Link, Spacer, Text } from "@chakra-ui/react";
import { Link as RouterLink } from "react-router-dom";

const Navbar = () => {
  return (
    <Box bg="blue.500" p={4} color="white">
      <Flex maxW="1200px" mx="auto" align="center">
        <Text fontSize="xl" fontWeight="bold">Tow Service</Text>
        <Spacer />
        <Flex>
          <Link as={RouterLink} to="/" p={2} mx={2} _hover={{ textDecoration: "none", bg: "blue.600" }}>Home</Link>
          <Link as={RouterLink} to="/about" p={2} mx={2} _hover={{ textDecoration: "none", bg: "blue.600" }}>About</Link>
          <Link as={RouterLink} to="/contact" p={2} mx={2} _hover={{ textDecoration: "none", bg: "blue.600" }}>Contact</Link>
          <Link as={RouterLink} to="/booking" p={2} mx={2} _hover={{ textDecoration: "none", bg: "blue.600" }}>Book Now</Link>
        </Flex>
      </Flex>
    </Box>
  );
};

export default Navbar;


// C:\grua-booking-system-25\client\src\components\room.entity.ts
import { Entity, Column, PrimaryGeneratedColumn, ManyToOne, OneToMany } from 'typeorm'
import { User } from './user.entity'
import { Message } from './message.entity.ts'

@Entity()
export class Room {
  @PrimaryGeneratedColumn()
  id: number

  @Column()
  name: string

  @Column({ nullable: true })
  description: string

  @Column({ default: false })
  isPrivate: boolean

  @ManyToOne(() => User, user => user.createdRooms)
  creator: User

  @OneToMany(() => Message, message => message.room)
  messages: Message[]

  @Column({ type: 'timestamp', default: () => 'CURRENT_TIMESTAMP' })
  createdAt: Date

  @Column({ type: 'timestamp', default: () => 'CURRENT_TIMESTAMP', onUpdate: 'CURRENT_TIMESTAMP' })
  updatedAt: Date
}


// C:\grua-booking-system-25\client\src\components\user.entity.ts
import { Entity, PrimaryGeneratedColumn, Column } from 'typeorm'

@Entity()
export class User {
  @PrimaryGeneratedColumn()
  id: number

  @Column()
  firstName: string

  @Column()
  lastName: string

  @Column({ unique: true })
  email: string

  @Column()
  password: string

  @Column({ default: false })
  isAdmin: boolean

  @Column({ type: 'timestamp', default: () => 'CURRENT_TIMESTAMP' })
  createdAt: Date

  @Column({ type: 'timestamp', default: () => 'CURRENT_TIMESTAMP', onUpdate: 'CURRENT_TIMESTAMP' })
  updatedAt: Date
}


// C:\grua-booking-system-25\client\src\components\UserLocationMarker.jsx
import { useEffect } from 'react';

const UserLocationMarker = ({ map, setPickupLocation }) => {
  useEffect(() => {
    if (navigator.geolocation) {
      navigator.geolocation.getCurrentPosition(
        (position) => {
          const userLocation = {
            lat: position.coords.latitude,
            lng: position.coords.longitude,
          };
          setPickupLocation(userLocation);
          if (map) {
            map.panTo(userLocation);
          }
        },
        (error) => {
          console.error('Error getting user location:', error);
        }
      );
    } else {
      console.error('Geolocation is not supported by this browser.');
    }
  }, [map, setPickupLocation]);

  return null;
};

export default UserLocationMarker;


// C:\grua-booking-system-25\client\src\event\app.module.ts
import { Module } from '@nestjs/common';
import { EventsModule } from './events.module';
import { BookingsModule } from '../components/bookings.module';

@Module({
  imports: [EventsModule, BookingsModule],
})
export class AppModule {}


// C:\grua-booking-system-25\client\src\event\event.controller.ts
import { Controller, Get, Sse } from '@nestjs/common';
import { interval, map } from 'rxjs';
import { EventService } from './event.service';

@Controller('events')
export class EventController {
  constructor(private readonly eventService: EventService) {}

  @Sse('stream')
  streamEvents() {
    return this.eventService.getEvents();
  }
}


// C:\grua-booking-system-25\client\src\event\event.service.ts
import { Injectable } from '@nestjs/common';
import { interval, map } from 'rxjs';

@Injectable()
export class EventService {
  private events = [];

  emitEvent(event: any) {
    this.events.push(event);
  }

  getEvents() {
    return interval(1000).pipe(map(() => ({ data: this.events })));
  }
}


// C:\grua-booking-system-25\client\src\event\events.module.ts
import { Module } from '@nestjs/common';
import { EventController } from './event.controller';
import { EventService } from './event.service';

@Module({
  controllers: [EventController],
  providers: [EventService],
  exports: [EventService],
},)
export class EventsModule {}


// C:\grua-booking-system-25\client\src\integrations\supabase\auth.jsx
import React, { useState } from 'react';
import { supabase } from './supabaseClient';

const Auth = () => {
  const [email, setEmail] = useState('');
  const [password, setPassword] = useState('');

  const handleLogin = async (event) => {
    event.preventDefault();
    const { user, error } = await supabase.auth.signIn({ email, password });
    if (error) {
      console.error('Error logging in:', error.message);
    } else {
      console.log('User logged in:', user);
    }
  };

  const handleSignup = async (event) => {
    event.preventDefault();
    const { user, error } = await supabase.auth.signUp({ email, password });
    if (error) {
      console.error('Error signing up:', error.message);
    } else {
      console.log('User signed up:', user);
    }
  };

  return (
    <div>
      <form onSubmit={handleLogin}>
        <input type="email" value={email} onChange={(e) => setEmail(e.target.value)} placeholder="Email" />
        <input type="password" value={password} onChange={(e) => setPassword(e.target.value)} placeholder="Password" />
        <button type="submit">Login</button>
      </form>
      <form onSubmit={handleSignup}>
        <input type="email" value={email} onChange={(e) => setEmail(e.target.value)} placeholder="Email" />
        <input type="password" value={password} onChange={(e) => setPassword(e.target.value)} placeholder="Password" />
        <button type="submit">Sign Up</button>
      </form>
    </div>
  );
};

export default Auth;


// C:\grua-booking-system-25\client\src\integrations\supabase\index.js
import { createClient } from '@supabase/supabase-js';
import { useQuery, useMutation, useQueryClient, QueryClient, QueryClientProvider } from '@tanstack/react-query';

const supabaseUrl = import.meta.env.VITE_SUPABASE_PROJECT_URL;
const supabaseKey = import.meta.env.VITE_SUPABASE_API_KEY;
export const supabase = createClient(supabaseUrl, supabaseKey);

import React from "react";
export const queryClient = new QueryClient();
export function SupabaseProvider({ children }) {
    return React.createElement(QueryClientProvider, { client: queryClient }, children);
}

const fromSupabase = async (query) => {
    const { data, error } = await query;
    if (error) throw new Error(error.message);
    return data;
};

/* supabase integration types

### TOW

| name       | type        | format | required |
|------------|-------------|--------|----------|
| id         | int8        | number | true     |
| created_at | timestamptz | string | true     |

*/

// Example hook for models

export const useFoo = ()=> useQuery({
    queryKey: ['foos'],
    queryFn: fromSupabase(supabase.from('foos')),
})
export const useAddFoo = () => {
    const queryClient = useQueryClient();
    return useMutation({
        mutationFn: (newFoo)=> fromSupabase(supabase.from('foos').insert([{ title: newFoo.title }])),
        onSuccess: ()=> {
            queryClient.invalidateQueries('foos');
        },
    });
};

export const useBar = ()=> useQuery({
    queryKey: ['bars'],
    queryFn: fromSupabase(supabase.from('bars')),
})
export const useAddBar = () => {
    const queryClient = useQueryClient();
    return useMutation({
        mutationFn: (newBar)=> fromSupabase(supabase.from('bars').insert([{ foo_id: newBar.foo_id }])),
        onSuccess: ()=> {
            queryClient.invalidateQueries('bars');
        },
    });
};

export const useTOWs = () => useQuery({
    queryKey: ['TOWs'],
    queryFn: () => fromSupabase(supabase.from('TOW').select('*')),
});

export const useTOW = (id) => useQuery({
    queryKey: ['TOW', id],
    queryFn: () => fromSupabase(supabase.from('TOW').select('*').eq('id', id).single()),
});

export const useAddTOW = () => {
    const queryClient = useQueryClient();
    return useMutation({
        mutationFn: (newTOW) => fromSupabase(supabase.from('TOW').insert([newTOW])),
        onSuccess: () => {
            queryClient.invalidateQueries('TOWs');
        },
    });
};

export const useUpdateTOW = () => {
    const queryClient = useQueryClient();
    return useMutation({
        mutationFn: (updatedTOW) => fromSupabase(supabase.from('TOW').update(updatedTOW).eq('id', updatedTOW.id)),
        onSuccess: () => {
            queryClient.invalidateQueries('TOWs');
            queryClient.invalidateQueries(['TOW', updatedTOW.id]);
        },
    });
};

export const useDeleteTOW = () => {
    const queryClient = useQueryClient();
    return useMutation({
        mutationFn: (id) => fromSupabase(supabase.from('TOW').delete().eq('id', id)),
        onSuccess: () => {
            queryClient.invalidateQueries('TOWs');
        },
    });
};


// C:\grua-booking-system-25\client\src\integrations\supabase\openapi.json
{"swagger":"2.0","info":{"description":"","title":"standard public schema","version":"12.1 (8cbcf98)"},"host":"gjwhxrajesykwmomorhw.supabase.co:443","basePath":"/","schemes":["https"],"consumes":["application/json","application/vnd.pgrst.object+json;nulls=stripped","application/vnd.pgrst.object+json","text/csv"],"produces":["application/json","application/vnd.pgrst.object+json;nulls=stripped","application/vnd.pgrst.object+json","text/csv"],"paths":{"/":{"get":{"produces":["application/openapi+json","application/json"],"responses":{"200":{"description":"OK"}},"summary":"OpenAPI description (this document)","tags":["Introspection"]}},"/TOW":{"get":{"parameters":[{"$ref":"#/parameters/rowFilter.TOW.id"},{"$ref":"#/parameters/rowFilter.TOW.created_at"},{"$ref":"#/parameters/select"},{"$ref":"#/parameters/order"},{"$ref":"#/parameters/range"},{"$ref":"#/parameters/rangeUnit"},{"$ref":"#/parameters/offset"},{"$ref":"#/parameters/limit"},{"$ref":"#/parameters/preferCount"}],"responses":{"200":{"description":"OK","schema":{"items":{"$ref":"#/definitions/TOW"},"type":"array"}},"206":{"description":"Partial Content"}},"summary":"TOW","tags":["TOW"]},"post":{"parameters":[{"$ref":"#/parameters/body.TOW"},{"$ref":"#/parameters/select"},{"$ref":"#/parameters/preferPost"}],"responses":{"201":{"description":"Created"}},"summary":"TOW","tags":["TOW"]},"delete":{"parameters":[{"$ref":"#/parameters/rowFilter.TOW.id"},{"$ref":"#/parameters/rowFilter.TOW.created_at"},{"$ref":"#/parameters/preferReturn"}],"responses":{"204":{"description":"No Content"}},"summary":"TOW","tags":["TOW"]},"patch":{"parameters":[{"$ref":"#/parameters/rowFilter.TOW.id"},{"$ref":"#/parameters/rowFilter.TOW.created_at"},{"$ref":"#/parameters/body.TOW"},{"$ref":"#/parameters/preferReturn"}],"responses":{"204":{"description":"No Content"}},"summary":"TOW","tags":["TOW"]}}},"definitions":{"TOW":{"description":"TOW","required":["id","created_at"],"properties":{"id":{"description":"Note:\nThis is a Primary Key.<pk/>","format":"bigint","type":"integer"},"created_at":{"default":"now()","format":"timestamp with time zone","type":"string"}},"type":"object"}},"parameters":{"preferParams":{"name":"Prefer","description":"Preference","required":false,"enum":["params=single-object"],"in":"header","type":"string"},"preferReturn":{"name":"Prefer","description":"Preference","required":false,"enum":["return=representation","return=minimal","return=none"],"in":"header","type":"string"},"preferCount":{"name":"Prefer","description":"Preference","required":false,"enum":["count=none"],"in":"header","type":"string"},"preferPost":{"name":"Prefer","description":"Preference","required":false,"enum":["return=representation","return=minimal","return=none","resolution=ignore-duplicates","resolution=merge-duplicates"],"in":"header","type":"string"},"select":{"name":"select","description":"Filtering Columns","required":false,"in":"query","type":"string"},"on_conflict":{"name":"on_conflict","description":"On Conflict","required":false,"in":"query","type":"string"},"order":{"name":"order","description":"Ordering","required":false,"in":"query","type":"string"},"range":{"name":"Range","description":"Limiting and Pagination","required":false,"in":"header","type":"string"},"rangeUnit":{"name":"Range-Unit","description":"Limiting and Pagination","required":false,"default":"items","in":"header","type":"string"},"offset":{"name":"offset","description":"Limiting and Pagination","required":false,"in":"query","type":"string"},"limit":{"name":"limit","description":"Limiting and Pagination","required":false,"in":"query","type":"string"},"body.TOW":{"name":"TOW","description":"TOW","required":false,"in":"body","schema":{"$ref":"#/definitions/TOW"}},"rowFilter.TOW.id":{"name":"id","required":false,"format":"bigint","in":"query","type":"string"},"rowFilter.TOW.created_at":{"name":"created_at","required":false,"format":"timestamp with time zone","in":"query","type":"string"}},"externalDocs":{"description":"PostgREST Documentation","url":"https://postgrest.org/en/v12.1/api.html"}}


// C:\grua-booking-system-25\client\src\integrations\supabase\supabaseClient.js
import { createClient } from '@supabase/supabase-js';

const supabaseUrl = 'https://your-supabase-url.supabase.co';
const supabaseKey = 'your-supabase-key';

export const supabase = createClient(supabaseUrl, supabaseKey);


// C:\grua-booking-system-25\client\src\integrations\supabase\auth.jsx
import React, { useState } from 'react';
import { supabase } from './supabaseClient';

const Auth = () => {
  const [email, setEmail] = useState('');
  const [password, setPassword] = useState('');

  const handleLogin = async (event) => {
    event.preventDefault();
    const { user, error } = await supabase.auth.signIn({ email, password });
    if (error) {
      console.error('Error logging in:', error.message);
    } else {
      console.log('User logged in:', user);
    }
  };

  const handleSignup = async (event) => {
    event.preventDefault();
    const { user, error } = await supabase.auth.signUp({ email, password });
    if (error) {
      console.error('Error signing up:', error.message);
    } else {
      console.log('User signed up:', user);
    }
  };

  return (
    <div>
      <form onSubmit={handleLogin}>
        <input type="email" value={email} onChange={(e) => setEmail(e.target.value)} placeholder="Email" />
        <input type="password" value={password} onChange={(e) => setPassword(e.target.value)} placeholder="Password" />
        <button type="submit">Login</button>
      </form>
      <form onSubmit={handleSignup}>
        <input type="email" value={email} onChange={(e) => setEmail(e.target.value)} placeholder="Email" />
        <input type="password" value={password} onChange={(e) => setPassword(e.target.value)} placeholder="Password" />
        <button type="submit">Sign Up</button>
      </form>
    </div>
  );
};

export default Auth;


// C:\grua-booking-system-25\client\src\integrations\supabase\index.js
import { createClient } from '@supabase/supabase-js';
import { useQuery, useMutation, useQueryClient, QueryClient, QueryClientProvider } from '@tanstack/react-query';

const supabaseUrl = import.meta.env.VITE_SUPABASE_PROJECT_URL;
const supabaseKey = import.meta.env.VITE_SUPABASE_API_KEY;
export const supabase = createClient(supabaseUrl, supabaseKey);

import React from "react";
export const queryClient = new QueryClient();
export function SupabaseProvider({ children }) {
    return React.createElement(QueryClientProvider, { client: queryClient }, children);
}

const fromSupabase = async (query) => {
    const { data, error } = await query;
    if (error) throw new Error(error.message);
    return data;
};

/* supabase integration types

### TOW

| name       | type        | format | required |
|------------|-------------|--------|----------|
| id         | int8        | number | true     |
| created_at | timestamptz | string | true     |

*/

// Example hook for models

export const useFoo = ()=> useQuery({
    queryKey: ['foos'],
    queryFn: fromSupabase(supabase.from('foos')),
})
export const useAddFoo = () => {
    const queryClient = useQueryClient();
    return useMutation({
        mutationFn: (newFoo)=> fromSupabase(supabase.from('foos').insert([{ title: newFoo.title }])),
        onSuccess: ()=> {
            queryClient.invalidateQueries('foos');
        },
    });
};

export const useBar = ()=> useQuery({
    queryKey: ['bars'],
    queryFn: fromSupabase(supabase.from('bars')),
})
export const useAddBar = () => {
    const queryClient = useQueryClient();
    return useMutation({
        mutationFn: (newBar)=> fromSupabase(supabase.from('bars').insert([{ foo_id: newBar.foo_id }])),
        onSuccess: ()=> {
            queryClient.invalidateQueries('bars');
        },
    });
};

export const useTOWs = () => useQuery({
    queryKey: ['TOWs'],
    queryFn: () => fromSupabase(supabase.from('TOW').select('*')),
});

export const useTOW = (id) => useQuery({
    queryKey: ['TOW', id],
    queryFn: () => fromSupabase(supabase.from('TOW').select('*').eq('id', id).single()),
});

export const useAddTOW = () => {
    const queryClient = useQueryClient();
    return useMutation({
        mutationFn: (newTOW) => fromSupabase(supabase.from('TOW').insert([newTOW])),
        onSuccess: () => {
            queryClient.invalidateQueries('TOWs');
        },
    });
};

export const useUpdateTOW = () => {
    const queryClient = useQueryClient();
    return useMutation({
        mutationFn: (updatedTOW) => fromSupabase(supabase.from('TOW').update(updatedTOW).eq('id', updatedTOW.id)),
        onSuccess: () => {
            queryClient.invalidateQueries('TOWs');
            queryClient.invalidateQueries(['TOW', updatedTOW.id]);
        },
    });
};

export const useDeleteTOW = () => {
    const queryClient = useQueryClient();
    return useMutation({
        mutationFn: (id) => fromSupabase(supabase.from('TOW').delete().eq('id', id)),
        onSuccess: () => {
            queryClient.invalidateQueries('TOWs');
        },
    });
};


// C:\grua-booking-system-25\client\src\integrations\supabase\openapi.json
{"swagger":"2.0","info":{"description":"","title":"standard public schema","version":"12.1 (8cbcf98)"},"host":"gjwhxrajesykwmomorhw.supabase.co:443","basePath":"/","schemes":["https"],"consumes":["application/json","application/vnd.pgrst.object+json;nulls=stripped","application/vnd.pgrst.object+json","text/csv"],"produces":["application/json","application/vnd.pgrst.object+json;nulls=stripped","application/vnd.pgrst.object+json","text/csv"],"paths":{"/":{"get":{"produces":["application/openapi+json","application/json"],"responses":{"200":{"description":"OK"}},"summary":"OpenAPI description (this document)","tags":["Introspection"]}},"/TOW":{"get":{"parameters":[{"$ref":"#/parameters/rowFilter.TOW.id"},{"$ref":"#/parameters/rowFilter.TOW.created_at"},{"$ref":"#/parameters/select"},{"$ref":"#/parameters/order"},{"$ref":"#/parameters/range"},{"$ref":"#/parameters/rangeUnit"},{"$ref":"#/parameters/offset"},{"$ref":"#/parameters/limit"},{"$ref":"#/parameters/preferCount"}],"responses":{"200":{"description":"OK","schema":{"items":{"$ref":"#/definitions/TOW"},"type":"array"}},"206":{"description":"Partial Content"}},"summary":"TOW","tags":["TOW"]},"post":{"parameters":[{"$ref":"#/parameters/body.TOW"},{"$ref":"#/parameters/select"},{"$ref":"#/parameters/preferPost"}],"responses":{"201":{"description":"Created"}},"summary":"TOW","tags":["TOW"]},"delete":{"parameters":[{"$ref":"#/parameters/rowFilter.TOW.id"},{"$ref":"#/parameters/rowFilter.TOW.created_at"},{"$ref":"#/parameters/preferReturn"}],"responses":{"204":{"description":"No Content"}},"summary":"TOW","tags":["TOW"]},"patch":{"parameters":[{"$ref":"#/parameters/rowFilter.TOW.id"},{"$ref":"#/parameters/rowFilter.TOW.created_at"},{"$ref":"#/parameters/body.TOW"},{"$ref":"#/parameters/preferReturn"}],"responses":{"204":{"description":"No Content"}},"summary":"TOW","tags":["TOW"]}}},"definitions":{"TOW":{"description":"TOW","required":["id","created_at"],"properties":{"id":{"description":"Note:\nThis is a Primary Key.<pk/>","format":"bigint","type":"integer"},"created_at":{"default":"now()","format":"timestamp with time zone","type":"string"}},"type":"object"}},"parameters":{"preferParams":{"name":"Prefer","description":"Preference","required":false,"enum":["params=single-object"],"in":"header","type":"string"},"preferReturn":{"name":"Prefer","description":"Preference","required":false,"enum":["return=representation","return=minimal","return=none"],"in":"header","type":"string"},"preferCount":{"name":"Prefer","description":"Preference","required":false,"enum":["count=none"],"in":"header","type":"string"},"preferPost":{"name":"Prefer","description":"Preference","required":false,"enum":["return=representation","return=minimal","return=none","resolution=ignore-duplicates","resolution=merge-duplicates"],"in":"header","type":"string"},"select":{"name":"select","description":"Filtering Columns","required":false,"in":"query","type":"string"},"on_conflict":{"name":"on_conflict","description":"On Conflict","required":false,"in":"query","type":"string"},"order":{"name":"order","description":"Ordering","required":false,"in":"query","type":"string"},"range":{"name":"Range","description":"Limiting and Pagination","required":false,"in":"header","type":"string"},"rangeUnit":{"name":"Range-Unit","description":"Limiting and Pagination","required":false,"default":"items","in":"header","type":"string"},"offset":{"name":"offset","description":"Limiting and Pagination","required":false,"in":"query","type":"string"},"limit":{"name":"limit","description":"Limiting and Pagination","required":false,"in":"query","type":"string"},"body.TOW":{"name":"TOW","description":"TOW","required":false,"in":"body","schema":{"$ref":"#/definitions/TOW"}},"rowFilter.TOW.id":{"name":"id","required":false,"format":"bigint","in":"query","type":"string"},"rowFilter.TOW.created_at":{"name":"created_at","required":false,"format":"timestamp with time zone","in":"query","type":"string"}},"externalDocs":{"description":"PostgREST Documentation","url":"https://postgrest.org/en/v12.1/api.html"}}


// C:\grua-booking-system-25\client\src\integrations\supabase\supabaseClient.js
import { createClient } from '@supabase/supabase-js';

const supabaseUrl = 'https://your-supabase-url.supabase.co';
const supabaseKey = 'your-supabase-key';

export const supabase = createClient(supabaseUrl, supabaseKey);


// C:\grua-booking-system-25\client\src\pages\About.jsx
import { Box, Text, Heading, VStack, Flex } from '@chakra-ui/react';
import { FaCheckCircle } from 'react-icons/fa';

const About = () => (
  <Box p={4}>
    <Flex direction="column" align="center" justify="center" p={10}>
      <Heading mb={4}>About Our Tow Service</Heading>
      <Text fontSize="lg" mb={6}>We provide reliable and efficient tow services to get you back on the road quickly.</Text>
    </Flex>
    <Box bg="gray.100" p={10}>
      <Heading size="lg" textAlign="center" mb={4}>Our Features</Heading>
      <VStack spacing={5}>
        <Flex align="center">
          <FaCheckCircle size="24px" />
          <Text ml={2}>24/7 Availability</Text>
        </Flex>
        <Flex align="center">
          <FaCheckCircle size="24px" />
          <Text ml={2}>Professional Staff</Text>
        </Flex>
        <Flex align="center">
          <FaCheckCircle size="24px" />
          <Text ml={2}>Affordable Pricing</Text>
        </Flex>
      </VStack>
    </Box>
  </Box>
);

export default About;


// C:\grua-booking-system-25\client\src\pages\BookingForm.jsx
import { useState, useEffect, useRef } from 'react';
import { Box, Button, FormControl, FormLabel, Input, Select, Textarea, VStack, useToast, Heading, Text, Checkbox, Modal, ModalOverlay, ModalContent, ModalHeader, ModalBody, ModalCloseButton } from '@chakra-ui/react';
import { useNavigate, useLocation } from 'react-router-dom';
import { LoadScript, GoogleMap, Marker, DirectionsService, DirectionsRenderer } from '@react-google-maps/api';

const BookingForm = () => {
  const [formData, setFormData] = useState({
    serviceType: '',
    userName: '',
    phoneNumber: '',
    carBrand: '',
    vehicleModel: '',
    vehicleSize: '',
    additionalInfo: '',
    pickupDate: '',
    pickupTime: '',
    origin: { lat: 26.509672, lng: -100.0095504 },
    pickupLocation: null,
    destinationLocation: null,
    distance: 0,
    streetLevel: '',
    neutralPossible: '',
    adaptations: '',
    passengers: '',
  });

  const [directions, setDirections] = useState(null);
  const [tollCost, setTollCost] = useState(0);
  const [isMapLoaded, setIsMapLoaded] = useState(false);
  const [isTermsOpen, setIsTermsOpen] = useState(false);

  const toast = useToast();
  const navigate = useNavigate();
  const location = useLocation();
  const mapRef = useRef(null);

  useEffect(() => {
    if (location.state) {
      const { origin, pickupLocation, destinationLocation } = location.state;
      setFormData((prevData) => ({ ...prevData, origin, pickupLocation, destinationLocation }));
    }
  }, [location.state]);

  const handleChange = (e) => {
    const { name, value } = e.target;
    setFormData({ ...formData, [name]: value });
  };

  const handleSubmit = async (e) => {
    e.preventDefault();
    const { serviceType, userName, phoneNumber, carBrand, vehicleModel, vehicleSize, pickupDate, pickupTime, origin, pickupLocation, destinationLocation, distance, streetLevel, neutralPossible, adaptations, passengers } = formData;

    if (!serviceType || !userName || !phoneNumber || !carBrand || !vehicleModel || !vehicleSize || !pickupDate || !pickupTime || !origin || !pickupLocation || !destinationLocation || !streetLevel || !neutralPossible || !adaptations || !passengers) {
      toast({
        title: 'Error',
        description: 'Please fill in all required fields.',
        status: 'error',
        duration: 5000,
        isClosable: true,
      });
      return;
    }

    const baseCost = 558;
    const costPerKm = 19;
    const totalCost = baseCost + (distance * costPerKm) + tollCost;

    try {
      console.log('Submitting form with data:', formData);
      const response = await fetch('https://valid-endpoint-for-booking.com/bookings', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({ ...formData, totalCost }),
      });

      if (!response.ok) {
        throw new Error('Network response was not ok');
      }

      const data = await response.json();
      navigate('/payment', { state: { formData, totalCost, serviceDetails: { serviceType, distance, pickupLocation, destinationLocation } } });
    } catch (error) {
      console.error('Error submitting form:', error);
      toast({
        title: 'Error',
        description: 'There was a problem processing your booking. Please try again later.',
        status: 'error',
        duration: 5000,
        isClosable: true,
      });
    }
  };

  const handleMapClick = (event) => {
    try {
      if (!formData.pickupLocation) {
        setFormData({ ...formData, pickupLocation: { lat: event.latLng.lat(), lng: event.latLng.lng() } });
      } else if (!formData.destinationLocation) {
        setFormData({ ...formData, destinationLocation: { lat: event.latLng.lat(), lng: event.latLng.lng() } });
      }
    } catch (error) {
      console.error('Error handling map click:', error);
      toast({
        title: 'Error',
        description: 'There was a problem handling the map click. Please try again later.',
        status: 'error',
        duration: 5000,
        isClosable: true,
      });
    }
  };

  const handleReset = () => {
    setFormData({ ...formData, pickupLocation: null, destinationLocation: null });
    setDirections(null);
  };

  const centerPickupMarker = () => {
    if (navigator.geolocation) {
      navigator.geolocation.getCurrentPosition(
        (position) => {
          const userLocation = {
            lat: position.coords.latitude,
            lng: position.coords.longitude,
          };
          setFormData({ ...formData, pickupLocation: userLocation });
          if (mapRef.current) {
            mapRef.current.panTo(userLocation);
          }
        },
        (error) => {
          console.error('Error getting user location:', error);
          toast({
            title: 'Error',
            description: 'There was a problem getting your location. Please try again later.',
            status: 'error',
            duration: 5000,
            isClosable: true,
          });
        }
      );
    } else {
      toast({
        title: 'Error',
        description: 'Geolocation is not supported by this browser.',
        status: 'error',
        duration: 5000,
        isClosable: true,
      });
    }
  };

  const calculateRoute = () => {
    if (formData.pickupLocation && formData.destinationLocation) {
      return (
        <DirectionsService
          options={{
            origin: formData.pickupLocation,
            destination: formData.destinationLocation,
            travelMode: 'DRIVING',
          }}
          callback={(response, status) => {
            if (status === 'OK') {
              setDirections(response);
              const distanceInKm = response.routes[0].legs[0].distance.value / 1000;
              setFormData((prevData) => ({ ...prevData, distance: distanceInKm }));
              fetchTollData(formData.pickupLocation, formData.destinationLocation);
            } else {
              console.error('Error calculating route:', status);
              toast({
                title: 'Error',
                description: 'There was a problem calculating the route. Please try again later.',
                status: 'error',
                duration: 5000,
                isClosable: true,
              });
            }
          }}
        />
      );
    }
    return null;
  };

  const fetchTollData = async (origin, destination) => {
    try {
      const response = await fetch(`https://api.tollguru.com/v1/calc/route?source=${origin.lat},${origin.lng}&destination=${destination.lat},${destination.lng}`);
      const data = await response.json();
      const tolls = data.tolls || 0;
      setTollCost(tolls);
    } catch (error) {
      console.error('Error fetching toll data:', error);
      toast({
        title: 'Error',
        description: 'There was a problem fetching toll data. Please try again later.',
        status: 'error',
        duration: 5000,
        isClosable: true,
      });
    }
  };

  return (
    <Box p={4}>
      <VStack spacing={4} align="stretch">
        <Heading as="h1" mb={4}>Booking Form</Heading>
        <form onSubmit={handleSubmit}>
          <FormControl id="serviceType" isRequired>
            <FormLabel>Service Type</FormLabel>
            <Select name="serviceType" value={formData.serviceType} onChange={handleChange}>
              <option value="">Select Service Type</option>
              <option value="Tow">Tow</option>
              <option value="Platform">Platform</option>
              <option value="Roadside Assistance">Roadside Assistance</option>
            </Select>
          </FormControl>
          <FormControl id="userName" isRequired>
            <FormLabel>User Name</FormLabel>
            <Input type="text" name="userName" value={formData.userName} onChange={handleChange} />
          </FormControl>
          <FormControl id="phoneNumber" isRequired>
            <FormLabel>Phone Number</FormLabel>
            <Input type="tel" name="phoneNumber" value={formData.phoneNumber} onChange={handleChange} />
          </FormControl>
          <FormControl id="carBrand" isRequired>
            <FormLabel>Car Brand</FormLabel>
            <Input type="text" name="carBrand" value={formData.carBrand} onChange={handleChange} />
          </FormControl>
          <FormControl id="vehicleModel" isRequired>
            <FormLabel>Vehicle Model</FormLabel>
            <Input type="text" name="vehicleModel" value={formData.vehicleModel} onChange={handleChange} />
          </FormControl>
          <FormControl id="vehicleSize" isRequired>
            <FormLabel>Vehicle Size</FormLabel>
            <Select name="vehicleSize" value={formData.vehicleSize} onChange={handleChange}>
              <option value="">Select Vehicle Size</option>
              <option value="Small">Small</option>
              <option value="Medium">Medium</option>
              <option value="Large">Large</option>
            </Select>
          </FormControl>
          <FormControl id="additionalInfo">
            <FormLabel>Additional Information</FormLabel>
            <Textarea name="additionalInfo" value={formData.additionalInfo} onChange={handleChange} />
          </FormControl>
          <FormControl id="pickupDate" isRequired>
            <FormLabel>Pickup Date</FormLabel>
            <Input type="date" name="pickupDate" value={formData.pickupDate} onChange={handleChange} />
          </FormControl>
          <FormControl id="pickupTime" isRequired>
            <FormLabel>Pickup Time</FormLabel>
            <Input type="time" name="pickupTime" value={formData.pickupTime} onChange={handleChange} />
          </FormControl>
          <FormControl id="streetLevel" isRequired>
            <FormLabel>Is the vehicle at street level?</FormLabel>
            <Select name="streetLevel" value={formData.streetLevel} onChange={handleChange}>
              <option value="">Select</option>
              <option value="Yes">Yes</option>
              <option value="No">No</option>
            </Select>
          </FormControl>
          <FormControl id="neutralPossible" isRequired>
            <FormLabel>Is it possible to put neutral?</FormLabel>
            <Select name="neutralPossible" value={formData.neutralPossible} onChange={handleChange}>
              <option value="">Select</option>
              <option value="Yes">Yes</option>
              <option value="No">No</option>
            </Select>
          </FormControl>
          <FormControl id="adaptations" isRequired>
            <FormLabel>Does the vehicle have adaptations that increase its length or width?</FormLabel>
            <Select name="adaptations" value={formData.adaptations} onChange={handleChange}>
              <option value="">Select</option>
              <option value="Yes">Yes</option>
              <option value="No">No</option>
            </Select>
          </FormControl>
          <FormControl id="passengers" isRequired>
            <FormLabel>Number of passengers</FormLabel>
            <Input type="number" name="passengers" value={formData.passengers} onChange={handleChange} />
          </FormControl>
          <FormControl id="terms" isRequired>
            <Checkbox onChange={() => setIsTermsOpen(true)}>I accept terms and conditions</Checkbox>
          </FormControl>
          <Button colorScheme="blue" type="submit">Book Now</Button>
        </form>
        <LoadScript
          googleMapsApiKey={process.env.REACT_APP_GOOGLE_MAPS_API_KEY}
          onLoad={() => setIsMapLoaded(true)}
          onError={() => {
            toast({
              title: 'Error',
              description: 'Failed to load Google Maps API. Please check your API key and internet connection.',
              status: 'error',
              duration: 5000,
              isClosable: true,
            });
          }}
        >
          {isMapLoaded ? (
            <GoogleMap
              center={formData.origin}
              zoom={10}
              mapContainerStyle={{ height: '400px', width: '100%' }}
              onClick={handleMapClick}
              onLoad={(map) => (mapRef.current = map)}
              options={{
                zoomControl: true,
                zoomControlOptions: {
                  position: window.google.maps.ControlPosition.RIGHT_CENTER,
                },
                streetViewControl: false,
                mapTypeControl: false,
                fullscreenControl: false,
              }}
            >
              {formData.pickupLocation && (
                <Marker
                  position={formData.pickupLocation}
                  draggable={true}
                  onDragEnd={(e) => setFormData({ ...formData, pickupLocation: { lat: e.latLng.lat(), lng: e.latLng.lng() } })}
                />
              )}
              {formData.destinationLocation && (
                <Marker
                  position={formData.destinationLocation}
                  draggable={true}
                  onDragEnd={(e) => setFormData({ ...formData, destinationLocation: { lat: e.latLng.lat(), lng: e.latLng.lng() } })}
                />
              )}
              {calculateRoute()}
              {directions && <DirectionsRenderer directions={directions} onError={(error) => {
                console.error('Error rendering directions:', error);
                toast({
                  title: 'Error',
                  description: 'There was a problem rendering the directions. Please try again later.',
                  status: 'error',
                  duration: 5000,
                  isClosable: true,
                });
              }} />}
            </GoogleMap>
          ) : (
            <Text>Loading map...</Text>
          )}
        </LoadScript>
        <Button onClick={handleReset} mt={4}>Reset</Button>
        <Button onClick={centerPickupMarker} mt={4} ml={4} colorScheme="blue">Center User</Button>
      </VStack>
      <Modal isOpen={isTermsOpen} onClose={() => setIsTermsOpen(false)}>
        <ModalOverlay />
        <ModalContent>
          <ModalHeader>Terms and Conditions</ModalHeader>
          <ModalCloseButton />
          <ModalBody>
            <Text>The services may have a higher cost which must be paid when arriving at the destination, otherwise the vehicle will not leave the platform and will be taken to the corralon.</Text>
            <Text>Remember that only two passengers can go in the tow truck, if you require a taxi we can provide it.</Text>
          </ModalBody>
        </ModalContent>
      </Modal>
    </Box>
  );
};

export default BookingForm;


// C:\grua-booking-system-25\client\src\pages\Confirmation.jsx
import { Box, Text, VStack } from '@chakra-ui/react';
import { useLocation } from 'react-router-dom';

const Confirmation = () => {
  const location = useLocation();
  const { formData } = location.state || {};

  return (
    <Box p={4}>
      <VStack spacing={4} align="stretch">
        <Text fontSize="2xl">Booking Confirmation</Text>
        {formData ? (
          <>
            <Text>Service Type: {formData.serviceType}</Text>
            <Text>User Name: {formData.userName}</Text>
            <Text>Phone Number: {formData.phoneNumber}</Text>
            <Text>Vehicle Make: {formData.vehicleMake}</Text>
            <Text>Vehicle Model: {formData.vehicleModel}</Text>
            <Text>Vehicle Size: {formData.vehicleSize}</Text>
            <Text>Additional Information: {formData.additionalInfo}</Text>
            <Text>Pickup Date: {formData.pickupDate}</Text>
            <Text>Pickup Time: {formData.pickupTime}</Text>
          </>
        ) : (
          <Text>No booking details available.</Text>
        )}
      </VStack>
    </Box>
  );
};

export default Confirmation;


// C:\grua-booking-system-25\client\src\pages\Contact.jsx
import { Box, Text, Heading, VStack, FormControl, FormLabel, Input, Textarea, Button } from '@chakra-ui/react';

const Contact = () => (
  <Box p={4}>
    <Heading mb={4} textAlign="center">Contact Us</Heading>
    <VStack spacing={4} align="stretch" maxW="md" mx="auto">
      <FormControl id="name">
        <FormLabel>Name</FormLabel>
        <Input type="text" />
      </FormControl>
      <FormControl id="email">
        <FormLabel>Email</FormLabel>
        <Input type="email" />
      </FormControl>
      <FormControl id="message">
        <FormLabel>Message</FormLabel>
        <Textarea />
      </FormControl>
      <Button colorScheme="blue" type="submit">Send Message</Button>
    </VStack>
  </Box>
);

export default Contact;


// C:\grua-booking-system-25\client\src\pages\Index.jsx
import { Container, Text, VStack, Button } from "@chakra-ui/react";
import { useNavigate } from "react-router-dom";

const Index = () => {
  const navigate = useNavigate();

  const handleBookNow = () => {
    navigate("/booking");
  };

  return (
    <Container centerContent maxW="container.md" height="100vh" display="flex" flexDirection="column" justifyContent="center" alignItems="center">
      <VStack spacing={4}>
        <Text fontSize="2xl">Welcome to Tow Service Booking</Text>
        <Text>Start by selecting a service or navigating through the menu.</Text>
      <Button colorScheme="blue" onClick={handleBookNow}>Book Now</Button>
      </VStack>
    </Container>
  );
};

export default Index;


// C:\grua-booking-system-25\client\src\pages\Payment.jsx
import { Box, Text, VStack, Button, useToast } from '@chakra-ui/react';
import { useLocation, useNavigate } from 'react-router-dom';
import { useState } from 'react';

const Payment = () => {
  const location = useLocation();
  const navigate = useNavigate();
  const toast = useToast();
  const { formData, totalCost, serviceDetails } = location.state || {};
  const [isProcessing, setIsProcessing] = useState(false);

  const handlePayment = async () => {
    setIsProcessing(true);
    try {
      // Simulate payment processing delay
      await new Promise((resolve) => setTimeout(resolve, 2000));
      
      // Simulate successful payment
      const paymentSuccess = true;

      if (paymentSuccess) {
        console.log('Payment processed for:', totalCost);
        navigate('/confirmation', { state: { formData } });
      } else {
        throw new Error('Payment failed');
      }
    } catch (error) {
      toast({
        title: 'Payment Error',
        description: error.message,
        status: 'error',
        duration: 5000,
        isClosable: true,
      });
    } finally {
      setIsProcessing(false);
    }
  };

  return (
    <Box p={4}>
      <VStack spacing={4} align="stretch">
        <Text fontSize="2xl">Payment</Text>
        {formData ? (
          <>
            <Text>Service Type: {formData.serviceType}</Text>
            <Text>User Name: {formData.userName}</Text>
            <Text>Phone Number: {formData.phoneNumber}</Text>
            <Text>Vehicle Make: {formData.vehicleMake}</Text>
            <Text>Vehicle Model: {formData.vehicleModel}</Text>
            <Text>Vehicle Size: {formData.vehicleSize}</Text>
            <Text>Pickup Date: {formData.pickupDate}</Text>
            <Text>Pickup Time: {formData.pickupTime}</Text>
            <Text>Total Cost: ${totalCost}</Text>
            <Text>Distance: {serviceDetails.distance} km</Text>
            <Text>Pickup Location: {JSON.stringify(serviceDetails.pickupLocation)}</Text>
            <Text>Destination Location: {JSON.stringify(serviceDetails.destinationLocation)}</Text>
            <Button 
              colorScheme="blue" 
              onClick={handlePayment} 
              isLoading={isProcessing}
            >
              Pay Now
            </Button>
          </>
        ) : (
          <Text>No payment details available.</Text>
        )}
      </VStack>
    </Box>
  );
};

export default Payment;


// C:\grua-booking-system-25\client\src\sse\sse.controller.ts
import { Controller, Sse, MessageEvent } from '@nestjs/common';
import { Observable } from 'rxjs';
import { EventEmitter2 } from '@nestjs/event-emitter';
import { TowingRequestApplicationEvent } from '../towingRequest/application/towingRequest.application.event';

@Controller('sse')
export class SseController {
  constructor(private eventEmitter: EventEmitter2) {}

  @Sse('events')
  sendEvents(): Observable<MessageEvent> {
    return new Observable((observer) => {
      const onTowingRequestCreated = (payload) => {
        observer.next({ data: payload });
      };

      this.eventEmitter.on(TowingRequestApplicationEvent.TowingRequestCreated.key, onTowingRequestCreated);

      return () => {
        this.eventEmitter.off(TowingRequestApplicationEvent.TowingRequestCreated.key, onTowingRequestCreated);
      };
    });
  }
}


// C:\grua-booking-system-25\client\src\sse\sse.module.ts
import { Module } from '@nestjs/common';
import { SseController } from './sse.controller';
import { EventEmitterModule } from '@nestjs/event-emitter';

@Module({
  imports: [EventEmitterModule.forRoot()],
  controllers: [SseController],
})
export class SseModule {}


// C:\grua-booking-system-25\client\src\towingRequest\application\towingRequest.application.event.ts


// C:\grua-booking-system-25\client\src\towingRequest\towingRequest.domain.facade.ts
import { Injectable } from '@nestjs/common';
import { TowingRequest } from './towingRequest.entity';

@Injectable()
export class TowingRequestDomainFacade {
  private towingRequests: TowingRequest[] = [];

  public findMany(): TowingRequest[] {
    return this.towingRequests;
  }

  public create(createDto: TowingRequest): TowingRequest {
    const newRequest = { ...createDto, id: Date.now().toString() };
    this.towingRequests.push(newRequest);
    return newRequest;
  }

  public findOne(id: string): TowingRequest | undefined {
    return this.towingRequests.find(request => request.id === id);
  }

  public update(id: string, updateDto: Partial<TowingRequest>): TowingRequest | undefined {
    const requestIndex = this.towingRequests.findIndex(request => request.id === id);
    if (requestIndex > -1) {
      this.towingRequests[requestIndex] = { ...this.towingRequests[requestIndex], ...updateDto };
      return this.towingRequests[requestIndex];
    }
    return undefined;
  }

  public delete(id: string): boolean {
    const requestIndex = this.towingRequests.findIndex(request => request.id === id);
    if (requestIndex > -1) {
      this.towingRequests.splice(requestIndex, 1);
      return true;
    }
    return false;
  }

  public findByUser(userId: string): TowingRequest[] {
    return this.towingRequests.filter(request => request.userId === userId);
  }
}


// C:\grua-booking-system-25\client\src\towingRequest\towingRequest.domain.module.ts
import { Module } from '@nestjs/common';
import { TowingRequestDomainFacade } from './towingRequest.domain.facade';

@Module({
  providers: [TowingRequestDomainFacade],
  exports: [TowingRequestDomainFacade],
})
export class TowingRequestDomainModule {}


// C:\grua-booking-system-25\client\src\towingRequest\towingRequest.entity.ts
export class TowingRequest {
  id: string;
  userId: string;
  pickupLocation: string;
  destinationLocation: string;
  additionalInfo?: string;
}


// C:\grua-booking-system-25\client\src\towingRequest\application\towingRequest.application.event.ts
export namespace TowingRequestApplicationEvent {
  export class TowingRequestCreated {
    static readonly key = 'towingRequest.created';
    constructor(public readonly id: string, public readonly userId: string) {}
  }
}


// C:\grua-booking-system-25\client\src\towingRequest\application\towingRequest.application.module.ts
import { Module } from '@nestjs/common';
import { AuthenticationDomainModule } from '../authentication/authentication.domain.module';
import { TowingRequestDomainModule } from '../towing-request/towingRequest.domain.module';
import { UserDomainModule } from '../user/user.domain.module';
import { TowingRequestController } from './towingRequest.controller';
import { TowingRequestByUserController } from './towingRequestByUser.controller';
import { EventService } from '../event/event.service';
import { TowingRequestDomainFacade } from '../towingRequest/towingRequest.domain.facade';
import { AuthenticationDomainFacade } from '../authentication/authentication.domain.facade';
import { NewService } from '../new/new.service';

@Module({
  imports: [
    AuthenticationDomainModule,
    TowingRequestDomainModule,
    UserDomainModule,
  ],
  controllers: [TowingRequestController, TowingRequestByUserController],
  providers: [
    EventService,
    TowingRequestDomainFacade,
    {
      provide: 'AuthenticationDomainFacade',
      useClass: AuthenticationDomainFacade,
    },
    NewService,
  ],
})
export class TowingRequestApplicationModule {}


// C:\grua-booking-system-25\client\src\towingRequest\application\towingRequest.controller.ts
import { Controller, Get, Post, Patch, Delete, Body, Param } from '@nestjs/common';
import { EventService } from '../event/event.service';
import { TowingRequestDomainFacade } from '../towingRequest/towingRequest.domain.facade';
import { AuthenticationDomainFacade } from '../authentication/authentication.domain.facade';
import { TowingRequestCreateDto, TowingRequestUpdateDto } from './towingRequest.dto';
import { TowingRequestApplicationEvent } from './towingRequest.application.event;

@Controller('/v1/towingRequests')
export class TowingRequestController {
  constructor(
    private readonly eventService: EventService,
    private readonly towingRequestDomainFacade: TowingRequestDomainFacade,
    private readonly authenticationDomainFacade: AuthenticationDomainFacade,
  ) {}

  @Get()
  async findMany() {
    return this.towingRequestDomainFacade.findMany();
  }

  @Post()
  async create(@Body() createDto: TowingRequestCreateDto) {
    const towingRequest = await this.towingRequestDomainFacade.create(createDto);
    this.eventService.emit(new TowingRequestApplicationEvent.TowingRequestCreated(towingRequest.id, towingRequest.userId));
    return towingRequest;
  }

  @Get(':id')
  async findOne(@Param('id') id: string) {
    return this.towingRequestDomainFacade.findOne(id);
  }

  @Patch(':id')
  async update(@Param('id') id: string, @Body() updateDto: TowingRequestUpdateDto) {
    return this.towingRequestDomainFacade.update(id, updateDto);
  }

  @Delete(':id')
  async delete(@Param('id') id: string) {
    return this.towingRequestDomainFacade.delete(id);
  }
}


// C:\grua-booking-system-25\client\src\towingRequest\application\towingRequest.dto.ts
import { IsString, IsNotEmpty, IsOptional } from 'class-validator';

export class TowingRequestCreateDto {
  @IsString()
  @IsNotEmpty()
  pickupLocation: string;

  @IsString()
  @IsNotEmpty()
  destinationLocation: string;

  @IsString()
  @IsOptional()
  additionalInfo?: string;
}

export class TowingRequestUpdateDto {
  @IsString()
  @IsOptional()
  pickupLocation?: string;

  @IsString()
  @IsOptional()
  destinationLocation?: string;

  @IsString()
  @IsOptional()
  additionalInfo?: string;
}


// C:\grua-booking-system-25\client\src\towingRequest\application\towingRequestByUser.controller.ts
import { Controller, Get, Param } from '@nestjs/common';
import { TowingRequestDomainFacade } from '../towingRequest/towingRequest.domain.facade';

@Controller('/v1/users/:userId/towingRequests')
export class TowingRequestByUserController {
  constructor(private readonly towingRequestDomainFacade: TowingRequestDomainFacade) {}

  @Get()
  async findByUser(@Param('userId') userId: string) {
    return this.towingRequestDomainFacade.findByUser(userId);
  }
}


// C:\grua-booking-system-25\client\src\user\user.domain.module.ts
import { Module } from '@nestjs/common';

@Module({})
export class UserDomainModule {}


// C:\grua-booking-system-25\client\tsconfig.json
{ 
  "compilerOptions": {
    "module": "commonjs",
    "declaration": true,
    "removeComments": true,
    "allowSyntheticDefaultImports": true,
    "target": "es2017",
    "sourceMap": true,
    "outDir": "./dist",
    "baseUrl": "./client",
    "paths": {
      "@server/*": ["../server/*"],
      "@client/*": ["./client/*"]
    }
  },
  "include": ["src/**/*"],
  "exclude": ["node_modules", "dist"]
}


// C:\grua-booking-system-25\client\src\authentication\auth.controller.ts
import { Controller, Post, Body } from '@nestjs/common';
import { AuthenticationDomainFacade } from './authentication.domain.facade';

@Controller('auth')
export class AuthController {
  constructor(private readonly authFacade: AuthenticationDomainFacade) {}

  @Post('register')
  register(@Body() body: { username: string, password: string }) {
    this.authFacade.register(body.username, body.password);
    return { message: 'User registered successfully' };
  }

  @Post('login')
  login(@Body() body: { username: string, password: string }) {
    const authenticated = this.authFacade.authenticate(body.username, body.password);
    if (authenticated) {
      return { message: 'Login successful' };
    } else {
      return { message: 'Invalid credentials' };
    }
  }

  @Post('change-password')
  changePassword(@Body() body: { username: string, newPassword: string }) {
    this.authFacade.changePassword(body.username, body.newPassword);
    return { message: 'Password changed successfully' };
  }
}


// C:\grua-booking-system-25\client\src\authentication\authentication.domain.facade.ts
import { Injectable } from '@nestjs/common';

@Injectable()
export class AuthenticationDomainFacade {
  private users = new Map<string, string>();

  register(username: string, password: string): void {
    if (this.users.has(username)) {
      throw new Error('User already exists');
    }
    this.users.set(username, password);
  }

  authenticate(username: string, password: string): boolean {
    return this.users.get(username) === password;
  }

  changePassword(username: string, newPassword: string): void {
    if (this.users.has(username)) {
      this.users.set(username, newPassword);
    } else {
      throw new Error('User not found');
    }
  }
}


// C:\grua-booking-system-25\client\src\authentication\authentication.domain.module.ts
import { Module } from '@nestjs/common';
import { AuthenticationDomainFacade } from './authentication.domain.facade';

@Module({
  providers: [AuthenticationDomainFacade],
  exports: [AuthenticationDomainFacade],
})
export class AuthenticationDomainModule {}


// C:\grua-booking-system-25\client\src\authentication\authMiddleware.js
const jwt = require('jsonwebtoken');

const authMiddleware = (req, res, next) => {
  const token = req.headers['x-access-token'] || req.headers['authorization'];

  if (!token) {
    return res.status(401).json({ error: 'Unauthorized' });
  }

  jwt.verify(token, process.env.SECRET_KEY, (err, decoded) => {
    if (err) {
      return res.status(401).json({ error: 'Invalid token' });
    }

    req.user = decoded;
    next();
  });
};

module.exports = authMiddleware;


// C:\grua-booking-system-25\client\src\components\booking-status.enum.ts
export enum BookingStatus {
  PENDING = 'PENDING',
  CONFIRMED = 'CONFIRMED',
  CANCELLED = 'CANCELLED',
  COMPLETED = 'COMPLETED',
  NO_SHOW = 'NO_SHOW'
}


// C:\grua-booking-system-25\client\src\components\booking.entity.ts
import { Entity, PrimaryGeneratedColumn, Column, ManyToOne } from 'typeorm';
import { User } from './user.entity.ts';
import { Room } from './room.entity.ts/index.js';

@Entity()
export class Booking {
  @PrimaryGeneratedColumn()
  id: number;

  @Column({ type: 'datetime' })
  startTime: Date;

  @Column({ type: 'datetime' })
  endTime: Date;

  @ManyToOne(() => User, user => user.bookings)
  user: User;

  @ManyToOne(() => Room, room => room.bookings)
  room: Room;

  @Column({ default: false })
  isCancelled: boolean;

  @Column({ type: 'datetime', default: () => 'CURRENT_TIMESTAMP' })
  createdAt: Date;

  @Column({ type: 'datetime', default: () => 'CURRENT_TIMESTAMP', onUpdate: 'CURRENT_TIMESTAMP' })
  updatedAt: Date;
}


// C:\grua-booking-system-25\client\src\components\booking.repository.ts
import axios from 'axios';

const API_BASE_URL = 'http://localhost:3000/api';

export const BookingRepository = {
  createBooking: async (bookingData) => {
    try {
      const response = await axios.post(`${API_BASE_URL}/bookings`, bookingData);
      return response.data;
    } catch (error) {
      console.error('Error creating booking:', error);
      throw error;
    }
  },

  getBookings: async () => {
    try {
      const response = await axios.get(`${API_BASE_URL}/bookings`);
      return response.data;
    } catch (error) {
      console.error('Error fetching bookings:', error);
      throw error;
    }
  },

  getBookingById: async (id) => {
    try {
      const response = await axios.get(`${API_BASE_URL}/bookings/${id}`);
      return response.data;
    } catch (error) {
      console.error(`Error fetching booking with id ${id}:`, error);
      throw error;
    }
  },

  updateBooking: async (id, bookingData) => {
    try {
      const response = await axios.put(`${API_BASE_URL}/bookings/${id}`, bookingData);
      return response.data;
    } catch (error) {
      console.error(`Error updating booking with id ${id}:`, error);
      throw error;
    }
  },

  deleteBooking: async (id) => {
    try {
      const response = await axios.delete(`${API_BASE_URL}/bookings/${id}`);
      return response.data;
    } catch (error) {
      console.error(`Error deleting booking with id ${id}:`, error);
      throw error;
    }
  }
};


// C:\grua-booking-system-25\client\src\components\bookings.controller.ts
import { Controller, Post, Body, Get, Param, Patch } from '@nestjs/common';
import { BookingsService } from './bookings.service';

@Controller('bookings')
export class BookingsController {
  constructor(private readonly bookingsService: BookingsService) {}

  @Post()
  createBooking(@Body() body: { user: string, details: any }) {
    this.bookingsService.createBooking(body.user, body.details);
    return { message: 'Booking created successfully' };
  }

  @Get(':user')
  getUserBookings(@Param('user') user: string) {
    return this.bookingsService.getUserBookings(user);
  }

  @Patch(':id/status')
  updateBookingStatus(@Param('id') id: number, @Body() body: { status: string }) {
    this.bookingsService.updateBookingStatus(id, body.status);
    return { message: 'Booking status updated successfully' };
  }
}


// C:\grua-booking-system-25\client\src\components\bookings.module.ts
import { Module } from '@nestjs/common';
import { BookingsService } from './bookings.service';
import { BookingsController } from './bookings.controller';

@Module({
  providers: [BookingsService],
  controllers: [BookingsController],
})
export class BookingsModule {}


// C:\grua-booking-system-25\client\src\components\bookings.service.ts
// src/components/bookings.service.ts
import { Injectable, NotFoundException } from '@nestjs/common';
import { EventService } from '../event/event.service';
import { BookingRepository } from './booking.repository.ts'; // Asegúrate de que esta ruta es correcta
import { BookingStatus } from './booking-status.enum.ts'; // Enum para los estados de la reserva

@Injectable()
export class BookingsService {
  constructor(
    private eventService: EventService,
    private bookingRepository: BookingRepository,
  ) {}

  async updateBookingStatus(bookingId: string, status: BookingStatus): Promise<void> {
    // Encuentra la reserva por su ID
    const booking = await this.bookingRepository.findOne(bookingId);
    if (!booking) {
      throw new NotFoundException(`Booking with ID ${bookingId} not found`);
    }

    // Actualiza el estado de la reserva
    booking.status = status;

    // Guarda la reserva actualizada en el repositorio
    await this.bookingRepository.save(booking);

    // Emite un evento después de actualizar el estado
    this.eventService.emitEvent({ bookingId, status });
  }
}

// src/components/booking-status.enum.ts
export enum BookingStatus {
  PENDING = 'PENDING',
  CONFIRMED = 'CONFIRMED',
  COMPLETED = 'COMPLETED',
  CANCELLED = 'CANCELLED',
}

// src/components/booking.repository.ts
import { EntityRepository, Repository } from 'typeorm';
import { Booking } from './booking.entity.ts'; // Asegúrate de que esta ruta es correcta

@EntityRepository(Booking)
export class BookingRepository extends Repository<Booking> {}

// src/components/booking.entity.ts
import { Entity, Column, PrimaryGeneratedColumn } from 'typeorm';
import { BookingStatus } from './booking-status.enum.ts';

@Entity()
export class Booking {
  @PrimaryGeneratedColumn('uuid')
  id: string;

  @Column()
  customerName: string;

  @Column()
  serviceType: string;

  @Column()
  status: BookingStatus;
}


// C:\grua-booking-system-25\client\src\components\BookingStatus.jsx
// src/components/BookingStatus.jsx
import React, { useEffect, useState } from 'react';

const BookingStatus = () => {
  const [status, setStatus] = useState('Pending');

  useEffect(() => {
    const eventSource = new EventSource('http://localhost:3000/events/sse');

    eventSource.onmessage = (event) => {
      const newData = JSON.parse(event.data);
      setStatus(newData.status);
    };

    return () => {
      eventSource.close();
    };
  }, []);

  return (
    <div>
      <h1>Booking Status: {status}</h1>
    </div>
  );
};

export default BookingStatus;


// C:\grua-booking-system-25\client\src\components\conversation.entity.ts
import { Entity, Column, PrimaryGeneratedColumn, ManyToOne, OneToMany } from 'typeorm';
import { User } from './user.entity';
import { Message } from './message.entity';

@Entity()
export class Conversation {
  @PrimaryGeneratedColumn('uuid')
  id: string;

  @Column({ type: 'timestamp', default: () => 'CURRENT_TIMESTAMP' })
  createdAt: Date;

  @Column({ type: 'timestamp', default: () => 'CURRENT_TIMESTAMP', onUpdate: 'CURRENT_TIMESTAMP' })
  updatedAt: Date;

  @ManyToOne(() => User, user => user.conversations)
  user: User;

  @OneToMany(() => Message, message => message.conversation)
  messages: Message[];

  @Column({ nullable: true })
  title: string;

  @Column({ default: false })
  isArchived: boolean;
}


// C:\grua-booking-system-25\client\src\components\GoogleMapsRoute.jsx
import React, { useState, useEffect } from 'react';
import { Box, Button, FormControl, FormLabel, Heading, Input, Text } from '@chakra-ui/react';
import { GoogleMap, LoadScript, Marker, DirectionsService, DirectionsRenderer } from '@react-google-maps/api';
import PropTypes from 'prop-types';

const GoogleMapsRoute = ({ setDistance }) => {
  const [pickup, setPickup] = useState(null);
  const [destination, setDestination] = useState(null);
  const [error, setError] = useState(null);
  const [totalPrice, setTotalPrice] = useState(0);
  const [directions, setDirections] = useState(null);
  const [map, setMap] = useState(null);
  const [tollCost, setTollCost] = useState(0);
  const origin = { lng: -100.0095504, lat: 26.509672 }; // Updated starting point
  const pricePerKm = 19;

  useEffect(() => {
    if (navigator.geolocation) {
      navigator.geolocation.getCurrentPosition(
        (position) => {
          const userLocation = {
            lat: position.coords.latitude,
            lng: position.coords.longitude,
          };
          setPickup(userLocation);
          if (map) {
            map.panTo(userLocation);
          }
        },
        (error) => {
          console.error('Error getting user location:', error);
          setError('Error getting user location: ' + error.message);
        }
      );
    } else {
      console.error('Geolocation is not supported by this browser.');
      setError('Geolocation is not supported by this browser.');
    }
  }, [map]);

  const calculateRoute = () => {
    setError(null);
    if (!pickup || !destination) {
      setError('Please fill in all required fields.');
      return;
    }

    const directionsService = new window.google.maps.DirectionsService();
    directionsService.route(
      {
        origin: pickup,
        destination: destination,
        travelMode: window.google.maps.TravelMode.DRIVING,
        waypoints: [{ location: pickup, stopover: true }],
      },
      (result, status) => {
        if (status === window.google.maps.DirectionsStatus.OK) {
          setDirections(result);
          const distanceToDestination = result.routes[0].legs[0].distance.value / 1000; // Distance in kilometers
          setDistance(distanceToDestination);
          const price = calculatePrice(distanceToDestination);
          setTotalPrice(price);
          fetchTollData(pickup, destination);
        } else if (status === window.google.maps.DirectionsStatus.REQUEST_DENIED) {
          setError('Request denied. Please check your API key and permissions.');
          console.error('Request denied:', status, result);
        } else {
          setError('Error calculating the route: ' + status);
          console.error('Error calculating the route:', status, result);
        }
      }
    );
  };

  const calculatePrice = (distance) => {
    return distance * pricePerKm + 558 + tollCost; // Tarifa base de $558 más $19 por kilómetro más el costo de las casetas
  };

  const fetchTollData = async (origin, destination) => {
    try {
      const response = await fetch(`https://api.tollguru.com/v1/calc/route?source=${origin.lat},${origin.lng}&destination=${destination.lat},${destination.lng}`, {
        headers: {
          'x-api-key': process.env.REACT_APP_TOLLGURU_API_KEY,
        },
      });
      const data = await response.json();
      const tolls = data.tollCosts || 0;
      setTollCost(tolls);
    } catch (error) {
      console.error('Error fetching toll data:', error);
      setError('Error fetching toll data: ' + error.message);
    }
  };

  return (
    <Box>
      <Heading as="h1" mb={4}>Selecciona recogida y destino</Heading>
      {error && <Text color="red.500">Error: {error}</Text>}
      <FormControl mb={4}>
        <FormLabel htmlFor="pickup">Punto de recogida:</FormLabel>
        <Input type="text" id="pickup" value={pickup ? `${pickup.lat}, ${pickup.lng}` : ''} readOnly />
      </FormControl>
      <FormControl mb={4}>
        <FormLabel htmlFor="destination">Destino:</FormLabel>
        <Input type="text" id="destination" value={destination ? `${destination.lat}, ${destination.lng}` : ''} readOnly />
      </FormControl>
      <Button onClick={calculateRoute} colorScheme="blue" disabled={!pickup || !destination}>Calcular Ruta</Button>
      <Text mt={4} fontSize="xl">Precio total: ${totalPrice.toFixed(2)}</Text>
      <LoadScript googleMapsApiKey={process.env.REACT_APP_GOOGLE_MAPS_API_KEY} libraries={['places', 'geometry']}>
        <GoogleMap
          center={{ lat: origin.lat, lng: origin.lng }}
          zoom={7}
          maxZoom={20} // Allow more zoom
          mapContainerStyle={{ height: '400px', width: '100%', marginTop: '20px' }}
          onLoad={(map) => setMap(map)}
          onClick={(event) => {
            try {
              if (!pickup) {
                setPickup(event.latLng.toJSON());
              } else if (!destination) {
                setDestination(event.latLng.toJSON());
              }
            } catch (err) {
              setError('Error setting location: ' + err.message);
              console.error('Error setting location:', err);
            }
          }}
        >
          {pickup && <Marker position={pickup} draggable={true} onDragEnd={(e) => setPickup(e.latLng.toJSON())} />}
          {destination && <Marker position={destination} draggable={true} onDragEnd={(e) => setDestination(e.latLng.toJSON())} />}
          {pickup && destination && (
            <DirectionsService
              options={{
                origin: pickup,
                destination: destination,
                travelMode: window.google.maps.TravelMode.DRIVING,
                waypoints: [{ location: pickup, stopover: true }],
              }}
              callback={(response, status) => {
                if (status === window.google.maps.DirectionsStatus.OK) {
                  setDirections(response);
                } else {
                  setError('Error fetching directions: ' + status);
                  console.error('Error fetching directions:', status, response);
                }
              }}
            />
          )}
          {directions && (
            <DirectionsRenderer
              options={{
                directions: directions,
              }}
            />
          )}
        </GoogleMap>
      </LoadScript>
    </Box>
  );
};

GoogleMapsRoute.propTypes = {
  setDistance: PropTypes.func.isRequired,
};

export default GoogleMapsRoute;


// C:\grua-booking-system-25\client\src\components\InstructionsSidebar.jsx
import { Box, Button, Heading, Input, List, ListIcon, ListItem } from "@chakra-ui/react";
import React, { useState } from "react";
import { FaRegLightbulb } from "react-icons/fa";

const InstructionsSidebar = () => {
  const [contactInput, setContactInput] = useState('');

  const handleInputChange = (event) => {
    setContactInput(event.target.value);
  };

  const handleSubmit = (event) => {
    event.preventDefault();
    // Handle form submission here
  };

  return (
    <Box p={5} border="1px" borderColor="gray.200" borderRadius="md" bg="gray.50">
      <Heading size="md" mb={3}>
        How to Book a Service
      </Heading>
      <List spacing={3}>
        <ListItem>
          <ListIcon as={FaRegLightbulb} color="green.500" />
          Select the type of service you need.
        </ListItem>
        <ListItem>
          <ListIcon as={FaRegLightbulb} color="green.500" />
          Enter your current location and destination.
        </ListItem>
        <ListItem>
          <ListIcon as={FaRegLightbulb} color="green.500" />
          Choose a convenient date and time.
        </ListItem>
        <ListItem>
          <ListIcon as={FaRegLightbulb} color="green.500" />
          Enter your contact information <Input value={contactInput} onChange={handleInputChange} />
        </ListItem>
        <ListItem>
          <ListIcon as={FaRegLightbulb} color="green.500" />
          Confirm your booking and get instant assistance.
        </ListItem>
      </List>
      <Button mt={4} onClick={handleSubmit}>Next Step</Button>
    </Box>
  );
};

export default InstructionsSidebar;


// C:\grua-booking-system-25\client\src\components\message.entity.ts
import { Entity, Column, PrimaryGeneratedColumn, ManyToOne } from 'typeorm';
import { User } from './user.entity';
import { Conversation } from './conversation.entity.ts';

@Entity()
export class Message {
  @PrimaryGeneratedColumn()
  id: number;

  @Column('text')
  content: string;

  @Column({ type: 'timestamp', default: () => 'CURRENT_TIMESTAMP' })
  timestamp: Date;

  @ManyToOne(() => User, user => user.messages)
  sender: User;

  @ManyToOne(() => Conversation, conversation => conversation.messages)
  conversation: Conversation;

  @Column({ default: false })
  isRead: boolean;
}


// C:\grua-booking-system-25\client\src\components\Navbar.jsx
import { Box, Flex, Link, Spacer, Text } from "@chakra-ui/react";
import { Link as RouterLink } from "react-router-dom";

const Navbar = () => {
  return (
    <Box bg="blue.500" p={4} color="white">
      <Flex maxW="1200px" mx="auto" align="center">
        <Text fontSize="xl" fontWeight="bold">Tow Service</Text>
        <Spacer />
        <Flex>
          <Link as={RouterLink} to="/" p={2} mx={2} _hover={{ textDecoration: "none", bg: "blue.600" }}>Home</Link>
          <Link as={RouterLink} to="/about" p={2} mx={2} _hover={{ textDecoration: "none", bg: "blue.600" }}>About</Link>
          <Link as={RouterLink} to="/contact" p={2} mx={2} _hover={{ textDecoration: "none", bg: "blue.600" }}>Contact</Link>
          <Link as={RouterLink} to="/booking" p={2} mx={2} _hover={{ textDecoration: "none", bg: "blue.600" }}>Book Now</Link>
        </Flex>
      </Flex>
    </Box>
  );
};

export default Navbar;


// C:\grua-booking-system-25\client\src\components\room.entity.ts
import { Entity, Column, PrimaryGeneratedColumn, ManyToOne, OneToMany } from 'typeorm'
import { User } from './user.entity'
import { Message } from './message.entity.ts'

@Entity()
export class Room {
  @PrimaryGeneratedColumn()
  id: number

  @Column()
  name: string

  @Column({ nullable: true })
  description: string

  @Column({ default: false })
  isPrivate: boolean

  @ManyToOne(() => User, user => user.createdRooms)
  creator: User

  @OneToMany(() => Message, message => message.room)
  messages: Message[]

  @Column({ type: 'timestamp', default: () => 'CURRENT_TIMESTAMP' })
  createdAt: Date

  @Column({ type: 'timestamp', default: () => 'CURRENT_TIMESTAMP', onUpdate: 'CURRENT_TIMESTAMP' })
  updatedAt: Date
}


// C:\grua-booking-system-25\client\src\components\user.entity.ts
import { Entity, PrimaryGeneratedColumn, Column } from 'typeorm'

@Entity()
export class User {
  @PrimaryGeneratedColumn()
  id: number

  @Column()
  firstName: string

  @Column()
  lastName: string

  @Column({ unique: true })
  email: string

  @Column()
  password: string

  @Column({ default: false })
  isAdmin: boolean

  @Column({ type: 'timestamp', default: () => 'CURRENT_TIMESTAMP' })
  createdAt: Date

  @Column({ type: 'timestamp', default: () => 'CURRENT_TIMESTAMP', onUpdate: 'CURRENT_TIMESTAMP' })
  updatedAt: Date
}


// C:\grua-booking-system-25\client\src\components\UserLocationMarker.jsx
import { useEffect } from 'react';

const UserLocationMarker = ({ map, setPickupLocation }) => {
  useEffect(() => {
    if (navigator.geolocation) {
      navigator.geolocation.getCurrentPosition(
        (position) => {
          const userLocation = {
            lat: position.coords.latitude,
            lng: position.coords.longitude,
          };
          setPickupLocation(userLocation);
          if (map) {
            map.panTo(userLocation);
          }
        },
        (error) => {
          console.error('Error getting user location:', error);
        }
      );
    } else {
      console.error('Geolocation is not supported by this browser.');
    }
  }, [map, setPickupLocation]);

  return null;
};

export default UserLocationMarker;


// C:\grua-booking-system-25\client\src\event\app.module.ts
import { Module } from '@nestjs/common';
import { EventsModule } from './events.module';
import { BookingsModule } from '../components/bookings.module';

@Module({
  imports: [EventsModule, BookingsModule],
})
export class AppModule {}


// C:\grua-booking-system-25\client\src\event\event.controller.ts
import { Controller, Get, Sse } from '@nestjs/common';
import { interval, map } from 'rxjs';
import { EventService } from './event.service';

@Controller('events')
export class EventController {
  constructor(private readonly eventService: EventService) {}

  @Sse('stream')
  streamEvents() {
    return this.eventService.getEvents();
  }
}


// C:\grua-booking-system-25\client\src\event\event.service.ts
import { Injectable } from '@nestjs/common';
import { interval, map } from 'rxjs';

@Injectable()
export class EventService {
  private events = [];

  emitEvent(event: any) {
    this.events.push(event);
  }

  getEvents() {
    return interval(1000).pipe(map(() => ({ data: this.events })));
  }
}


// C:\grua-booking-system-25\client\src\event\events.module.ts
import { Module } from '@nestjs/common';
import { EventController } from './event.controller';
import { EventService } from './event.service';

@Module({
  controllers: [EventController],
  providers: [EventService],
  exports: [EventService],
},)
export class EventsModule {}


// C:\grua-booking-system-25\client\src\integrations\supabase\auth.jsx
import React, { useState } from 'react';
import { supabase } from './supabaseClient';

const Auth = () => {
  const [email, setEmail] = useState('');
  const [password, setPassword] = useState('');

  const handleLogin = async (event) => {
    event.preventDefault();
    const { user, error } = await supabase.auth.signIn({ email, password });
    if (error) {
      console.error('Error logging in:', error.message);
    } else {
      console.log('User logged in:', user);
    }
  };

  const handleSignup = async (event) => {
    event.preventDefault();
    const { user, error } = await supabase.auth.signUp({ email, password });
    if (error) {
      console.error('Error signing up:', error.message);
    } else {
      console.log('User signed up:', user);
    }
  };

  return (
    <div>
      <form onSubmit={handleLogin}>
        <input type="email" value={email} onChange={(e) => setEmail(e.target.value)} placeholder="Email" />
        <input type="password" value={password} onChange={(e) => setPassword(e.target.value)} placeholder="Password" />
        <button type="submit">Login</button>
      </form>
      <form onSubmit={handleSignup}>
        <input type="email" value={email} onChange={(e) => setEmail(e.target.value)} placeholder="Email" />
        <input type="password" value={password} onChange={(e) => setPassword(e.target.value)} placeholder="Password" />
        <button type="submit">Sign Up</button>
      </form>
    </div>
  );
};

export default Auth;


// C:\grua-booking-system-25\client\src\integrations\supabase\index.js
import { createClient } from '@supabase/supabase-js';
import { useQuery, useMutation, useQueryClient, QueryClient, QueryClientProvider } from '@tanstack/react-query';

const supabaseUrl = import.meta.env.VITE_SUPABASE_PROJECT_URL;
const supabaseKey = import.meta.env.VITE_SUPABASE_API_KEY;
export const supabase = createClient(supabaseUrl, supabaseKey);

import React from "react";
export const queryClient = new QueryClient();
export function SupabaseProvider({ children }) {
    return React.createElement(QueryClientProvider, { client: queryClient }, children);
}

const fromSupabase = async (query) => {
    const { data, error } = await query;
    if (error) throw new Error(error.message);
    return data;
};

/* supabase integration types

### TOW

| name       | type        | format | required |
|------------|-------------|--------|----------|
| id         | int8        | number | true     |
| created_at | timestamptz | string | true     |

*/

// Example hook for models

export const useFoo = ()=> useQuery({
    queryKey: ['foos'],
    queryFn: fromSupabase(supabase.from('foos')),
})
export const useAddFoo = () => {
    const queryClient = useQueryClient();
    return useMutation({
        mutationFn: (newFoo)=> fromSupabase(supabase.from('foos').insert([{ title: newFoo.title }])),
        onSuccess: ()=> {
            queryClient.invalidateQueries('foos');
        },
    });
};

export const useBar = ()=> useQuery({
    queryKey: ['bars'],
    queryFn: fromSupabase(supabase.from('bars')),
})
export const useAddBar = () => {
    const queryClient = useQueryClient();
    return useMutation({
        mutationFn: (newBar)=> fromSupabase(supabase.from('bars').insert([{ foo_id: newBar.foo_id }])),
        onSuccess: ()=> {
            queryClient.invalidateQueries('bars');
        },
    });
};

export const useTOWs = () => useQuery({
    queryKey: ['TOWs'],
    queryFn: () => fromSupabase(supabase.from('TOW').select('*')),
});

export const useTOW = (id) => useQuery({
    queryKey: ['TOW', id],
    queryFn: () => fromSupabase(supabase.from('TOW').select('*').eq('id', id).single()),
});

export const useAddTOW = () => {
    const queryClient = useQueryClient();
    return useMutation({
        mutationFn: (newTOW) => fromSupabase(supabase.from('TOW').insert([newTOW])),
        onSuccess: () => {
            queryClient.invalidateQueries('TOWs');
        },
    });
};

export const useUpdateTOW = () => {
    const queryClient = useQueryClient();
    return useMutation({
        mutationFn: (updatedTOW) => fromSupabase(supabase.from('TOW').update(updatedTOW).eq('id', updatedTOW.id)),
        onSuccess: () => {
            queryClient.invalidateQueries('TOWs');
            queryClient.invalidateQueries(['TOW', updatedTOW.id]);
        },
    });
};

export const useDeleteTOW = () => {
    const queryClient = useQueryClient();
    return useMutation({
        mutationFn: (id) => fromSupabase(supabase.from('TOW').delete().eq('id', id)),
        onSuccess: () => {
            queryClient.invalidateQueries('TOWs');
        },
    });
};


// C:\grua-booking-system-25\client\src\integrations\supabase\openapi.json
{"swagger":"2.0","info":{"description":"","title":"standard public schema","version":"12.1 (8cbcf98)"},"host":"gjwhxrajesykwmomorhw.supabase.co:443","basePath":"/","schemes":["https"],"consumes":["application/json","application/vnd.pgrst.object+json;nulls=stripped","application/vnd.pgrst.object+json","text/csv"],"produces":["application/json","application/vnd.pgrst.object+json;nulls=stripped","application/vnd.pgrst.object+json","text/csv"],"paths":{"/":{"get":{"produces":["application/openapi+json","application/json"],"responses":{"200":{"description":"OK"}},"summary":"OpenAPI description (this document)","tags":["Introspection"]}},"/TOW":{"get":{"parameters":[{"$ref":"#/parameters/rowFilter.TOW.id"},{"$ref":"#/parameters/rowFilter.TOW.created_at"},{"$ref":"#/parameters/select"},{"$ref":"#/parameters/order"},{"$ref":"#/parameters/range"},{"$ref":"#/parameters/rangeUnit"},{"$ref":"#/parameters/offset"},{"$ref":"#/parameters/limit"},{"$ref":"#/parameters/preferCount"}],"responses":{"200":{"description":"OK","schema":{"items":{"$ref":"#/definitions/TOW"},"type":"array"}},"206":{"description":"Partial Content"}},"summary":"TOW","tags":["TOW"]},"post":{"parameters":[{"$ref":"#/parameters/body.TOW"},{"$ref":"#/parameters/select"},{"$ref":"#/parameters/preferPost"}],"responses":{"201":{"description":"Created"}},"summary":"TOW","tags":["TOW"]},"delete":{"parameters":[{"$ref":"#/parameters/rowFilter.TOW.id"},{"$ref":"#/parameters/rowFilter.TOW.created_at"},{"$ref":"#/parameters/preferReturn"}],"responses":{"204":{"description":"No Content"}},"summary":"TOW","tags":["TOW"]},"patch":{"parameters":[{"$ref":"#/parameters/rowFilter.TOW.id"},{"$ref":"#/parameters/rowFilter.TOW.created_at"},{"$ref":"#/parameters/body.TOW"},{"$ref":"#/parameters/preferReturn"}],"responses":{"204":{"description":"No Content"}},"summary":"TOW","tags":["TOW"]}}},"definitions":{"TOW":{"description":"TOW","required":["id","created_at"],"properties":{"id":{"description":"Note:\nThis is a Primary Key.<pk/>","format":"bigint","type":"integer"},"created_at":{"default":"now()","format":"timestamp with time zone","type":"string"}},"type":"object"}},"parameters":{"preferParams":{"name":"Prefer","description":"Preference","required":false,"enum":["params=single-object"],"in":"header","type":"string"},"preferReturn":{"name":"Prefer","description":"Preference","required":false,"enum":["return=representation","return=minimal","return=none"],"in":"header","type":"string"},"preferCount":{"name":"Prefer","description":"Preference","required":false,"enum":["count=none"],"in":"header","type":"string"},"preferPost":{"name":"Prefer","description":"Preference","required":false,"enum":["return=representation","return=minimal","return=none","resolution=ignore-duplicates","resolution=merge-duplicates"],"in":"header","type":"string"},"select":{"name":"select","description":"Filtering Columns","required":false,"in":"query","type":"string"},"on_conflict":{"name":"on_conflict","description":"On Conflict","required":false,"in":"query","type":"string"},"order":{"name":"order","description":"Ordering","required":false,"in":"query","type":"string"},"range":{"name":"Range","description":"Limiting and Pagination","required":false,"in":"header","type":"string"},"rangeUnit":{"name":"Range-Unit","description":"Limiting and Pagination","required":false,"default":"items","in":"header","type":"string"},"offset":{"name":"offset","description":"Limiting and Pagination","required":false,"in":"query","type":"string"},"limit":{"name":"limit","description":"Limiting and Pagination","required":false,"in":"query","type":"string"},"body.TOW":{"name":"TOW","description":"TOW","required":false,"in":"body","schema":{"$ref":"#/definitions/TOW"}},"rowFilter.TOW.id":{"name":"id","required":false,"format":"bigint","in":"query","type":"string"},"rowFilter.TOW.created_at":{"name":"created_at","required":false,"format":"timestamp with time zone","in":"query","type":"string"}},"externalDocs":{"description":"PostgREST Documentation","url":"https://postgrest.org/en/v12.1/api.html"}}


// C:\grua-booking-system-25\client\src\integrations\supabase\supabaseClient.js
import { createClient } from '@supabase/supabase-js';

const supabaseUrl = 'https://your-supabase-url.supabase.co';
const supabaseKey = 'your-supabase-key';

export const supabase = createClient(supabaseUrl, supabaseKey);


// C:\grua-booking-system-25\client\src\integrations\supabase\auth.jsx
import React, { useState } from 'react';
import { supabase } from './supabaseClient';

const Auth = () => {
  const [email, setEmail] = useState('');
  const [password, setPassword] = useState('');

  const handleLogin = async (event) => {
    event.preventDefault();
    const { user, error } = await supabase.auth.signIn({ email, password });
    if (error) {
      console.error('Error logging in:', error.message);
    } else {
      console.log('User logged in:', user);
    }
  };

  const handleSignup = async (event) => {
    event.preventDefault();
    const { user, error } = await supabase.auth.signUp({ email, password });
    if (error) {
      console.error('Error signing up:', error.message);
    } else {
      console.log('User signed up:', user);
    }
  };

  return (
    <div>
      <form onSubmit={handleLogin}>
        <input type="email" value={email} onChange={(e) => setEmail(e.target.value)} placeholder="Email" />
        <input type="password" value={password} onChange={(e) => setPassword(e.target.value)} placeholder="Password" />
        <button type="submit">Login</button>
      </form>
      <form onSubmit={handleSignup}>
        <input type="email" value={email} onChange={(e) => setEmail(e.target.value)} placeholder="Email" />
        <input type="password" value={password} onChange={(e) => setPassword(e.target.value)} placeholder="Password" />
        <button type="submit">Sign Up</button>
      </form>
    </div>
  );
};

export default Auth;


// C:\grua-booking-system-25\client\src\integrations\supabase\index.js
import { createClient } from '@supabase/supabase-js';
import { useQuery, useMutation, useQueryClient, QueryClient, QueryClientProvider } from '@tanstack/react-query';

const supabaseUrl = import.meta.env.VITE_SUPABASE_PROJECT_URL;
const supabaseKey = import.meta.env.VITE_SUPABASE_API_KEY;
export const supabase = createClient(supabaseUrl, supabaseKey);

import React from "react";
export const queryClient = new QueryClient();
export function SupabaseProvider({ children }) {
    return React.createElement(QueryClientProvider, { client: queryClient }, children);
}

const fromSupabase = async (query) => {
    const { data, error } = await query;
    if (error) throw new Error(error.message);
    return data;
};

/* supabase integration types

### TOW

| name       | type        | format | required |
|------------|-------------|--------|----------|
| id         | int8        | number | true     |
| created_at | timestamptz | string | true     |

*/

// Example hook for models

export const useFoo = ()=> useQuery({
    queryKey: ['foos'],
    queryFn: fromSupabase(supabase.from('foos')),
})
export const useAddFoo = () => {
    const queryClient = useQueryClient();
    return useMutation({
        mutationFn: (newFoo)=> fromSupabase(supabase.from('foos').insert([{ title: newFoo.title }])),
        onSuccess: ()=> {
            queryClient.invalidateQueries('foos');
        },
    });
};

export const useBar = ()=> useQuery({
    queryKey: ['bars'],
    queryFn: fromSupabase(supabase.from('bars')),
})
export const useAddBar = () => {
    const queryClient = useQueryClient();
    return useMutation({
        mutationFn: (newBar)=> fromSupabase(supabase.from('bars').insert([{ foo_id: newBar.foo_id }])),
        onSuccess: ()=> {
            queryClient.invalidateQueries('bars');
        },
    });
};

export const useTOWs = () => useQuery({
    queryKey: ['TOWs'],
    queryFn: () => fromSupabase(supabase.from('TOW').select('*')),
});

export const useTOW = (id) => useQuery({
    queryKey: ['TOW', id],
    queryFn: () => fromSupabase(supabase.from('TOW').select('*').eq('id', id).single()),
});

export const useAddTOW = () => {
    const queryClient = useQueryClient();
    return useMutation({
        mutationFn: (newTOW) => fromSupabase(supabase.from('TOW').insert([newTOW])),
        onSuccess: () => {
            queryClient.invalidateQueries('TOWs');
        },
    });
};

export const useUpdateTOW = () => {
    const queryClient = useQueryClient();
    return useMutation({
        mutationFn: (updatedTOW) => fromSupabase(supabase.from('TOW').update(updatedTOW).eq('id', updatedTOW.id)),
        onSuccess: () => {
            queryClient.invalidateQueries('TOWs');
            queryClient.invalidateQueries(['TOW', updatedTOW.id]);
        },
    });
};

export const useDeleteTOW = () => {
    const queryClient = useQueryClient();
    return useMutation({
        mutationFn: (id) => fromSupabase(supabase.from('TOW').delete().eq('id', id)),
        onSuccess: () => {
            queryClient.invalidateQueries('TOWs');
        },
    });
};


// C:\grua-booking-system-25\client\src\integrations\supabase\openapi.json
{"swagger":"2.0","info":{"description":"","title":"standard public schema","version":"12.1 (8cbcf98)"},"host":"gjwhxrajesykwmomorhw.supabase.co:443","basePath":"/","schemes":["https"],"consumes":["application/json","application/vnd.pgrst.object+json;nulls=stripped","application/vnd.pgrst.object+json","text/csv"],"produces":["application/json","application/vnd.pgrst.object+json;nulls=stripped","application/vnd.pgrst.object+json","text/csv"],"paths":{"/":{"get":{"produces":["application/openapi+json","application/json"],"responses":{"200":{"description":"OK"}},"summary":"OpenAPI description (this document)","tags":["Introspection"]}},"/TOW":{"get":{"parameters":[{"$ref":"#/parameters/rowFilter.TOW.id"},{"$ref":"#/parameters/rowFilter.TOW.created_at"},{"$ref":"#/parameters/select"},{"$ref":"#/parameters/order"},{"$ref":"#/parameters/range"},{"$ref":"#/parameters/rangeUnit"},{"$ref":"#/parameters/offset"},{"$ref":"#/parameters/limit"},{"$ref":"#/parameters/preferCount"}],"responses":{"200":{"description":"OK","schema":{"items":{"$ref":"#/definitions/TOW"},"type":"array"}},"206":{"description":"Partial Content"}},"summary":"TOW","tags":["TOW"]},"post":{"parameters":[{"$ref":"#/parameters/body.TOW"},{"$ref":"#/parameters/select"},{"$ref":"#/parameters/preferPost"}],"responses":{"201":{"description":"Created"}},"summary":"TOW","tags":["TOW"]},"delete":{"parameters":[{"$ref":"#/parameters/rowFilter.TOW.id"},{"$ref":"#/parameters/rowFilter.TOW.created_at"},{"$ref":"#/parameters/preferReturn"}],"responses":{"204":{"description":"No Content"}},"summary":"TOW","tags":["TOW"]},"patch":{"parameters":[{"$ref":"#/parameters/rowFilter.TOW.id"},{"$ref":"#/parameters/rowFilter.TOW.created_at"},{"$ref":"#/parameters/body.TOW"},{"$ref":"#/parameters/preferReturn"}],"responses":{"204":{"description":"No Content"}},"summary":"TOW","tags":["TOW"]}}},"definitions":{"TOW":{"description":"TOW","required":["id","created_at"],"properties":{"id":{"description":"Note:\nThis is a Primary Key.<pk/>","format":"bigint","type":"integer"},"created_at":{"default":"now()","format":"timestamp with time zone","type":"string"}},"type":"object"}},"parameters":{"preferParams":{"name":"Prefer","description":"Preference","required":false,"enum":["params=single-object"],"in":"header","type":"string"},"preferReturn":{"name":"Prefer","description":"Preference","required":false,"enum":["return=representation","return=minimal","return=none"],"in":"header","type":"string"},"preferCount":{"name":"Prefer","description":"Preference","required":false,"enum":["count=none"],"in":"header","type":"string"},"preferPost":{"name":"Prefer","description":"Preference","required":false,"enum":["return=representation","return=minimal","return=none","resolution=ignore-duplicates","resolution=merge-duplicates"],"in":"header","type":"string"},"select":{"name":"select","description":"Filtering Columns","required":false,"in":"query","type":"string"},"on_conflict":{"name":"on_conflict","description":"On Conflict","required":false,"in":"query","type":"string"},"order":{"name":"order","description":"Ordering","required":false,"in":"query","type":"string"},"range":{"name":"Range","description":"Limiting and Pagination","required":false,"in":"header","type":"string"},"rangeUnit":{"name":"Range-Unit","description":"Limiting and Pagination","required":false,"default":"items","in":"header","type":"string"},"offset":{"name":"offset","description":"Limiting and Pagination","required":false,"in":"query","type":"string"},"limit":{"name":"limit","description":"Limiting and Pagination","required":false,"in":"query","type":"string"},"body.TOW":{"name":"TOW","description":"TOW","required":false,"in":"body","schema":{"$ref":"#/definitions/TOW"}},"rowFilter.TOW.id":{"name":"id","required":false,"format":"bigint","in":"query","type":"string"},"rowFilter.TOW.created_at":{"name":"created_at","required":false,"format":"timestamp with time zone","in":"query","type":"string"}},"externalDocs":{"description":"PostgREST Documentation","url":"https://postgrest.org/en/v12.1/api.html"}}


// C:\grua-booking-system-25\client\src\integrations\supabase\supabaseClient.js
import { createClient } from '@supabase/supabase-js';

const supabaseUrl = 'https://your-supabase-url.supabase.co';
const supabaseKey = 'your-supabase-key';

export const supabase = createClient(supabaseUrl, supabaseKey);


// C:\grua-booking-system-25\client\src\pages\About.jsx
import { Box, Text, Heading, VStack, Flex } from '@chakra-ui/react';
import { FaCheckCircle } from 'react-icons/fa';

const About = () => (
  <Box p={4}>
    <Flex direction="column" align="center" justify="center" p={10}>
      <Heading mb={4}>About Our Tow Service</Heading>
      <Text fontSize="lg" mb={6}>We provide reliable and efficient tow services to get you back on the road quickly.</Text>
    </Flex>
    <Box bg="gray.100" p={10}>
      <Heading size="lg" textAlign="center" mb={4}>Our Features</Heading>
      <VStack spacing={5}>
        <Flex align="center">
          <FaCheckCircle size="24px" />
          <Text ml={2}>24/7 Availability</Text>
        </Flex>
        <Flex align="center">
          <FaCheckCircle size="24px" />
          <Text ml={2}>Professional Staff</Text>
        </Flex>
        <Flex align="center">
          <FaCheckCircle size="24px" />
          <Text ml={2}>Affordable Pricing</Text>
        </Flex>
      </VStack>
    </Box>
  </Box>
);

export default About;


// C:\grua-booking-system-25\client\src\pages\BookingForm.jsx
import { useState, useEffect, useRef } from 'react';
import { Box, Button, FormControl, FormLabel, Input, Select, Textarea, VStack, useToast, Heading, Text, Checkbox, Modal, ModalOverlay, ModalContent, ModalHeader, ModalBody, ModalCloseButton } from '@chakra-ui/react';
import { useNavigate, useLocation } from 'react-router-dom';
import { LoadScript, GoogleMap, Marker, DirectionsService, DirectionsRenderer } from '@react-google-maps/api';

const BookingForm = () => {
  const [formData, setFormData] = useState({
    serviceType: '',
    userName: '',
    phoneNumber: '',
    carBrand: '',
    vehicleModel: '',
    vehicleSize: '',
    additionalInfo: '',
    pickupDate: '',
    pickupTime: '',
    origin: { lat: 26.509672, lng: -100.0095504 },
    pickupLocation: null,
    destinationLocation: null,
    distance: 0,
    streetLevel: '',
    neutralPossible: '',
    adaptations: '',
    passengers: '',
  });

  const [directions, setDirections] = useState(null);
  const [tollCost, setTollCost] = useState(0);
  const [isMapLoaded, setIsMapLoaded] = useState(false);
  const [isTermsOpen, setIsTermsOpen] = useState(false);

  const toast = useToast();
  const navigate = useNavigate();
  const location = useLocation();
  const mapRef = useRef(null);

  useEffect(() => {
    if (location.state) {
      const { origin, pickupLocation, destinationLocation } = location.state;
      setFormData((prevData) => ({ ...prevData, origin, pickupLocation, destinationLocation }));
    }
  }, [location.state]);

  const handleChange = (e) => {
    const { name, value } = e.target;
    setFormData({ ...formData, [name]: value });
  };

  const handleSubmit = async (e) => {
    e.preventDefault();
    const { serviceType, userName, phoneNumber, carBrand, vehicleModel, vehicleSize, pickupDate, pickupTime, origin, pickupLocation, destinationLocation, distance, streetLevel, neutralPossible, adaptations, passengers } = formData;

    if (!serviceType || !userName || !phoneNumber || !carBrand || !vehicleModel || !vehicleSize || !pickupDate || !pickupTime || !origin || !pickupLocation || !destinationLocation || !streetLevel || !neutralPossible || !adaptations || !passengers) {
      toast({
        title: 'Error',
        description: 'Please fill in all required fields.',
        status: 'error',
        duration: 5000,
        isClosable: true,
      });
      return;
    }

    const baseCost = 558;
    const costPerKm = 19;
    const totalCost = baseCost + (distance * costPerKm) + tollCost;

    try {
      console.log('Submitting form with data:', formData);
      const response = await fetch('https://valid-endpoint-for-booking.com/bookings', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({ ...formData, totalCost }),
      });

      if (!response.ok) {
        throw new Error('Network response was not ok');
      }

      const data = await response.json();
      navigate('/payment', { state: { formData, totalCost, serviceDetails: { serviceType, distance, pickupLocation, destinationLocation } } });
    } catch (error) {
      console.error('Error submitting form:', error);
      toast({
        title: 'Error',
        description: 'There was a problem processing your booking. Please try again later.',
        status: 'error',
        duration: 5000,
        isClosable: true,
      });
    }
  };

  const handleMapClick = (event) => {
    try {
      if (!formData.pickupLocation) {
        setFormData({ ...formData, pickupLocation: { lat: event.latLng.lat(), lng: event.latLng.lng() } });
      } else if (!formData.destinationLocation) {
        setFormData({ ...formData, destinationLocation: { lat: event.latLng.lat(), lng: event.latLng.lng() } });
      }
    } catch (error) {
      console.error('Error handling map click:', error);
      toast({
        title: 'Error',
        description: 'There was a problem handling the map click. Please try again later.',
        status: 'error',
        duration: 5000,
        isClosable: true,
      });
    }
  };

  const handleReset = () => {
    setFormData({ ...formData, pickupLocation: null, destinationLocation: null });
    setDirections(null);
  };

  const centerPickupMarker = () => {
    if (navigator.geolocation) {
      navigator.geolocation.getCurrentPosition(
        (position) => {
          const userLocation = {
            lat: position.coords.latitude,
            lng: position.coords.longitude,
          };
          setFormData({ ...formData, pickupLocation: userLocation });
          if (mapRef.current) {
            mapRef.current.panTo(userLocation);
          }
        },
        (error) => {
          console.error('Error getting user location:', error);
          toast({
            title: 'Error',
            description: 'There was a problem getting your location. Please try again later.',
            status: 'error',
            duration: 5000,
            isClosable: true,
          });
        }
      );
    } else {
      toast({
        title: 'Error',
        description: 'Geolocation is not supported by this browser.',
        status: 'error',
        duration: 5000,
        isClosable: true,
      });
    }
  };

  const calculateRoute = () => {
    if (formData.pickupLocation && formData.destinationLocation) {
      return (
        <DirectionsService
          options={{
            origin: formData.pickupLocation,
            destination: formData.destinationLocation,
            travelMode: 'DRIVING',
          }}
          callback={(response, status) => {
            if (status === 'OK') {
              setDirections(response);
              const distanceInKm = response.routes[0].legs[0].distance.value / 1000;
              setFormData((prevData) => ({ ...prevData, distance: distanceInKm }));
              fetchTollData(formData.pickupLocation, formData.destinationLocation);
            } else {
              console.error('Error calculating route:', status);
              toast({
                title: 'Error',
                description: 'There was a problem calculating the route. Please try again later.',
                status: 'error',
                duration: 5000,
                isClosable: true,
              });
            }
          }}
        />
      );
    }
    return null;
  };

  const fetchTollData = async (origin, destination) => {
    try {
      const response = await fetch(`https://api.tollguru.com/v1/calc/route?source=${origin.lat},${origin.lng}&destination=${destination.lat},${destination.lng}`);
      const data = await response.json();
      const tolls = data.tolls || 0;
      setTollCost(tolls);
    } catch (error) {
      console.error('Error fetching toll data:', error);
      toast({
        title: 'Error',
        description: 'There was a problem fetching toll data. Please try again later.',
        status: 'error',
        duration: 5000,
        isClosable: true,
      });
    }
  };

  return (
    <Box p={4}>
      <VStack spacing={4} align="stretch">
        <Heading as="h1" mb={4}>Booking Form</Heading>
        <form onSubmit={handleSubmit}>
          <FormControl id="serviceType" isRequired>
            <FormLabel>Service Type</FormLabel>
            <Select name="serviceType" value={formData.serviceType} onChange={handleChange}>
              <option value="">Select Service Type</option>
              <option value="Tow">Tow</option>
              <option value="Platform">Platform</option>
              <option value="Roadside Assistance">Roadside Assistance</option>
            </Select>
          </FormControl>
          <FormControl id="userName" isRequired>
            <FormLabel>User Name</FormLabel>
            <Input type="text" name="userName" value={formData.userName} onChange={handleChange} />
          </FormControl>
          <FormControl id="phoneNumber" isRequired>
            <FormLabel>Phone Number</FormLabel>
            <Input type="tel" name="phoneNumber" value={formData.phoneNumber} onChange={handleChange} />
          </FormControl>
          <FormControl id="carBrand" isRequired>
            <FormLabel>Car Brand</FormLabel>
            <Input type="text" name="carBrand" value={formData.carBrand} onChange={handleChange} />
          </FormControl>
          <FormControl id="vehicleModel" isRequired>
            <FormLabel>Vehicle Model</FormLabel>
            <Input type="text" name="vehicleModel" value={formData.vehicleModel} onChange={handleChange} />
          </FormControl>
          <FormControl id="vehicleSize" isRequired>
            <FormLabel>Vehicle Size</FormLabel>
            <Select name="vehicleSize" value={formData.vehicleSize} onChange={handleChange}>
              <option value="">Select Vehicle Size</option>
              <option value="Small">Small</option>
              <option value="Medium">Medium</option>
              <option value="Large">Large</option>
            </Select>
          </FormControl>
          <FormControl id="additionalInfo">
            <FormLabel>Additional Information</FormLabel>
            <Textarea name="additionalInfo" value={formData.additionalInfo} onChange={handleChange} />
          </FormControl>
          <FormControl id="pickupDate" isRequired>
            <FormLabel>Pickup Date</FormLabel>
            <Input type="date" name="pickupDate" value={formData.pickupDate} onChange={handleChange} />
          </FormControl>
          <FormControl id="pickupTime" isRequired>
            <FormLabel>Pickup Time</FormLabel>
            <Input type="time" name="pickupTime" value={formData.pickupTime} onChange={handleChange} />
          </FormControl>
          <FormControl id="streetLevel" isRequired>
            <FormLabel>Is the vehicle at street level?</FormLabel>
            <Select name="streetLevel" value={formData.streetLevel} onChange={handleChange}>
              <option value="">Select</option>
              <option value="Yes">Yes</option>
              <option value="No">No</option>
            </Select>
          </FormControl>
          <FormControl id="neutralPossible" isRequired>
            <FormLabel>Is it possible to put neutral?</FormLabel>
            <Select name="neutralPossible" value={formData.neutralPossible} onChange={handleChange}>
              <option value="">Select</option>
              <option value="Yes">Yes</option>
              <option value="No">No</option>
            </Select>
          </FormControl>
          <FormControl id="adaptations" isRequired>
            <FormLabel>Does the vehicle have adaptations that increase its length or width?</FormLabel>
            <Select name="adaptations" value={formData.adaptations} onChange={handleChange}>
              <option value="">Select</option>
              <option value="Yes">Yes</option>
              <option value="No">No</option>
            </Select>
          </FormControl>
          <FormControl id="passengers" isRequired>
            <FormLabel>Number of passengers</FormLabel>
            <Input type="number" name="passengers" value={formData.passengers} onChange={handleChange} />
          </FormControl>
          <FormControl id="terms" isRequired>
            <Checkbox onChange={() => setIsTermsOpen(true)}>I accept terms and conditions</Checkbox>
          </FormControl>
          <Button colorScheme="blue" type="submit">Book Now</Button>
        </form>
        <LoadScript
          googleMapsApiKey={process.env.REACT_APP_GOOGLE_MAPS_API_KEY}
          onLoad={() => setIsMapLoaded(true)}
          onError={() => {
            toast({
              title: 'Error',
              description: 'Failed to load Google Maps API. Please check your API key and internet connection.',
              status: 'error',
              duration: 5000,
              isClosable: true,
            });
          }}
        >
          {isMapLoaded ? (
            <GoogleMap
              center={formData.origin}
              zoom={10}
              mapContainerStyle={{ height: '400px', width: '100%' }}
              onClick={handleMapClick}
              onLoad={(map) => (mapRef.current = map)}
              options={{
                zoomControl: true,
                zoomControlOptions: {
                  position: window.google.maps.ControlPosition.RIGHT_CENTER,
                },
                streetViewControl: false,
                mapTypeControl: false,
                fullscreenControl: false,
              }}
            >
              {formData.pickupLocation && (
                <Marker
                  position={formData.pickupLocation}
                  draggable={true}
                  onDragEnd={(e) => setFormData({ ...formData, pickupLocation: { lat: e.latLng.lat(), lng: e.latLng.lng() } })}
                />
              )}
              {formData.destinationLocation && (
                <Marker
                  position={formData.destinationLocation}
                  draggable={true}
                  onDragEnd={(e) => setFormData({ ...formData, destinationLocation: { lat: e.latLng.lat(), lng: e.latLng.lng() } })}
                />
              )}
              {calculateRoute()}
              {directions && <DirectionsRenderer directions={directions} onError={(error) => {
                console.error('Error rendering directions:', error);
                toast({
                  title: 'Error',
                  description: 'There was a problem rendering the directions. Please try again later.',
                  status: 'error',
                  duration: 5000,
                  isClosable: true,
                });
              }} />}
            </GoogleMap>
          ) : (
            <Text>Loading map...</Text>
          )}
        </LoadScript>
        <Button onClick={handleReset} mt={4}>Reset</Button>
        <Button onClick={centerPickupMarker} mt={4} ml={4} colorScheme="blue">Center User</Button>
      </VStack>
      <Modal isOpen={isTermsOpen} onClose={() => setIsTermsOpen(false)}>
        <ModalOverlay />
        <ModalContent>
          <ModalHeader>Terms and Conditions</ModalHeader>
          <ModalCloseButton />
          <ModalBody>
            <Text>The services may have a higher cost which must be paid when arriving at the destination, otherwise the vehicle will not leave the platform and will be taken to the corralon.</Text>
            <Text>Remember that only two passengers can go in the tow truck, if you require a taxi we can provide it.</Text>
          </ModalBody>
        </ModalContent>
      </Modal>
    </Box>
  );
};

export default BookingForm;


// C:\grua-booking-system-25\client\src\pages\Confirmation.jsx
import { Box, Text, VStack } from '@chakra-ui/react';
import { useLocation } from 'react-router-dom';

const Confirmation = () => {
  const location = useLocation();
  const { formData } = location.state || {};

  return (
    <Box p={4}>
      <VStack spacing={4} align="stretch">
        <Text fontSize="2xl">Booking Confirmation</Text>
        {formData ? (
          <>
            <Text>Service Type: {formData.serviceType}</Text>
            <Text>User Name: {formData.userName}</Text>
            <Text>Phone Number: {formData.phoneNumber}</Text>
            <Text>Vehicle Make: {formData.vehicleMake}</Text>
            <Text>Vehicle Model: {formData.vehicleModel}</Text>
            <Text>Vehicle Size: {formData.vehicleSize}</Text>
            <Text>Additional Information: {formData.additionalInfo}</Text>
            <Text>Pickup Date: {formData.pickupDate}</Text>
            <Text>Pickup Time: {formData.pickupTime}</Text>
          </>
        ) : (
          <Text>No booking details available.</Text>
        )}
      </VStack>
    </Box>
  );
};

export default Confirmation;


// C:\grua-booking-system-25\client\src\pages\Contact.jsx
import { Box, Text, Heading, VStack, FormControl, FormLabel, Input, Textarea, Button } from '@chakra-ui/react';

const Contact = () => (
  <Box p={4}>
    <Heading mb={4} textAlign="center">Contact Us</Heading>
    <VStack spacing={4} align="stretch" maxW="md" mx="auto">
      <FormControl id="name">
        <FormLabel>Name</FormLabel>
        <Input type="text" />
      </FormControl>
      <FormControl id="email">
        <FormLabel>Email</FormLabel>
        <Input type="email" />
      </FormControl>
      <FormControl id="message">
        <FormLabel>Message</FormLabel>
        <Textarea />
      </FormControl>
      <Button colorScheme="blue" type="submit">Send Message</Button>
    </VStack>
  </Box>
);

export default Contact;


// C:\grua-booking-system-25\client\src\pages\Index.jsx
import { Container, Text, VStack, Button } from "@chakra-ui/react";
import { useNavigate } from "react-router-dom";

const Index = () => {
  const navigate = useNavigate();

  const handleBookNow = () => {
    navigate("/booking");
  };

  return (
    <Container centerContent maxW="container.md" height="100vh" display="flex" flexDirection="column" justifyContent="center" alignItems="center">
      <VStack spacing={4}>
        <Text fontSize="2xl">Welcome to Tow Service Booking</Text>
        <Text>Start by selecting a service or navigating through the menu.</Text>
      <Button colorScheme="blue" onClick={handleBookNow}>Book Now</Button>
      </VStack>
    </Container>
  );
};

export default Index;


// C:\grua-booking-system-25\client\src\pages\Payment.jsx
import { Box, Text, VStack, Button, useToast } from '@chakra-ui/react';
import { useLocation, useNavigate } from 'react-router-dom';
import { useState } from 'react';

const Payment = () => {
  const location = useLocation();
  const navigate = useNavigate();
  const toast = useToast();
  const { formData, totalCost, serviceDetails } = location.state || {};
  const [isProcessing, setIsProcessing] = useState(false);

  const handlePayment = async () => {
    setIsProcessing(true);
    try {
      // Simulate payment processing delay
      await new Promise((resolve) => setTimeout(resolve, 2000));
      
      // Simulate successful payment
      const paymentSuccess = true;

      if (paymentSuccess) {
        console.log('Payment processed for:', totalCost);
        navigate('/confirmation', { state: { formData } });
      } else {
        throw new Error('Payment failed');
      }
    } catch (error) {
      toast({
        title: 'Payment Error',
        description: error.message,
        status: 'error',
        duration: 5000,
        isClosable: true,
      });
    } finally {
      setIsProcessing(false);
    }
  };

  return (
    <Box p={4}>
      <VStack spacing={4} align="stretch">
        <Text fontSize="2xl">Payment</Text>
        {formData ? (
          <>
            <Text>Service Type: {formData.serviceType}</Text>
            <Text>User Name: {formData.userName}</Text>
            <Text>Phone Number: {formData.phoneNumber}</Text>
            <Text>Vehicle Make: {formData.vehicleMake}</Text>
            <Text>Vehicle Model: {formData.vehicleModel}</Text>
            <Text>Vehicle Size: {formData.vehicleSize}</Text>
            <Text>Pickup Date: {formData.pickupDate}</Text>
            <Text>Pickup Time: {formData.pickupTime}</Text>
            <Text>Total Cost: ${totalCost}</Text>
            <Text>Distance: {serviceDetails.distance} km</Text>
            <Text>Pickup Location: {JSON.stringify(serviceDetails.pickupLocation)}</Text>
            <Text>Destination Location: {JSON.stringify(serviceDetails.destinationLocation)}</Text>
            <Button 
              colorScheme="blue" 
              onClick={handlePayment} 
              isLoading={isProcessing}
            >
              Pay Now
            </Button>
          </>
        ) : (
          <Text>No payment details available.</Text>
        )}
      </VStack>
    </Box>
  );
};

export default Payment;


// C:\grua-booking-system-25\client\src\sse\sse.controller.ts
import { Controller, Sse, MessageEvent } from '@nestjs/common';
import { Observable } from 'rxjs';
import { EventEmitter2 } from '@nestjs/event-emitter';
import { TowingRequestApplicationEvent } from '../towingRequest/application/towingRequest.application.event';

@Controller('sse')
export class SseController {
  constructor(private eventEmitter: EventEmitter2) {}

  @Sse('events')
  sendEvents(): Observable<MessageEvent> {
    return new Observable((observer) => {
      const onTowingRequestCreated = (payload) => {
        observer.next({ data: payload });
      };

      this.eventEmitter.on(TowingRequestApplicationEvent.TowingRequestCreated.key, onTowingRequestCreated);

      return () => {
        this.eventEmitter.off(TowingRequestApplicationEvent.TowingRequestCreated.key, onTowingRequestCreated);
      };
    });
  }
}


// C:\grua-booking-system-25\client\src\sse\sse.module.ts
import { Module } from '@nestjs/common';
import { SseController } from './sse.controller';
import { EventEmitterModule } from '@nestjs/event-emitter';

@Module({
  imports: [EventEmitterModule.forRoot()],
  controllers: [SseController],
})
export class SseModule {}


// C:\grua-booking-system-25\client\src\towingRequest\application\towingRequest.application.event.ts
export namespace TowingRequestApplicationEvent {
  export class TowingRequestCreated {
    static readonly key = 'towingRequest.created';
    constructor(public readonly id: string, public readonly userId: string) {}
  }
}


// C:\grua-booking-system-25\client\src\towingRequest\application\towingRequest.application.module.ts
import { Module } from '@nestjs/common';
import { AuthenticationDomainModule } from '../authentication/authentication.domain.module';
import { TowingRequestDomainModule } from '../towing-request/towingRequest.domain.module';
import { UserDomainModule } from '../user/user.domain.module';
import { TowingRequestController } from './towingRequest.controller';
import { TowingRequestByUserController } from './towingRequestByUser.controller';
import { EventService } from '../event/event.service';
import { TowingRequestDomainFacade } from '../towingRequest/towingRequest.domain.facade';
import { AuthenticationDomainFacade } from '../authentication/authentication.domain.facade';
import { NewService } from '../new/new.service';

@Module({
  imports: [
    AuthenticationDomainModule,
    TowingRequestDomainModule,
    UserDomainModule,
  ],
  controllers: [TowingRequestController, TowingRequestByUserController],
  providers: [
    EventService,
    TowingRequestDomainFacade,
    {
      provide: 'AuthenticationDomainFacade',
      useClass: AuthenticationDomainFacade,
    },
    NewService,
  ],
})
export class TowingRequestApplicationModule {}


// C:\grua-booking-system-25\client\src\towingRequest\application\towingRequest.controller.ts
import { Controller, Get, Post, Patch, Delete, Body, Param } from '@nestjs/common';
import { EventService } from '../event/event.service';
import { TowingRequestDomainFacade } from '../towingRequest/towingRequest.domain.facade';
import { AuthenticationDomainFacade } from '../authentication/authentication.domain.facade';
import { TowingRequestCreateDto, TowingRequestUpdateDto } from './towingRequest.dto';
import { TowingRequestApplicationEvent } from './towingRequest.application.event;

@Controller('/v1/towingRequests')
export class TowingRequestController {
  constructor(
    private readonly eventService: EventService,
    private readonly towingRequestDomainFacade: TowingRequestDomainFacade,
    private readonly authenticationDomainFacade: AuthenticationDomainFacade,
  ) {}

  @Get()
  async findMany() {
    return this.towingRequestDomainFacade.findMany();
  }

  @Post()
  async create(@Body() createDto: TowingRequestCreateDto) {
    const towingRequest = await this.towingRequestDomainFacade.create(createDto);
    this.eventService.emit(new TowingRequestApplicationEvent.TowingRequestCreated(towingRequest.id, towingRequest.userId));
    return towingRequest;
  }

  @Get(':id')
  async findOne(@Param('id') id: string) {
    return this.towingRequestDomainFacade.findOne(id);
  }

  @Patch(':id')
  async update(@Param('id') id: string, @Body() updateDto: TowingRequestUpdateDto) {
    return this.towingRequestDomainFacade.update(id, updateDto);
  }

  @Delete(':id')
  async delete(@Param('id') id: string) {
    return this.towingRequestDomainFacade.delete(id);
  }
}


// C:\grua-booking-system-25\client\src\towingRequest\application\towingRequest.dto.ts
import { IsString, IsNotEmpty, IsOptional } from 'class-validator';

export class TowingRequestCreateDto {
  @IsString()
  @IsNotEmpty()
  pickupLocation: string;

  @IsString()
  @IsNotEmpty()
  destinationLocation: string;

  @IsString()
  @IsOptional()
  additionalInfo?: string;
}

export class TowingRequestUpdateDto {
  @IsString()
  @IsOptional()
  pickupLocation?: string;

  @IsString()
  @IsOptional()
  destinationLocation?: string;

  @IsString()
  @IsOptional()
  additionalInfo?: string;
}


// C:\grua-booking-system-25\client\src\towingRequest\application\towingRequestByUser.controller.ts
import { Controller, Get, Param } from '@nestjs/common';
import { TowingRequestDomainFacade } from '../towingRequest/towingRequest.domain.facade';

@Controller('/v1/users/:userId/towingRequests')
export class TowingRequestByUserController {
  constructor(private readonly towingRequestDomainFacade: TowingRequestDomainFacade) {}

  @Get()
  async findByUser(@Param('userId') userId: string) {
    return this.towingRequestDomainFacade.findByUser(userId);
  }
}


// C:\grua-booking-system-25\client\src\towingRequest\towingRequest.domain.facade.ts
import { Injectable } from '@nestjs/common';
import { TowingRequest } from './towingRequest.entity';

@Injectable()
export class TowingRequestDomainFacade {
  private towingRequests: TowingRequest[] = [];

  public findMany(): TowingRequest[] {
    return this.towingRequests;
  }

  public create(createDto: TowingRequest): TowingRequest {
    const newRequest = { ...createDto, id: Date.now().toString() };
    this.towingRequests.push(newRequest);
    return newRequest;
  }

  public findOne(id: string): TowingRequest | undefined {
    return this.towingRequests.find(request => request.id === id);
  }

  public update(id: string, updateDto: Partial<TowingRequest>): TowingRequest | undefined {
    const requestIndex = this.towingRequests.findIndex(request => request.id === id);
    if (requestIndex > -1) {
      this.towingRequests[requestIndex] = { ...this.towingRequests[requestIndex], ...updateDto };
      return this.towingRequests[requestIndex];
    }
    return undefined;
  }

  public delete(id: string): boolean {
    const requestIndex = this.towingRequests.findIndex(request => request.id === id);
    if (requestIndex > -1) {
      this.towingRequests.splice(requestIndex, 1);
      return true;
    }
    return false;
  }

  public findByUser(userId: string): TowingRequest[] {
    return this.towingRequests.filter(request => request.userId === userId);
  }
}


// C:\grua-booking-system-25\client\src\towingRequest\towingRequest.domain.module.ts
import { Module } from '@nestjs/common';
import { TowingRequestDomainFacade } from './towingRequest.domain.facade';

@Module({
  providers: [TowingRequestDomainFacade],
  exports: [TowingRequestDomainFacade],
})
export class TowingRequestDomainModule {}


// C:\grua-booking-system-25\client\src\towingRequest\towingRequest.entity.ts
export class TowingRequest {
  id: string;
  userId: string;
  pickupLocation: string;
  destinationLocation: string;
  additionalInfo?: string;
}


// C:\grua-booking-system-25\client\src\towingRequest\application\towingRequest.application.event.ts
export namespace TowingRequestApplicationEvent {
  export class TowingRequestCreated {
    static readonly key = 'towingRequest.created';
    constructor(public readonly id: string, public readonly userId: string) {}
  }
}


// C:\grua-booking-system-25\client\src\towingRequest\application\towingRequest.application.module.ts
import { Module } from '@nestjs/common';
import { AuthenticationDomainModule } from '../authentication/authentication.domain.module';
import { TowingRequestDomainModule } from '../towing-request/towingRequest.domain.module';
import { UserDomainModule } from '../user/user.domain.module';
import { TowingRequestController } from './towingRequest.controller';
import { TowingRequestByUserController } from './towingRequestByUser.controller';
import { EventService } from '../event/event.service';
import { TowingRequestDomainFacade } from '../towingRequest/towingRequest.domain.facade';
import { AuthenticationDomainFacade } from '../authentication/authentication.domain.facade';
import { NewService } from '../new/new.service';

@Module({
  imports: [
    AuthenticationDomainModule,
    TowingRequestDomainModule,
    UserDomainModule,
  ],
  controllers: [TowingRequestController, TowingRequestByUserController],
  providers: [
    EventService,
    TowingRequestDomainFacade,
    {
      provide: 'AuthenticationDomainFacade',
      useClass: AuthenticationDomainFacade,
    },
    NewService,
  ],
})
export class TowingRequestApplicationModule {}


// C:\grua-booking-system-25\client\src\towingRequest\application\towingRequest.controller.ts
import { Controller, Get, Post, Patch, Delete, Body, Param } from '@nestjs/common';
import { EventService } from '../event/event.service';
import { TowingRequestDomainFacade } from '../towingRequest/towingRequest.domain.facade';
import { AuthenticationDomainFacade } from '../authentication/authentication.domain.facade';
import { TowingRequestCreateDto, TowingRequestUpdateDto } from './towingRequest.dto';
import { TowingRequestApplicationEvent } from './towingRequest.application.event;

@Controller('/v1/towingRequests')
export class TowingRequestController {
  constructor(
    private readonly eventService: EventService,
    private readonly towingRequestDomainFacade: TowingRequestDomainFacade,
    private readonly authenticationDomainFacade: AuthenticationDomainFacade,
  ) {}

  @Get()
  async findMany() {
    return this.towingRequestDomainFacade.findMany();
  }

  @Post()
  async create(@Body() createDto: TowingRequestCreateDto) {
    const towingRequest = await this.towingRequestDomainFacade.create(createDto);
    this.eventService.emit(new TowingRequestApplicationEvent.TowingRequestCreated(towingRequest.id, towingRequest.userId));
    return towingRequest;
  }

  @Get(':id')
  async findOne(@Param('id') id: string) {
    return this.towingRequestDomainFacade.findOne(id);
  }

  @Patch(':id')
  async update(@Param('id') id: string, @Body() updateDto: TowingRequestUpdateDto) {
    return this.towingRequestDomainFacade.update(id, updateDto);
  }

  @Delete(':id')
  async delete(@Param('id') id: string) {
    return this.towingRequestDomainFacade.delete(id);
  }
}


// C:\grua-booking-system-25\client\src\towingRequest\application\towingRequest.dto.ts
import { IsString, IsNotEmpty, IsOptional } from 'class-validator';

export class TowingRequestCreateDto {
  @IsString()
  @IsNotEmpty()
  pickupLocation: string;

  @IsString()
  @IsNotEmpty()
  destinationLocation: string;

  @IsString()
  @IsOptional()
  additionalInfo?: string;
}

export class TowingRequestUpdateDto {
  @IsString()
  @IsOptional()
  pickupLocation?: string;

  @IsString()
  @IsOptional()
  destinationLocation?: string;

  @IsString()
  @IsOptional()
  additionalInfo?: string;
}


// C:\grua-booking-system-25\client\src\towingRequest\application\towingRequestByUser.controller.ts
import { Controller, Get, Param } from '@nestjs/common';
import { TowingRequestDomainFacade } from '../towingRequest/towingRequest.domain.facade';

@Controller('/v1/users/:userId/towingRequests')
export class TowingRequestByUserController {
  constructor(private readonly towingRequestDomainFacade: TowingRequestDomainFacade) {}

  @Get()
  async findByUser(@Param('userId') userId: string) {
    return this.towingRequestDomainFacade.findByUser(userId);
  }
}


// C:\grua-booking-system-25\client\src\user\user.domain.module.ts
import { Module } from '@nestjs/common';

@Module({})
export class UserDomainModule {}


// C:\grua-booking-system-25\client\src\App.jsx
import React, { useEffect, useState } from 'react';
import { Route, BrowserRouter as Router, Routes } from 'react-router-dom';
import Index from './pages/Index.jsx';
import About from './pages/About.jsx';
import Contact from './pages/Contact.jsx';
import Navbar from './components/Navbar.jsx';
import BookingForm from './pages/BookingForm.jsx';
import Confirmation from './pages/Confirmation.jsx';
import Payment from './pages/Payment.jsx'; // Import Payment component

function App() {
  const [towingRequests, setTowingRequests] = useState([]);

  useEffect(() => {
    const eventSource = new EventSource('http://localhost:3000/sse/events');
    eventSource.onmessage = function (event) {
      const newTowingRequest = JSON.parse(event.data);
      setTowingRequests((prev) => [...prev, newTowingRequest]);
    };

    return () => {
      eventSource.close();
    };
  }, []);

  return (
    <>
      <Router>
        <Navbar />
        <Routes>
          <Route exact path="/" element={<Index />} />
          <Route exact path="/about" element={<About />} />
          <Route exact path="/contact" element={<Contact />} />
          <Route exact path="/booking" element={<BookingForm />} />
          <Route exact path="/confirmation" element={<Confirmation />} />
          <Route exact path="/payment" element={<Payment />} />
        </Routes>
      </Router>

      <div>
        <h1>Solicitudes de Grúa</h1>
        <ul>
          {towingRequests.map((request) => (
            <li key={request.id}>
              {request.pickupLocation} -&gt; {request.destinationLocation}
            </li>
          ))}
        </ul>
      </div>
    </>
  );
}

export default App;


// C:\grua-booking-system-25\client\src\main.jsx
import React from "react";
import ReactDOM from "react-dom/client";
import App from "./App.jsx";
import { ChakraProvider, extendTheme } from "@chakra-ui/react";
import { SupabaseProvider } from './integrations/supabase/index.js';

const colors = {
  brand: {
    900: "#1a365d",
    800: "#153e75",
    700: "#2a69ac",
  },
};

const theme = extendTheme({ colors });

ReactDOM.createRoot(document.getElementById("root")).render(
  <React.StrictMode>
    <SupabaseProvider>
      <ChakraProvider theme={theme}>
        <App />
      </ChakraProvider>
    </SupabaseProvider>
  </React.StrictMode>
);


// C:\grua-booking-system-25\client\src\authentication\auth.controller.ts
import { Controller, Post, Body } from '@nestjs/common';
import { AuthenticationDomainFacade } from './authentication.domain.facade';

@Controller('auth')
export class AuthController {
  constructor(private readonly authFacade: AuthenticationDomainFacade) {}

  @Post('register')
  register(@Body() body: { username: string, password: string }) {
    this.authFacade.register(body.username, body.password);
    return { message: 'User registered successfully' };
  }

  @Post('login')
  login(@Body() body: { username: string, password: string }) {
    const authenticated = this.authFacade.authenticate(body.username, body.password);
    if (authenticated) {
      return { message: 'Login successful' };
    } else {
      return { message: 'Invalid credentials' };
    }
  }

  @Post('change-password')
  changePassword(@Body() body: { username: string, newPassword: string }) {
    this.authFacade.changePassword(body.username, body.newPassword);
    return { message: 'Password changed successfully' };
  }
}


// C:\grua-booking-system-25\client\src\authentication\authentication.domain.facade.ts
import { Injectable } from '@nestjs/common';

@Injectable()
export class AuthenticationDomainFacade {
  private users = new Map<string, string>();

  register(username: string, password: string): void {
    if (this.users.has(username)) {
      throw new Error('User already exists');
    }
    this.users.set(username, password);
  }

  authenticate(username: string, password: string): boolean {
    return this.users.get(username) === password;
  }

  changePassword(username: string, newPassword: string): void {
    if (this.users.has(username)) {
      this.users.set(username, newPassword);
    } else {
      throw new Error('User not found');
    }
  }
}


// C:\grua-booking-system-25\client\src\authentication\authentication.domain.module.ts
import { Module } from '@nestjs/common';
import { AuthenticationDomainFacade } from './authentication.domain.facade';

@Module({
  providers: [AuthenticationDomainFacade],
  exports: [AuthenticationDomainFacade],
})
export class AuthenticationDomainModule {}


// C:\grua-booking-system-25\client\src\authentication\authMiddleware.js
const jwt = require('jsonwebtoken');

const authMiddleware = (req, res, next) => {
  const token = req.headers['x-access-token'] || req.headers['authorization'];

  if (!token) {
    return res.status(401).json({ error: 'Unauthorized' });
  }

  jwt.verify(token, process.env.SECRET_KEY, (err, decoded) => {
    if (err) {
      return res.status(401).json({ error: 'Invalid token' });
    }

    req.user = decoded;
    next();
  });
};

module.exports = authMiddleware;


// C:\grua-booking-system-25\client\src\components\booking-status.enum.ts
export enum BookingStatus {
  PENDING = 'PENDING',
  CONFIRMED = 'CONFIRMED',
  CANCELLED = 'CANCELLED',
  COMPLETED = 'COMPLETED',
  NO_SHOW = 'NO_SHOW'
}


// C:\grua-booking-system-25\client\src\components\conversation.entity.ts
import { Entity, Column, PrimaryGeneratedColumn, ManyToOne, OneToMany } from 'typeorm';
import { User } from './user.entity';
import { Message } from './message.entity';

@Entity()
export class Conversation {
  @PrimaryGeneratedColumn('uuid')
  id: string;

  @Column({ type: 'timestamp', default: () => 'CURRENT_TIMESTAMP' })
  createdAt: Date;

  @Column({ type: 'timestamp', default: () => 'CURRENT_TIMESTAMP', onUpdate: 'CURRENT_TIMESTAMP' })
  updatedAt: Date;

  @ManyToOne(() => User, user => user.conversations)
  user: User;

  @OneToMany(() => Message, message => message.conversation)
  messages: Message[];

  @Column({ nullable: true })
  title: string;

  @Column({ default: false })
  isArchived: boolean;
}


// C:\grua-booking-system-25\client\src\components\GoogleMapsRoute.jsx
import React, { useState, useEffect } from 'react';
import { Box, Button, FormControl, FormLabel, Heading, Input, Text } from '@chakra-ui/react';
import { GoogleMap, LoadScript, Marker, DirectionsService, DirectionsRenderer } from '@react-google-maps/api';
import PropTypes from 'prop-types';

const GoogleMapsRoute = ({ setDistance }) => {
  const [pickup, setPickup] = useState(null);
  const [destination, setDestination] = useState(null);
  const [error, setError] = useState(null);
  const [totalPrice, setTotalPrice] = useState(0);
  const [directions, setDirections] = useState(null);
  const [map, setMap] = useState(null);
  const [tollCost, setTollCost] = useState(0);
  const origin = { lng: -100.0095504, lat: 26.509672 }; // Updated starting point
  const pricePerKm = 19;

  useEffect(() => {
    if (navigator.geolocation) {
      navigator.geolocation.getCurrentPosition(
        (position) => {
          const userLocation = {
            lat: position.coords.latitude,
            lng: position.coords.longitude,
          };
          setPickup(userLocation);
          if (map) {
            map.panTo(userLocation);
          }
        },
        (error) => {
          console.error('Error getting user location:', error);
          setError('Error getting user location: ' + error.message);
        }
      );
    } else {
      console.error('Geolocation is not supported by this browser.');
      setError('Geolocation is not supported by this browser.');
    }
  }, [map]);

  const calculateRoute = () => {
    setError(null);
    if (!pickup || !destination) {
      setError('Please fill in all required fields.');
      return;
    }

    const directionsService = new window.google.maps.DirectionsService();
    directionsService.route(
      {
        origin: pickup,
        destination: destination,
        travelMode: window.google.maps.TravelMode.DRIVING,
        waypoints: [{ location: pickup, stopover: true }],
      },
      (result, status) => {
        if (status === window.google.maps.DirectionsStatus.OK) {
          setDirections(result);
          const distanceToDestination = result.routes[0].legs[0].distance.value / 1000; // Distance in kilometers
          setDistance(distanceToDestination);
          const price = calculatePrice(distanceToDestination);
          setTotalPrice(price);
          fetchTollData(pickup, destination);
        } else if (status === window.google.maps.DirectionsStatus.REQUEST_DENIED) {
          setError('Request denied. Please check your API key and permissions.');
          console.error('Request denied:', status, result);
        } else {
          setError('Error calculating the route: ' + status);
          console.error('Error calculating the route:', status, result);
        }
      }
    );
  };

  const calculatePrice = (distance) => {
    return distance * pricePerKm + 558 + tollCost; // Tarifa base de $558 más $19 por kilómetro más el costo de las casetas
  };

  const fetchTollData = async (origin, destination) => {
    try {
      const response = await fetch(`https://api.tollguru.com/v1/calc/route?source=${origin.lat},${origin.lng}&destination=${destination.lat},${destination.lng}`, {
        headers: {
          'x-api-key': process.env.REACT_APP_TOLLGURU_API_KEY,
        },
      });
      const data = await response.json();
      const tolls = data.tollCosts || 0;
      setTollCost(tolls);
    } catch (error) {
      console.error('Error fetching toll data:', error);
      setError('Error fetching toll data: ' + error.message);
    }
  };

  return (
    <Box>
      <Heading as="h1" mb={4}>Selecciona recogida y destino</Heading>
      {error && <Text color="red.500">Error: {error}</Text>}
      <FormControl mb={4}>
        <FormLabel htmlFor="pickup">Punto de recogida:</FormLabel>
        <Input type="text" id="pickup" value={pickup ? `${pickup.lat}, ${pickup.lng}` : ''} readOnly />
      </FormControl>
      <FormControl mb={4}>
        <FormLabel htmlFor="destination">Destino:</FormLabel>
        <Input type="text" id="destination" value={destination ? `${destination.lat}, ${destination.lng}` : ''} readOnly />
      </FormControl>
      <Button onClick={calculateRoute} colorScheme="blue" disabled={!pickup || !destination}>Calcular Ruta</Button>
      <Text mt={4} fontSize="xl">Precio total: ${totalPrice.toFixed(2)}</Text>
      <LoadScript googleMapsApiKey={process.env.REACT_APP_GOOGLE_MAPS_API_KEY} libraries={['places', 'geometry']}>
        <GoogleMap
          center={{ lat: origin.lat, lng: origin.lng }}
          zoom={7}
          maxZoom={20} // Allow more zoom
          mapContainerStyle={{ height: '400px', width: '100%', marginTop: '20px' }}
          onLoad={(map) => setMap(map)}
          onClick={(event) => {
            try {
              if (!pickup) {
                setPickup(event.latLng.toJSON());
              } else if (!destination) {
                setDestination(event.latLng.toJSON());
              }
            } catch (err) {
              setError('Error setting location: ' + err.message);
              console.error('Error setting location:', err);
            }
          }}
        >
          {pickup && <Marker position={pickup} draggable={true} onDragEnd={(e) => setPickup(e.latLng.toJSON())} />}
          {destination && <Marker position={destination} draggable={true} onDragEnd={(e) => setDestination(e.latLng.toJSON())} />}
          {pickup && destination && (
            <DirectionsService
              options={{
                origin: pickup,
                destination: destination,
                travelMode: window.google.maps.TravelMode.DRIVING,
                waypoints: [{ location: pickup, stopover: true }],
              }}
              callback={(response, status) => {
                if (status === window.google.maps.DirectionsStatus.OK) {
                  setDirections(response);
                } else {
                  setError('Error fetching directions: ' + status);
                  console.error('Error fetching directions:', status, response);
                }
              }}
            />
          )}
          {directions && (
            <DirectionsRenderer
              options={{
                directions: directions,
              }}
            />
          )}
        </GoogleMap>
      </LoadScript>
    </Box>
  );
};

GoogleMapsRoute.propTypes = {
  setDistance: PropTypes.func.isRequired,
};

export default GoogleMapsRoute;


// C:\grua-booking-system-25\client\src\components\InstructionsSidebar.jsx
import { Box, Button, Heading, Input, List, ListIcon, ListItem } from "@chakra-ui/react";
import React, { useState } from "react";
import { FaRegLightbulb } from "react-icons/fa";

const InstructionsSidebar = () => {
  const [contactInput, setContactInput] = useState('');

  const handleInputChange = (event) => {
    setContactInput(event.target.value);
  };

  const handleSubmit = (event) => {
    event.preventDefault();
    // Handle form submission here
  };

  return (
    <Box p={5} border="1px" borderColor="gray.200" borderRadius="md" bg="gray.50">
      <Heading size="md" mb={3}>
        How to Book a Service
      </Heading>
      <List spacing={3}>
        <ListItem>
          <ListIcon as={FaRegLightbulb} color="green.500" />
          Select the type of service you need.
        </ListItem>
        <ListItem>
          <ListIcon as={FaRegLightbulb} color="green.500" />
          Enter your current location and destination.
        </ListItem>
        <ListItem>
          <ListIcon as={FaRegLightbulb} color="green.500" />
          Choose a convenient date and time.
        </ListItem>
        <ListItem>
          <ListIcon as={FaRegLightbulb} color="green.500" />
          Enter your contact information <Input value={contactInput} onChange={handleInputChange} />
        </ListItem>
        <ListItem>
          <ListIcon as={FaRegLightbulb} color="green.500" />
          Confirm your booking and get instant assistance.
        </ListItem>
      </List>
      <Button mt={4} onClick={handleSubmit}>Next Step</Button>
    </Box>
  );
};

export default InstructionsSidebar;


// C:\grua-booking-system-25\client\src\components\message.entity.ts
import { Entity, Column, PrimaryGeneratedColumn, ManyToOne } from 'typeorm';
import { User } from './user.entity';
import { Conversation } from './conversation.entity.ts';

@Entity()
export class Message {
  @PrimaryGeneratedColumn()
  id: number;

  @Column('text')
  content: string;

  @Column({ type: 'timestamp', default: () => 'CURRENT_TIMESTAMP' })
  timestamp: Date;

  @ManyToOne(() => User, user => user.messages)
  sender: User;

  @ManyToOne(() => Conversation, conversation => conversation.messages)
  conversation: Conversation;

  @Column({ default: false })
  isRead: boolean;
}


// C:\grua-booking-system-25\client\src\components\Navbar.jsx
import { Box, Flex, Link, Spacer, Text } from "@chakra-ui/react";
import { Link as RouterLink } from "react-router-dom";

const Navbar = () => {
  return (
    <Box bg="blue.500" p={4} color="white">
      <Flex maxW="1200px" mx="auto" align="center">
        <Text fontSize="xl" fontWeight="bold">Tow Service</Text>
        <Spacer />
        <Flex>
          <Link as={RouterLink} to="/" p={2} mx={2} _hover={{ textDecoration: "none", bg: "blue.600" }}>Home</Link>
          <Link as={RouterLink} to="/about" p={2} mx={2} _hover={{ textDecoration: "none", bg: "blue.600" }}>About</Link>
          <Link as={RouterLink} to="/contact" p={2} mx={2} _hover={{ textDecoration: "none", bg: "blue.600" }}>Contact</Link>
          <Link as={RouterLink} to="/booking" p={2} mx={2} _hover={{ textDecoration: "none", bg: "blue.600" }}>Book Now</Link>
        </Flex>
      </Flex>
    </Box>
  );
};

export default Navbar;


// C:\grua-booking-system-25\client\src\components\room.entity.ts
import { Entity, Column, PrimaryGeneratedColumn, ManyToOne, OneToMany } from 'typeorm'
import { User } from './user.entity'
import { Message } from './message.entity.ts'

@Entity()
export class Room {
  @PrimaryGeneratedColumn()
  id: number

  @Column()
  name: string

  @Column({ nullable: true })
  description: string

  @Column({ default: false })
  isPrivate: boolean

  @ManyToOne(() => User, user => user.createdRooms)
  creator: User

  @OneToMany(() => Message, message => message.room)
  messages: Message[]

  @Column({ type: 'timestamp', default: () => 'CURRENT_TIMESTAMP' })
  createdAt: Date

  @Column({ type: 'timestamp', default: () => 'CURRENT_TIMESTAMP', onUpdate: 'CURRENT_TIMESTAMP' })
  updatedAt: Date
}


// C:\grua-booking-system-25\client\src\components\user.entity.ts
import { Entity, PrimaryGeneratedColumn, Column } from 'typeorm'

@Entity()
export class User {
  @PrimaryGeneratedColumn()
  id: number

  @Column()
  firstName: string

  @Column()
  lastName: string

  @Column({ unique: true })
  email: string

  @Column()
  password: string

  @Column({ default: false })
  isAdmin: boolean

  @Column({ type: 'timestamp', default: () => 'CURRENT_TIMESTAMP' })
  createdAt: Date

  @Column({ type: 'timestamp', default: () => 'CURRENT_TIMESTAMP', onUpdate: 'CURRENT_TIMESTAMP' })
  updatedAt: Date
}


// C:\grua-booking-system-25\client\src\components\UserLocationMarker.jsx
import { useEffect } from 'react';

const UserLocationMarker = ({ map, setPickupLocation }) => {
  useEffect(() => {
    if (navigator.geolocation) {
      navigator.geolocation.getCurrentPosition(
        (position) => {
          const userLocation = {
            lat: position.coords.latitude,
            lng: position.coords.longitude,
          };
          setPickupLocation(userLocation);
          if (map) {
            map.panTo(userLocation);
          }
        },
        (error) => {
          console.error('Error getting user location:', error);
        }
      );
    } else {
      console.error('Geolocation is not supported by this browser.');
    }
  }, [map, setPickupLocation]);

  return null;
};

export default UserLocationMarker;


// C:\grua-booking-system-25\client\src\event\app.module.ts
import { Module } from '@nestjs/common';
import { EventsModule } from './events.module';
import { BookingsModule } from '../components/bookings.module';

@Module({
  imports: [EventsModule, BookingsModule],
})
export class AppModule {}


// C:\grua-booking-system-25\client\src\event\event.controller.ts
import { Controller, Get, Sse } from '@nestjs/common';
import { interval, map } from 'rxjs';
import { EventService } from './event.service';

@Controller('events')
export class EventController {
  constructor(private readonly eventService: EventService) {}

  @Sse('stream')
  streamEvents() {
    return this.eventService.getEvents();
  }
}


// C:\grua-booking-system-25\client\src\event\event.service.ts
import { Injectable } from '@nestjs/common';
import { interval, map } from 'rxjs';

@Injectable()
export class EventService {
  private events = [];

  emitEvent(event: any) {
    this.events.push(event);
  }

  getEvents() {
    return interval(1000).pipe(map(() => ({ data: this.events })));
  }
}


// C:\grua-booking-system-25\client\src\event\events.module.ts
import { Module } from '@nestjs/common';
import { EventController } from './event.controller';
import { EventService } from './event.service';

@Module({
  controllers: [EventController],
  providers: [EventService],
  exports: [EventService],
},)
export class EventsModule {}


// C:\grua-booking-system-25\client\src\integrations\supabase\auth.jsx
import React, { useState } from 'react';
import { supabase } from './supabaseClient';

const Auth = () => {
  const [email, setEmail] = useState('');
  const [password, setPassword] = useState('');

  const handleLogin = async (event) => {
    event.preventDefault();
    const { user, error } = await supabase.auth.signIn({ email, password });
    if (error) {
      console.error('Error logging in:', error.message);
    } else {
      console.log('User logged in:', user);
    }
  };

  const handleSignup = async (event) => {
    event.preventDefault();
    const { user, error } = await supabase.auth.signUp({ email, password });
    if (error) {
      console.error('Error signing up:', error.message);
    } else {
      console.log('User signed up:', user);
    }
  };

  return (
    <div>
      <form onSubmit={handleLogin}>
        <input type="email" value={email} onChange={(e) => setEmail(e.target.value)} placeholder="Email" />
        <input type="password" value={password} onChange={(e) => setPassword(e.target.value)} placeholder="Password" />
        <button type="submit">Login</button>
      </form>
      <form onSubmit={handleSignup}>
        <input type="email" value={email} onChange={(e) => setEmail(e.target.value)} placeholder="Email" />
        <input type="password" value={password} onChange={(e) => setPassword(e.target.value)} placeholder="Password" />
        <button type="submit">Sign Up</button>
      </form>
    </div>
  );
};

export default Auth;


// C:\grua-booking-system-25\client\src\integrations\supabase\index.js


// C:\grua-booking-system-25\client\src\integrations\supabase\supabaseClient.js
import { createClient } from '@supabase/supabase-js';

const supabaseUrl = 'https://your-supabase-url.supabase.co';
const supabaseKey = 'your-supabase-key';

export const supabase = createClient(supabaseUrl, supabaseKey);


// C:\grua-booking-system-25\client\src\pages\About.jsx
import { Box, Text, Heading, VStack, Flex } from '@chakra-ui/react';
import { FaCheckCircle } from 'react-icons/fa';

const About = () => (
  <Box p={4}>
    <Flex direction="column" align="center" justify="center" p={10}>
      <Heading mb={4}>About Our Tow Service</Heading>
      <Text fontSize="lg" mb={6}>We provide reliable and efficient tow services to get you back on the road quickly.</Text>
    </Flex>
    <Box bg="gray.100" p={10}>
      <Heading size="lg" textAlign="center" mb={4}>Our Features</Heading>
      <VStack spacing={5}>
        <Flex align="center">
          <FaCheckCircle size="24px" />
          <Text ml={2}>24/7 Availability</Text>
        </Flex>
        <Flex align="center">
          <FaCheckCircle size="24px" />
          <Text ml={2}>Professional Staff</Text>
        </Flex>
        <Flex align="center">
          <FaCheckCircle size="24px" />
          <Text ml={2}>Affordable Pricing</Text>
        </Flex>
      </VStack>
    </Box>
  </Box>
);

export default About;


// C:\grua-booking-system-25\client\src\pages\BookingForm.jsx
import { useState, useEffect, useRef } from 'react';
import { Box, Button, FormControl, FormLabel, Input, Select, Textarea, VStack, useToast, Heading, Text, Checkbox, Modal, ModalOverlay, ModalContent, ModalHeader, ModalBody, ModalCloseButton } from '@chakra-ui/react';
import { useNavigate, useLocation } from 'react-router-dom';
import { LoadScript, GoogleMap, Marker, DirectionsService, DirectionsRenderer } from '@react-google-maps/api';

const BookingForm = () => {
  const [formData, setFormData] = useState({
    serviceType: '',
    userName: '',
    phoneNumber: '',
    carBrand: '',
    vehicleModel: '',
    vehicleSize: '',
    additionalInfo: '',
    pickupDate: '',
    pickupTime: '',
    origin: { lat: 26.509672, lng: -100.0095504 },
    pickupLocation: null,
    destinationLocation: null,
    distance: 0,
    streetLevel: '',
    neutralPossible: '',
    adaptations: '',
    passengers: '',
  });

  const [directions, setDirections] = useState(null);
  const [tollCost, setTollCost] = useState(0);
  const [isMapLoaded, setIsMapLoaded] = useState(false);
  const [isTermsOpen, setIsTermsOpen] = useState(false);

  const toast = useToast();
  const navigate = useNavigate();
  const location = useLocation();
  const mapRef = useRef(null);

  useEffect(() => {
    if (location.state) {
      const { origin, pickupLocation, destinationLocation } = location.state;
      setFormData((prevData) => ({ ...prevData, origin, pickupLocation, destinationLocation }));
    }
  }, [location.state]);

  const handleChange = (e) => {
    const { name, value } = e.target;
    setFormData({ ...formData, [name]: value });
  };

  const handleSubmit = async (e) => {
    e.preventDefault();
    const { serviceType, userName, phoneNumber, carBrand, vehicleModel, vehicleSize, pickupDate, pickupTime, origin, pickupLocation, destinationLocation, distance, streetLevel, neutralPossible, adaptations, passengers } = formData;

    if (!serviceType || !userName || !phoneNumber || !carBrand || !vehicleModel || !vehicleSize || !pickupDate || !pickupTime || !origin || !pickupLocation || !destinationLocation || !streetLevel || !neutralPossible || !adaptations || !passengers) {
      toast({
        title: 'Error',
        description: 'Please fill in all required fields.',
        status: 'error',
        duration: 5000,
        isClosable: true,
      });
      return;
    }

    const baseCost = 558;
    const costPerKm = 19;
    const totalCost = baseCost + (distance * costPerKm) + tollCost;

    try {
      console.log('Submitting form with data:', formData);
      const response = await fetch('https://valid-endpoint-for-booking.com/bookings', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({ ...formData, totalCost }),
      });

      if (!response.ok) {
        throw new Error('Network response was not ok');
      }

      const data = await response.json();
      navigate('/payment', { state: { formData, totalCost, serviceDetails: { serviceType, distance, pickupLocation, destinationLocation } } });
    } catch (error) {
      console.error('Error submitting form:', error);
      toast({
        title: 'Error',
        description: 'There was a problem processing your booking. Please try again later.',
        status: 'error',
        duration: 5000,
        isClosable: true,
      });
    }
  };

  const handleMapClick = (event) => {
    try {
      if (!formData.pickupLocation) {
        setFormData({ ...formData, pickupLocation: { lat: event.latLng.lat(), lng: event.latLng.lng() } });
      } else if (!formData.destinationLocation) {
        setFormData({ ...formData, destinationLocation: { lat: event.latLng.lat(), lng: event.latLng.lng() } });
      }
    } catch (error) {
      console.error('Error handling map click:', error);
      toast({
        title: 'Error',
        description: 'There was a problem handling the map click. Please try again later.',
        status: 'error',
        duration: 5000,
        isClosable: true,
      });
    }
  };

  const handleReset = () => {
    setFormData({ ...formData, pickupLocation: null, destinationLocation: null });
    setDirections(null);
  };

  const centerPickupMarker = () => {
    if (navigator.geolocation) {
      navigator.geolocation.getCurrentPosition(
        (position) => {
          const userLocation = {
            lat: position.coords.latitude,
            lng: position.coords.longitude,
          };
          setFormData({ ...formData, pickupLocation: userLocation });
          if (mapRef.current) {
            mapRef.current.panTo(userLocation);
          }
        },
        (error) => {
          console.error('Error getting user location:', error);
          toast({
            title: 'Error',
            description: 'There was a problem getting your location. Please try again later.',
            status: 'error',
            duration: 5000,
            isClosable: true,
          });
        }
      );
    } else {
      toast({
        title: 'Error',
        description: 'Geolocation is not supported by this browser.',
        status: 'error',
        duration: 5000,
        isClosable: true,
      });
    }
  };

  const calculateRoute = () => {
    if (formData.pickupLocation && formData.destinationLocation) {
      return (
        <DirectionsService
          options={{
            origin: formData.pickupLocation,
            destination: formData.destinationLocation,
            travelMode: 'DRIVING',
          }}
          callback={(response, status) => {
            if (status === 'OK') {
              setDirections(response);
              const distanceInKm = response.routes[0].legs[0].distance.value / 1000;
              setFormData((prevData) => ({ ...prevData, distance: distanceInKm }));
              fetchTollData(formData.pickupLocation, formData.destinationLocation);
            } else {
              console.error('Error calculating route:', status);
              toast({
                title: 'Error',
                description: 'There was a problem calculating the route. Please try again later.',
                status: 'error',
                duration: 5000,
                isClosable: true,
              });
            }
          }}
        />
      );
    }
    return null;
  };

  const fetchTollData = async (origin, destination) => {
    try {
      const response = await fetch(`https://api.tollguru.com/v1/calc/route?source=${origin.lat},${origin.lng}&destination=${destination.lat},${destination.lng}`);
      const data = await response.json();
      const tolls = data.tolls || 0;
      setTollCost(tolls);
    } catch (error) {
      console.error('Error fetching toll data:', error);
      toast({
        title: 'Error',
        description: 'There was a problem fetching toll data. Please try again later.',
        status: 'error',
        duration: 5000,
        isClosable: true,
      });
    }
  };

  return (
    <Box p={4}>
      <VStack spacing={4} align="stretch">
        <Heading as="h1" mb={4}>Booking Form</Heading>
        <form onSubmit={handleSubmit}>
          <FormControl id="serviceType" isRequired>
            <FormLabel>Service Type</FormLabel>
            <Select name="serviceType" value={formData.serviceType} onChange={handleChange}>
              <option value="">Select Service Type</option>
              <option value="Tow">Tow</option>
              <option value="Platform">Platform</option>
              <option value="Roadside Assistance">Roadside Assistance</option>
            </Select>
          </FormControl>
          <FormControl id="userName" isRequired>
            <FormLabel>User Name</FormLabel>
            <Input type="text" name="userName" value={formData.userName} onChange={handleChange} />
          </FormControl>
          <FormControl id="phoneNumber" isRequired>
            <FormLabel>Phone Number</FormLabel>
            <Input type="tel" name="phoneNumber" value={formData.phoneNumber} onChange={handleChange} />
          </FormControl>
          <FormControl id="carBrand" isRequired>
            <FormLabel>Car Brand</FormLabel>
            <Input type="text" name="carBrand" value={formData.carBrand} onChange={handleChange} />
          </FormControl>
          <FormControl id="vehicleModel" isRequired>
            <FormLabel>Vehicle Model</FormLabel>
            <Input type="text" name="vehicleModel" value={formData.vehicleModel} onChange={handleChange} />
          </FormControl>
          <FormControl id="vehicleSize" isRequired>
            <FormLabel>Vehicle Size</FormLabel>
            <Select name="vehicleSize" value={formData.vehicleSize} onChange={handleChange}>
              <option value="">Select Vehicle Size</option>
              <option value="Small">Small</option>
              <option value="Medium">Medium</option>
              <option value="Large">Large</option>
            </Select>
          </FormControl>
          <FormControl id="additionalInfo">
            <FormLabel>Additional Information</FormLabel>
            <Textarea name="additionalInfo" value={formData.additionalInfo} onChange={handleChange} />
          </FormControl>
          <FormControl id="pickupDate" isRequired>
            <FormLabel>Pickup Date</FormLabel>
            <Input type="date" name="pickupDate" value={formData.pickupDate} onChange={handleChange} />
          </FormControl>
          <FormControl id="pickupTime" isRequired>
            <FormLabel>Pickup Time</FormLabel>
            <Input type="time" name="pickupTime" value={formData.pickupTime} onChange={handleChange} />
          </FormControl>
          <FormControl id="streetLevel" isRequired>
            <FormLabel>Is the vehicle at street level?</FormLabel>
            <Select name="streetLevel" value={formData.streetLevel} onChange={handleChange}>
              <option value="">Select</option>
              <option value="Yes">Yes</option>
              <option value="No">No</option>
            </Select>
          </FormControl>
          <FormControl id="neutralPossible" isRequired>
            <FormLabel>Is it possible to put neutral?</FormLabel>
            <Select name="neutralPossible" value={formData.neutralPossible} onChange={handleChange}>
              <option value="">Select</option>
              <option value="Yes">Yes</option>
              <option value="No">No</option>
            </Select>
          </FormControl>
          <FormControl id="adaptations" isRequired>
            <FormLabel>Does the vehicle have adaptations that increase its length or width?</FormLabel>
            <Select name="adaptations" value={formData.adaptations} onChange={handleChange}>
              <option value="">Select</option>
              <option value="Yes">Yes</option>
              <option value="No">No</option>
            </Select>
          </FormControl>
          <FormControl id="passengers" isRequired>
            <FormLabel>Number of passengers</FormLabel>
            <Input type="number" name="passengers" value={formData.passengers} onChange={handleChange} />
          </FormControl>
          <FormControl id="terms" isRequired>
            <Checkbox onChange={() => setIsTermsOpen(true)}>I accept terms and conditions</Checkbox>
          </FormControl>
          <Button colorScheme="blue" type="submit">Book Now</Button>
        </form>
        <LoadScript
          googleMapsApiKey={process.env.REACT_APP_GOOGLE_MAPS_API_KEY}
          onLoad={() => setIsMapLoaded(true)}
          onError={() => {
            toast({
              title: 'Error',
              description: 'Failed to load Google Maps API. Please check your API key and internet connection.',
              status: 'error',
              duration: 5000,
              isClosable: true,
            });
          }}
        >
          {isMapLoaded ? (
            <GoogleMap
              center={formData.origin}
              zoom={10}
              mapContainerStyle={{ height: '400px', width: '100%' }}
              onClick={handleMapClick}
              onLoad={(map) => (mapRef.current = map)}
              options={{
                zoomControl: true,
                zoomControlOptions: {
                  position: window.google.maps.ControlPosition.RIGHT_CENTER,
                },
                streetViewControl: false,
                mapTypeControl: false,
                fullscreenControl: false,
              }}
            >
              {formData.pickupLocation && (
                <Marker
                  position={formData.pickupLocation}
                  draggable={true}
                  onDragEnd={(e) => setFormData({ ...formData, pickupLocation: { lat: e.latLng.lat(), lng: e.latLng.lng() } })}
                />
              )}
              {formData.destinationLocation && (
                <Marker
                  position={formData.destinationLocation}
                  draggable={true}
                  onDragEnd={(e) => setFormData({ ...formData, destinationLocation: { lat: e.latLng.lat(), lng: e.latLng.lng() } })}
                />
              )}
              {calculateRoute()}
              {directions && <DirectionsRenderer directions={directions} onError={(error) => {
                console.error('Error rendering directions:', error);
                toast({
                  title: 'Error',
                  description: 'There was a problem rendering the directions. Please try again later.',
                  status: 'error',
                  duration: 5000,
                  isClosable: true,
                });
              }} />}
            </GoogleMap>
          ) : (
            <Text>Loading map...</Text>
          )}
        </LoadScript>
        <Button onClick={handleReset} mt={4}>Reset</Button>
        <Button onClick={centerPickupMarker} mt={4} ml={4} colorScheme="blue">Center User</Button>
      </VStack>
      <Modal isOpen={isTermsOpen} onClose={() => setIsTermsOpen(false)}>
        <ModalOverlay />
        <ModalContent>
          <ModalHeader>Terms and Conditions</ModalHeader>
          <ModalCloseButton />
          <ModalBody>
            <Text>The services may have a higher cost which must be paid when arriving at the destination, otherwise the vehicle will not leave the platform and will be taken to the corralon.</Text>
            <Text>Remember that only two passengers can go in the tow truck, if you require a taxi we can provide it.</Text>
          </ModalBody>
        </ModalContent>
      </Modal>
    </Box>
  );
};

export default BookingForm;


// C:\grua-booking-system-25\client\src\pages\Confirmation.jsx
import { Box, Text, VStack } from '@chakra-ui/react';
import { useLocation } from 'react-router-dom';

const Confirmation = () => {
  const location = useLocation();
  const { formData } = location.state || {};

  return (
    <Box p={4}>
      <VStack spacing={4} align="stretch">
        <Text fontSize="2xl">Booking Confirmation</Text>
        {formData ? (
          <>
            <Text>Service Type: {formData.serviceType}</Text>
            <Text>User Name: {formData.userName}</Text>
            <Text>Phone Number: {formData.phoneNumber}</Text>
            <Text>Vehicle Make: {formData.vehicleMake}</Text>
            <Text>Vehicle Model: {formData.vehicleModel}</Text>
            <Text>Vehicle Size: {formData.vehicleSize}</Text>
            <Text>Additional Information: {formData.additionalInfo}</Text>
            <Text>Pickup Date: {formData.pickupDate}</Text>
            <Text>Pickup Time: {formData.pickupTime}</Text>
          </>
        ) : (
          <Text>No booking details available.</Text>
        )}
      </VStack>
    </Box>
  );
};

export default Confirmation;


// C:\grua-booking-system-25\client\src\pages\Contact.jsx
import { Box, Text, Heading, VStack, FormControl, FormLabel, Input, Textarea, Button } from '@chakra-ui/react';

const Contact = () => (
  <Box p={4}>
    <Heading mb={4} textAlign="center">Contact Us</Heading>
    <VStack spacing={4} align="stretch" maxW="md" mx="auto">
      <FormControl id="name">
        <FormLabel>Name</FormLabel>
        <Input type="text" />
      </FormControl>
      <FormControl id="email">
        <FormLabel>Email</FormLabel>
        <Input type="email" />
      </FormControl>
      <FormControl id="message">
        <FormLabel>Message</FormLabel>
        <Textarea />
      </FormControl>
      <Button colorScheme="blue" type="submit">Send Message</Button>
    </VStack>
  </Box>
);

export default Contact;


// C:\grua-booking-system-25\client\src\pages\Index.jsx
import { Container, Text, VStack, Button } from "@chakra-ui/react";
import { useNavigate } from "react-router-dom";

const Index = () => {
  const navigate = useNavigate();

  const handleBookNow = () => {
    navigate("/booking");
  };

  return (
    <Container centerContent maxW="container.md" height="100vh" display="flex" flexDirection="column" justifyContent="center" alignItems="center">
      <VStack spacing={4}>
        <Text fontSize="2xl">Welcome to Tow Service Booking</Text>
        <Text>Start by selecting a service or navigating through the menu.</Text>
      <Button colorScheme="blue" onClick={handleBookNow}>Book Now</Button>
      </VStack>
    </Container>
  );
};

export default Index;


// C:\grua-booking-system-25\client\src\pages\Payment.jsx
import { Box, Text, VStack, Button, useToast } from '@chakra-ui/react';
import { useLocation, useNavigate } from 'react-router-dom';
import { useState } from 'react';

const Payment = () => {
  const location = useLocation();
  const navigate = useNavigate();
  const toast = useToast();
  const { formData, totalCost, serviceDetails } = location.state || {};
  const [isProcessing, setIsProcessing] = useState(false);

  const handlePayment = async () => {
    setIsProcessing(true);
    try {
      // Simulate payment processing delay
      await new Promise((resolve) => setTimeout(resolve, 2000));
      
      // Simulate successful payment
      const paymentSuccess = true;

      if (paymentSuccess) {
        console.log('Payment processed for:', totalCost);
        navigate('/confirmation', { state: { formData } });
      } else {
        throw new Error('Payment failed');
      }
    } catch (error) {
      toast({
        title: 'Payment Error',
        description: error.message,
        status: 'error',
        duration: 5000,
        isClosable: true,
      });
    } finally {
      setIsProcessing(false);
    }
  };

  return (
    <Box p={4}>
      <VStack spacing={4} align="stretch">
        <Text fontSize="2xl">Payment</Text>
        {formData ? (
          <>
            <Text>Service Type: {formData.serviceType}</Text>
            <Text>User Name: {formData.userName}</Text>
            <Text>Phone Number: {formData.phoneNumber}</Text>
            <Text>Vehicle Make: {formData.vehicleMake}</Text>
            <Text>Vehicle Model: {formData.vehicleModel}</Text>
            <Text>Vehicle Size: {formData.vehicleSize}</Text>
            <Text>Pickup Date: {formData.pickupDate}</Text>
            <Text>Pickup Time: {formData.pickupTime}</Text>
            <Text>Total Cost: ${totalCost}</Text>
            <Text>Distance: {serviceDetails.distance} km</Text>
            <Text>Pickup Location: {JSON.stringify(serviceDetails.pickupLocation)}</Text>
            <Text>Destination Location: {JSON.stringify(serviceDetails.destinationLocation)}</Text>
            <Button 
              colorScheme="blue" 
              onClick={handlePayment} 
              isLoading={isProcessing}
            >
              Pay Now
            </Button>
          </>
        ) : (
          <Text>No payment details available.</Text>
        )}
      </VStack>
    </Box>
  );
};

export default Payment;


// C:\grua-booking-system-25\client\src\sse\sse.controller.ts
import { Controller, Sse, MessageEvent } from '@nestjs/common';
import { Observable } from 'rxjs';
import { EventEmitter2 } from '@nestjs/event-emitter';
import { TowingRequestApplicationEvent } from '../towingRequest/application/towingRequest.application.event';

@Controller('sse')
export class SseController {
  constructor(private eventEmitter: EventEmitter2) {}

  @Sse('events')
  sendEvents(): Observable<MessageEvent> {
    return new Observable((observer) => {
      const onTowingRequestCreated = (payload) => {
        observer.next({ data: payload });
      };

      this.eventEmitter.on(TowingRequestApplicationEvent.TowingRequestCreated.key, onTowingRequestCreated);

      return () => {
        this.eventEmitter.off(TowingRequestApplicationEvent.TowingRequestCreated.key, onTowingRequestCreated);
      };
    });
  }
}


// C:\grua-booking-system-25\client\src\sse\sse.module.ts
import { Module } from '@nestjs/common';
import { SseController } from './sse.controller';
import { EventEmitterModule } from '@nestjs/event-emitter';

@Module({
  imports: [EventEmitterModule.forRoot()],
  controllers: [SseController],
})
export class SseModule {}


// C:\grua-booking-system-25\client\src\towingRequest\application\towingRequest.application.event.ts
export namespace TowingRequestApplicationEvent {
  export class TowingRequestCreated {
    static readonly key = 'towingRequest.created';
    constructor(public readonly id: string, public readonly userId: string) {}
  }
}


// C:\grua-booking-system-25\client\src\towingRequest\application\towingRequest.application.module.ts
import { Module } from '@nestjs/common';
import { AuthenticationDomainModule } from '../authentication/authentication.domain.module';
import { TowingRequestDomainModule } from '../towing-request/towingRequest.domain.module';
import { UserDomainModule } from '../user/user.domain.module';
import { TowingRequestController } from './towingRequest.controller';
import { TowingRequestByUserController } from './towingRequestByUser.controller';
import { EventService } from '../event/event.service';
import { TowingRequestDomainFacade } from '../towingRequest/towingRequest.domain.facade';
import { AuthenticationDomainFacade } from '../authentication/authentication.domain.facade';
import { NewService } from '../new/new.service';

@Module({
  imports: [
    AuthenticationDomainModule,
    TowingRequestDomainModule,
    UserDomainModule,
  ],
  controllers: [TowingRequestController, TowingRequestByUserController],
  providers: [
    EventService,
    TowingRequestDomainFacade,
    {
      provide: 'AuthenticationDomainFacade',
      useClass: AuthenticationDomainFacade,
    },
    NewService,
  ],
})
export class TowingRequestApplicationModule {}


// C:\grua-booking-system-25\client\src\towingRequest\application\towingRequest.controller.ts
import { Controller, Get, Post, Patch, Delete, Body, Param } from '@nestjs/common';
import { EventService } from '../event/event.service';
import { TowingRequestDomainFacade } from '../towingRequest/towingRequest.domain.facade';
import { AuthenticationDomainFacade } from '../authentication/authentication.domain.facade';
import { TowingRequestCreateDto, TowingRequestUpdateDto } from './towingRequest.dto';
import { TowingRequestApplicationEvent } from './towingRequest.application.event;

@Controller('/v1/towingRequests')
export class TowingRequestController {
  constructor(
    private readonly eventService: EventService,
    private readonly towingRequestDomainFacade: TowingRequestDomainFacade,
    private readonly authenticationDomainFacade: AuthenticationDomainFacade,
  ) {}

  @Get()
  async findMany() {
    return this.towingRequestDomainFacade.findMany();
  }

  @Post()
  async create(@Body() createDto: TowingRequestCreateDto) {
    const towingRequest = await this.towingRequestDomainFacade.create(createDto);
    this.eventService.emit(new TowingRequestApplicationEvent.TowingRequestCreated(towingRequest.id, towingRequest.userId));
    return towingRequest;
  }

  @Get(':id')
  async findOne(@Param('id') id: string) {
    return this.towingRequestDomainFacade.findOne(id);
  }

  @Patch(':id')
  async update(@Param('id') id: string, @Body() updateDto: TowingRequestUpdateDto) {
    return this.towingRequestDomainFacade.update(id, updateDto);
  }

  @Delete(':id')
  async delete(@Param('id') id: string) {
    return this.towingRequestDomainFacade.delete(id);
  }
}


// C:\grua-booking-system-25\client\src\towingRequest\application\towingRequest.dto.ts
import { IsString, IsNotEmpty, IsOptional } from 'class-validator';

export class TowingRequestCreateDto {
  @IsString()
  @IsNotEmpty()
  pickupLocation: string;

  @IsString()
  @IsNotEmpty()
  destinationLocation: string;

  @IsString()
  @IsOptional()
  additionalInfo?: string;
}

export class TowingRequestUpdateDto {
  @IsString()
  @IsOptional()
  pickupLocation?: string;

  @IsString()
  @IsOptional()
  destinationLocation?: string;

  @IsString()
  @IsOptional()
  additionalInfo?: string;
}


// C:\grua-booking-system-25\client\src\towingRequest\application\towingRequestByUser.controller.ts
import { Controller, Get, Param } from '@nestjs/common';
import { TowingRequestDomainFacade } from '../towingRequest/towingRequest.domain.facade';

@Controller('/v1/users/:userId/towingRequests')
export class TowingRequestByUserController {
  constructor(private readonly towingRequestDomainFacade: TowingRequestDomainFacade) {}

  @Get()
  async findByUser(@Param('userId') userId: string) {
    return this.towingRequestDomainFacade.findByUser(userId);
  }
}


// C:\grua-booking-system-25\client\src\towingRequest\towingRequest.domain.facade.ts
import { Injectable } from '@nestjs/common';
import { TowingRequest } from './towingRequest.entity';

@Injectable()
export class TowingRequestDomainFacade {
  private towingRequests: TowingRequest[] = [];

  public findMany(): TowingRequest[] {
    return this.towingRequests;
  }

  public create(createDto: TowingRequest): TowingRequest {
    const newRequest = { ...createDto, id: Date.now().toString() };
    this.towingRequests.push(newRequest);
    return newRequest;
  }

  public findOne(id: string): TowingRequest | undefined {
    return this.towingRequests.find(request => request.id === id);
  }

  public update(id: string, updateDto: Partial<TowingRequest>): TowingRequest | undefined {
    const requestIndex = this.towingRequests.findIndex(request => request.id === id);
    if (requestIndex > -1) {
      this.towingRequests[requestIndex] = { ...this.towingRequests[requestIndex], ...updateDto };
      return this.towingRequests[requestIndex];
    }
    return undefined;
  }

  public delete(id: string): boolean {
    const requestIndex = this.towingRequests.findIndex(request => request.id === id);
    if (requestIndex > -1) {
      this.towingRequests.splice(requestIndex, 1);
      return true;
    }
    return false;
  }

  public findByUser(userId: string): TowingRequest[] {
    return this.towingRequests.filter(request => request.userId === userId);
  }
}


// C:\grua-booking-system-25\client\src\towingRequest\towingRequest.domain.module.ts
import { Module } from '@nestjs/common';
import { TowingRequestDomainFacade } from './towingRequest.domain.facade';

@Module({
  providers: [TowingRequestDomainFacade],
  exports: [TowingRequestDomainFacade],
})
export class TowingRequestDomainModule {}


// C:\grua-booking-system-25\client\src\towingRequest\towingRequest.entity.ts
export class TowingRequest {
  id: string;
  userId: string;
  pickupLocation: string;
  destinationLocation: string;
  additionalInfo?: string;
}


// C:\grua-booking-system-25\client\src\towingRequest\application\towingRequest.application.event.ts
export namespace TowingRequestApplicationEvent {
  export class TowingRequestCreated {
    static readonly key = 'towingRequest.created';
    constructor(public readonly id: string, public readonly userId: string) {}
  }
}


// C:\grua-booking-system-25\client\src\towingRequest\application\towingRequest.application.module.ts
import { Module } from '@nestjs/common';
import { AuthenticationDomainModule } from '../authentication/authentication.domain.module';
import { TowingRequestDomainModule } from '../towing-request/towingRequest.domain.module';
import { UserDomainModule } from '../user/user.domain.module';
import { TowingRequestController } from './towingRequest.controller';
import { TowingRequestByUserController } from './towingRequestByUser.controller';
import { EventService } from '../event/event.service';
import { TowingRequestDomainFacade } from '../towingRequest/towingRequest.domain.facade';
import { AuthenticationDomainFacade } from '../authentication/authentication.domain.facade';
import { NewService } from '../new/new.service';

@Module({
  imports: [
    AuthenticationDomainModule,
    TowingRequestDomainModule,
    UserDomainModule,
  ],
  controllers: [TowingRequestController, TowingRequestByUserController],
  providers: [
    EventService,
    TowingRequestDomainFacade,
    {
      provide: 'AuthenticationDomainFacade',
      useClass: AuthenticationDomainFacade,
    },
    NewService,
  ],
})
export class TowingRequestApplicationModule {}


// C:\grua-booking-system-25\client\src\towingRequest\application\towingRequest.controller.ts
import { Controller, Get, Post, Patch, Delete, Body, Param } from '@nestjs/common';
import { EventService } from '../event/event.service';
import { TowingRequestDomainFacade } from '../towingRequest/towingRequest.domain.facade';
import { AuthenticationDomainFacade } from '../authentication/authentication.domain.facade';
import { TowingRequestCreateDto, TowingRequestUpdateDto } from './towingRequest.dto';
import { TowingRequestApplicationEvent } from './towingRequest.application.event;

@Controller('/v1/towingRequests')
export class TowingRequestController {
  constructor(
    private readonly eventService: EventService,
    private readonly towingRequestDomainFacade: TowingRequestDomainFacade,
    private readonly authenticationDomainFacade: AuthenticationDomainFacade,
  ) {}

  @Get()
  async findMany() {
    return this.towingRequestDomainFacade.findMany();
  }

  @Post()
  async create(@Body() createDto: TowingRequestCreateDto) {
    const towingRequest = await this.towingRequestDomainFacade.create(createDto);
    this.eventService.emit(new TowingRequestApplicationEvent.TowingRequestCreated(towingRequest.id, towingRequest.userId));
    return towingRequest;
  }

  @Get(':id')
  async findOne(@Param('id') id: string) {
    return this.towingRequestDomainFacade.findOne(id);
  }

  @Patch(':id')
  async update(@Param('id') id: string, @Body() updateDto: TowingRequestUpdateDto) {
    return this.towingRequestDomainFacade.update(id, updateDto);
  }

  @Delete(':id')
  async delete(@Param('id') id: string) {
    return this.towingRequestDomainFacade.delete(id);
  }
}


// C:\grua-booking-system-25\client\src\towingRequest\application\towingRequest.dto.ts
import { IsString, IsNotEmpty, IsOptional } from 'class-validator';

export class TowingRequestCreateDto {
  @IsString()
  @IsNotEmpty()
  pickupLocation: string;

  @IsString()
  @IsNotEmpty()
  destinationLocation: string;

  @IsString()
  @IsOptional()
  additionalInfo?: string;
}

export class TowingRequestUpdateDto {
  @IsString()
  @IsOptional()
  pickupLocation?: string;

  @IsString()
  @IsOptional()
  destinationLocation?: string;

  @IsString()
  @IsOptional()
  additionalInfo?: string;
}


// C:\grua-booking-system-25\client\src\towingRequest\application\towingRequestByUser.controller.ts
import { Controller, Get, Param } from '@nestjs/common';
import { TowingRequestDomainFacade } from '../towingRequest/towingRequest.domain.facade';

@Controller('/v1/users/:userId/towingRequests')
export class TowingRequestByUserController {
  constructor(private readonly towingRequestDomainFacade: TowingRequestDomainFacade) {}

  @Get()
  async findByUser(@Param('userId') userId: string) {
    return this.towingRequestDomainFacade.findByUser(userId);
  }
}


// C:\grua-booking-system-25\client\src\user\user.domain.module.ts
import { Module } from '@nestjs/common';

@Module({})
export class UserDomainModule {}


// C:\grua-booking-system-25\configFiles\.gitignore
dist
node_modules
.env.local
.DS_Store
node_modules/
.bin/


// C:\grua-booking-system-25\configFiles\docker-compose.yml
version: "2"
services:
  node:
    image: "node:current"
    user: "node"
    working_dir: /home/node/app
    environment:
      - NODE_ENV=development
    volumes:
      - ./:/home/node/app
    ports:
      - "8080:8080"
    command: "sh run.sh"


// C:\grua-booking-system-25\rootFiles\.env
VITE_SUPABASE_PROJECT_URL=https://gjwhxrajesykwmomorhw.supabase.co
VITE_SUPABASE_API_KEY=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Imdqd2h4cmFqZXN5a3dtb21vcmh3Iiwicm9sZSI6ImFub24iLCJpYXQiOjE3MTg4NTYzOTIsImV4cCI6MjAzNDQzMjM5Mn0.fDk88E2zfp64VhiEYL7KCh7KSEF1mNioaII7IaRwRgQ
googleMapsApiKey=AIzaSyDAm8xD2uVbggcV_9d7zTdjMTLvZc03ysw
REACT_APP_GOOGLE_MAPS_API_KEY=AIzaSyDAm8xD2uVbggcV_9d7zTdjMTLvZc03ysw
mapboxgl.accessToken =pk.eyJ1IjoiaXNyYWVscmVpZXMiLCJhIjoiY2xxZGk3dDZsMGQ4YTJscGVwenE0dzFsMSJ9.kB96j76BfiUAirhMZ63Siw


// C:\grua-booking-system-25\rootFiles\.eslintrc.cjs
module.exports = {
  root: true,
  env: { browser: true, es2020: true },
  extends: [
    "eslint:recommended",
    "plugin:react/recommended",
    "plugin:react/jsx-runtime",
    "plugin:react-hooks/recommended",
  ],
  ignorePatterns: ["dist", ".eslintrc.cjs"],
  parserOptions: { ecmaVersion: "latest", sourceType: "module" },
  settings: { react: { version: "18.2" } },
  plugins: ["react-refresh"],
  rules: {
    "react-refresh/only-export-components": [
      "warn",
      { allowConstantExport: true },
    ],
  },
};


// C:\grua-booking-system-25\rootFiles\gpt-engineer.toml
[run]
build = "npm run build"

[gptengineer-app]
project_id = "..."


// C:\grua-booking-system-25\rootFiles\index.html
<html lang="en">
  <head>
    <meta charset="utf-8" />
    <meta content="width=device-width, initial-scale=1.0" name="viewport" />
    <title>grua-booking-system</title>
  </head>
  <body>
    <div id="root"></div>
    <script src="/src/main.jsx" type="module"></script>
    <script src="/.gpt_engineer_internals/report-url-change.js" type="module"></script>
  </body>
</html>


// C:\grua-booking-system-25\rootFiles\run.sh
#!/bin/bash
npm install
npm run dev


// C:\grua-booking-system-25\rootFiles\vite.config.js
import { defineConfig } from "vite";
import react from "@vitejs/plugin-react";

export default defineConfig({
  server: {
    host: "::",
    port: "8080",
    strictPort: true,
    clearScreen: false,
    logLevel: "info",
    warmup: {
      clientFiles: ["src/**/*.(js|jsx|ts|tsx|html|css)", "index.html"]
    },
  },
  plugins: [react()],
  base: ""
});


// C:\grua-booking-system-25\server\dist\core\accessControl\decorators\accessControl.role.decorator.js
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.AccessControlRoleDecorator = void 0;
var common_1 = require("@nestjs/common");
var AccessControlRoleDecorator;
(function (AccessControlRoleDecorator) {
    var KEY = 'access-control.roles';
    AccessControlRoleDecorator.set = function () {
        var names = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            names[_i] = arguments[_i];
        }
        return (0, common_1.SetMetadata)(KEY, names);
    };
    function get(context, reflector) {
        var _a;
        return ((_a = reflector.getAllAndOverride(KEY, [
            context.getHandler(),
            context.getClass(),
        ])) !== null && _a !== void 0 ? _a : []);
    }
    AccessControlRoleDecorator.get = get;
})(AccessControlRoleDecorator || (exports.AccessControlRoleDecorator = AccessControlRoleDecorator = {}));


// C:\grua-booking-system-25\server\dist\core\accessControl\domain\role\accessControl.role.js
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });


// C:\grua-booking-system-25\server\dist\core\accessControl\domain\role\accessControl.role.manager.js
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.AccessControlRoleManager = void 0;
var AccessControlRoleManager;
(function (AccessControlRoleManager) {
    function isStatusFound(status) {
        return status === 'found';
    }
    AccessControlRoleManager.isStatusFound = isStatusFound;
    function isStatusNotFound(status) {
        return status === 'not-found';
    }
    AccessControlRoleManager.isStatusNotFound = isStatusNotFound;
    function isStatusUnknown(status) {
        return status === 'unknown';
    }
    AccessControlRoleManager.isStatusUnknown = isStatusUnknown;
})(AccessControlRoleManager || (exports.AccessControlRoleManager = AccessControlRoleManager = {}));


// C:\grua-booking-system-25\server\dist\core\accessControl\domain\role\index.js
"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", { value: true });
__exportStar(require("./accessControl.role"), exports);
__exportStar(require("./accessControl.role.manager"), exports);


// C:\grua-booking-system-25\server\dist\core\accessControl\domain\role\accessControl.role.js
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });


// C:\grua-booking-system-25\server\dist\core\accessControl\domain\role\accessControl.role.manager.js
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.AccessControlRoleManager = void 0;
var AccessControlRoleManager;
(function (AccessControlRoleManager) {
    function isStatusFound(status) {
        return status === 'found';
    }
    AccessControlRoleManager.isStatusFound = isStatusFound;
    function isStatusNotFound(status) {
        return status === 'not-found';
    }
    AccessControlRoleManager.isStatusNotFound = isStatusNotFound;
    function isStatusUnknown(status) {
        return status === 'unknown';
    }
    AccessControlRoleManager.isStatusUnknown = isStatusUnknown;
})(AccessControlRoleManager || (exports.AccessControlRoleManager = AccessControlRoleManager = {}));


// C:\grua-booking-system-25\server\dist\core\accessControl\domain\role\index.js
"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", { value: true });
__exportStar(require("./accessControl.role"), exports);
__exportStar(require("./accessControl.role.manager"), exports);


// C:\grua-booking-system-25\server\dist\core\accessControl\guards\accessControl.guard.js
"use strict";
var __esDecorate = (this && this.__esDecorate) || function (ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {
    function accept(f) { if (f !== void 0 && typeof f !== "function") throw new TypeError("Function expected"); return f; }
    var kind = contextIn.kind, key = kind === "getter" ? "get" : kind === "setter" ? "set" : "value";
    var target = !descriptorIn && ctor ? contextIn["static"] ? ctor : ctor.prototype : null;
    var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});
    var _, done = false;
    for (var i = decorators.length - 1; i >= 0; i--) {
        var context = {};
        for (var p in contextIn) context[p] = p === "access" ? {} : contextIn[p];
        for (var p in contextIn.access) context.access[p] = contextIn.access[p];
        context.addInitializer = function (f) { if (done) throw new TypeError("Cannot add initializers after decoration has completed"); extraInitializers.push(accept(f || null)); };
        var result = (0, decorators[i])(kind === "accessor" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);
        if (kind === "accessor") {
            if (result === void 0) continue;
            if (result === null || typeof result !== "object") throw new TypeError("Object expected");
            if (_ = accept(result.get)) descriptor.get = _;
            if (_ = accept(result.set)) descriptor.set = _;
            if (_ = accept(result.init)) initializers.unshift(_);
        }
        else if (_ = accept(result)) {
            if (kind === "field") initializers.unshift(_);
            else descriptor[key] = _;
        }
    }
    if (target) Object.defineProperty(target, contextIn.name, descriptor);
    done = true;
};
var __runInitializers = (this && this.__runInitializers) || function (thisArg, initializers, value) {
    var useValue = arguments.length > 2;
    for (var i = 0; i < initializers.length; i++) {
        value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);
    }
    return useValue ? value : void 0;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (g && (g = 0, op[0] && (_ = 0)), _) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __setFunctionName = (this && this.__setFunctionName) || function (f, name, prefix) {
    if (typeof name === "symbol") name = name.description ? "[".concat(name.description, "]") : "";
    return Object.defineProperty(f, "name", { configurable: true, value: prefix ? "".concat(prefix, " ", name) : name });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.AccessControlGuard = void 0;
var common_1 = require("@nestjs/common");
var AccessControlGuard = function () {
    var _classDecorators = [(0, common_1.Injectable)()];
    var _classDescriptor;
    var _classExtraInitializers = [];
    var _classThis;
    var AccessControlGuard = _classThis = /** @class */ (function () {
        function AccessControlGuard_1(reflector, service) {
            this.reflector = reflector;
            this.service = service;
        }
        AccessControlGuard_1.prototype.canActivate = function (context) {
            return __awaiter(this, void 0, void 0, function () {
                return __generator(this, function (_a) {
                    return [2 /*return*/, this.service.run(this.reflector, context)];
                });
            });
        };
        return AccessControlGuard_1;
    }());
    __setFunctionName(_classThis, "AccessControlGuard");
    (function () {
        var _metadata = typeof Symbol === "function" && Symbol.metadata ? Object.create(null) : void 0;
        __esDecorate(null, _classDescriptor = { value: _classThis }, _classDecorators, { kind: "class", name: _classThis.name, metadata: _metadata }, null, _classExtraInitializers);
        AccessControlGuard = _classThis = _classDescriptor.value;
        if (_metadata) Object.defineProperty(_classThis, Symbol.metadata, { enumerable: true, configurable: true, writable: true, value: _metadata });
        __runInitializers(_classThis, _classExtraInitializers);
    })();
    return AccessControlGuard = _classThis;
}();
exports.AccessControlGuard = AccessControlGuard;


// C:\grua-booking-system-25\server\dist\core\accessControl\internal\accessControl.provider.js
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });


// C:\grua-booking-system-25\server\dist\core\accessControl\internal\accessControl.service.js
"use strict";
var __esDecorate = (this && this.__esDecorate) || function (ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {
    function accept(f) { if (f !== void 0 && typeof f !== "function") throw new TypeError("Function expected"); return f; }
    var kind = contextIn.kind, key = kind === "getter" ? "get" : kind === "setter" ? "set" : "value";
    var target = !descriptorIn && ctor ? contextIn["static"] ? ctor : ctor.prototype : null;
    var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});
    var _, done = false;
    for (var i = decorators.length - 1; i >= 0; i--) {
        var context = {};
        for (var p in contextIn) context[p] = p === "access" ? {} : contextIn[p];
        for (var p in contextIn.access) context.access[p] = contextIn.access[p];
        context.addInitializer = function (f) { if (done) throw new TypeError("Cannot add initializers after decoration has completed"); extraInitializers.push(accept(f || null)); };
        var result = (0, decorators[i])(kind === "accessor" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);
        if (kind === "accessor") {
            if (result === void 0) continue;
            if (result === null || typeof result !== "object") throw new TypeError("Object expected");
            if (_ = accept(result.get)) descriptor.get = _;
            if (_ = accept(result.set)) descriptor.set = _;
            if (_ = accept(result.init)) initializers.unshift(_);
        }
        else if (_ = accept(result)) {
            if (kind === "field") initializers.unshift(_);
            else descriptor[key] = _;
        }
    }
    if (target) Object.defineProperty(target, contextIn.name, descriptor);
    done = true;
};
var __runInitializers = (this && this.__runInitializers) || function (thisArg, initializers, value) {
    var useValue = arguments.length > 2;
    for (var i = 0; i < initializers.length; i++) {
        value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);
    }
    return useValue ? value : void 0;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (g && (g = 0, op[0] && (_ = 0)), _) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __setFunctionName = (this && this.__setFunctionName) || function (f, name, prefix) {
    if (typeof name === "symbol") name = name.description ? "[".concat(name.description, "]") : "";
    return Object.defineProperty(f, "name", { configurable: true, value: prefix ? "".concat(prefix, " ", name) : name });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.AccessControlService = void 0;
var common_1 = require("@nestjs/common");
var context_1 = require("@server/helpers/context");
var utility_1 = require("@server/helpers/utility");
var accessControl_role_decorator_1 = require("../decorators/accessControl.role.decorator");
var AccessControlService = function () {
    var _classDecorators = [(0, common_1.Injectable)()];
    var _classDescriptor;
    var _classExtraInitializers = [];
    var _classThis;
    var AccessControlService = _classThis = /** @class */ (function () {
        function AccessControlService_1(authorizationAccessControlService, validator) {
            this.authorizationAccessControlService = authorizationAccessControlService;
            this.validator = validator;
        }
        AccessControlService_1.prototype.run = function (reflector, context) {
            return __awaiter(this, void 0, void 0, function () {
                var request, constraints, canSkip, userData;
                var _this = this;
                return __generator(this, function (_a) {
                    switch (_a.label) {
                        case 0:
                            request = context_1.ContextHelper.toRequest(context);
                            constraints = this.getConstraints(reflector, context);
                            canSkip = utility_1.Utility.isEmpty(constraints.roles);
                            if (canSkip) {
                                return [2 /*return*/, true];
                            }
                            return [4 /*yield*/, this.authorizationAccessControlService.findUserData(request)];
                        case 1:
                            userData = _a.sent();
                            return [4 /*yield*/, this.validator
                                    .check({
                                    userData: userData,
                                    constraints: constraints,
                                })
                                    .catch(function (error) {
                                    _this.authorizationAccessControlService.onError(error);
                                })];
                        case 2:
                            _a.sent();
                            return [2 /*return*/, true];
                    }
                });
            });
        };
        AccessControlService_1.prototype.getConstraints = function (reflector, context) {
            var roles = accessControl_role_decorator_1.AccessControlRoleDecorator.get(context, reflector);
            return {
                roles: roles,
            };
        };
        return AccessControlService_1;
    }());
    __setFunctionName(_classThis, "AccessControlService");
    (function () {
        var _metadata = typeof Symbol === "function" && Symbol.metadata ? Object.create(null) : void 0;
        __esDecorate(null, _classDescriptor = { value: _classThis }, _classDecorators, { kind: "class", name: _classThis.name, metadata: _metadata }, null, _classExtraInitializers);
        AccessControlService = _classThis = _classDescriptor.value;
        if (_metadata) Object.defineProperty(_classThis, Symbol.metadata, { enumerable: true, configurable: true, writable: true, value: _metadata });
        __runInitializers(_classThis, _classExtraInitializers);
    })();
    return AccessControlService = _classThis;
}();
exports.AccessControlService = AccessControlService;


// C:\grua-booking-system-25\server\dist\core\accessControl\internal\accessControl.type.js
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });


// C:\grua-booking-system-25\server\dist\core\accessControl\internal\accessControl.validator.js
"use strict";
var __esDecorate = (this && this.__esDecorate) || function (ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {
    function accept(f) { if (f !== void 0 && typeof f !== "function") throw new TypeError("Function expected"); return f; }
    var kind = contextIn.kind, key = kind === "getter" ? "get" : kind === "setter" ? "set" : "value";
    var target = !descriptorIn && ctor ? contextIn["static"] ? ctor : ctor.prototype : null;
    var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});
    var _, done = false;
    for (var i = decorators.length - 1; i >= 0; i--) {
        var context = {};
        for (var p in contextIn) context[p] = p === "access" ? {} : contextIn[p];
        for (var p in contextIn.access) context.access[p] = contextIn.access[p];
        context.addInitializer = function (f) { if (done) throw new TypeError("Cannot add initializers after decoration has completed"); extraInitializers.push(accept(f || null)); };
        var result = (0, decorators[i])(kind === "accessor" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);
        if (kind === "accessor") {
            if (result === void 0) continue;
            if (result === null || typeof result !== "object") throw new TypeError("Object expected");
            if (_ = accept(result.get)) descriptor.get = _;
            if (_ = accept(result.set)) descriptor.set = _;
            if (_ = accept(result.init)) initializers.unshift(_);
        }
        else if (_ = accept(result)) {
            if (kind === "field") initializers.unshift(_);
            else descriptor[key] = _;
        }
    }
    if (target) Object.defineProperty(target, contextIn.name, descriptor);
    done = true;
};
var __runInitializers = (this && this.__runInitializers) || function (thisArg, initializers, value) {
    var useValue = arguments.length > 2;
    for (var i = 0; i < initializers.length; i++) {
        value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);
    }
    return useValue ? value : void 0;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (g && (g = 0, op[0] && (_ = 0)), _) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __setFunctionName = (this && this.__setFunctionName) || function (f, name, prefix) {
    if (typeof name === "symbol") name = name.description ? "[".concat(name.description, "]") : "";
    return Object.defineProperty(f, "name", { configurable: true, value: prefix ? "".concat(prefix, " ", name) : name });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.AccessControlValidator = void 0;
var common_1 = require("@nestjs/common");
var AccessControlValidator = function () {
    var _classDecorators = [(0, common_1.Injectable)()];
    var _classDescriptor;
    var _classExtraInitializers = [];
    var _classThis;
    var AccessControlValidator = _classThis = /** @class */ (function () {
        function AccessControlValidator_1() {
        }
        AccessControlValidator_1.prototype.check = function (_a) {
            var userData = _a.userData, constraints = _a.constraints;
            return __awaiter(this, void 0, void 0, function () {
                var roles, _i, roles_1, role;
                return __generator(this, function (_b) {
                    roles = constraints.roles;
                    for (_i = 0, roles_1 = roles; _i < roles_1.length; _i++) {
                        role = roles_1[_i];
                        this.checkRole(userData, role);
                    }
                    return [2 /*return*/];
                });
            });
        };
        AccessControlValidator_1.prototype.checkRole = function (userData, role) {
            var isFound = userData.roles.includes(role);
            if (!isFound) {
                var user = userData.user, roles = userData.roles;
                throw new Error("User ".concat(user.email, " (").concat(user.id, ") has role(s) \"").concat(roles.join('", "'), "\" but is missing \"").concat(role, "\""));
            }
        };
        return AccessControlValidator_1;
    }());
    __setFunctionName(_classThis, "AccessControlValidator");
    (function () {
        var _metadata = typeof Symbol === "function" && Symbol.metadata ? Object.create(null) : void 0;
        __esDecorate(null, _classDescriptor = { value: _classThis }, _classDecorators, { kind: "class", name: _classThis.name, metadata: _metadata }, null, _classExtraInitializers);
        AccessControlValidator = _classThis = _classDescriptor.value;
        if (_metadata) Object.defineProperty(_classThis, Symbol.metadata, { enumerable: true, configurable: true, writable: true, value: _metadata });
        __runInitializers(_classThis, _classExtraInitializers);
    })();
    return AccessControlValidator = _classThis;
}();
exports.AccessControlValidator = AccessControlValidator;


// C:\grua-booking-system-25\server\dist\core\accessControl\accessControl.js
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.AccessControl = void 0;
require("reflect-metadata");
var accessControl_role_decorator_1 = require("./decorators/accessControl.role.decorator");
var AccessControl;
(function (AccessControl) {
    AccessControl.Roles = accessControl_role_decorator_1.AccessControlRoleDecorator.set;
    AccessControl.getRoles = accessControl_role_decorator_1.AccessControlRoleDecorator.get;
})(AccessControl || (exports.AccessControl = AccessControl = {}));


// C:\grua-booking-system-25\server\dist\core\accessControl\accessControl.module.js
"use strict";
var __esDecorate = (this && this.__esDecorate) || function (ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {
    function accept(f) { if (f !== void 0 && typeof f !== "function") throw new TypeError("Function expected"); return f; }
    var kind = contextIn.kind, key = kind === "getter" ? "get" : kind === "setter" ? "set" : "value";
    var target = !descriptorIn && ctor ? contextIn["static"] ? ctor : ctor.prototype : null;
    var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});
    var _, done = false;
    for (var i = decorators.length - 1; i >= 0; i--) {
        var context = {};
        for (var p in contextIn) context[p] = p === "access" ? {} : contextIn[p];
        for (var p in contextIn.access) context.access[p] = contextIn.access[p];
        context.addInitializer = function (f) { if (done) throw new TypeError("Cannot add initializers after decoration has completed"); extraInitializers.push(accept(f || null)); };
        var result = (0, decorators[i])(kind === "accessor" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);
        if (kind === "accessor") {
            if (result === void 0) continue;
            if (result === null || typeof result !== "object") throw new TypeError("Object expected");
            if (_ = accept(result.get)) descriptor.get = _;
            if (_ = accept(result.set)) descriptor.set = _;
            if (_ = accept(result.init)) initializers.unshift(_);
        }
        else if (_ = accept(result)) {
            if (kind === "field") initializers.unshift(_);
            else descriptor[key] = _;
        }
    }
    if (target) Object.defineProperty(target, contextIn.name, descriptor);
    done = true;
};
var __runInitializers = (this && this.__runInitializers) || function (thisArg, initializers, value) {
    var useValue = arguments.length > 2;
    for (var i = 0; i < initializers.length; i++) {
        value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);
    }
    return useValue ? value : void 0;
};
var __setFunctionName = (this && this.__setFunctionName) || function (f, name, prefix) {
    if (typeof name === "symbol") name = name.description ? "[".concat(name.description, "]") : "";
    return Object.defineProperty(f, "name", { configurable: true, value: prefix ? "".concat(prefix, " ", name) : name });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.AccessControlModule = void 0;
var common_1 = require("@nestjs/common");
var core_1 = require("@nestjs/core");
var accessControl_1 = require("@server/modules/authorization/accessControl");
var accessControl_guard_1 = require("./guards/accessControl.guard");
var accessControl_service_1 = require("./internal/accessControl.service");
var accessControl_validator_1 = require("./internal/accessControl.validator");
var AccessControlModule = function () {
    var _classDecorators = [(0, common_1.Global)(), (0, common_1.Module)({
            imports: [accessControl_1.AuthorizationAccessControlModule],
            providers: [accessControl_service_1.AccessControlService, accessControl_validator_1.AccessControlValidator],
            exports: [accessControl_service_1.AccessControlService],
        })];
    var _classDescriptor;
    var _classExtraInitializers = [];
    var _classThis;
    var AccessControlModule = _classThis = /** @class */ (function () {
        function AccessControlModule_1() {
        }
        AccessControlModule_1.getGuards = function () {
            return [{ provide: core_1.APP_GUARD, useClass: accessControl_guard_1.AccessControlGuard }];
        };
        return AccessControlModule_1;
    }());
    __setFunctionName(_classThis, "AccessControlModule");
    (function () {
        var _metadata = typeof Symbol === "function" && Symbol.metadata ? Object.create(null) : void 0;
        __esDecorate(null, _classDescriptor = { value: _classThis }, _classDecorators, { kind: "class", name: _classThis.name, metadata: _metadata }, null, _classExtraInitializers);
        AccessControlModule = _classThis = _classDescriptor.value;
        if (_metadata) Object.defineProperty(_classThis, Symbol.metadata, { enumerable: true, configurable: true, writable: true, value: _metadata });
        __runInitializers(_classThis, _classExtraInitializers);
    })();
    return AccessControlModule = _classThis;
}();
exports.AccessControlModule = AccessControlModule;


// C:\grua-booking-system-25\server\dist\core\accessControl\index.js
"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", { value: true });
__exportStar(require("./accessControl"), exports);
__exportStar(require("./accessControl.module"), exports);
__exportStar(require("./internal/accessControl.provider"), exports);


// C:\grua-booking-system-25\server\dist\core\accessControl\decorators\accessControl.role.decorator.js
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.AccessControlRoleDecorator = void 0;
var common_1 = require("@nestjs/common");
var AccessControlRoleDecorator;
(function (AccessControlRoleDecorator) {
    var KEY = 'access-control.roles';
    AccessControlRoleDecorator.set = function () {
        var names = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            names[_i] = arguments[_i];
        }
        return (0, common_1.SetMetadata)(KEY, names);
    };
    function get(context, reflector) {
        var _a;
        return ((_a = reflector.getAllAndOverride(KEY, [
            context.getHandler(),
            context.getClass(),
        ])) !== null && _a !== void 0 ? _a : []);
    }
    AccessControlRoleDecorator.get = get;
})(AccessControlRoleDecorator || (exports.AccessControlRoleDecorator = AccessControlRoleDecorator = {}));
"use strict";
var __esDecorate = (this && this.__esDecorate) || function (ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {
    function accept(f) { if (f !== void 0 && typeof f !== "function") throw new TypeError("Function expected"); return f; }
    var kind = contextIn.kind, key = kind === "getter" ? "get" : kind === "setter" ? "set" : "value";
    var target = !descriptorIn && ctor ? contextIn["static"] ? ctor : ctor.prototype : null;
    var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});
    var _, done = false;
    for (var i = decorators.length - 1; i >= 0; i--) {
        var context = {};
        for (var p in contextIn) context[p] = p === "access" ? {} : contextIn[p];
        for (var p in contextIn.access) context.access[p] = contextIn.access[p];
        context.addInitializer = function (f) { if (done) throw new TypeError("Cannot add initializers after decoration has completed"); extraInitializers.push(accept(f || null)); };
        var result = (0, decorators[i])(kind === "accessor" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);
        if (kind === "accessor") {
            if (result === void 0) continue;
            if (result === null || typeof result !== "object") throw new TypeError("Object expected");
            if (_ = accept(result.get)) descriptor.get = _;
            if (_ = accept(result.set)) descriptor.set = _;
            if (_ = accept(result.init)) initializers.unshift(_);
        }
        else if (_ = accept(result)) {
            if (kind === "field") initializers.unshift(_);
            else descriptor[key] = _;
        }
    }
    if (target) Object.defineProperty(target, contextIn.name, descriptor);
    done = true;
};
var __runInitializers = (this && this.__runInitializers) || function (thisArg, initializers, value) {
    var useValue = arguments.length > 2;
    for (var i = 0; i < initializers.length; i++) {
        value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);
    }
    return useValue ? value : void 0;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (g && (g = 0, op[0] && (_ = 0)), _) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __setFunctionName = (this && this.__setFunctionName) || function (f, name, prefix) {
    if (typeof name === "symbol") name = name.description ? "[".concat(name.description, "]") : "";
    return Object.defineProperty(f, "name", { configurable: true, value: prefix ? "".concat(prefix, " ", name) : name });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.AccessControlGuard = void 0;
var common_1 = require("@nestjs/common");
var AccessControlGuard = function () {
    var _classDecorators = [(0, common_1.Injectable)()];
    var _classDescriptor;
    var _classExtraInitializers = [];
    var _classThis;
    var AccessControlGuard = _classThis = /** @class */ (function () {
        function AccessControlGuard_1(reflector, service) {
            this.reflector = reflector;
            this.service = service;
        }
        AccessControlGuard_1.prototype.canActivate = function (context) {
            return __awaiter(this, void 0, void 0, function () {
                return __generator(this, function (_a) {
                    return [2 /*return*/, this.service.run(this.reflector, context)];
                });
            });
        };
        return AccessControlGuard_1;
    }());
    __setFunctionName(_classThis, "AccessControlGuard");
    (function () {
        var _metadata = typeof Symbol === "function" && Symbol.metadata ? Object.create(null) : void 0;
        __esDecorate(null, _classDescriptor = { value: _classThis }, _classDecorators, { kind: "class", name: _classThis.name, metadata: _metadata }, null, _classExtraInitializers);
        AccessControlGuard = _classThis = _classDescriptor.value;
        if (_metadata) Object.defineProperty(_classThis, Symbol.metadata, { enumerable: true, configurable: true, writable: true, value: _metadata });
        __runInitializers(_classThis, _classExtraInitializers);
    })();
    return AccessControlGuard = _classThis;
}();
exports.AccessControlGuard = AccessControlGuard;


// C:\grua-booking-system-25\server\dist\core\accessControl\internal\accessControl.provider.js
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });


// C:\grua-booking-system-25\server\dist\core\accessControl\internal\accessControl.service.js
"use strict";
var __esDecorate = (this && this.__esDecorate) || function (ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {
    function accept(f) { if (f !== void 0 && typeof f !== "function") throw new TypeError("Function expected"); return f; }
    var kind = contextIn.kind, key = kind === "getter" ? "get" : kind === "setter" ? "set" : "value";
    var target = !descriptorIn && ctor ? contextIn["static"] ? ctor : ctor.prototype : null;
    var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});
    var _, done = false;
    for (var i = decorators.length - 1; i >= 0; i--) {
        var context = {};
        for (var p in contextIn) context[p] = p === "access" ? {} : contextIn[p];
        for (var p in contextIn.access) context.access[p] = contextIn.access[p];
        context.addInitializer = function (f) { if (done) throw new TypeError("Cannot add initializers after decoration has completed"); extraInitializers.push(accept(f || null)); };
        var result = (0, decorators[i])(kind === "accessor" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);
        if (kind === "accessor") {
            if (result === void 0) continue;
            if (result === null || typeof result !== "object") throw new TypeError("Object expected");
            if (_ = accept(result.get)) descriptor.get = _;
            if (_ = accept(result.set)) descriptor.set = _;
            if (_ = accept(result.init)) initializers.unshift(_);
        }
        else if (_ = accept(result)) {
            if (kind === "field") initializers.unshift(_);
            else descriptor[key] = _;
        }
    }
    if (target) Object.defineProperty(target, contextIn.name, descriptor);
    done = true;
};
var __runInitializers = (this && this.__runInitializers) || function (thisArg, initializers, value) {
    var useValue = arguments.length > 2;
    for (var i = 0; i < initializers.length; i++) {
        value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);
    }
    return useValue ? value : void 0;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (g && (g = 0, op[0] && (_ = 0)), _) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __setFunctionName = (this && this.__setFunctionName) || function (f, name, prefix) {
    if (typeof name === "symbol") name = name.description ? "[".concat(name.description, "]") : "";
    return Object.defineProperty(f, "name", { configurable: true, value: prefix ? "".concat(prefix, " ", name) : name });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.AccessControlService = void 0;
var common_1 = require("@nestjs/common");
var context_1 = require("@server/helpers/context");
var utility_1 = require("@server/helpers/utility");
var accessControl_role_decorator_1 = require("../decorators/accessControl.role.decorator");
var AccessControlService = function () {
    var _classDecorators = [(0, common_1.Injectable)()];
    var _classDescriptor;
    var _classExtraInitializers = [];
    var _classThis;
    var AccessControlService = _classThis = /** @class */ (function () {
        function AccessControlService_1(authorizationAccessControlService, validator) {
            this.authorizationAccessControlService = authorizationAccessControlService;
            this.validator = validator;
        }
        AccessControlService_1.prototype.run = function (reflector, context) {
            return __awaiter(this, void 0, void 0, function () {
                var request, constraints, canSkip, userData;
                var _this = this;
                return __generator(this, function (_a) {
                    switch (_a.label) {
                        case 0:
                            request = context_1.ContextHelper.toRequest(context);
                            constraints = this.getConstraints(reflector, context);
                            canSkip = utility_1.Utility.isEmpty(constraints.roles);
                            if (canSkip) {
                                return [2 /*return*/, true];
                            }
                            return [4 /*yield*/, this.authorizationAccessControlService.findUserData(request)];
                        case 1:
                            userData = _a.sent();
                            return [4 /*yield*/, this.validator
                                    .check({
                                    userData: userData,
                                    constraints: constraints,
                                })
                                    .catch(function (error) {
                                    _this.authorizationAccessControlService.onError(error);
                                })];
                        case 2:
                            _a.sent();
                            return [2 /*return*/, true];
                    }
                });
            });
        };
        AccessControlService_1.prototype.getConstraints = function (reflector, context) {
            var roles = accessControl_role_decorator_1.AccessControlRoleDecorator.get(context, reflector);
            return {
                roles: roles,
            };
        };
        return AccessControlService_1;
    }());
    __setFunctionName(_classThis, "AccessControlService");
    (function () {
        var _metadata = typeof Symbol === "function" && Symbol.metadata ? Object.create(null) : void 0;
        __esDecorate(null, _classDescriptor = { value: _classThis }, _classDecorators, { kind: "class", name: _classThis.name, metadata: _metadata }, null, _classExtraInitializers);
        AccessControlService = _classThis = _classDescriptor.value;
        if (_metadata) Object.defineProperty(_classThis, Symbol.metadata, { enumerable: true, configurable: true, writable: true, value: _metadata });
        __runInitializers(_classThis, _classExtraInitializers);
    })();
    return AccessControlService = _classThis;
}();
exports.AccessControlService = AccessControlService;


// C:\grua-booking-system-25\server\dist\core\accessControl\internal\accessControl.type.js
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });


// C:\grua-booking-system-25\server\dist\core\accessControl\internal\accessControl.validator.js
"use strict";
var __esDecorate = (this && this.__esDecorate) || function (ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {
    function accept(f) { if (f !== void 0 && typeof f !== "function") throw new TypeError("Function expected"); return f; }
    var kind = contextIn.kind, key = kind === "getter" ? "get" : kind === "setter" ? "set" : "value";
    var target = !descriptorIn && ctor ? contextIn["static"] ? ctor : ctor.prototype : null;
    var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});
    var _, done = false;
    for (var i = decorators.length - 1; i >= 0; i--) {
        var context = {};
        for (var p in contextIn) context[p] = p === "access" ? {} : contextIn[p];
        for (var p in contextIn.access) context.access[p] = contextIn.access[p];
        context.addInitializer = function (f) { if (done) throw new TypeError("Cannot add initializers after decoration has completed"); extraInitializers.push(accept(f || null)); };
        var result = (0, decorators[i])(kind === "accessor" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);
        if (kind === "accessor") {
            if (result === void 0) continue;
            if (result === null || typeof result !== "object") throw new TypeError("Object expected");
            if (_ = accept(result.get)) descriptor.get = _;
            if (_ = accept(result.set)) descriptor.set = _;
            if (_ = accept(result.init)) initializers.unshift(_);
        }
        else if (_ = accept(result)) {
            if (kind === "field") initializers.unshift(_);
            else descriptor[key] = _;
        }
    }
    if (target) Object.defineProperty(target, contextIn.name, descriptor);
    done = true;
};
var __runInitializers = (this && this.__runInitializers) || function (thisArg, initializers, value) {
    var useValue = arguments.length > 2;
    for (var i = 0; i < initializers.length; i++) {
        value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);
    }
    return useValue ? value : void 0;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (g && (g = 0, op[0] && (_ = 0)), _) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __setFunctionName = (this && this.__setFunctionName) || function (f, name, prefix) {
    if (typeof name === "symbol") name = name.description ? "[".concat(name.description, "]") : "";
    return Object.defineProperty(f, "name", { configurable: true, value: prefix ? "".concat(prefix, " ", name) : name });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.AccessControlValidator = void 0;
var common_1 = require("@nestjs/common");
var AccessControlValidator = function () {
    var _classDecorators = [(0, common_1.Injectable)()];
    var _classDescriptor;
    var _classExtraInitializers = [];
    var _classThis;
    var AccessControlValidator = _classThis = /** @class */ (function () {
        function AccessControlValidator_1() {
        }
        AccessControlValidator_1.prototype.check = function (_a) {
            var userData = _a.userData, constraints = _a.constraints;
            return __awaiter(this, void 0, void 0, function () {
                var roles, _i, roles_1, role;
                return __generator(this, function (_b) {
                    roles = constraints.roles;
                    for (_i = 0, roles_1 = roles; _i < roles_1.length; _i++) {
                        role = roles_1[_i];
                        this.checkRole(userData, role);
                    }
                    return [2 /*return*/];
                });
            });
        };
        AccessControlValidator_1.prototype.checkRole = function (userData, role) {
            var isFound = userData.roles.includes(role);
            if (!isFound) {
                var user = userData.user, roles = userData.roles;
                throw new Error("User ".concat(user.email, " (").concat(user.id, ") has role(s) \"").concat(roles.join('", "'), "\" but is missing \"").concat(role, "\""));
            }
        };
        return AccessControlValidator_1;
    }());
    __setFunctionName(_classThis, "AccessControlValidator");
    (function () {
        var _metadata = typeof Symbol === "function" && Symbol.metadata ? Object.create(null) : void 0;
        __esDecorate(null, _classDescriptor = { value: _classThis }, _classDecorators, { kind: "class", name: _classThis.name, metadata: _metadata }, null, _classExtraInitializers);
        AccessControlValidator = _classThis = _classDescriptor.value;
        if (_metadata) Object.defineProperty(_classThis, Symbol.metadata, { enumerable: true, configurable: true, writable: true, value: _metadata });
        __runInitializers(_classThis, _classExtraInitializers);
    })();
    return AccessControlValidator = _classThis;
}();
exports.AccessControlValidator = AccessControlValidator;


// C:\grua-booking-system-25\server\dist\core\authentication\authentication.decorator.js
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Authentication = void 0;
var common_1 = require("@nestjs/common");
require("reflect-metadata");
var Authentication;
(function (Authentication) {
    var KEY_PUBLIC = 'authentication.public';
    var KEY_USER_NOT_VERIFIED_ALLOWED = 'authentication.user-not-verified.allowed';
    var KEY_USER_VISITOR_ALLOWED = 'authentication.user-visitor.allowed';
    Authentication.AllowUserNotVerified = function (isAllowed) {
        if (isAllowed === void 0) { isAllowed = true; }
        return (0, common_1.SetMetadata)(KEY_USER_NOT_VERIFIED_ALLOWED, isAllowed);
    };
    function isUserNotVerifiedAllowed(context, reflector) {
        var _a;
        var DEFAULT_VALUE = false;
        return ((_a = getValue(context, reflector, KEY_USER_NOT_VERIFIED_ALLOWED)) !== null && _a !== void 0 ? _a : DEFAULT_VALUE);
    }
    Authentication.isUserNotVerifiedAllowed = isUserNotVerifiedAllowed;
    Authentication.Public = function () { return (0, common_1.SetMetadata)(KEY_PUBLIC, true); };
    function isPublic(context, reflector) {
        return getValue(context, reflector, KEY_PUBLIC);
    }
    Authentication.isPublic = isPublic;
    Authentication.AllowVisitor = function (isAllowed) {
        if (isAllowed === void 0) { isAllowed = true; }
        return (0, common_1.SetMetadata)(KEY_USER_VISITOR_ALLOWED, isAllowed);
    };
    function isVisitorAllowed(context, reflector) {
        var _a;
        var DEFAULT_VALUE = true;
        return ((_a = getValue(context, reflector, KEY_USER_VISITOR_ALLOWED)) !== null && _a !== void 0 ? _a : DEFAULT_VALUE);
    }
    Authentication.isVisitorAllowed = isVisitorAllowed;
    function getValue(context, reflector, key) {
        return reflector.getAllAndOverride(key, [
            context.getHandler(),
            context.getClass(),
        ]);
    }
})(Authentication || (exports.Authentication = Authentication = {}));


// C:\grua-booking-system-25\server\dist\core\authentication\index.js
"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", { value: true });
__exportStar(require("./authentication.decorator"), exports);


// C:\grua-booking-system-25\server\dist\core\configuration\configuration.module.js
"use strict";
var __esDecorate = (this && this.__esDecorate) || function (ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {
    function accept(f) { if (f !== void 0 && typeof f !== "function") throw new TypeError("Function expected"); return f; }
    var kind = contextIn.kind, key = kind === "getter" ? "get" : kind === "setter" ? "set" : "value";
    var target = !descriptorIn && ctor ? contextIn["static"] ? ctor : ctor.prototype : null;
    var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});
    var _, done = false;
    for (var i = decorators.length - 1; i >= 0; i--) {
        var context = {};
        for (var p in contextIn) context[p] = p === "access" ? {} : contextIn[p];
        for (var p in contextIn.access) context.access[p] = contextIn.access[p];
        context.addInitializer = function (f) { if (done) throw new TypeError("Cannot add initializers after decoration has completed"); extraInitializers.push(accept(f || null)); };
        var result = (0, decorators[i])(kind === "accessor" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);
        if (kind === "accessor") {
            if (result === void 0) continue;
            if (result === null || typeof result !== "object") throw new TypeError("Object expected");
            if (_ = accept(result.get)) descriptor.get = _;
            if (_ = accept(result.set)) descriptor.set = _;
            if (_ = accept(result.init)) initializers.unshift(_);
        }
        else if (_ = accept(result)) {
            if (kind === "field") initializers.unshift(_);
            else descriptor[key] = _;
        }
    }
    if (target) Object.defineProperty(target, contextIn.name, descriptor);
    done = true;
};
var __runInitializers = (this && this.__runInitializers) || function (thisArg, initializers, value) {
    var useValue = arguments.length > 2;
    for (var i = 0; i < initializers.length; i++) {
        value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);
    }
    return useValue ? value : void 0;
};
var __setFunctionName = (this && this.__setFunctionName) || function (f, name, prefix) {
    if (typeof name === "symbol") name = name.description ? "[".concat(name.description, "]") : "";
    return Object.defineProperty(f, "name", { configurable: true, value: prefix ? "".concat(prefix, " ", name) : name });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.ConfigurationModule = void 0;
var common_1 = require("@nestjs/common");
var config_1 = require("@nestjs/config");
var configuration_service_1 = require("./configuration.service");
var ConfigurationModule = function () {
    var _classDecorators = [(0, common_1.Global)(), (0, common_1.Module)({
            imports: [config_1.ConfigModule.forRoot()],
            providers: [configuration_service_1.ConfigurationService],
            exports: [configuration_service_1.ConfigurationService],
        })];
    var _classDescriptor;
    var _classExtraInitializers = [];
    var _classThis;
    var ConfigurationModule = _classThis = /** @class */ (function () {
        function ConfigurationModule_1() {
        }
        return ConfigurationModule_1;
    }());
    __setFunctionName(_classThis, "ConfigurationModule");
    (function () {
        var _metadata = typeof Symbol === "function" && Symbol.metadata ? Object.create(null) : void 0;
        __esDecorate(null, _classDescriptor = { value: _classThis }, _classDecorators, { kind: "class", name: _classThis.name, metadata: _metadata }, null, _classExtraInitializers);
        ConfigurationModule = _classThis = _classDescriptor.value;
        if (_metadata) Object.defineProperty(_classThis, Symbol.metadata, { enumerable: true, configurable: true, writable: true, value: _metadata });
        __runInitializers(_classThis, _classExtraInitializers);
    })();
    return ConfigurationModule = _classThis;
}();
exports.ConfigurationModule = ConfigurationModule;


// C:\grua-booking-system-25\server\dist\core\configuration\configuration.service.js
"use strict";
var __esDecorate = (this && this.__esDecorate) || function (ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {
    function accept(f) { if (f !== void 0 && typeof f !== "function") throw new TypeError("Function expected"); return f; }
    var kind = contextIn.kind, key = kind === "getter" ? "get" : kind === "setter" ? "set" : "value";
    var target = !descriptorIn && ctor ? contextIn["static"] ? ctor : ctor.prototype : null;
    var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});
    var _, done = false;
    for (var i = decorators.length - 1; i >= 0; i--) {
        var context = {};
        for (var p in contextIn) context[p] = p === "access" ? {} : contextIn[p];
        for (var p in contextIn.access) context.access[p] = contextIn.access[p];
        context.addInitializer = function (f) { if (done) throw new TypeError("Cannot add initializers after decoration has completed"); extraInitializers.push(accept(f || null)); };
        var result = (0, decorators[i])(kind === "accessor" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);
        if (kind === "accessor") {
            if (result === void 0) continue;
            if (result === null || typeof result !== "object") throw new TypeError("Object expected");
            if (_ = accept(result.get)) descriptor.get = _;
            if (_ = accept(result.set)) descriptor.set = _;
            if (_ = accept(result.init)) initializers.unshift(_);
        }
        else if (_ = accept(result)) {
            if (kind === "field") initializers.unshift(_);
            else descriptor[key] = _;
        }
    }
    if (target) Object.defineProperty(target, contextIn.name, descriptor);
    done = true;
};
var __runInitializers = (this && this.__runInitializers) || function (thisArg, initializers, value) {
    var useValue = arguments.length > 2;
    for (var i = 0; i < initializers.length; i++) {
        value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);
    }
    return useValue ? value : void 0;
};
var __setFunctionName = (this && this.__setFunctionName) || function (f, name, prefix) {
    if (typeof name === "symbol") name = name.description ? "[".concat(name.description, "]") : "";
    return Object.defineProperty(f, "name", { configurable: true, value: prefix ? "".concat(prefix, " ", name) : name });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.ConfigurationService = void 0;
var common_1 = require("@nestjs/common");
var utility_1 = require("@server/helpers/utility");
var configuration_service_object_1 = require("./configuration.service.object");
var ConfigurationService = function () {
    var _classDecorators = [(0, common_1.Injectable)()];
    var _classDescriptor;
    var _classExtraInitializers = [];
    var _classThis;
    var ConfigurationService = _classThis = /** @class */ (function () {
        function ConfigurationService_1(manager) {
            this.manager = manager;
        }
        ConfigurationService_1.prototype.get = function (key, valueDefault) {
            var value = this.manager.get(key);
            if (!utility_1.Utility.isDefined(value)) {
                value = valueDefault;
            }
            return value;
        };
        ConfigurationService_1.prototype.getPort = function () {
            var value = this.manager.get(configuration_service_object_1.ConfigurationServiceObject.Key.PORT);
            if (!utility_1.Utility.isDefined(value)) {
                value = 3099;
            }
            return value;
        };
        ConfigurationService_1.prototype.getNumber = function (key, valueDefault) {
            var value = this.manager.get(key);
            if (!utility_1.Utility.isDefined(value)) {
                value = valueDefault;
            }
            return value;
        };
        ConfigurationService_1.prototype.getBoolean = function (key, valueDefault) {
            var value = this.manager.get(key);
            if (!utility_1.Utility.isDefined(value)) {
                value = valueDefault;
            }
            return value;
        };
        ConfigurationService_1.prototype.getEnvironment = function () {
            var value = this.get(configuration_service_object_1.ConfigurationServiceObject.Key.ENVIRONMENT, configuration_service_object_1.ConfigurationServiceObject.Environment.DEVELOPMENT);
            return value;
        };
        ConfigurationService_1.prototype.getAuthenticationTokenMethod = function () {
            var value = this.manager.get(configuration_service_object_1.ConfigurationServiceObject.Key.AUTHENTICATION_TOKEN_METHOD, configuration_service_object_1.ConfigurationServiceObject.AuthenticationTokenMethod.COOKIES);
            return value;
        };
        ConfigurationService_1.prototype.getClientBaseUrl = function () {
            var value = this.manager.get(configuration_service_object_1.ConfigurationServiceObject.Key.CLIENT_BASE_URL);
            var valueClean = utility_1.Utility.removeTrailingSlash(value);
            return valueClean;
        };
        ConfigurationService_1.prototype.getBaseUrl = function () {
            var port = this.getPort();
            var value = this.manager.get(configuration_service_object_1.ConfigurationServiceObject.Key.BASE_URL);
            if (!utility_1.Utility.isDefined(value)) {
                value = "http://localhost:".concat(port);
            }
            var valueClean = utility_1.Utility.removeTrailingSlash(value);
            return valueClean;
        };
        ConfigurationService_1.prototype.isEnvironmentDevelopment = function () {
            return (this.getEnvironment() ===
                configuration_service_object_1.ConfigurationServiceObject.Environment.DEVELOPMENT);
        };
        ConfigurationService_1.prototype.isEnvironmentProduction = function () {
            return (this.getEnvironment() ===
                configuration_service_object_1.ConfigurationServiceObject.Environment.PRODUCTION);
        };
        return ConfigurationService_1;
    }());
    __setFunctionName(_classThis, "ConfigurationService");
    (function () {
        var _metadata = typeof Symbol === "function" && Symbol.metadata ? Object.create(null) : void 0;
        __esDecorate(null, _classDescriptor = { value: _classThis }, _classDecorators, { kind: "class", name: _classThis.name, metadata: _metadata }, null, _classExtraInitializers);
        ConfigurationService = _classThis = _classDescriptor.value;
        if (_metadata) Object.defineProperty(_classThis, Symbol.metadata, { enumerable: true, configurable: true, writable: true, value: _metadata });
        __runInitializers(_classThis, _classExtraInitializers);
    })();
    return ConfigurationService = _classThis;
}();
exports.ConfigurationService = ConfigurationService;


// C:\grua-booking-system-25\server\dist\core\configuration\configuration.service.object.js
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ConfigurationServiceObject = void 0;
var ConfigurationServiceObject;
(function (ConfigurationServiceObject) {
    var Key;
    (function (Key) {
        Key["PORT"] = "PORT";
        Key["ENVIRONMENT"] = "NODE_ENV";
        Key["CLIENT_BASE_URL"] = "SERVER_CLIENT_BASE_URL";
        Key["BASE_URL"] = "SERVER_BASE_URL";
        Key["AUTHENTICATION_TOKEN_METHOD"] = "SERVER_AUTHENTICATION_TOKEN_METHOD";
    })(Key = ConfigurationServiceObject.Key || (ConfigurationServiceObject.Key = {}));
    var Environment;
    (function (Environment) {
        Environment["DEVELOPMENT"] = "development";
        Environment["PRODUCTION"] = "production";
    })(Environment = ConfigurationServiceObject.Environment || (ConfigurationServiceObject.Environment = {}));
    var AuthenticationTokenMethod;
    (function (AuthenticationTokenMethod) {
        AuthenticationTokenMethod["COOKIES"] = "cookies";
        AuthenticationTokenMethod["HEADER"] = "header";
    })(AuthenticationTokenMethod = ConfigurationServiceObject.AuthenticationTokenMethod || (ConfigurationServiceObject.AuthenticationTokenMethod = {}));
})(ConfigurationServiceObject || (exports.ConfigurationServiceObject = ConfigurationServiceObject = {}));


// C:\grua-booking-system-25\server\dist\core\configuration\index.js
"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", { value: true });
__exportStar(require("./configuration.module"), exports);
__exportStar(require("./configuration.service"), exports);
__exportStar(require("./configuration.service.object"), exports);


// C:\grua-booking-system-25\server\dist\core\cookie\cookie.module.js
"use strict";
var __esDecorate = (this && this.__esDecorate) || function (ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {
    function accept(f) { if (f !== void 0 && typeof f !== "function") throw new TypeError("Function expected"); return f; }
    var kind = contextIn.kind, key = kind === "getter" ? "get" : kind === "setter" ? "set" : "value";
    var target = !descriptorIn && ctor ? contextIn["static"] ? ctor : ctor.prototype : null;
    var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});
    var _, done = false;
    for (var i = decorators.length - 1; i >= 0; i--) {
        var context = {};
        for (var p in contextIn) context[p] = p === "access" ? {} : contextIn[p];
        for (var p in contextIn.access) context.access[p] = contextIn.access[p];
        context.addInitializer = function (f) { if (done) throw new TypeError("Cannot add initializers after decoration has completed"); extraInitializers.push(accept(f || null)); };
        var result = (0, decorators[i])(kind === "accessor" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);
        if (kind === "accessor") {
            if (result === void 0) continue;
            if (result === null || typeof result !== "object") throw new TypeError("Object expected");
            if (_ = accept(result.get)) descriptor.get = _;
            if (_ = accept(result.set)) descriptor.set = _;
            if (_ = accept(result.init)) initializers.unshift(_);
        }
        else if (_ = accept(result)) {
            if (kind === "field") initializers.unshift(_);
            else descriptor[key] = _;
        }
    }
    if (target) Object.defineProperty(target, contextIn.name, descriptor);
    done = true;
};
var __runInitializers = (this && this.__runInitializers) || function (thisArg, initializers, value) {
    var useValue = arguments.length > 2;
    for (var i = 0; i < initializers.length; i++) {
        value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);
    }
    return useValue ? value : void 0;
};
var __setFunctionName = (this && this.__setFunctionName) || function (f, name, prefix) {
    if (typeof name === "symbol") name = name.description ? "[".concat(name.description, "]") : "";
    return Object.defineProperty(f, "name", { configurable: true, value: prefix ? "".concat(prefix, " ", name) : name });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.CookieModule = void 0;
var common_1 = require("@nestjs/common");
var cookie_service_1 = require("./cookie.service");
var CookieModule = function () {
    var _classDecorators = [(0, common_1.Global)(), (0, common_1.Module)({
            imports: [],
            providers: [cookie_service_1.CookieService],
            exports: [cookie_service_1.CookieService],
        })];
    var _classDescriptor;
    var _classExtraInitializers = [];
    var _classThis;
    var CookieModule = _classThis = /** @class */ (function () {
        function CookieModule_1() {
        }
        return CookieModule_1;
    }());
    __setFunctionName(_classThis, "CookieModule");
    (function () {
        var _metadata = typeof Symbol === "function" && Symbol.metadata ? Object.create(null) : void 0;
        __esDecorate(null, _classDescriptor = { value: _classThis }, _classDecorators, { kind: "class", name: _classThis.name, metadata: _metadata }, null, _classExtraInitializers);
        CookieModule = _classThis = _classDescriptor.value;
        if (_metadata) Object.defineProperty(_classThis, Symbol.metadata, { enumerable: true, configurable: true, writable: true, value: _metadata });
        __runInitializers(_classThis, _classExtraInitializers);
    })();
    return CookieModule = _classThis;
}();
exports.CookieModule = CookieModule;


// C:\grua-booking-system-25\server\dist\core\cookie\cookie.service.js
"use strict";
var __esDecorate = (this && this.__esDecorate) || function (ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {
    function accept(f) { if (f !== void 0 && typeof f !== "function") throw new TypeError("Function expected"); return f; }
    var kind = contextIn.kind, key = kind === "getter" ? "get" : kind === "setter" ? "set" : "value";
    var target = !descriptorIn && ctor ? contextIn["static"] ? ctor : ctor.prototype : null;
    var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});
    var _, done = false;
    for (var i = decorators.length - 1; i >= 0; i--) {
        var context = {};
        for (var p in contextIn) context[p] = p === "access" ? {} : contextIn[p];
        for (var p in contextIn.access) context.access[p] = contextIn.access[p];
        context.addInitializer = function (f) { if (done) throw new TypeError("Cannot add initializers after decoration has completed"); extraInitializers.push(accept(f || null)); };
        var result = (0, decorators[i])(kind === "accessor" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);
        if (kind === "accessor") {
            if (result === void 0) continue;
            if (result === null || typeof result !== "object") throw new TypeError("Object expected");
            if (_ = accept(result.get)) descriptor.get = _;
            if (_ = accept(result.set)) descriptor.set = _;
            if (_ = accept(result.init)) initializers.unshift(_);
        }
        else if (_ = accept(result)) {
            if (kind === "field") initializers.unshift(_);
            else descriptor[key] = _;
        }
    }
    if (target) Object.defineProperty(target, contextIn.name, descriptor);
    done = true;
};
var __runInitializers = (this && this.__runInitializers) || function (thisArg, initializers, value) {
    var useValue = arguments.length > 2;
    for (var i = 0; i < initializers.length; i++) {
        value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);
    }
    return useValue ? value : void 0;
};
var __setFunctionName = (this && this.__setFunctionName) || function (f, name, prefix) {
    if (typeof name === "symbol") name = name.description ? "[".concat(name.description, "]") : "";
    return Object.defineProperty(f, "name", { configurable: true, value: prefix ? "".concat(prefix, " ", name) : name });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.CookieService = void 0;
var common_1 = require("@nestjs/common");
var configuration_1 = require("../configuration");
var Key;
(function (Key) {
    Key["ACCESS_TOKEN"] = "APP_ACCESS_TOKEN";
})(Key || (Key = {}));
var TIME_24_HOURS = 60 * 60 * 24 * 1000;
var CookieService = function () {
    var _classDecorators = [(0, common_1.Injectable)()];
    var _classDescriptor;
    var _classExtraInitializers = [];
    var _classThis;
    var CookieService = _classThis = /** @class */ (function () {
        function CookieService_1(configurationService) {
            this.configurationService = configurationService;
        }
        CookieService_1.prototype.getAccessToken = function (request) {
            return request.cookies[Key.ACCESS_TOKEN];
        };
        CookieService_1.prototype.setAccessToken = function (response, token) {
            var options = this.getOptions();
            response.cookie(Key.ACCESS_TOKEN, token, options);
        };
        CookieService_1.prototype.deleteAccessToken = function (response) {
            response.clearCookie(Key.ACCESS_TOKEN);
        };
        CookieService_1.prototype.getOptions = function () {
            var _a;
            var options = (_a = {},
                _a[configuration_1.ConfigurationServiceObject.Environment.DEVELOPMENT] = {
                    maxAge: TIME_24_HOURS,
                    secure: true,
                    httpOnly: false,
                    sameSite: 'lax',
                },
                _a[configuration_1.ConfigurationServiceObject.Environment.PRODUCTION] = {
                    maxAge: TIME_24_HOURS,
                    secure: true,
                    httpOnly: true,
                    sameSite: 'none',
                },
                _a);
            var environment = this.configurationService.getEnvironment();
            var valueDefault = options[configuration_1.ConfigurationServiceObject.Environment.DEVELOPMENT];
            var value = options[environment];
            return value !== null && value !== void 0 ? value : valueDefault;
        };
        return CookieService_1;
    }());
    __setFunctionName(_classThis, "CookieService");
    (function () {
        var _metadata = typeof Symbol === "function" && Symbol.metadata ? Object.create(null) : void 0;
        __esDecorate(null, _classDescriptor = { value: _classThis }, _classDecorators, { kind: "class", name: _classThis.name, metadata: _metadata }, null, _classExtraInitializers);
        CookieService = _classThis = _classDescriptor.value;
        if (_metadata) Object.defineProperty(_classThis, Symbol.metadata, { enumerable: true, configurable: true, writable: true, value: _metadata });
        __runInitializers(_classThis, _classExtraInitializers);
    })();
    return CookieService = _classThis;
}();
exports.CookieService = CookieService;


// C:\grua-booking-system-25\server\dist\core\cookie\index.js
"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", { value: true });
__exportStar(require("./cookie.module"), exports);
__exportStar(require("./cookie.service"), exports);


// C:\grua-booking-system-25\server\dist\core\cors\cors.module.js
"use strict";
var __esDecorate = (this && this.__esDecorate) || function (ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {
    function accept(f) { if (f !== void 0 && typeof f !== "function") throw new TypeError("Function expected"); return f; }
    var kind = contextIn.kind, key = kind === "getter" ? "get" : kind === "setter" ? "set" : "value";
    var target = !descriptorIn && ctor ? contextIn["static"] ? ctor : ctor.prototype : null;
    var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});
    var _, done = false;
    for (var i = decorators.length - 1; i >= 0; i--) {
        var context = {};
        for (var p in contextIn) context[p] = p === "access" ? {} : contextIn[p];
        for (var p in contextIn.access) context.access[p] = contextIn.access[p];
        context.addInitializer = function (f) { if (done) throw new TypeError("Cannot add initializers after decoration has completed"); extraInitializers.push(accept(f || null)); };
        var result = (0, decorators[i])(kind === "accessor" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);
        if (kind === "accessor") {
            if (result === void 0) continue;
            if (result === null || typeof result !== "object") throw new TypeError("Object expected");
            if (_ = accept(result.get)) descriptor.get = _;
            if (_ = accept(result.set)) descriptor.set = _;
            if (_ = accept(result.init)) initializers.unshift(_);
        }
        else if (_ = accept(result)) {
            if (kind === "field") initializers.unshift(_);
            else descriptor[key] = _;
        }
    }
    if (target) Object.defineProperty(target, contextIn.name, descriptor);
    done = true;
};
var __runInitializers = (this && this.__runInitializers) || function (thisArg, initializers, value) {
    var useValue = arguments.length > 2;
    for (var i = 0; i < initializers.length; i++) {
        value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);
    }
    return useValue ? value : void 0;
};
var __setFunctionName = (this && this.__setFunctionName) || function (f, name, prefix) {
    if (typeof name === "symbol") name = name.description ? "[".concat(name.description, "]") : "";
    return Object.defineProperty(f, "name", { configurable: true, value: prefix ? "".concat(prefix, " ", name) : name });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.CorsModule = void 0;
var common_1 = require("@nestjs/common");
var cors_service_1 = require("./cors.service");
var CorsModule = function () {
    var _classDecorators = [(0, common_1.Module)({
            imports: [],
            providers: [cors_service_1.CorsService],
            exports: [cors_service_1.CorsService],
        })];
    var _classDescriptor;
    var _classExtraInitializers = [];
    var _classThis;
    var CorsModule = _classThis = /** @class */ (function () {
        function CorsModule_1() {
        }
        return CorsModule_1;
    }());
    __setFunctionName(_classThis, "CorsModule");
    (function () {
        var _metadata = typeof Symbol === "function" && Symbol.metadata ? Object.create(null) : void 0;
        __esDecorate(null, _classDescriptor = { value: _classThis }, _classDecorators, { kind: "class", name: _classThis.name, metadata: _metadata }, null, _classExtraInitializers);
        CorsModule = _classThis = _classDescriptor.value;
        if (_metadata) Object.defineProperty(_classThis, Symbol.metadata, { enumerable: true, configurable: true, writable: true, value: _metadata });
        __runInitializers(_classThis, _classExtraInitializers);
    })();
    return CorsModule = _classThis;
}();
exports.CorsModule = CorsModule;


// C:\grua-booking-system-25\server\dist\core\cors\cors.service.js
"use strict";
var __esDecorate = (this && this.__esDecorate) || function (ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {
    function accept(f) { if (f !== void 0 && typeof f !== "function") throw new TypeError("Function expected"); return f; }
    var kind = contextIn.kind, key = kind === "getter" ? "get" : kind === "setter" ? "set" : "value";
    var target = !descriptorIn && ctor ? contextIn["static"] ? ctor : ctor.prototype : null;
    var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});
    var _, done = false;
    for (var i = decorators.length - 1; i >= 0; i--) {
        var context = {};
        for (var p in contextIn) context[p] = p === "access" ? {} : contextIn[p];
        for (var p in contextIn.access) context.access[p] = contextIn.access[p];
        context.addInitializer = function (f) { if (done) throw new TypeError("Cannot add initializers after decoration has completed"); extraInitializers.push(accept(f || null)); };
        var result = (0, decorators[i])(kind === "accessor" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);
        if (kind === "accessor") {
            if (result === void 0) continue;
            if (result === null || typeof result !== "object") throw new TypeError("Object expected");
            if (_ = accept(result.get)) descriptor.get = _;
            if (_ = accept(result.set)) descriptor.set = _;
            if (_ = accept(result.init)) initializers.unshift(_);
        }
        else if (_ = accept(result)) {
            if (kind === "field") initializers.unshift(_);
            else descriptor[key] = _;
        }
    }
    if (target) Object.defineProperty(target, contextIn.name, descriptor);
    done = true;
};
var __runInitializers = (this && this.__runInitializers) || function (thisArg, initializers, value) {
    var useValue = arguments.length > 2;
    for (var i = 0; i < initializers.length; i++) {
        value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);
    }
    return useValue ? value : void 0;
};
var __setFunctionName = (this && this.__setFunctionName) || function (f, name, prefix) {
    if (typeof name === "symbol") name = name.description ? "[".concat(name.description, "]") : "";
    return Object.defineProperty(f, "name", { configurable: true, value: prefix ? "".concat(prefix, " ", name) : name });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.CorsService = void 0;
var common_1 = require("@nestjs/common");
var configuration_1 = require("../configuration");
var CorsService = function () {
    var _classDecorators = [(0, common_1.Injectable)()];
    var _classDescriptor;
    var _classExtraInitializers = [];
    var _classThis;
    var CorsService = _classThis = /** @class */ (function () {
        function CorsService_1(configurationService) {
            this.configurationService = configurationService;
        }
        CorsService_1.prototype.getOptions = function () {
            var _a;
            var clientBaseUrl = this.configurationService.getClientBaseUrl();
            var options = (_a = {},
                _a[configuration_1.ConfigurationServiceObject.Environment.DEVELOPMENT] = {
                    origin: [clientBaseUrl],
                    credentials: true,
                },
                _a[configuration_1.ConfigurationServiceObject.Environment.PRODUCTION] = {
                    origin: clientBaseUrl,
                    credentials: true,
                },
                _a);
            var environment = this.configurationService.getEnvironment();
            var value = options[environment];
            var valueDefault = options[configuration_1.ConfigurationServiceObject.Environment.DEVELOPMENT];
            return value !== null && value !== void 0 ? value : valueDefault;
        };
        return CorsService_1;
    }());
    __setFunctionName(_classThis, "CorsService");
    (function () {
        var _metadata = typeof Symbol === "function" && Symbol.metadata ? Object.create(null) : void 0;
        __esDecorate(null, _classDescriptor = { value: _classThis }, _classDecorators, { kind: "class", name: _classThis.name, metadata: _metadata }, null, _classExtraInitializers);
        CorsService = _classThis = _classDescriptor.value;
        if (_metadata) Object.defineProperty(_classThis, Symbol.metadata, { enumerable: true, configurable: true, writable: true, value: _metadata });
        __runInitializers(_classThis, _classExtraInitializers);
    })();
    return CorsService = _classThis;
}();
exports.CorsService = CorsService;


// C:\grua-booking-system-25\server\dist\core\cors\index.js
"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", { value: true });
__exportStar(require("./cors.module"), exports);
__exportStar(require("./cors.service"), exports);


// C:\grua-booking-system-25\server\dist\core\database\configuration\database.configuration.module.js


// C:\grua-booking-system-25\server\dist\core\database\configuration\database.configuration.service.js
"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __esDecorate = (this && this.__esDecorate) || function (ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {
    function accept(f) { if (f !== void 0 && typeof f !== "function") throw new TypeError("Function expected"); return f; }
    var kind = contextIn.kind, key = kind === "getter" ? "get" : kind === "setter" ? "set" : "value";
    var target = !descriptorIn && ctor ? contextIn["static"] ? ctor : ctor.prototype : null;
    var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});
    var _, done = false;
    for (var i = decorators.length - 1; i >= 0; i--) {
        var context = {};
        for (var p in contextIn) context[p] = p === "access" ? {} : contextIn[p];
        for (var p in contextIn.access) context.access[p] = contextIn.access[p];
        context.addInitializer = function (f) { if (done) throw new TypeError("Cannot add initializers after decoration has completed"); extraInitializers.push(accept(f || null)); };
        var result = (0, decorators[i])(kind === "accessor" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);
        if (kind === "accessor") {
            if (result === void 0) continue;
            if (result === null || typeof result !== "object") throw new TypeError("Object expected");
            if (_ = accept(result.get)) descriptor.get = _;
            if (_ = accept(result.set)) descriptor.set = _;
            if (_ = accept(result.init)) initializers.unshift(_);
        }
        else if (_ = accept(result)) {
            if (kind === "field") initializers.unshift(_);
            else descriptor[key] = _;
        }
    }
    if (target) Object.defineProperty(target, contextIn.name, descriptor);
    done = true;
};
var __runInitializers = (this && this.__runInitializers) || function (thisArg, initializers, value) {
    var useValue = arguments.length > 2;
    for (var i = 0; i < initializers.length; i++) {
        value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);
    }
    return useValue ? value : void 0;
};
var __setFunctionName = (this && this.__setFunctionName) || function (f, name, prefix) {
    if (typeof name === "symbol") name = name.description ? "[".concat(name.description, "]") : "";
    return Object.defineProperty(f, "name", { configurable: true, value: prefix ? "".concat(prefix, " ", name) : name });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.DatabaseConfigurationService = void 0;
var common_1 = require("@nestjs/common");
var DatabaseConfigurationService = function () {
    var _classDecorators = [(0, common_1.Injectable)()];
    var _classDescriptor;
    var _classExtraInitializers = [];
    var _classThis;
    var DatabaseConfigurationService = _classThis = /** @class */ (function () {
        function DatabaseConfigurationService_1(configurationService) {
            this.configurationService = configurationService;
        }
        DatabaseConfigurationService_1.prototype.getOptions = function () {
            var isProduction = this.configurationService.isEnvironmentProduction();
            if (isProduction) {
                return __assign(__assign(__assign({}, this.getOptionsBase()), this.getOptionsCommon()), this.getOptionsProduction());
            }
            else {
                return __assign(__assign(__assign({}, this.getOptionsBase()), this.getOptionsCommon()), this.getOptionsDevelopment());
            }
        };
        DatabaseConfigurationService_1.prototype.getOptionsMigration = function () {
            var isProduction = this.configurationService.isEnvironmentProduction();
            var options = __assign(__assign({}, this.getOptionsBase()), { migrationsTableName: 'typeorm_migrations', migrations: ['src/core/database/migrations/scripts/*.ts'], entities: ['src/modules/**/*.model.ts'] });
            if (isProduction) {
                return __assign(__assign({}, options), { ssl: {
                        rejectUnauthorized: false,
                    } });
            }
            else {
                return __assign({}, options);
            }
        };
        DatabaseConfigurationService_1.prototype.getOptionsBase = function () {
            var _a;
            var url = (_a = this.configurationService.get('DATABASE_URL')) !== null && _a !== void 0 ? _a : this.configurationService.get('SERVER_DATABASE_URL');
            var username = url.split('//')[1].split(':')[0];
            var password = url.split(':')[2].split('@')[0];
            var host = url.split('@')[1].split(':')[0];
            var port = Number(url.split(':')[3].split('/')[0]);
            var database = url.split('/').slice(-1)[0];
            var isAmazon = host.includes('amazonaws.com');
            var options = {
                type: 'postgres',
                host: host,
                username: username,
                password: password,
                port: port,
                database: database,
            };
            if (isAmazon) {
                options['ssl'] = {
                    rejectUnauthorized: false,
                };
            }
            return options;
        };
        DatabaseConfigurationService_1.prototype.isMigrationActive = function () {
            return this.configurationService.getBoolean('DATABASE_MIGRATION_ACTIVE');
        };
        DatabaseConfigurationService_1.prototype.getOptionsCommon = function () {
            return {
                autoLoadEntities: true,
            };
        };
        DatabaseConfigurationService_1.prototype.getOptionsDevelopment = function () {
            return {
                synchronize: !this.isMigrationActive(),
            };
        };
        DatabaseConfigurationService_1.prototype.getOptionsProduction = function () {
            return {
                synchronize: true,
                ssl: {
                    rejectUnauthorized: false,
                },
            };
        };
        return DatabaseConfigurationService_1;
    }());
    __setFunctionName(_classThis, "DatabaseConfigurationService");
    (function () {
        var _metadata = typeof Symbol === "function" && Symbol.metadata ? Object.create(null) : void 0;
        __esDecorate(null, _classDescriptor = { value: _classThis }, _classDecorators, { kind: "class", name: _classThis.name, metadata: _metadata }, null, _classExtraInitializers);
        DatabaseConfigurationService = _classThis = _classDescriptor.value;
        if (_metadata) Object.defineProperty(_classThis, Symbol.metadata, { enumerable: true, configurable: true, writable: true, value: _metadata });
        __runInitializers(_classThis, _classExtraInitializers);
    })();
    return DatabaseConfigurationService = _classThis;
}();
exports.DatabaseConfigurationService = DatabaseConfigurationService;


// C:\grua-booking-system-25\server\dist\core\database\helper\ColumnNumericTransformer.js
"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.ColumnNumeric = exports.ColumnNumericTransformer = void 0;
var typeorm_1 = require("typeorm");
var ColumnNumericTransformer = /** @class */ (function () {
    function ColumnNumericTransformer() {
    }
    ColumnNumericTransformer.prototype.to = function (data) {
        return data;
    };
    ColumnNumericTransformer.prototype.from = function (data) {
        return parseFloat(data);
    };
    return ColumnNumericTransformer;
}());
exports.ColumnNumericTransformer = ColumnNumericTransformer;
function ColumnNumeric(options) {
    return function (target, propertyKey) {
        (0, typeorm_1.Column)(__assign(__assign({}, options), { type: 'numeric', transformer: new ColumnNumericTransformer() }))(target, propertyKey);
    };
}
exports.ColumnNumeric = ColumnNumeric;


// C:\grua-booking-system-25\server\dist\core\database\helper\database.helper.js
"use strict";
var __esDecorate = (this && this.__esDecorate) || function (ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {
    function accept(f) { if (f !== void 0 && typeof f !== "function") throw new TypeError("Function expected"); return f; }
    var kind = contextIn.kind, key = kind === "getter" ? "get" : kind === "setter" ? "set" : "value";
    var target = !descriptorIn && ctor ? contextIn["static"] ? ctor : ctor.prototype : null;
    var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});
    var _, done = false;
    for (var i = decorators.length - 1; i >= 0; i--) {
        var context = {};
        for (var p in contextIn) context[p] = p === "access" ? {} : contextIn[p];
        for (var p in contextIn.access) context.access[p] = contextIn.access[p];
        context.addInitializer = function (f) { if (done) throw new TypeError("Cannot add initializers after decoration has completed"); extraInitializers.push(accept(f || null)); };
        var result = (0, decorators[i])(kind === "accessor" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);
        if (kind === "accessor") {
            if (result === void 0) continue;
            if (result === null || typeof result !== "object") throw new TypeError("Object expected");
            if (_ = accept(result.get)) descriptor.get = _;
            if (_ = accept(result.set)) descriptor.set = _;
            if (_ = accept(result.init)) initializers.unshift(_);
        }
        else if (_ = accept(result)) {
            if (kind === "field") initializers.unshift(_);
            else descriptor[key] = _;
        }
    }
    if (target) Object.defineProperty(target, contextIn.name, descriptor);
    done = true;
};
var __runInitializers = (this && this.__runInitializers) || function (thisArg, initializers, value) {
    var useValue = arguments.length > 2;
    for (var i = 0; i < initializers.length; i++) {
        value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);
    }
    return useValue ? value : void 0;
};
var __setFunctionName = (this && this.__setFunctionName) || function (f, name, prefix) {
    if (typeof name === "symbol") name = name.description ? "[".concat(name.description, "]") : "";
    return Object.defineProperty(f, "name", { configurable: true, value: prefix ? "".concat(prefix, " ", name) : name });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.DatabaseHelper = void 0;
var common_1 = require("@nestjs/common");
var utility_1 = require("@server/helpers/utility");
var DatabaseHelper = function () {
    var _classDecorators = [(0, common_1.Injectable)()];
    var _classDescriptor;
    var _classExtraInitializers = [];
    var _classThis;
    var DatabaseHelper = _classThis = /** @class */ (function () {
        function DatabaseHelper_1(exception) {
            this.exception = exception;
        }
        DatabaseHelper_1.prototype.applyQueryOptions = function (repository, queryOptions) {
            if (queryOptions === void 0) { queryOptions = {}; }
            var query = repository.createQueryBuilder('entity');
            this.applyIncludes(query, queryOptions);
            this.applyFilters(query, queryOptions);
            this.applyOrders(query, queryOptions);
            this.applyPagination(query, queryOptions);
            return query;
        };
        DatabaseHelper_1.prototype.notFoundByQuery = function (where) {
            var keyValues = Object.entries(where)
                .map(function (_a) {
                var key = _a[0], value = _a[1];
                return "\"".concat(key, "\"=\"").concat(value, "\"");
            })
                .join(', ');
            return this.exception.throw({
                status: common_1.HttpStatus.NOT_FOUND,
                code: 101,
                publicMessage: 'Resource was not found',
                privateMessage: "Resource with ".concat(keyValues, " was not found."),
            });
        };
        DatabaseHelper_1.prototype.invalidQueryWhere = function () {
            var keys = [];
            for (var _i = 0; _i < arguments.length; _i++) {
                keys[_i] = arguments[_i];
            }
            var keysString = keys.map(function (key) { return "\"".concat(key, "\""); }).join(', ');
            return this.exception.throw({
                status: common_1.HttpStatus.BAD_REQUEST,
                code: 100,
                publicMessage: 'Resource was not found',
                privateMessage: "Resource where conditions for keys ".concat(keysString, " are invalid."),
            });
        };
        /* --------------------------------- PRIVATE -------------------------------- */
        DatabaseHelper_1.prototype.applyPagination = function (query, queryOptions) {
            var _a, _b;
            if (!utility_1.Utility.isDefined(queryOptions.pagination)) {
                return;
            }
            var countItems = (_a = queryOptions.pagination.countItems) !== null && _a !== void 0 ? _a : 50;
            var page = (_b = queryOptions.pagination.page) !== null && _b !== void 0 ? _b : 1;
            query.take(countItems);
            query.skip((page - 1) * countItems);
        };
        DatabaseHelper_1.prototype.applyIncludes = function (query, queryOptions) {
            var _a;
            var includes = ((_a = queryOptions.includes) !== null && _a !== void 0 ? _a : []);
            includes.forEach(function (relation, relationIndex) {
                var keys = relation.split('.');
                keys.forEach(function (key, keyIndex) {
                    var suffix = "".concat(relationIndex, "_").concat(keyIndex);
                    var keyUnique = "".concat(key, "_").concat(suffix);
                    var isRoot = keyIndex === 0;
                    if (isRoot) {
                        query.leftJoinAndSelect("entity.".concat(key), "".concat(keyUnique));
                    }
                    else {
                        var suffixParent = "".concat(relationIndex, "_").concat(keyIndex - 1);
                        var keyUniqueParent = "".concat(keys[keyIndex - 1], "_").concat(suffixParent);
                        query.leftJoinAndSelect("".concat(keyUniqueParent, ".").concat(key), "".concat(keyUnique));
                    }
                });
            });
        };
        DatabaseHelper_1.prototype.applyFilters = function (query, queryOptions) {
            var _a;
            var filters = (_a = queryOptions.filters) !== null && _a !== void 0 ? _a : {};
            var conditions = [];
            var values = {};
            for (var _i = 0, _b = Object.entries(filters); _i < _b.length; _i++) {
                var _c = _b[_i], key = _c[0], value = _c[1];
                var isArray = Array.isArray(value);
                if (isArray) {
                    conditions.push("entity.".concat(key, " IN (:...").concat(key, ")"));
                    values[key] = value;
                }
                else if (typeof value === 'object') {
                    var filters_2 = this.buildQueryOptionsFilters(key, value);
                    for (var _d = 0, filters_1 = filters_2; _d < filters_1.length; _d++) {
                        var filter = filters_1[_d];
                        conditions.push(filter.condition);
                        values[filter.key] = filter.value;
                    }
                }
                else {
                    conditions.push("entity.".concat(key, " = :").concat(key));
                    values[key] = value;
                }
            }
            query.where(conditions.join(' AND '), values);
        };
        DatabaseHelper_1.prototype.applyOrders = function (query, queryOptions) {
            var _a;
            var orders = (_a = queryOptions.orders) !== null && _a !== void 0 ? _a : {};
            var isFirst = true;
            for (var _i = 0, _b = Object.entries(orders); _i < _b.length; _i++) {
                var _c = _b[_i], key = _c[0], value = _c[1];
                if (!isFirst) {
                    query.orderBy("entity.".concat(key), value);
                    isFirst = false;
                }
                query.addOrderBy("entity.".concat(key), value);
            }
        };
        DatabaseHelper_1.prototype.buildQueryOptionsFilters = function (key, filter) {
            var conditions = [];
            if (utility_1.Utility.isDefined(filter.eq)) {
                conditions.push({
                    condition: "entity.".concat(key, " = :").concat(key, "EQ"),
                    key: "".concat(key, "EQ"),
                    value: filter.eq,
                });
            }
            if (utility_1.Utility.isDefined(filter.neq)) {
                conditions.push({
                    condition: "entity.".concat(key, " != :").concat(key, "NEQ"),
                    key: "".concat(key, "NEQ"),
                    value: filter.neq,
                });
            }
            if (utility_1.Utility.isDefined(filter.gt)) {
                conditions.push({
                    condition: "entity.".concat(key, " > :").concat(key, "GT"),
                    key: "".concat(key, "GT"),
                    value: filter.gt,
                });
            }
            if (utility_1.Utility.isDefined(filter.gte)) {
                conditions.push({
                    condition: "entity.".concat(key, " >= :").concat(key, "GTE"),
                    key: "".concat(key, "GTE"),
                    value: filter.gte,
                });
            }
            if (utility_1.Utility.isDefined(filter.lt)) {
                conditions.push({
                    condition: "entity.".concat(key, " < :").concat(key, "LT"),
                    key: "".concat(key, "LT"),
                    value: filter.lt,
                });
            }
            if (utility_1.Utility.isDefined(filter.lte)) {
                conditions.push({
                    condition: "entity.".concat(key, " <= :").concat(key, "LTE"),
                    key: "".concat(key, "LTE"),
                    value: filter.lte,
                });
            }
            if (utility_1.Utility.isDefined(filter.in)) {
                conditions.push({
                    condition: "entity.".concat(key, " IN (:...").concat(key, "IN)"),
                    key: "".concat(key, "IN"),
                    value: filter.in,
                });
            }
            if (utility_1.Utility.isDefined(filter.nin)) {
                conditions.push({
                    condition: "entity.".concat(key, " NOT IN (:...").concat(key, "NIN)"),
                    key: "".concat(key, "NIN"),
                    value: filter.nin,
                });
            }
            if (utility_1.Utility.isDefined(filter.like)) {
                conditions.push({
                    condition: "entity.".concat(key, " LIKE :").concat(key, "LIKE"),
                    key: "".concat(key, "LIKE"),
                    value: filter.like,
                });
            }
            if (utility_1.Utility.isDefined(filter.ilike)) {
                conditions.push({
                    condition: "entity.".concat(key, " ILIKE :").concat(key, "ILIKE"),
                    key: "".concat(key, "ILIKE"),
                    value: filter.ilike,
                });
            }
            return conditions;
        };
        return DatabaseHelper_1;
    }());
    __setFunctionName(_classThis, "DatabaseHelper");
    (function () {
        var _metadata = typeof Symbol === "function" && Symbol.metadata ? Object.create(null) : void 0;
        __esDecorate(null, _classDescriptor = { value: _classThis }, _classDecorators, { kind: "class", name: _classThis.name, metadata: _metadata }, null, _classExtraInitializers);
        DatabaseHelper = _classThis = _classDescriptor.value;
        if (_metadata) Object.defineProperty(_classThis, Symbol.metadata, { enumerable: true, configurable: true, writable: true, value: _metadata });
        __runInitializers(_classThis, _classExtraInitializers);
    })();
    return DatabaseHelper = _classThis;
}();
exports.DatabaseHelper = DatabaseHelper;


// C:\grua-booking-system-25\server\dist\core\database\helper\database.helper.module.js
"use strict";
var __esDecorate = (this && this.__esDecorate) || function (ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {
    function accept(f) { if (f !== void 0 && typeof f !== "function") throw new TypeError("Function expected"); return f; }
    var kind = contextIn.kind, key = kind === "getter" ? "get" : kind === "setter" ? "set" : "value";
    var target = !descriptorIn && ctor ? contextIn["static"] ? ctor : ctor.prototype : null;
    var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});
    var _, done = false;
    for (var i = decorators.length - 1; i >= 0; i--) {
        var context = {};
        for (var p in contextIn) context[p] = p === "access" ? {} : contextIn[p];
        for (var p in contextIn.access) context.access[p] = contextIn.access[p];
        context.addInitializer = function (f) { if (done) throw new TypeError("Cannot add initializers after decoration has completed"); extraInitializers.push(accept(f || null)); };
        var result = (0, decorators[i])(kind === "accessor" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);
        if (kind === "accessor") {
            if (result === void 0) continue;
            if (result === null || typeof result !== "object") throw new TypeError("Object expected");
            if (_ = accept(result.get)) descriptor.get = _;
            if (_ = accept(result.set)) descriptor.set = _;
            if (_ = accept(result.init)) initializers.unshift(_);
        }
        else if (_ = accept(result)) {
            if (kind === "field") initializers.unshift(_);
            else descriptor[key] = _;
        }
    }
    if (target) Object.defineProperty(target, contextIn.name, descriptor);
    done = true;
};
var __runInitializers = (this && this.__runInitializers) || function (thisArg, initializers, value) {
    var useValue = arguments.length > 2;
    for (var i = 0; i < initializers.length; i++) {
        value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);
    }
    return useValue ? value : void 0;
};
var __setFunctionName = (this && this.__setFunctionName) || function (f, name, prefix) {
    if (typeof name === "symbol") name = name.description ? "[".concat(name.description, "]") : "";
    return Object.defineProperty(f, "name", { configurable: true, value: prefix ? "".concat(prefix, " ", name) : name });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.DatabaseHelperModule = void 0;
var common_1 = require("@nestjs/common");
var database_helper_1 = require("./database.helper");
var DatabaseHelperModule = function () {
    var _classDecorators = [(0, common_1.Module)({
            imports: [],
            providers: [database_helper_1.DatabaseHelper],
            exports: [database_helper_1.DatabaseHelper],
        })];
    var _classDescriptor;
    var _classExtraInitializers = [];
    var _classThis;
    var DatabaseHelperModule = _classThis = /** @class */ (function () {
        function DatabaseHelperModule_1() {
        }
        return DatabaseHelperModule_1;
    }());
    __setFunctionName(_classThis, "DatabaseHelperModule");
    (function () {
        var _metadata = typeof Symbol === "function" && Symbol.metadata ? Object.create(null) : void 0;
        __esDecorate(null, _classDescriptor = { value: _classThis }, _classDecorators, { kind: "class", name: _classThis.name, metadata: _metadata }, null, _classExtraInitializers);
        DatabaseHelperModule = _classThis = _classDescriptor.value;
        if (_metadata) Object.defineProperty(_classThis, Symbol.metadata, { enumerable: true, configurable: true, writable: true, value: _metadata });
        __runInitializers(_classThis, _classExtraInitializers);
    })();
    return DatabaseHelperModule = _classThis;
}();
exports.DatabaseHelperModule = DatabaseHelperModule;


// C:\grua-booking-system-25\server\dist\core\database\migrations\scripts\1702305820868-script.js
"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (g && (g = 0, op[0] && (_ = 0)), _) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Script1702305820868 = void 0;
var Script1702305820868 = /** @class */ (function () {
    function Script1702305820868() {
        this.name = 'Script1702305820868';
    }
    Script1702305820868.prototype.up = function (queryRunner) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, queryRunner.query("\n      INSERT INTO \"user\" (\n        \"id\",\n        \"email\", \n        \"name\", \n        \"pictureUrl\", \n\n\"isActive\",\n\n\"isVerified\",\n\n\"password\",\n        \"status\"\n      ) VALUES (\n        '21a857f1-ba5f-4435-bcf6-f910ec07c0dc',\n        'test@test.com',\n        'John Doe',\n        'https://i.imgur.com/sbRCzP7.png',\n\ntrue,\n\ntrue,\n\n'$2b$10$ppubsZypHzkqW9dkhMB97ul2.wSsvaCoDE2CzqIHygddRMKXvpYUC',\n        'VERIFIED'\n      );\n\n      INSERT INTO \"authorization_role\" (\n        \"id\",\n        \"name\"\n      ) VALUES (\n        'a7548b29-a984-40b5-a5ea-286b9ebeae18',\n        'admin'\n      );\n\n      INSERT INTO \"authorization_role_user\" (\n        \"userId\",\n        \"roleId\"\n      ) VALUES (\n        '21a857f1-ba5f-4435-bcf6-f910ec07c0dc',\n        'a7548b29-a984-40b5-a5ea-286b9ebeae18'\n      );\n        ")];
                    case 1:
                        _a.sent();
                        return [2 /*return*/];
                }
            });
        });
    };
    Script1702305820868.prototype.down = function (queryRunner) {
        return __awaiter(this, void 0, void 0, function () { return __generator(this, function (_a) {
            return [2 /*return*/];
        }); });
    };
    return Script1702305820868;
}());
exports.Script1702305820868 = Script1702305820868;


// C:\grua-booking-system-25\server\dist\core\database\migrations\scripts\1702311247028-script.js
"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (g && (g = 0, op[0] && (_ = 0)), _) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Script1702311247028 = void 0;
var Script1702311247028 = /** @class */ (function () {
    function Script1702311247028() {
        this.name = 'Script1702311247028';
    }
    Script1702311247028.prototype.up = function (queryRunner) {
        return __awaiter(this, void 0, void 0, function () {
            var error_1;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        _a.trys.push([0, 2, , 3]);
                        return [4 /*yield*/, queryRunner.query("\n        INSERT INTO \"user\" (\"id\", \"email\", \"name\", \"pictureUrl\", \"stripeCustomerId\", \"status\", \"password\", \"lastLogin\", \"isActive\", \"isVerified\") VALUES ('6779316e-4b0c-4261-9a5c-7e45ca6c5362', '1Aracely.Wilderman@gmail.com', 'Jane Smith', 'https://i.imgur.com/YfJQV5z.png?id=3', 'cus_J0a1b2c3d4e5f6g7h8i9', 'suspended', '$2b$10$ppubsZypHzkqW9dkhMB97ul2.wSsvaCoDE2CzqIHygddRMKXvpYUC', '2023-06-07T08:38:43.421Z', false, true);\nINSERT INTO \"user\" (\"id\", \"email\", \"name\", \"pictureUrl\", \"stripeCustomerId\", \"status\", \"password\", \"lastLogin\", \"isActive\", \"isVerified\") VALUES ('64074fc2-22e2-4b88-8739-7f53603f8a25', '11Hubert_Murazik@gmail.com', 'Michael Brown', 'https://i.imgur.com/YfJQV5z.png?id=13', 'cus_K1b2c3d4e5f6g7h8i9j0', 'suspended', '$2b$10$ppubsZypHzkqW9dkhMB97ul2.wSsvaCoDE2CzqIHygddRMKXvpYUC', '2024-10-29T21:36:11.192Z', true, false);\nINSERT INTO \"user\" (\"id\", \"email\", \"name\", \"pictureUrl\", \"stripeCustomerId\", \"status\", \"password\", \"lastLogin\", \"isActive\", \"isVerified\") VALUES ('ea21c0f9-269c-4141-bf55-8e30582c90bd', '21Gilbert.Medhurst@yahoo.com', 'Michael Brown', 'https://i.imgur.com/YfJQV5z.png?id=23', 'cus_L2c3d4e5f6g7h8i9j0k1', 'pending', '$2b$10$ppubsZypHzkqW9dkhMB97ul2.wSsvaCoDE2CzqIHygddRMKXvpYUC', '2024-07-11T07:40:19.815Z', true, true);\nINSERT INTO \"user\" (\"id\", \"email\", \"name\", \"pictureUrl\", \"stripeCustomerId\", \"status\", \"password\", \"lastLogin\", \"isActive\", \"isVerified\") VALUES ('104e46f4-d5bb-47a5-b11d-b19e1c8c0edc', '31Odie_Harber@gmail.com', 'Emily Jones', 'https://i.imgur.com/YfJQV5z.png?id=33', 'cus_N4e5f6g7h8i9j0k1l2m3', 'pending', '$2b$10$ppubsZypHzkqW9dkhMB97ul2.wSsvaCoDE2CzqIHygddRMKXvpYUC', '2025-01-29T14:19:34.237Z', false, true);\nINSERT INTO \"user\" (\"id\", \"email\", \"name\", \"pictureUrl\", \"stripeCustomerId\", \"status\", \"password\", \"lastLogin\", \"isActive\", \"isVerified\") VALUES ('2c57c4f8-a84b-4104-8789-25b8aa57289d', '41Carrie49@hotmail.com', 'Michael Brown', 'https://i.imgur.com/YfJQV5z.png?id=43', 'cus_M3d4e5f6g7h8i9j0k1l2', 'inactive', '$2b$10$ppubsZypHzkqW9dkhMB97ul2.wSsvaCoDE2CzqIHygddRMKXvpYUC', '2023-07-13T10:24:09.769Z', true, false);\nINSERT INTO \"user\" (\"id\", \"email\", \"name\", \"pictureUrl\", \"stripeCustomerId\", \"status\", \"password\", \"lastLogin\", \"isActive\", \"isVerified\") VALUES ('e7e70418-6b15-4f6e-9b7a-a967ff4d5e6a', '61Nellie_Zieme13@hotmail.com', 'Jane Smith', 'https://i.imgur.com/YfJQV5z.png?id=63', 'cus_K1b2c3d4e5f6g7h8i9j0', 'inactive', '$2b$10$ppubsZypHzkqW9dkhMB97ul2.wSsvaCoDE2CzqIHygddRMKXvpYUC', '2024-09-04T06:55:23.260Z', false, true);\nINSERT INTO \"user\" (\"id\", \"email\", \"name\", \"pictureUrl\", \"stripeCustomerId\", \"status\", \"password\", \"lastLogin\", \"isActive\", \"isVerified\") VALUES ('5a16a5a6-a1f9-46d7-96ad-11a4de936f28', '71Francisco.Beahan34@gmail.com', 'Michael Brown', 'https://i.imgur.com/YfJQV5z.png?id=73', 'cus_J0a1b2c3d4e5f6g7h8i9', 'suspended', '$2b$10$ppubsZypHzkqW9dkhMB97ul2.wSsvaCoDE2CzqIHygddRMKXvpYUC', '2025-02-16T22:47:18.728Z', false, true);\nINSERT INTO \"user\" (\"id\", \"email\", \"name\", \"pictureUrl\", \"stripeCustomerId\", \"status\", \"password\", \"lastLogin\", \"isActive\", \"isVerified\") VALUES ('d16ce95d-9888-486f-b606-1b528efa0d4f', '81Magdalen_Heller@yahoo.com', 'Jane Smith', 'https://i.imgur.com/YfJQV5z.png?id=83', 'cus_M3d4e5f6g7h8i9j0k1l2', 'inactive', '$2b$10$ppubsZypHzkqW9dkhMB97ul2.wSsvaCoDE2CzqIHygddRMKXvpYUC', '2023-08-12T00:58:40.942Z', false, true);\nINSERT INTO \"user\" (\"id\", \"email\", \"name\", \"pictureUrl\", \"stripeCustomerId\", \"status\", \"password\", \"lastLogin\", \"isActive\", \"isVerified\") VALUES ('be1f6788-7b44-4b9e-b237-d5ffc02bd05e', '91Beatrice_Fay79@yahoo.com', 'Jane Smith', 'https://i.imgur.com/YfJQV5z.png?id=93', 'cus_N4e5f6g7h8i9j0k1l2m3', 'active', '$2b$10$ppubsZypHzkqW9dkhMB97ul2.wSsvaCoDE2CzqIHygddRMKXvpYUC', '2023-10-30T19:11:44.960Z', true, true);\n\nINSERT INTO \"notification\" (\"id\", \"title\", \"message\", \"senderName\", \"senderEmail\", \"senderPictureUrl\", \"redirectUrl\", \"userId\") VALUES ('de47a4e9-4d4e-426a-8663-43a230c03800', 'Account Verification Required', 'Please verify your account by clicking the link below.', 'Customer Service', '104Aylin.Becker96@hotmail.com', 'https://i.imgur.com/YfJQV5z.png?id=105', 'https://i.imgur.com/YfJQV5z.png?id=106', 'd16ce95d-9888-486f-b606-1b528efa0d4f');\nINSERT INTO \"notification\" (\"id\", \"title\", \"message\", \"senderName\", \"senderEmail\", \"senderPictureUrl\", \"redirectUrl\", \"userId\") VALUES ('dd2a7c2f-d16b-4c1c-bc54-370538c71806', 'Service Completion Notification', 'Please verify your account by clicking the link below.', 'Service Desk', '111Mabelle77@hotmail.com', 'https://i.imgur.com/YfJQV5z.png?id=112', 'https://i.imgur.com/YfJQV5z.png?id=113', 'be1f6788-7b44-4b9e-b237-d5ffc02bd05e');\nINSERT INTO \"notification\" (\"id\", \"title\", \"message\", \"senderName\", \"senderEmail\", \"senderPictureUrl\", \"redirectUrl\", \"userId\") VALUES ('e042e9c8-6529-49a1-bde1-3d4b5bd5fa9d', 'Account Verification Required', 'Your service request has been confirmed and a tow truck is on the way.', 'Service Desk', '118Tyree_Kulas@hotmail.com', 'https://i.imgur.com/YfJQV5z.png?id=119', 'https://i.imgur.com/YfJQV5z.png?id=120', '21a857f1-ba5f-4435-bcf6-f910ec07c0dc');\nINSERT INTO \"notification\" (\"id\", \"title\", \"message\", \"senderName\", \"senderEmail\", \"senderPictureUrl\", \"redirectUrl\", \"userId\") VALUES ('5f166a65-d276-44b7-bcf0-c3dbb4babd27', 'Service Request Confirmation', 'Thank you for registering with us. We are excited to have you on board.', 'Service Desk', '125Verlie.Deckow@hotmail.com', 'https://i.imgur.com/YfJQV5z.png?id=126', 'https://i.imgur.com/YfJQV5z.png?id=127', 'd16ce95d-9888-486f-b606-1b528efa0d4f');\nINSERT INTO \"notification\" (\"id\", \"title\", \"message\", \"senderName\", \"senderEmail\", \"senderPictureUrl\", \"redirectUrl\", \"userId\") VALUES ('41b7599b-ac4c-4b0d-95d4-bf9579328a6f', 'Account Verification Required', 'Your service has been successfully completed. Thank you for using our service.', 'Customer Service', '132Era_Torp-Kirlin@hotmail.com', 'https://i.imgur.com/YfJQV5z.png?id=133', 'https://i.imgur.com/YfJQV5z.png?id=134', 'd16ce95d-9888-486f-b606-1b528efa0d4f');\nINSERT INTO \"notification\" (\"id\", \"title\", \"message\", \"senderName\", \"senderEmail\", \"senderPictureUrl\", \"redirectUrl\", \"userId\") VALUES ('5f77aeda-fcdf-472a-9a7d-68272ec5f192', 'Service Completion Notification', 'Please follow the instructions to reset your password.', 'Support Team', '139Bonnie_Barrows@yahoo.com', 'https://i.imgur.com/YfJQV5z.png?id=140', 'https://i.imgur.com/YfJQV5z.png?id=141', 'e7e70418-6b15-4f6e-9b7a-a967ff4d5e6a');\nINSERT INTO \"notification\" (\"id\", \"title\", \"message\", \"senderName\", \"senderEmail\", \"senderPictureUrl\", \"redirectUrl\", \"userId\") VALUES ('6779a0e1-19e2-4ee4-8b76-216d2bfd444b', 'Account Verification Required', 'Your service has been successfully completed. Thank you for using our service.', 'Service Desk', '146Savion.Kunze80@hotmail.com', 'https://i.imgur.com/YfJQV5z.png?id=147', 'https://i.imgur.com/YfJQV5z.png?id=148', '5a16a5a6-a1f9-46d7-96ad-11a4de936f28');\nINSERT INTO \"notification\" (\"id\", \"title\", \"message\", \"senderName\", \"senderEmail\", \"senderPictureUrl\", \"redirectUrl\", \"userId\") VALUES ('ace541bc-0012-4087-9b48-f31d656658ec', 'Service Request Confirmation', 'Please follow the instructions to reset your password.', 'Admin', '153Lexi.McClure28@hotmail.com', 'https://i.imgur.com/YfJQV5z.png?id=154', 'https://i.imgur.com/YfJQV5z.png?id=155', 'be1f6788-7b44-4b9e-b237-d5ffc02bd05e');\nINSERT INTO \"notification\" (\"id\", \"title\", \"message\", \"senderName\", \"senderEmail\", \"senderPictureUrl\", \"redirectUrl\", \"userId\") VALUES ('ac8ebfe0-34be-4d2d-9816-3942393a4de8', 'Password Reset Instructions', 'Please verify your account by clicking the link below.', 'Support Team', '160Estevan.Runte82@hotmail.com', 'https://i.imgur.com/YfJQV5z.png?id=161', 'https://i.imgur.com/YfJQV5z.png?id=162', '21a857f1-ba5f-4435-bcf6-f910ec07c0dc');\nINSERT INTO \"notification\" (\"id\", \"title\", \"message\", \"senderName\", \"senderEmail\", \"senderPictureUrl\", \"redirectUrl\", \"userId\") VALUES ('5ca033e1-5cee-43e8-a0bf-afcb84922bd9', 'Account Verification Required', 'Please verify your account by clicking the link below.', 'Service Desk', '167Pedro57@yahoo.com', 'https://i.imgur.com/YfJQV5z.png?id=168', 'https://i.imgur.com/YfJQV5z.png?id=169', '64074fc2-22e2-4b88-8739-7f53603f8a25');\n\nINSERT INTO \"password_reset\" (\"id\", \"token\", \"expirationDate\", \"userId\") VALUES ('73c7ceb7-1ad7-4149-a25e-b6798d6df261', 'u1v2w3x4y5z6a7b8c9d0', '2023-08-31T10:02:13.669Z', '64074fc2-22e2-4b88-8739-7f53603f8a25');\nINSERT INTO \"password_reset\" (\"id\", \"token\", \"expirationDate\", \"userId\") VALUES ('29980d42-502c-4f4d-814b-b31344dc1634', 'e1f2g3h4i5j6k7l8m9n0', '2024-09-18T13:10:07.255Z', '5a16a5a6-a1f9-46d7-96ad-11a4de936f28');\nINSERT INTO \"password_reset\" (\"id\", \"token\", \"expirationDate\", \"userId\") VALUES ('4ee7402e-9cc3-4c7d-9d19-3e4bbca8f1af', 'e1f2g3h4i5j6k7l8m9n0', '2023-12-10T16:09:26.271Z', 'd16ce95d-9888-486f-b606-1b528efa0d4f');\nINSERT INTO \"password_reset\" (\"id\", \"token\", \"expirationDate\", \"userId\") VALUES ('37af39b7-c140-4573-bc24-d11ce8fd56de', 'u1v2w3x4y5z6a7b8c9d0', '2025-04-02T07:42:56.142Z', '21a857f1-ba5f-4435-bcf6-f910ec07c0dc');\nINSERT INTO \"password_reset\" (\"id\", \"token\", \"expirationDate\", \"userId\") VALUES ('055851e4-efab-4345-bcfa-1f763049d1fe', 'k1l2m3n4o5p6q7r8s9t0', '2025-05-04T04:55:48.411Z', '104e46f4-d5bb-47a5-b11d-b19e1c8c0edc');\nINSERT INTO \"password_reset\" (\"id\", \"token\", \"expirationDate\", \"userId\") VALUES ('cae2b1c7-75ba-4f12-beee-584653e2b3d5', 'u1v2w3x4y5z6a7b8c9d0', '2023-11-07T04:41:15.984Z', 'e7e70418-6b15-4f6e-9b7a-a967ff4d5e6a');\nINSERT INTO \"password_reset\" (\"id\", \"token\", \"expirationDate\", \"userId\") VALUES ('da9d71c4-8e53-43c5-b249-68be82a709eb', 'e1f2g3h4i5j6k7l8m9n0', '2025-02-17T10:57:21.646Z', '104e46f4-d5bb-47a5-b11d-b19e1c8c0edc');\nINSERT INTO \"password_reset\" (\"id\", \"token\", \"expirationDate\", \"userId\") VALUES ('e014c889-a569-4686-a401-96584869db65', 'a1b2c3d4e5f6g7h8i9j0', '2023-08-16T06:35:59.770Z', 'be1f6788-7b44-4b9e-b237-d5ffc02bd05e');\nINSERT INTO \"password_reset\" (\"id\", \"token\", \"expirationDate\", \"userId\") VALUES ('4b8b245d-8598-41ee-ac40-53aa6f6daa61', 'o1p2q3r4s5t6u7v8w9x0', '2025-03-31T14:20:08.225Z', '6779316e-4b0c-4261-9a5c-7e45ca6c5362');\nINSERT INTO \"password_reset\" (\"id\", \"token\", \"expirationDate\", \"userId\") VALUES ('a22af521-0657-48e1-b383-f965b3ffc0dc', 'e1f2g3h4i5j6k7l8m9n0', '2023-12-14T18:13:20.316Z', '104e46f4-d5bb-47a5-b11d-b19e1c8c0edc');\n\nINSERT INTO \"tow_truck_type\" (\"id\", \"name\", \"baseFare\", \"costPerKm\") VALUES ('cebc7c6c-4092-45c4-959d-10a8e52c247c', 'Flatbed Tow', 549, 681);\nINSERT INTO \"tow_truck_type\" (\"id\", \"name\", \"baseFare\", \"costPerKm\") VALUES ('10504d08-b609-441e-9225-8aab9416e2b6', 'Heavy Duty Tow', 407, 658);\nINSERT INTO \"tow_truck_type\" (\"id\", \"name\", \"baseFare\", \"costPerKm\") VALUES ('eb01a351-287f-4788-9a3d-6f1e2e931420', 'Motorcycle Tow', 759, 923);\nINSERT INTO \"tow_truck_type\" (\"id\", \"name\", \"baseFare\", \"costPerKm\") VALUES ('92655c08-efb1-4621-aa64-d0f4d0c79868', 'Medium Duty Tow', 967, 253);\nINSERT INTO \"tow_truck_type\" (\"id\", \"name\", \"baseFare\", \"costPerKm\") VALUES ('3e3ac84e-4987-464a-a0e5-61a5e2a25d78', 'Heavy Duty Tow', 854, 914);\nINSERT INTO \"tow_truck_type\" (\"id\", \"name\", \"baseFare\", \"costPerKm\") VALUES ('9ca0e3e5-c889-4fb4-9f96-ce67fc5069f1', 'Heavy Duty Tow', 16, 98);\nINSERT INTO \"tow_truck_type\" (\"id\", \"name\", \"baseFare\", \"costPerKm\") VALUES ('e7af073d-a8a2-43b2-a4ff-547e16ba65d0', 'Motorcycle Tow', 371, 116);\nINSERT INTO \"tow_truck_type\" (\"id\", \"name\", \"baseFare\", \"costPerKm\") VALUES ('347dbe4e-da5b-4d50-983e-83f9596a32da', 'Motorcycle Tow', 380, 150);\nINSERT INTO \"tow_truck_type\" (\"id\", \"name\", \"baseFare\", \"costPerKm\") VALUES ('4f7205cc-0c92-47f9-8299-e9c054fb775e', 'Medium Duty Tow', 271, 985);\nINSERT INTO \"tow_truck_type\" (\"id\", \"name\", \"baseFare\", \"costPerKm\") VALUES ('67e6acbe-59bf-43e9-a4df-b80cf279aee8', 'Medium Duty Tow', 380, 779);\n\nINSERT INTO \"tow_service_request\" (\"id\", \"startLocation\", \"endLocation\", \"vehicleType\", \"breakdownDetails\", \"distance\", \"baseFare\", \"costPerKm\", \"tollCharges\", \"totalCost\", \"rating\", \"completed\", \"cancellationReason\", \"paymentStatus\", \"paymentMethod\", \"distanceUnit\", \"startTime\", \"endTime\", \"locationHistory\", \"userId\", \"towTruckTypeId\") VALUES ('fb97512e-301d-4e74-acd8-15692e526d98', '26.513000 100.009900', '26.524000 100.010400', 'Truck', 'Flat tire', 567, 397, 807, 368, 231, 634, true, 'Duplicate request', 'Refunded', 'Debit Card', 'km', '2023-09-13T20:49:48.390Z', '2023-12-05T19:18:24.417Z', '26.513000 100.009900  26.524000 100.010400', '2c57c4f8-a84b-4104-8789-25b8aa57289d', '67e6acbe-59bf-43e9-a4df-b80cf279aee8');\nINSERT INTO \"tow_service_request\" (\"id\", \"startLocation\", \"endLocation\", \"vehicleType\", \"breakdownDetails\", \"distance\", \"baseFare\", \"costPerKm\", \"tollCharges\", \"totalCost\", \"rating\", \"completed\", \"cancellationReason\", \"paymentStatus\", \"paymentMethod\", \"distanceUnit\", \"startTime\", \"endTime\", \"locationHistory\", \"userId\", \"towTruckTypeId\") VALUES ('0249f338-e31a-4820-a164-a213150e55c2', '26.513000 100.009900', '26.524000 100.010400', 'Motorcycle', 'Transmission issue', 51, 174, 637, 178, 789, 815, false, 'User canceled', 'Paid', 'Bank Transfer', 'km', '2025-03-01T10:35:48.917Z', '2024-05-31T16:39:47.402Z', '26.511000 100.009700  26.522000 100.010200', '6779316e-4b0c-4261-9a5c-7e45ca6c5362', '67e6acbe-59bf-43e9-a4df-b80cf279aee8');\nINSERT INTO \"tow_service_request\" (\"id\", \"startLocation\", \"endLocation\", \"vehicleType\", \"breakdownDetails\", \"distance\", \"baseFare\", \"costPerKm\", \"tollCharges\", \"totalCost\", \"rating\", \"completed\", \"cancellationReason\", \"paymentStatus\", \"paymentMethod\", \"distanceUnit\", \"startTime\", \"endTime\", \"locationHistory\", \"userId\", \"towTruckTypeId\") VALUES ('065b47c8-f12e-4ee2-b704-71d366ccda06', '26.513000 100.009900', '26.523000 100.010300', 'Motorcycle', 'Battery dead', 375, 811, 777, 589, 681, 426, false, 'Duplicate request', 'Failed', 'Bank Transfer', 'km', '2024-04-13T05:31:44.386Z', '2023-11-01T10:00:11.385Z', '26.512000 100.009800  26.523000 100.010300', '6779316e-4b0c-4261-9a5c-7e45ca6c5362', 'eb01a351-287f-4788-9a3d-6f1e2e931420');\nINSERT INTO \"tow_service_request\" (\"id\", \"startLocation\", \"endLocation\", \"vehicleType\", \"breakdownDetails\", \"distance\", \"baseFare\", \"costPerKm\", \"tollCharges\", \"totalCost\", \"rating\", \"completed\", \"cancellationReason\", \"paymentStatus\", \"paymentMethod\", \"distanceUnit\", \"startTime\", \"endTime\", \"locationHistory\", \"userId\", \"towTruckTypeId\") VALUES ('797565c5-6963-4627-a344-4f4f37fc1037', '26.510000 100.009600', '26.520000 100.010000', 'Truck', 'Engine failure', 910, 800, 569, 199, 233, 948, true, 'Duplicate request', 'Failed', 'PayPal', 'km', '2023-12-19T19:26:37.048Z', '2023-10-25T22:58:26.328Z', '26.513000 100.009900  26.524000 100.010400', '2c57c4f8-a84b-4104-8789-25b8aa57289d', '347dbe4e-da5b-4d50-983e-83f9596a32da');\nINSERT INTO \"tow_service_request\" (\"id\", \"startLocation\", \"endLocation\", \"vehicleType\", \"breakdownDetails\", \"distance\", \"baseFare\", \"costPerKm\", \"tollCharges\", \"totalCost\", \"rating\", \"completed\", \"cancellationReason\", \"paymentStatus\", \"paymentMethod\", \"distanceUnit\", \"startTime\", \"endTime\", \"locationHistory\", \"userId\", \"towTruckTypeId\") VALUES ('f5af0173-3160-40d1-a399-add939be96c2', '26.512000 100.009800', '26.520000 100.010000', 'Motorcycle', 'Engine failure', 327, 575, 658, 266, 434, 868, false, 'User canceled', 'Pending', 'Credit Card', 'km', '2023-07-23T01:26:31.928Z', '2025-01-19T20:46:54.171Z', '26.513000 100.009900  26.524000 100.010400', 'e7e70418-6b15-4f6e-9b7a-a967ff4d5e6a', '3e3ac84e-4987-464a-a0e5-61a5e2a25d78');\nINSERT INTO \"tow_service_request\" (\"id\", \"startLocation\", \"endLocation\", \"vehicleType\", \"breakdownDetails\", \"distance\", \"baseFare\", \"costPerKm\", \"tollCharges\", \"totalCost\", \"rating\", \"completed\", \"cancellationReason\", \"paymentStatus\", \"paymentMethod\", \"distanceUnit\", \"startTime\", \"endTime\", \"locationHistory\", \"userId\", \"towTruckTypeId\") VALUES ('83b26437-1af8-4dd7-baff-f734ad8373fb', '26.510000 100.009600', '26.522000 100.010200', 'Motorcycle', 'Transmission issue', 945, 932, 495, 858, 283, 769, false, 'Vehicle repaired', 'Paid', 'Credit Card', 'km', '2025-01-08T23:34:57.109Z', '2023-11-03T22:37:01.213Z', '26.513000 100.009900  26.524000 100.010400', '64074fc2-22e2-4b88-8739-7f53603f8a25', '347dbe4e-da5b-4d50-983e-83f9596a32da');\nINSERT INTO \"tow_service_request\" (\"id\", \"startLocation\", \"endLocation\", \"vehicleType\", \"breakdownDetails\", \"distance\", \"baseFare\", \"costPerKm\", \"tollCharges\", \"totalCost\", \"rating\", \"completed\", \"cancellationReason\", \"paymentStatus\", \"paymentMethod\", \"distanceUnit\", \"startTime\", \"endTime\", \"locationHistory\", \"userId\", \"towTruckTypeId\") VALUES ('209f0f60-77c0-44df-b73f-d36d3b0d07aa', '26.509672 100.0095504', '26.524000 100.010400', 'Van', 'Engine failure', 993, 752, 772, 741, 696, 541, false, 'Operator unavailable', 'Paid', 'Credit Card', 'km', '2025-05-05T02:44:26.678Z', '2024-01-25T15:25:38.543Z', '26.510000 100.009600  26.521000 100.010100', '21a857f1-ba5f-4435-bcf6-f910ec07c0dc', '92655c08-efb1-4621-aa64-d0f4d0c79868');\nINSERT INTO \"tow_service_request\" (\"id\", \"startLocation\", \"endLocation\", \"vehicleType\", \"breakdownDetails\", \"distance\", \"baseFare\", \"costPerKm\", \"tollCharges\", \"totalCost\", \"rating\", \"completed\", \"cancellationReason\", \"paymentStatus\", \"paymentMethod\", \"distanceUnit\", \"startTime\", \"endTime\", \"locationHistory\", \"userId\", \"towTruckTypeId\") VALUES ('c47aeb37-5ff2-40c1-b20a-1060c990149f', '26.512000 100.009800', '26.520000 100.010000', 'SUV', 'Battery dead', 399, 387, 689, 883, 137, 707, false, 'Duplicate request', 'Refunded', 'PayPal', 'km', '2024-11-13T00:23:40.663Z', '2024-06-21T21:47:24.046Z', '26.511000 100.009700  26.522000 100.010200', '5a16a5a6-a1f9-46d7-96ad-11a4de936f28', 'e7af073d-a8a2-43b2-a4ff-547e16ba65d0');\nINSERT INTO \"tow_service_request\" (\"id\", \"startLocation\", \"endLocation\", \"vehicleType\", \"breakdownDetails\", \"distance\", \"baseFare\", \"costPerKm\", \"tollCharges\", \"totalCost\", \"rating\", \"completed\", \"cancellationReason\", \"paymentStatus\", \"paymentMethod\", \"distanceUnit\", \"startTime\", \"endTime\", \"locationHistory\", \"userId\", \"towTruckTypeId\") VALUES ('55948cba-50d2-4e08-84b2-667b96f5c659', '26.512000 100.009800', '26.521000 100.010100', 'Van', 'Transmission issue', 837, 575, 662, 93, 795, 776, false, 'Weather conditions', 'Paid', 'PayPal', 'km', '2024-11-16T18:14:27.371Z', '2025-05-27T08:45:17.727Z', '26.511000 100.009700  26.522000 100.010200', '21a857f1-ba5f-4435-bcf6-f910ec07c0dc', '92655c08-efb1-4621-aa64-d0f4d0c79868');\nINSERT INTO \"tow_service_request\" (\"id\", \"startLocation\", \"endLocation\", \"vehicleType\", \"breakdownDetails\", \"distance\", \"baseFare\", \"costPerKm\", \"tollCharges\", \"totalCost\", \"rating\", \"completed\", \"cancellationReason\", \"paymentStatus\", \"paymentMethod\", \"distanceUnit\", \"startTime\", \"endTime\", \"locationHistory\", \"userId\", \"towTruckTypeId\") VALUES ('834689fe-195a-45c6-ba41-0e79face7098', '26.510000 100.009600', '26.523000 100.010300', 'Van', 'Overheating', 801, 791, 73, 338, 408, 438, false, 'Duplicate request', 'Failed', 'PayPal', 'km', '2025-02-15T00:11:23.159Z', '2024-03-21T15:43:10.800Z', '26.513000 100.009900  26.524000 100.010400', '5a16a5a6-a1f9-46d7-96ad-11a4de936f28', '67e6acbe-59bf-43e9-a4df-b80cf279aee8');\n\nINSERT INTO \"event\" (\"id\", \"eventType\", \"eventTimestamp\", \"userId\") VALUES ('b94adbbb-ab41-4a0e-bef0-39bdbe47958f', 'USER_REGISTERED', '2024-03-13T16:30:29.616Z', '104e46f4-d5bb-47a5-b11d-b19e1c8c0edc');\nINSERT INTO \"event\" (\"id\", \"eventType\", \"eventTimestamp\", \"userId\") VALUES ('9c4ed321-4480-40ac-9d1b-408b365e17bd', 'USER_REGISTERED', '2023-09-02T02:53:19.256Z', '21a857f1-ba5f-4435-bcf6-f910ec07c0dc');\nINSERT INTO \"event\" (\"id\", \"eventType\", \"eventTimestamp\", \"userId\") VALUES ('4950a79c-2340-4d52-9068-62133f5f605d', 'SERVICE_COMPLETED', '2024-05-01T05:07:35.247Z', '64074fc2-22e2-4b88-8739-7f53603f8a25');\nINSERT INTO \"event\" (\"id\", \"eventType\", \"eventTimestamp\", \"userId\") VALUES ('6e446902-1557-4040-92f1-51740df765b4', 'USER_REGISTERED', '2024-01-06T23:24:39.536Z', 'd16ce95d-9888-486f-b606-1b528efa0d4f');\nINSERT INTO \"event\" (\"id\", \"eventType\", \"eventTimestamp\", \"userId\") VALUES ('af109499-f6e4-4cfb-acd1-849ad2c825d0', 'SERVICE_COMPLETED', '2024-02-21T18:02:44.323Z', 'e7e70418-6b15-4f6e-9b7a-a967ff4d5e6a');\nINSERT INTO \"event\" (\"id\", \"eventType\", \"eventTimestamp\", \"userId\") VALUES ('14e710e5-c913-4fe0-9c63-552de3800184', 'SERVICE_COMPLETED', '2025-03-10T23:31:22.041Z', 'ea21c0f9-269c-4141-bf55-8e30582c90bd');\nINSERT INTO \"event\" (\"id\", \"eventType\", \"eventTimestamp\", \"userId\") VALUES ('f9f0fea3-c6f4-423b-9165-790f7fdf62c0', 'SERVICE_COMPLETED', '2023-07-04T13:09:01.883Z', 'be1f6788-7b44-4b9e-b237-d5ffc02bd05e');\nINSERT INTO \"event\" (\"id\", \"eventType\", \"eventTimestamp\", \"userId\") VALUES ('ba3ff23c-1944-4594-9ce1-962c78858e42', 'PASSWORD_RESET_REQUESTED', '2023-12-16T10:38:31.560Z', '2c57c4f8-a84b-4104-8789-25b8aa57289d');\nINSERT INTO \"event\" (\"id\", \"eventType\", \"eventTimestamp\", \"userId\") VALUES ('a240428a-6fff-4bf4-ad63-efdb6f84edb9', 'PASSWORD_RESET_REQUESTED', '2024-11-20T23:18:40.014Z', '104e46f4-d5bb-47a5-b11d-b19e1c8c0edc');\nINSERT INTO \"event\" (\"id\", \"eventType\", \"eventTimestamp\", \"userId\") VALUES ('7830e94c-d99d-4e50-9612-52bb54fbf72f', 'EMAIL_VERIFIED', '2024-02-19T18:12:22.455Z', 'd16ce95d-9888-486f-b606-1b528efa0d4f');\n\nINSERT INTO \"tow_truck_type_features\" (\"id\", \"feature\", \"towTruckTypeId\") VALUES ('c50b6339-ab48-4e26-b325-ceb6c836c6c0', 'Wheel Lift', '10504d08-b609-441e-9225-8aab9416e2b6');\nINSERT INTO \"tow_truck_type_features\" (\"id\", \"feature\", \"towTruckTypeId\") VALUES ('d9720565-2dc4-4474-894d-442077d87a7d', 'Wheel Lift', 'cebc7c6c-4092-45c4-959d-10a8e52c247c');\nINSERT INTO \"tow_truck_type_features\" (\"id\", \"feature\", \"towTruckTypeId\") VALUES ('c44a40b0-fa04-43d0-b711-d55787d1accb', 'Wheel Lift', '3e3ac84e-4987-464a-a0e5-61a5e2a25d78');\nINSERT INTO \"tow_truck_type_features\" (\"id\", \"feature\", \"towTruckTypeId\") VALUES ('2c520e20-b809-49d7-86f3-b8d18d270c46', 'Wheel Lift', 'cebc7c6c-4092-45c4-959d-10a8e52c247c');\nINSERT INTO \"tow_truck_type_features\" (\"id\", \"feature\", \"towTruckTypeId\") VALUES ('1875e1ab-f5a2-4beb-bfba-40d5235822aa', 'Winch', '4f7205cc-0c92-47f9-8299-e9c054fb775e');\nINSERT INTO \"tow_truck_type_features\" (\"id\", \"feature\", \"towTruckTypeId\") VALUES ('c45fa96d-3be3-47e0-b492-522ca76cc7f7', 'Boom', '9ca0e3e5-c889-4fb4-9f96-ce67fc5069f1');\nINSERT INTO \"tow_truck_type_features\" (\"id\", \"feature\", \"towTruckTypeId\") VALUES ('256b89b2-55e5-4db7-85e1-2ddabb2759a4', 'Wheel Lift', 'eb01a351-287f-4788-9a3d-6f1e2e931420');\nINSERT INTO \"tow_truck_type_features\" (\"id\", \"feature\", \"towTruckTypeId\") VALUES ('b1975318-ea2d-4a2a-8db7-31e960c2cbce', 'Wheel Lift', '3e3ac84e-4987-464a-a0e5-61a5e2a25d78');\nINSERT INTO \"tow_truck_type_features\" (\"id\", \"feature\", \"towTruckTypeId\") VALUES ('20fc486d-9e69-4b34-b2ee-7860ca4caf62', 'Boom', '4f7205cc-0c92-47f9-8299-e9c054fb775e');\nINSERT INTO \"tow_truck_type_features\" (\"id\", \"feature\", \"towTruckTypeId\") VALUES ('58fbaec9-c6ff-4a8a-ac56-e73b71860e1d', 'Hydraulic Lift', '67e6acbe-59bf-43e9-a4df-b80cf279aee8');\n\nINSERT INTO \"notification_preference\" (\"id\", \"preference\", \"userId\") VALUES ('989f9c9f-3f7d-42ae-9171-0a511eb6d9ae', 'sms', '21a857f1-ba5f-4435-bcf6-f910ec07c0dc');\nINSERT INTO \"notification_preference\" (\"id\", \"preference\", \"userId\") VALUES ('4464dd39-f352-4487-acf0-a2dc96ac3dfb', 'email', '6779316e-4b0c-4261-9a5c-7e45ca6c5362');\nINSERT INTO \"notification_preference\" (\"id\", \"preference\", \"userId\") VALUES ('62fe0c07-4512-4376-8f0d-96bb104f6471', 'none', 'be1f6788-7b44-4b9e-b237-d5ffc02bd05e');\nINSERT INTO \"notification_preference\" (\"id\", \"preference\", \"userId\") VALUES ('0bb83ff9-7dd9-4eb3-978e-ae32c07185e4', 'sms', '21a857f1-ba5f-4435-bcf6-f910ec07c0dc');\nINSERT INTO \"notification_preference\" (\"id\", \"preference\", \"userId\") VALUES ('da53dfe5-6ffe-492a-ad13-b10ea356c4a9', 'push_notification', '64074fc2-22e2-4b88-8739-7f53603f8a25');\nINSERT INTO \"notification_preference\" (\"id\", \"preference\", \"userId\") VALUES ('dfafec0e-8171-4ad1-9acc-c0d731030e7c', 'push_notification', '104e46f4-d5bb-47a5-b11d-b19e1c8c0edc');\nINSERT INTO \"notification_preference\" (\"id\", \"preference\", \"userId\") VALUES ('05441afc-f73f-4ac4-b619-c81fe0f80829', 'sms', '2c57c4f8-a84b-4104-8789-25b8aa57289d');\nINSERT INTO \"notification_preference\" (\"id\", \"preference\", \"userId\") VALUES ('6838f062-4989-475b-b466-2f99544e919c', 'none', 'e7e70418-6b15-4f6e-9b7a-a967ff4d5e6a');\nINSERT INTO \"notification_preference\" (\"id\", \"preference\", \"userId\") VALUES ('34f918e9-89a5-425e-a026-ea869db3b5f7', 'sms', '6779316e-4b0c-4261-9a5c-7e45ca6c5362');\nINSERT INTO \"notification_preference\" (\"id\", \"preference\", \"userId\") VALUES ('4612cf89-d7e7-48ee-93c3-67d34f4f2450', 'email', 'ea21c0f9-269c-4141-bf55-8e30582c90bd');\n\nINSERT INTO \"password_history\" (\"id\", \"password\", \"dateChanged\", \"userId\") VALUES ('79986b49-2bf5-4e3a-8b79-4f4e014659bb', '$2b$10$ppubsZypHzkqW9dkhMB97ul2.wSsvaCoDE2CzqIHygddRMKXvpYUC', '2025-03-28T13:38:48.090Z', '21a857f1-ba5f-4435-bcf6-f910ec07c0dc');\nINSERT INTO \"password_history\" (\"id\", \"password\", \"dateChanged\", \"userId\") VALUES ('d3900fdc-df01-4776-9671-eb1f0857333e', '$2b$10$ppubsZypHzkqW9dkhMB97ul2.wSsvaCoDE2CzqIHygddRMKXvpYUC', '2024-03-20T04:48:32.976Z', 'e7e70418-6b15-4f6e-9b7a-a967ff4d5e6a');\nINSERT INTO \"password_history\" (\"id\", \"password\", \"dateChanged\", \"userId\") VALUES ('95bb51f1-b0f9-4ec6-90b4-bdc4212af74f', '$2b$10$ppubsZypHzkqW9dkhMB97ul2.wSsvaCoDE2CzqIHygddRMKXvpYUC', '2025-04-02T04:51:11.400Z', '2c57c4f8-a84b-4104-8789-25b8aa57289d');\nINSERT INTO \"password_history\" (\"id\", \"password\", \"dateChanged\", \"userId\") VALUES ('ae6d47af-d6a1-4123-ad24-86c0f299f880', '$2b$10$ppubsZypHzkqW9dkhMB97ul2.wSsvaCoDE2CzqIHygddRMKXvpYUC', '2025-05-31T00:20:32.860Z', '2c57c4f8-a84b-4104-8789-25b8aa57289d');\nINSERT INTO \"password_history\" (\"id\", \"password\", \"dateChanged\", \"userId\") VALUES ('c3e856bb-01fd-436c-8709-912e73b98d38', '$2b$10$ppubsZypHzkqW9dkhMB97ul2.wSsvaCoDE2CzqIHygddRMKXvpYUC', '2024-12-20T20:53:32.954Z', '21a857f1-ba5f-4435-bcf6-f910ec07c0dc');\nINSERT INTO \"password_history\" (\"id\", \"password\", \"dateChanged\", \"userId\") VALUES ('af7f51ba-df3b-4d64-95ed-7fc74c5781c2', '$2b$10$ppubsZypHzkqW9dkhMB97ul2.wSsvaCoDE2CzqIHygddRMKXvpYUC', '2024-10-18T16:56:44.467Z', 'e7e70418-6b15-4f6e-9b7a-a967ff4d5e6a');\nINSERT INTO \"password_history\" (\"id\", \"password\", \"dateChanged\", \"userId\") VALUES ('68bceea0-6d20-4882-b5e1-be46486f4e40', '$2b$10$ppubsZypHzkqW9dkhMB97ul2.wSsvaCoDE2CzqIHygddRMKXvpYUC', '2024-08-01T16:21:04.449Z', 'ea21c0f9-269c-4141-bf55-8e30582c90bd');\nINSERT INTO \"password_history\" (\"id\", \"password\", \"dateChanged\", \"userId\") VALUES ('d810a9c5-f53d-4b12-95e1-89ed9e28fdb5', '$2b$10$ppubsZypHzkqW9dkhMB97ul2.wSsvaCoDE2CzqIHygddRMKXvpYUC', '2025-03-03T17:47:42.025Z', '6779316e-4b0c-4261-9a5c-7e45ca6c5362');\nINSERT INTO \"password_history\" (\"id\", \"password\", \"dateChanged\", \"userId\") VALUES ('24432c7a-60e3-49d8-83aa-3d21f709c827', '$2b$10$ppubsZypHzkqW9dkhMB97ul2.wSsvaCoDE2CzqIHygddRMKXvpYUC', '2023-10-12T04:00:35.828Z', 'be1f6788-7b44-4b9e-b237-d5ffc02bd05e');\nINSERT INTO \"password_history\" (\"id\", \"password\", \"dateChanged\", \"userId\") VALUES ('83a07e6e-fa67-4d4b-be5e-c75460352c7d', '$2b$10$ppubsZypHzkqW9dkhMB97ul2.wSsvaCoDE2CzqIHygddRMKXvpYUC', '2023-08-16T07:55:27.617Z', '5a16a5a6-a1f9-46d7-96ad-11a4de936f28');\n\nINSERT INTO \"user_form\" (\"id\", \"formData\", \"userId\") VALUES ('e501a097-1e21-4ebc-b619-c47c3cf82296', '{\"curtus\":\"vesper\",\"stultus\":\"modi\",\"depereo\":\"veniam\",\"argumentum\":\"degusto\",\"arguo\":\"cibo\"}'::jsonb, '104e46f4-d5bb-47a5-b11d-b19e1c8c0edc');\nINSERT INTO \"user_form\" (\"id\", \"formData\", \"userId\") VALUES ('cd8b499b-bf39-4f49-a485-098341f8eaf6', '{\"benevolentia\":\"asporto\",\"bibo\":\"totus\",\"textor\":\"depono\"}'::jsonb, '21a857f1-ba5f-4435-bcf6-f910ec07c0dc');\nINSERT INTO \"user_form\" (\"id\", \"formData\", \"userId\") VALUES ('f7ab1dc2-897b-40fa-b462-86b8591e4759', '{\"vae\":\"auditor\",\"tersus\":\"chirographum\",\"admiratio\":\"urbs\",\"venia\":\"apud\",\"appositus\":\"illum\"}'::jsonb, '6779316e-4b0c-4261-9a5c-7e45ca6c5362');\nINSERT INTO \"user_form\" (\"id\", \"formData\", \"userId\") VALUES ('7da01358-d931-4afc-92c8-9d9d5e0e4af5', '{\"veritatis\":\"titulus\",\"arcesso\":\"baiulus\",\"quia\":\"vix\",\"territo\":\"veniam\"}'::jsonb, '2c57c4f8-a84b-4104-8789-25b8aa57289d');\nINSERT INTO \"user_form\" (\"id\", \"formData\", \"userId\") VALUES ('e3133cbf-0016-4f12-8cca-94ab35d96f29', '{\"uberrime\":\"aduro\",\"casso\":\"temporibus\",\"inventore\":\"vergo\",\"arca\":\"viridis\",\"dicta\":\"ea\"}'::jsonb, 'ea21c0f9-269c-4141-bf55-8e30582c90bd');\nINSERT INTO \"user_form\" (\"id\", \"formData\", \"userId\") VALUES ('96961bc4-47eb-4215-931b-f475ac675bba', '{\"numquam\":\"debilito\",\"maiores\":\"delinquo\",\"acidus\":\"perspiciatis\",\"aedificium\":\"vallum\",\"auxilium\":\"amplexus\"}'::jsonb, 'e7e70418-6b15-4f6e-9b7a-a967ff4d5e6a');\nINSERT INTO \"user_form\" (\"id\", \"formData\", \"userId\") VALUES ('490ab479-aeab-4215-8405-f4342cdf27dc', '{\"antea\":\"tristis\",\"peccatus\":\"patrocinor\",\"incidunt\":\"talus\",\"trepide\":\"iusto\"}'::jsonb, '64074fc2-22e2-4b88-8739-7f53603f8a25');\nINSERT INTO \"user_form\" (\"id\", \"formData\", \"userId\") VALUES ('beb8ed50-1c84-48e2-9853-47e47bed7d25', '{\"vergo\":\"traho\",\"vado\":\"modi\",\"tandem\":\"victoria\"}'::jsonb, 'ea21c0f9-269c-4141-bf55-8e30582c90bd');\nINSERT INTO \"user_form\" (\"id\", \"formData\", \"userId\") VALUES ('6befabdc-97e9-4d53-a814-c79b3b223ddc', '{\"concido\":\"aveho\",\"delectatio\":\"debeo\",\"benigne\":\"alioqui\"}'::jsonb, '104e46f4-d5bb-47a5-b11d-b19e1c8c0edc');\nINSERT INTO \"user_form\" (\"id\", \"formData\", \"userId\") VALUES ('aa3f1308-cd13-4948-8472-ad5559a9c177', '{\"adipisci\":\"videlicet\",\"ambulo\":\"angelus\",\"ullus\":\"fugiat\",\"amitto\":\"tabgo\"}'::jsonb, '104e46f4-d5bb-47a5-b11d-b19e1c8c0edc');\n\nINSERT INTO \"vehicle_form\" (\"id\", \"formData\", \"vehicleId\") VALUES ('069b22e8-e48b-4a7e-bfc0-98f6e46ef3b1', '{\"bene\":\"rerum\",\"caste\":\"amicitia\",\"theca\":\"ciminatio\"}'::jsonb, '797565c5-6963-4627-a344-4f4f37fc1037');\nINSERT INTO \"vehicle_form\" (\"id\", \"formData\", \"vehicleId\") VALUES ('643488d9-8130-4234-9768-87959fb1f18f', '{\"corrupti\":\"pariatur\",\"cometes\":\"cerno\",\"tenus\":\"nobis\",\"solutio\":\"culpo\",\"substantia\":\"caste\"}'::jsonb, '83b26437-1af8-4dd7-baff-f734ad8373fb');\nINSERT INTO \"vehicle_form\" (\"id\", \"formData\", \"vehicleId\") VALUES ('b7d75362-dccf-49c3-9898-7acab1800584', '{\"teres\":\"magni\",\"summopere\":\"una\",\"similique\":\"suffragium\",\"celebrer\":\"repudiandae\"}'::jsonb, '834689fe-195a-45c6-ba41-0e79face7098');\nINSERT INTO \"vehicle_form\" (\"id\", \"formData\", \"vehicleId\") VALUES ('e0c310a7-127c-46b2-a3b9-798ed7dd3a23', '{\"crapula\":\"illo\",\"utor\":\"conforto\",\"custodia\":\"apparatus\",\"nisi\":\"benigne\"}'::jsonb, '797565c5-6963-4627-a344-4f4f37fc1037');\nINSERT INTO \"vehicle_form\" (\"id\", \"formData\", \"vehicleId\") VALUES ('76fd8855-480f-491a-8bb8-8a55e7ece276', '{\"turbo\":\"thesis\",\"ex\":\"voluptas\",\"vero\":\"caecus\"}'::jsonb, '797565c5-6963-4627-a344-4f4f37fc1037');\nINSERT INTO \"vehicle_form\" (\"id\", \"formData\", \"vehicleId\") VALUES ('32a3ae1b-8876-458b-986c-94a8a0ad509a', '{\"abutor\":\"comes\",\"minima\":\"velum\",\"commodo\":\"cumque\",\"voco\":\"fugiat\",\"beneficium\":\"vulariter\"}'::jsonb, 'c47aeb37-5ff2-40c1-b20a-1060c990149f');\nINSERT INTO \"vehicle_form\" (\"id\", \"formData\", \"vehicleId\") VALUES ('545a9dc3-756e-4a23-b297-c3b5254eae7c', '{\"enim\":\"auctor\",\"coadunatio\":\"taceo\",\"commodi\":\"creo\",\"aestas\":\"statim\",\"thema\":\"urbs\"}'::jsonb, '834689fe-195a-45c6-ba41-0e79face7098');\nINSERT INTO \"vehicle_form\" (\"id\", \"formData\", \"vehicleId\") VALUES ('bc4966bd-968d-45a3-9365-bf80d7c21761', '{\"accommodo\":\"vinum\",\"suadeo\":\"vero\",\"adsum\":\"expedita\"}'::jsonb, 'f5af0173-3160-40d1-a399-add939be96c2');\nINSERT INTO \"vehicle_form\" (\"id\", \"formData\", \"vehicleId\") VALUES ('84b2be0a-a073-406c-a987-cc9b4487e971', '{\"volo\":\"crepusculum\",\"defluo\":\"neque\",\"sonitus\":\"desipio\"}'::jsonb, 'c47aeb37-5ff2-40c1-b20a-1060c990149f');\nINSERT INTO \"vehicle_form\" (\"id\", \"formData\", \"vehicleId\") VALUES ('a83dfd23-c5b7-421b-98e0-7fb57e9691be', '{\"taedium\":\"civitas\",\"certus\":\"voluptas\",\"vado\":\"astrum\",\"velut\":\"articulus\"}'::jsonb, '209f0f60-77c0-44df-b73f-d36d3b0d07aa');\n    ")];
                    case 1:
                        _a.sent();
                        return [3 /*break*/, 3];
                    case 2:
                        error_1 = _a.sent();
                        return [3 /*break*/, 3];
                    case 3: return [2 /*return*/];
                }
            });
        });
    };
    Script1702311247028.prototype.down = function (queryRunner) {
        return __awaiter(this, void 0, void 0, function () { return __generator(this, function (_a) {
            return [2 /*return*/];
        }); });
    };
    return Script1702311247028;
}());
exports.Script1702311247028 = Script1702311247028;


// C:\grua-booking-system-25\server\dist\core\database\migrations\database.migration.module.js
"use strict";
var __esDecorate = (this && this.__esDecorate) || function (ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {
    function accept(f) { if (f !== void 0 && typeof f !== "function") throw new TypeError("Function expected"); return f; }
    var kind = contextIn.kind, key = kind === "getter" ? "get" : kind === "setter" ? "set" : "value";
    var target = !descriptorIn && ctor ? contextIn["static"] ? ctor : ctor.prototype : null;
    var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});
    var _, done = false;
    for (var i = decorators.length - 1; i >= 0; i--) {
        var context = {};
        for (var p in contextIn) context[p] = p === "access" ? {} : contextIn[p];
        for (var p in contextIn.access) context.access[p] = contextIn.access[p];
        context.addInitializer = function (f) { if (done) throw new TypeError("Cannot add initializers after decoration has completed"); extraInitializers.push(accept(f || null)); };
        var result = (0, decorators[i])(kind === "accessor" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);
        if (kind === "accessor") {
            if (result === void 0) continue;
            if (result === null || typeof result !== "object") throw new TypeError("Object expected");
            if (_ = accept(result.get)) descriptor.get = _;
            if (_ = accept(result.set)) descriptor.set = _;
            if (_ = accept(result.init)) initializers.unshift(_);
        }
        else if (_ = accept(result)) {
            if (kind === "field") initializers.unshift(_);
            else descriptor[key] = _;
        }
    }
    if (target) Object.defineProperty(target, contextIn.name, descriptor);
    done = true;
};
var __runInitializers = (this && this.__runInitializers) || function (thisArg, initializers, value) {
    var useValue = arguments.length > 2;
    for (var i = 0; i < initializers.length; i++) {
        value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);
    }
    return useValue ? value : void 0;
};
var __setFunctionName = (this && this.__setFunctionName) || function (f, name, prefix) {
    if (typeof name === "symbol") name = name.description ? "[".concat(name.description, "]") : "";
    return Object.defineProperty(f, "name", { configurable: true, value: prefix ? "".concat(prefix, " ", name) : name });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.DatabaseMigrationModule = void 0;
var common_1 = require("@nestjs/common");
var database_migration_service_1 = require("./database.migration.service");
var DatabaseMigrationModule = function () {
    var _classDecorators = [(0, common_1.Module)({
            imports: [],
            providers: [database_migration_service_1.DatabaseMigrationService],
            exports: [database_migration_service_1.DatabaseMigrationService],
        })];
    var _classDescriptor;
    var _classExtraInitializers = [];
    var _classThis;
    var DatabaseMigrationModule = _classThis = /** @class */ (function () {
        function DatabaseMigrationModule_1() {
        }
        return DatabaseMigrationModule_1;
    }());
    __setFunctionName(_classThis, "DatabaseMigrationModule");
    (function () {
        var _metadata = typeof Symbol === "function" && Symbol.metadata ? Object.create(null) : void 0;
        __esDecorate(null, _classDescriptor = { value: _classThis }, _classDecorators, { kind: "class", name: _classThis.name, metadata: _metadata }, null, _classExtraInitializers);
        DatabaseMigrationModule = _classThis = _classDescriptor.value;
        if (_metadata) Object.defineProperty(_classThis, Symbol.metadata, { enumerable: true, configurable: true, writable: true, value: _metadata });
        __runInitializers(_classThis, _classExtraInitializers);
    })();
    return DatabaseMigrationModule = _classThis;
}();
exports.DatabaseMigrationModule = DatabaseMigrationModule;
"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __esDecorate = (this && this.__esDecorate) || function (ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {
    function accept(f) { if (f !== void 0 && typeof f !== "function") throw new TypeError("Function expected"); return f; }
    var kind = contextIn.kind, key = kind === "getter" ? "get" : kind === "setter" ? "set" : "value";
    var target = !descriptorIn && ctor ? contextIn["static"] ? ctor : ctor.prototype : null;
    var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});
    var _, done = false;
    for (var i = decorators.length - 1; i >= 0; i--) {
        var context = {};
        for (var p in contextIn) context[p] = p === "access" ? {} : contextIn[p];
        for (var p in contextIn.access) context.access[p] = contextIn.access[p];
        context.addInitializer = function (f) { if (done) throw new TypeError("Cannot add initializers after decoration has completed"); extraInitializers.push(accept(f || null)); };
        var result = (0, decorators[i])(kind === "accessor" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);
        if (kind === "accessor") {
            if (result === void 0) continue;
            if (result === null || typeof result !== "object") throw new TypeError("Object expected");
            if (_ = accept(result.get)) descriptor.get = _;
            if (_ = accept(result.set)) descriptor.set = _;
            if (_ = accept(result.init)) initializers.unshift(_);
        }
        else if (_ = accept(result)) {
            if (kind === "field") initializers.unshift(_);
            else descriptor[key] = _;
        }
    }
    if (target) Object.defineProperty(target, contextIn.name, descriptor);
    done = true;
};
var __runInitializers = (this && this.__runInitializers) || function (thisArg, initializers, value) {
    var useValue = arguments.length > 2;
    for (var i = 0; i < initializers.length; i++) {
        value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);
    }
    return useValue ? value : void 0;
};
var __setFunctionName = (this && this.__setFunctionName) || function (f, name, prefix) {
    if (typeof name === "symbol") name = name.description ? "[".concat(name.description, "]") : "";
    return Object.defineProperty(f, "name", { configurable: true, value: prefix ? "".concat(prefix, " ", name) : name });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.DatabaseMigrationService = void 0;
var common_1 = require("@nestjs/common");
var typeorm_1 = require("typeorm");
var DatabaseMigrationService = function () {
    var _classDecorators = [(0, common_1.Injectable)()];
    var _classDescriptor;
    var _classExtraInitializers = [];
    var _classThis;
    var DatabaseMigrationService = _classThis = /** @class */ (function () {
        function DatabaseMigrationService_1(databaseConfiguration) {
            this.databaseConfiguration = databaseConfiguration;
        }
        DatabaseMigrationService_1.prototype.getDataSource = function () {
            var options = this.databaseConfiguration.getOptionsMigration();
            var dataSource = new typeorm_1.DataSource(__assign({}, options));
            return dataSource;
        };
        return DatabaseMigrationService_1;
    }());
    __setFunctionName(_classThis, "DatabaseMigrationService");
    (function () {
        var _metadata = typeof Symbol === "function" && Symbol.metadata ? Object.create(null) : void 0;
        __esDecorate(null, _classDescriptor = { value: _classThis }, _classDecorators, { kind: "class", name: _classThis.name, metadata: _metadata }, null, _classExtraInitializers);
        DatabaseMigrationService = _classThis = _classDescriptor.value;
        if (_metadata) Object.defineProperty(_classThis, Symbol.metadata, { enumerable: true, configurable: true, writable: true, value: _metadata });
        __runInitializers(_classThis, _classExtraInitializers);
    })();
    return DatabaseMigrationService = _classThis;
}();
exports.DatabaseMigrationService = DatabaseMigrationService;


// C:\grua-booking-system-25\server\dist\core\database\migrations\scripts\1702305820868-script.js
"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (g && (g = 0, op[0] && (_ = 0)), _) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Script1702305820868 = void 0;
var Script1702305820868 = /** @class */ (function () {
    function Script1702305820868() {
        this.name = 'Script1702305820868';
    }
    Script1702305820868.prototype.up = function (queryRunner) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, queryRunner.query("\n      INSERT INTO \"user\" (\n        \"id\",\n        \"email\", \n        \"name\", \n        \"pictureUrl\", \n\n\"isActive\",\n\n\"isVerified\",\n\n\"password\",\n        \"status\"\n      ) VALUES (\n        '21a857f1-ba5f-4435-bcf6-f910ec07c0dc',\n        'test@test.com',\n        'John Doe',\n        'https://i.imgur.com/sbRCzP7.png',\n\ntrue,\n\ntrue,\n\n'$2b$10$ppubsZypHzkqW9dkhMB97ul2.wSsvaCoDE2CzqIHygddRMKXvpYUC',\n        'VERIFIED'\n      );\n\n      INSERT INTO \"authorization_role\" (\n        \"id\",\n        \"name\"\n      ) VALUES (\n        'a7548b29-a984-40b5-a5ea-286b9ebeae18',\n        'admin'\n      );\n\n      INSERT INTO \"authorization_role_user\" (\n        \"userId\",\n        \"roleId\"\n      ) VALUES (\n        '21a857f1-ba5f-4435-bcf6-f910ec07c0dc',\n        'a7548b29-a984-40b5-a5ea-286b9ebeae18'\n      );\n        ")];
                    case 1:
                        _a.sent();
                        return [2 /*return*/];
                }
            });
        });
    };
    Script1702305820868.prototype.down = function (queryRunner) {
        return __awaiter(this, void 0, void 0, function () { return __generator(this, function (_a) {
            return [2 /*return*/];
        }); });
    };
    return Script1702305820868;
}());
exports.Script1702305820868 = Script1702305820868;


// C:\grua-booking-system-25\server\dist\core\database\migrations\scripts\1702311247028-script.js
"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (g && (g = 0, op[0] && (_ = 0)), _) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Script1702311247028 = void 0;
var Script1702311247028 = /** @class */ (function () {
    function Script1702311247028() {
        this.name = 'Script1702311247028';
    }
    Script1702311247028.prototype.up = function (queryRunner) {
        return __awaiter(this, void 0, void 0, function () {
            var error_1;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        _a.trys.push([0, 2, , 3]);
                        return [4 /*yield*/, queryRunner.query("\n        INSERT INTO \"user\" (\"id\", \"email\", \"name\", \"pictureUrl\", \"stripeCustomerId\", \"status\", \"password\", \"lastLogin\", \"isActive\", \"isVerified\") VALUES ('6779316e-4b0c-4261-9a5c-7e45ca6c5362', '1Aracely.Wilderman@gmail.com', 'Jane Smith', 'https://i.imgur.com/YfJQV5z.png?id=3', 'cus_J0a1b2c3d4e5f6g7h8i9', 'suspended', '$2b$10$ppubsZypHzkqW9dkhMB97ul2.wSsvaCoDE2CzqIHygddRMKXvpYUC', '2023-06-07T08:38:43.421Z', false, true);\nINSERT INTO \"user\" (\"id\", \"email\", \"name\", \"pictureUrl\", \"stripeCustomerId\", \"status\", \"password\", \"lastLogin\", \"isActive\", \"isVerified\") VALUES ('64074fc2-22e2-4b88-8739-7f53603f8a25', '11Hubert_Murazik@gmail.com', 'Michael Brown', 'https://i.imgur.com/YfJQV5z.png?id=13', 'cus_K1b2c3d4e5f6g7h8i9j0', 'suspended', '$2b$10$ppubsZypHzkqW9dkhMB97ul2.wSsvaCoDE2CzqIHygddRMKXvpYUC', '2024-10-29T21:36:11.192Z', true, false);\nINSERT INTO \"user\" (\"id\", \"email\", \"name\", \"pictureUrl\", \"stripeCustomerId\", \"status\", \"password\", \"lastLogin\", \"isActive\", \"isVerified\") VALUES ('ea21c0f9-269c-4141-bf55-8e30582c90bd', '21Gilbert.Medhurst@yahoo.com', 'Michael Brown', 'https://i.imgur.com/YfJQV5z.png?id=23', 'cus_L2c3d4e5f6g7h8i9j0k1', 'pending', '$2b$10$ppubsZypHzkqW9dkhMB97ul2.wSsvaCoDE2CzqIHygddRMKXvpYUC', '2024-07-11T07:40:19.815Z', true, true);\nINSERT INTO \"user\" (\"id\", \"email\", \"name\", \"pictureUrl\", \"stripeCustomerId\", \"status\", \"password\", \"lastLogin\", \"isActive\", \"isVerified\") VALUES ('104e46f4-d5bb-47a5-b11d-b19e1c8c0edc', '31Odie_Harber@gmail.com', 'Emily Jones', 'https://i.imgur.com/YfJQV5z.png?id=33', 'cus_N4e5f6g7h8i9j0k1l2m3', 'pending', '$2b$10$ppubsZypHzkqW9dkhMB97ul2.wSsvaCoDE2CzqIHygddRMKXvpYUC', '2025-01-29T14:19:34.237Z', false, true);\nINSERT INTO \"user\" (\"id\", \"email\", \"name\", \"pictureUrl\", \"stripeCustomerId\", \"status\", \"password\", \"lastLogin\", \"isActive\", \"isVerified\") VALUES ('2c57c4f8-a84b-4104-8789-25b8aa57289d', '41Carrie49@hotmail.com', 'Michael Brown', 'https://i.imgur.com/YfJQV5z.png?id=43', 'cus_M3d4e5f6g7h8i9j0k1l2', 'inactive', '$2b$10$ppubsZypHzkqW9dkhMB97ul2.wSsvaCoDE2CzqIHygddRMKXvpYUC', '2023-07-13T10:24:09.769Z', true, false);\nINSERT INTO \"user\" (\"id\", \"email\", \"name\", \"pictureUrl\", \"stripeCustomerId\", \"status\", \"password\", \"lastLogin\", \"isActive\", \"isVerified\") VALUES ('e7e70418-6b15-4f6e-9b7a-a967ff4d5e6a', '61Nellie_Zieme13@hotmail.com', 'Jane Smith', 'https://i.imgur.com/YfJQV5z.png?id=63', 'cus_K1b2c3d4e5f6g7h8i9j0', 'inactive', '$2b$10$ppubsZypHzkqW9dkhMB97ul2.wSsvaCoDE2CzqIHygddRMKXvpYUC', '2024-09-04T06:55:23.260Z', false, true);\nINSERT INTO \"user\" (\"id\", \"email\", \"name\", \"pictureUrl\", \"stripeCustomerId\", \"status\", \"password\", \"lastLogin\", \"isActive\", \"isVerified\") VALUES ('5a16a5a6-a1f9-46d7-96ad-11a4de936f28', '71Francisco.Beahan34@gmail.com', 'Michael Brown', 'https://i.imgur.com/YfJQV5z.png?id=73', 'cus_J0a1b2c3d4e5f6g7h8i9', 'suspended', '$2b$10$ppubsZypHzkqW9dkhMB97ul2.wSsvaCoDE2CzqIHygddRMKXvpYUC', '2025-02-16T22:47:18.728Z', false, true);\nINSERT INTO \"user\" (\"id\", \"email\", \"name\", \"pictureUrl\", \"stripeCustomerId\", \"status\", \"password\", \"lastLogin\", \"isActive\", \"isVerified\") VALUES ('d16ce95d-9888-486f-b606-1b528efa0d4f', '81Magdalen_Heller@yahoo.com', 'Jane Smith', 'https://i.imgur.com/YfJQV5z.png?id=83', 'cus_M3d4e5f6g7h8i9j0k1l2', 'inactive', '$2b$10$ppubsZypHzkqW9dkhMB97ul2.wSsvaCoDE2CzqIHygddRMKXvpYUC', '2023-08-12T00:58:40.942Z', false, true);\nINSERT INTO \"user\" (\"id\", \"email\", \"name\", \"pictureUrl\", \"stripeCustomerId\", \"status\", \"password\", \"lastLogin\", \"isActive\", \"isVerified\") VALUES ('be1f6788-7b44-4b9e-b237-d5ffc02bd05e', '91Beatrice_Fay79@yahoo.com', 'Jane Smith', 'https://i.imgur.com/YfJQV5z.png?id=93', 'cus_N4e5f6g7h8i9j0k1l2m3', 'active', '$2b$10$ppubsZypHzkqW9dkhMB97ul2.wSsvaCoDE2CzqIHygddRMKXvpYUC', '2023-10-30T19:11:44.960Z', true, true);\n\nINSERT INTO \"notification\" (\"id\", \"title\", \"message\", \"senderName\", \"senderEmail\", \"senderPictureUrl\", \"redirectUrl\", \"userId\") VALUES ('de47a4e9-4d4e-426a-8663-43a230c03800', 'Account Verification Required', 'Please verify your account by clicking the link below.', 'Customer Service', '104Aylin.Becker96@hotmail.com', 'https://i.imgur.com/YfJQV5z.png?id=105', 'https://i.imgur.com/YfJQV5z.png?id=106', 'd16ce95d-9888-486f-b606-1b528efa0d4f');\nINSERT INTO \"notification\" (\"id\", \"title\", \"message\", \"senderName\", \"senderEmail\", \"senderPictureUrl\", \"redirectUrl\", \"userId\") VALUES ('dd2a7c2f-d16b-4c1c-bc54-370538c71806', 'Service Completion Notification', 'Please verify your account by clicking the link below.', 'Service Desk', '111Mabelle77@hotmail.com', 'https://i.imgur.com/YfJQV5z.png?id=112', 'https://i.imgur.com/YfJQV5z.png?id=113', 'be1f6788-7b44-4b9e-b237-d5ffc02bd05e');\nINSERT INTO \"notification\" (\"id\", \"title\", \"message\", \"senderName\", \"senderEmail\", \"senderPictureUrl\", \"redirectUrl\", \"userId\") VALUES ('e042e9c8-6529-49a1-bde1-3d4b5bd5fa9d', 'Account Verification Required', 'Your service request has been confirmed and a tow truck is on the way.', 'Service Desk', '118Tyree_Kulas@hotmail.com', 'https://i.imgur.com/YfJQV5z.png?id=119', 'https://i.imgur.com/YfJQV5z.png?id=120', '21a857f1-ba5f-4435-bcf6-f910ec07c0dc');\nINSERT INTO \"notification\" (\"id\", \"title\", \"message\", \"senderName\", \"senderEmail\", \"senderPictureUrl\", \"redirectUrl\", \"userId\") VALUES ('5f166a65-d276-44b7-bcf0-c3dbb4babd27', 'Service Request Confirmation', 'Thank you for registering with us. We are excited to have you on board.', 'Service Desk', '125Verlie.Deckow@hotmail.com', 'https://i.imgur.com/YfJQV5z.png?id=126', 'https://i.imgur.com/YfJQV5z.png?id=127', 'd16ce95d-9888-486f-b606-1b528efa0d4f');\nINSERT INTO \"notification\" (\"id\", \"title\", \"message\", \"senderName\", \"senderEmail\", \"senderPictureUrl\", \"redirectUrl\", \"userId\") VALUES ('41b7599b-ac4c-4b0d-95d4-bf9579328a6f', 'Account Verification Required', 'Your service has been successfully completed. Thank you for using our service.', 'Customer Service', '132Era_Torp-Kirlin@hotmail.com', 'https://i.imgur.com/YfJQV5z.png?id=133', 'https://i.imgur.com/YfJQV5z.png?id=134', 'd16ce95d-9888-486f-b606-1b528efa0d4f');\nINSERT INTO \"notification\" (\"id\", \"title\", \"message\", \"senderName\", \"senderEmail\", \"senderPictureUrl\", \"redirectUrl\", \"userId\") VALUES ('5f77aeda-fcdf-472a-9a7d-68272ec5f192', 'Service Completion Notification', 'Please follow the instructions to reset your password.', 'Support Team', '139Bonnie_Barrows@yahoo.com', 'https://i.imgur.com/YfJQV5z.png?id=140', 'https://i.imgur.com/YfJQV5z.png?id=141', 'e7e70418-6b15-4f6e-9b7a-a967ff4d5e6a');\nINSERT INTO \"notification\" (\"id\", \"title\", \"message\", \"senderName\", \"senderEmail\", \"senderPictureUrl\", \"redirectUrl\", \"userId\") VALUES ('6779a0e1-19e2-4ee4-8b76-216d2bfd444b', 'Account Verification Required', 'Your service has been successfully completed. Thank you for using our service.', 'Service Desk', '146Savion.Kunze80@hotmail.com', 'https://i.imgur.com/YfJQV5z.png?id=147', 'https://i.imgur.com/YfJQV5z.png?id=148', '5a16a5a6-a1f9-46d7-96ad-11a4de936f28');\nINSERT INTO \"notification\" (\"id\", \"title\", \"message\", \"senderName\", \"senderEmail\", \"senderPictureUrl\", \"redirectUrl\", \"userId\") VALUES ('ace541bc-0012-4087-9b48-f31d656658ec', 'Service Request Confirmation', 'Please follow the instructions to reset your password.', 'Admin', '153Lexi.McClure28@hotmail.com', 'https://i.imgur.com/YfJQV5z.png?id=154', 'https://i.imgur.com/YfJQV5z.png?id=155', 'be1f6788-7b44-4b9e-b237-d5ffc02bd05e');\nINSERT INTO \"notification\" (\"id\", \"title\", \"message\", \"senderName\", \"senderEmail\", \"senderPictureUrl\", \"redirectUrl\", \"userId\") VALUES ('ac8ebfe0-34be-4d2d-9816-3942393a4de8', 'Password Reset Instructions', 'Please verify your account by clicking the link below.', 'Support Team', '160Estevan.Runte82@hotmail.com', 'https://i.imgur.com/YfJQV5z.png?id=161', 'https://i.imgur.com/YfJQV5z.png?id=162', '21a857f1-ba5f-4435-bcf6-f910ec07c0dc');\nINSERT INTO \"notification\" (\"id\", \"title\", \"message\", \"senderName\", \"senderEmail\", \"senderPictureUrl\", \"redirectUrl\", \"userId\") VALUES ('5ca033e1-5cee-43e8-a0bf-afcb84922bd9', 'Account Verification Required', 'Please verify your account by clicking the link below.', 'Service Desk', '167Pedro57@yahoo.com', 'https://i.imgur.com/YfJQV5z.png?id=168', 'https://i.imgur.com/YfJQV5z.png?id=169', '64074fc2-22e2-4b88-8739-7f53603f8a25');\n\nINSERT INTO \"password_reset\" (\"id\", \"token\", \"expirationDate\", \"userId\") VALUES ('73c7ceb7-1ad7-4149-a25e-b6798d6df261', 'u1v2w3x4y5z6a7b8c9d0', '2023-08-31T10:02:13.669Z', '64074fc2-22e2-4b88-8739-7f53603f8a25');\nINSERT INTO \"password_reset\" (\"id\", \"token\", \"expirationDate\", \"userId\") VALUES ('29980d42-502c-4f4d-814b-b31344dc1634', 'e1f2g3h4i5j6k7l8m9n0', '2024-09-18T13:10:07.255Z', '5a16a5a6-a1f9-46d7-96ad-11a4de936f28');\nINSERT INTO \"password_reset\" (\"id\", \"token\", \"expirationDate\", \"userId\") VALUES ('4ee7402e-9cc3-4c7d-9d19-3e4bbca8f1af', 'e1f2g3h4i5j6k7l8m9n0', '2023-12-10T16:09:26.271Z', 'd16ce95d-9888-486f-b606-1b528efa0d4f');\nINSERT INTO \"password_reset\" (\"id\", \"token\", \"expirationDate\", \"userId\") VALUES ('37af39b7-c140-4573-bc24-d11ce8fd56de', 'u1v2w3x4y5z6a7b8c9d0', '2025-04-02T07:42:56.142Z', '21a857f1-ba5f-4435-bcf6-f910ec07c0dc');\nINSERT INTO \"password_reset\" (\"id\", \"token\", \"expirationDate\", \"userId\") VALUES ('055851e4-efab-4345-bcfa-1f763049d1fe', 'k1l2m3n4o5p6q7r8s9t0', '2025-05-04T04:55:48.411Z', '104e46f4-d5bb-47a5-b11d-b19e1c8c0edc');\nINSERT INTO \"password_reset\" (\"id\", \"token\", \"expirationDate\", \"userId\") VALUES ('cae2b1c7-75ba-4f12-beee-584653e2b3d5', 'u1v2w3x4y5z6a7b8c9d0', '2023-11-07T04:41:15.984Z', 'e7e70418-6b15-4f6e-9b7a-a967ff4d5e6a');\nINSERT INTO \"password_reset\" (\"id\", \"token\", \"expirationDate\", \"userId\") VALUES ('da9d71c4-8e53-43c5-b249-68be82a709eb', 'e1f2g3h4i5j6k7l8m9n0', '2025-02-17T10:57:21.646Z', '104e46f4-d5bb-47a5-b11d-b19e1c8c0edc');\nINSERT INTO \"password_reset\" (\"id\", \"token\", \"expirationDate\", \"userId\") VALUES ('e014c889-a569-4686-a401-96584869db65', 'a1b2c3d4e5f6g7h8i9j0', '2023-08-16T06:35:59.770Z', 'be1f6788-7b44-4b9e-b237-d5ffc02bd05e');\nINSERT INTO \"password_reset\" (\"id\", \"token\", \"expirationDate\", \"userId\") VALUES ('4b8b245d-8598-41ee-ac40-53aa6f6daa61', 'o1p2q3r4s5t6u7v8w9x0', '2025-03-31T14:20:08.225Z', '6779316e-4b0c-4261-9a5c-7e45ca6c5362');\nINSERT INTO \"password_reset\" (\"id\", \"token\", \"expirationDate\", \"userId\") VALUES ('a22af521-0657-48e1-b383-f965b3ffc0dc', 'e1f2g3h4i5j6k7l8m9n0', '2023-12-14T18:13:20.316Z', '104e46f4-d5bb-47a5-b11d-b19e1c8c0edc');\n\nINSERT INTO \"tow_truck_type\" (\"id\", \"name\", \"baseFare\", \"costPerKm\") VALUES ('cebc7c6c-4092-45c4-959d-10a8e52c247c', 'Flatbed Tow', 549, 681);\nINSERT INTO \"tow_truck_type\" (\"id\", \"name\", \"baseFare\", \"costPerKm\") VALUES ('10504d08-b609-441e-9225-8aab9416e2b6', 'Heavy Duty Tow', 407, 658);\nINSERT INTO \"tow_truck_type\" (\"id\", \"name\", \"baseFare\", \"costPerKm\") VALUES ('eb01a351-287f-4788-9a3d-6f1e2e931420', 'Motorcycle Tow', 759, 923);\nINSERT INTO \"tow_truck_type\" (\"id\", \"name\", \"baseFare\", \"costPerKm\") VALUES ('92655c08-efb1-4621-aa64-d0f4d0c79868', 'Medium Duty Tow', 967, 253);\nINSERT INTO \"tow_truck_type\" (\"id\", \"name\", \"baseFare\", \"costPerKm\") VALUES ('3e3ac84e-4987-464a-a0e5-61a5e2a25d78', 'Heavy Duty Tow', 854, 914);\nINSERT INTO \"tow_truck_type\" (\"id\", \"name\", \"baseFare\", \"costPerKm\") VALUES ('9ca0e3e5-c889-4fb4-9f96-ce67fc5069f1', 'Heavy Duty Tow', 16, 98);\nINSERT INTO \"tow_truck_type\" (\"id\", \"name\", \"baseFare\", \"costPerKm\") VALUES ('e7af073d-a8a2-43b2-a4ff-547e16ba65d0', 'Motorcycle Tow', 371, 116);\nINSERT INTO \"tow_truck_type\" (\"id\", \"name\", \"baseFare\", \"costPerKm\") VALUES ('347dbe4e-da5b-4d50-983e-83f9596a32da', 'Motorcycle Tow', 380, 150);\nINSERT INTO \"tow_truck_type\" (\"id\", \"name\", \"baseFare\", \"costPerKm\") VALUES ('4f7205cc-0c92-47f9-8299-e9c054fb775e', 'Medium Duty Tow', 271, 985);\nINSERT INTO \"tow_truck_type\" (\"id\", \"name\", \"baseFare\", \"costPerKm\") VALUES ('67e6acbe-59bf-43e9-a4df-b80cf279aee8', 'Medium Duty Tow', 380, 779);\n\nINSERT INTO \"tow_service_request\" (\"id\", \"startLocation\", \"endLocation\", \"vehicleType\", \"breakdownDetails\", \"distance\", \"baseFare\", \"costPerKm\", \"tollCharges\", \"totalCost\", \"rating\", \"completed\", \"cancellationReason\", \"paymentStatus\", \"paymentMethod\", \"distanceUnit\", \"startTime\", \"endTime\", \"locationHistory\", \"userId\", \"towTruckTypeId\") VALUES ('fb97512e-301d-4e74-acd8-15692e526d98', '26.513000 100.009900', '26.524000 100.010400', 'Truck', 'Flat tire', 567, 397, 807, 368, 231, 634, true, 'Duplicate request', 'Refunded', 'Debit Card', 'km', '2023-09-13T20:49:48.390Z', '2023-12-05T19:18:24.417Z', '26.513000 100.009900  26.524000 100.010400', '2c57c4f8-a84b-4104-8789-25b8aa57289d', '67e6acbe-59bf-43e9-a4df-b80cf279aee8');\nINSERT INTO \"tow_service_request\" (\"id\", \"startLocation\", \"endLocation\", \"vehicleType\", \"breakdownDetails\", \"distance\", \"baseFare\", \"costPerKm\", \"tollCharges\", \"totalCost\", \"rating\", \"completed\", \"cancellationReason\", \"paymentStatus\", \"paymentMethod\", \"distanceUnit\", \"startTime\", \"endTime\", \"locationHistory\", \"userId\", \"towTruckTypeId\") VALUES ('0249f338-e31a-4820-a164-a213150e55c2', '26.513000 100.009900', '26.524000 100.010400', 'Motorcycle', 'Transmission issue', 51, 174, 637, 178, 789, 815, false, 'User canceled', 'Paid', 'Bank Transfer', 'km', '2025-03-01T10:35:48.917Z', '2024-05-31T16:39:47.402Z', '26.511000 100.009700  26.522000 100.010200', '6779316e-4b0c-4261-9a5c-7e45ca6c5362', '67e6acbe-59bf-43e9-a4df-b80cf279aee8');\nINSERT INTO \"tow_service_request\" (\"id\", \"startLocation\", \"endLocation\", \"vehicleType\", \"breakdownDetails\", \"distance\", \"baseFare\", \"costPerKm\", \"tollCharges\", \"totalCost\", \"rating\", \"completed\", \"cancellationReason\", \"paymentStatus\", \"paymentMethod\", \"distanceUnit\", \"startTime\", \"endTime\", \"locationHistory\", \"userId\", \"towTruckTypeId\") VALUES ('065b47c8-f12e-4ee2-b704-71d366ccda06', '26.513000 100.009900', '26.523000 100.010300', 'Motorcycle', 'Battery dead', 375, 811, 777, 589, 681, 426, false, 'Duplicate request', 'Failed', 'Bank Transfer', 'km', '2024-04-13T05:31:44.386Z', '2023-11-01T10:00:11.385Z', '26.512000 100.009800  26.523000 100.010300', '6779316e-4b0c-4261-9a5c-7e45ca6c5362', 'eb01a351-287f-4788-9a3d-6f1e2e931420');\nINSERT INTO \"tow_service_request\" (\"id\", \"startLocation\", \"endLocation\", \"vehicleType\", \"breakdownDetails\", \"distance\", \"baseFare\", \"costPerKm\", \"tollCharges\", \"totalCost\", \"rating\", \"completed\", \"cancellationReason\", \"paymentStatus\", \"paymentMethod\", \"distanceUnit\", \"startTime\", \"endTime\", \"locationHistory\", \"userId\", \"towTruckTypeId\") VALUES ('797565c5-6963-4627-a344-4f4f37fc1037', '26.510000 100.009600', '26.520000 100.010000', 'Truck', 'Engine failure', 910, 800, 569, 199, 233, 948, true, 'Duplicate request', 'Failed', 'PayPal', 'km', '2023-12-19T19:26:37.048Z', '2023-10-25T22:58:26.328Z', '26.513000 100.009900  26.524000 100.010400', '2c57c4f8-a84b-4104-8789-25b8aa57289d', '347dbe4e-da5b-4d50-983e-83f9596a32da');\nINSERT INTO \"tow_service_request\" (\"id\", \"startLocation\", \"endLocation\", \"vehicleType\", \"breakdownDetails\", \"distance\", \"baseFare\", \"costPerKm\", \"tollCharges\", \"totalCost\", \"rating\", \"completed\", \"cancellationReason\", \"paymentStatus\", \"paymentMethod\", \"distanceUnit\", \"startTime\", \"endTime\", \"locationHistory\", \"userId\", \"towTruckTypeId\") VALUES ('f5af0173-3160-40d1-a399-add939be96c2', '26.512000 100.009800', '26.520000 100.010000', 'Motorcycle', 'Engine failure', 327, 575, 658, 266, 434, 868, false, 'User canceled', 'Pending', 'Credit Card', 'km', '2023-07-23T01:26:31.928Z', '2025-01-19T20:46:54.171Z', '26.513000 100.009900  26.524000 100.010400', 'e7e70418-6b15-4f6e-9b7a-a967ff4d5e6a', '3e3ac84e-4987-464a-a0e5-61a5e2a25d78');\nINSERT INTO \"tow_service_request\" (\"id\", \"startLocation\", \"endLocation\", \"vehicleType\", \"breakdownDetails\", \"distance\", \"baseFare\", \"costPerKm\", \"tollCharges\", \"totalCost\", \"rating\", \"completed\", \"cancellationReason\", \"paymentStatus\", \"paymentMethod\", \"distanceUnit\", \"startTime\", \"endTime\", \"locationHistory\", \"userId\", \"towTruckTypeId\") VALUES ('83b26437-1af8-4dd7-baff-f734ad8373fb', '26.510000 100.009600', '26.522000 100.010200', 'Motorcycle', 'Transmission issue', 945, 932, 495, 858, 283, 769, false, 'Vehicle repaired', 'Paid', 'Credit Card', 'km', '2025-01-08T23:34:57.109Z', '2023-11-03T22:37:01.213Z', '26.513000 100.009900  26.524000 100.010400', '64074fc2-22e2-4b88-8739-7f53603f8a25', '347dbe4e-da5b-4d50-983e-83f9596a32da');\nINSERT INTO \"tow_service_request\" (\"id\", \"startLocation\", \"endLocation\", \"vehicleType\", \"breakdownDetails\", \"distance\", \"baseFare\", \"costPerKm\", \"tollCharges\", \"totalCost\", \"rating\", \"completed\", \"cancellationReason\", \"paymentStatus\", \"paymentMethod\", \"distanceUnit\", \"startTime\", \"endTime\", \"locationHistory\", \"userId\", \"towTruckTypeId\") VALUES ('209f0f60-77c0-44df-b73f-d36d3b0d07aa', '26.509672 100.0095504', '26.524000 100.010400', 'Van', 'Engine failure', 993, 752, 772, 741, 696, 541, false, 'Operator unavailable', 'Paid', 'Credit Card', 'km', '2025-05-05T02:44:26.678Z', '2024-01-25T15:25:38.543Z', '26.510000 100.009600  26.521000 100.010100', '21a857f1-ba5f-4435-bcf6-f910ec07c0dc', '92655c08-efb1-4621-aa64-d0f4d0c79868');\nINSERT INTO \"tow_service_request\" (\"id\", \"startLocation\", \"endLocation\", \"vehicleType\", \"breakdownDetails\", \"distance\", \"baseFare\", \"costPerKm\", \"tollCharges\", \"totalCost\", \"rating\", \"completed\", \"cancellationReason\", \"paymentStatus\", \"paymentMethod\", \"distanceUnit\", \"startTime\", \"endTime\", \"locationHistory\", \"userId\", \"towTruckTypeId\") VALUES ('c47aeb37-5ff2-40c1-b20a-1060c990149f', '26.512000 100.009800', '26.520000 100.010000', 'SUV', 'Battery dead', 399, 387, 689, 883, 137, 707, false, 'Duplicate request', 'Refunded', 'PayPal', 'km', '2024-11-13T00:23:40.663Z', '2024-06-21T21:47:24.046Z', '26.511000 100.009700  26.522000 100.010200', '5a16a5a6-a1f9-46d7-96ad-11a4de936f28', 'e7af073d-a8a2-43b2-a4ff-547e16ba65d0');\nINSERT INTO \"tow_service_request\" (\"id\", \"startLocation\", \"endLocation\", \"vehicleType\", \"breakdownDetails\", \"distance\", \"baseFare\", \"costPerKm\", \"tollCharges\", \"totalCost\", \"rating\", \"completed\", \"cancellationReason\", \"paymentStatus\", \"paymentMethod\", \"distanceUnit\", \"startTime\", \"endTime\", \"locationHistory\", \"userId\", \"towTruckTypeId\") VALUES ('55948cba-50d2-4e08-84b2-667b96f5c659', '26.512000 100.009800', '26.521000 100.010100', 'Van', 'Transmission issue', 837, 575, 662, 93, 795, 776, false, 'Weather conditions', 'Paid', 'PayPal', 'km', '2024-11-16T18:14:27.371Z', '2025-05-27T08:45:17.727Z', '26.511000 100.009700  26.522000 100.010200', '21a857f1-ba5f-4435-bcf6-f910ec07c0dc', '92655c08-efb1-4621-aa64-d0f4d0c79868');\nINSERT INTO \"tow_service_request\" (\"id\", \"startLocation\", \"endLocation\", \"vehicleType\", \"breakdownDetails\", \"distance\", \"baseFare\", \"costPerKm\", \"tollCharges\", \"totalCost\", \"rating\", \"completed\", \"cancellationReason\", \"paymentStatus\", \"paymentMethod\", \"distanceUnit\", \"startTime\", \"endTime\", \"locationHistory\", \"userId\", \"towTruckTypeId\") VALUES ('834689fe-195a-45c6-ba41-0e79face7098', '26.510000 100.009600', '26.523000 100.010300', 'Van', 'Overheating', 801, 791, 73, 338, 408, 438, false, 'Duplicate request', 'Failed', 'PayPal', 'km', '2025-02-15T00:11:23.159Z', '2024-03-21T15:43:10.800Z', '26.513000 100.009900  26.524000 100.010400', '5a16a5a6-a1f9-46d7-96ad-11a4de936f28', '67e6acbe-59bf-43e9-a4df-b80cf279aee8');\n\nINSERT INTO \"event\" (\"id\", \"eventType\", \"eventTimestamp\", \"userId\") VALUES ('b94adbbb-ab41-4a0e-bef0-39bdbe47958f', 'USER_REGISTERED', '2024-03-13T16:30:29.616Z', '104e46f4-d5bb-47a5-b11d-b19e1c8c0edc');\nINSERT INTO \"event\" (\"id\", \"eventType\", \"eventTimestamp\", \"userId\") VALUES ('9c4ed321-4480-40ac-9d1b-408b365e17bd', 'USER_REGISTERED', '2023-09-02T02:53:19.256Z', '21a857f1-ba5f-4435-bcf6-f910ec07c0dc');\nINSERT INTO \"event\" (\"id\", \"eventType\", \"eventTimestamp\", \"userId\") VALUES ('4950a79c-2340-4d52-9068-62133f5f605d', 'SERVICE_COMPLETED', '2024-05-01T05:07:35.247Z', '64074fc2-22e2-4b88-8739-7f53603f8a25');\nINSERT INTO \"event\" (\"id\", \"eventType\", \"eventTimestamp\", \"userId\") VALUES ('6e446902-1557-4040-92f1-51740df765b4', 'USER_REGISTERED', '2024-01-06T23:24:39.536Z', 'd16ce95d-9888-486f-b606-1b528efa0d4f');\nINSERT INTO \"event\" (\"id\", \"eventType\", \"eventTimestamp\", \"userId\") VALUES ('af109499-f6e4-4cfb-acd1-849ad2c825d0', 'SERVICE_COMPLETED', '2024-02-21T18:02:44.323Z', 'e7e70418-6b15-4f6e-9b7a-a967ff4d5e6a');\nINSERT INTO \"event\" (\"id\", \"eventType\", \"eventTimestamp\", \"userId\") VALUES ('14e710e5-c913-4fe0-9c63-552de3800184', 'SERVICE_COMPLETED', '2025-03-10T23:31:22.041Z', 'ea21c0f9-269c-4141-bf55-8e30582c90bd');\nINSERT INTO \"event\" (\"id\", \"eventType\", \"eventTimestamp\", \"userId\") VALUES ('f9f0fea3-c6f4-423b-9165-790f7fdf62c0', 'SERVICE_COMPLETED', '2023-07-04T13:09:01.883Z', 'be1f6788-7b44-4b9e-b237-d5ffc02bd05e');\nINSERT INTO \"event\" (\"id\", \"eventType\", \"eventTimestamp\", \"userId\") VALUES ('ba3ff23c-1944-4594-9ce1-962c78858e42', 'PASSWORD_RESET_REQUESTED', '2023-12-16T10:38:31.560Z', '2c57c4f8-a84b-4104-8789-25b8aa57289d');\nINSERT INTO \"event\" (\"id\", \"eventType\", \"eventTimestamp\", \"userId\") VALUES ('a240428a-6fff-4bf4-ad63-efdb6f84edb9', 'PASSWORD_RESET_REQUESTED', '2024-11-20T23:18:40.014Z', '104e46f4-d5bb-47a5-b11d-b19e1c8c0edc');\nINSERT INTO \"event\" (\"id\", \"eventType\", \"eventTimestamp\", \"userId\") VALUES ('7830e94c-d99d-4e50-9612-52bb54fbf72f', 'EMAIL_VERIFIED', '2024-02-19T18:12:22.455Z', 'd16ce95d-9888-486f-b606-1b528efa0d4f');\n\nINSERT INTO \"tow_truck_type_features\" (\"id\", \"feature\", \"towTruckTypeId\") VALUES ('c50b6339-ab48-4e26-b325-ceb6c836c6c0', 'Wheel Lift', '10504d08-b609-441e-9225-8aab9416e2b6');\nINSERT INTO \"tow_truck_type_features\" (\"id\", \"feature\", \"towTruckTypeId\") VALUES ('d9720565-2dc4-4474-894d-442077d87a7d', 'Wheel Lift', 'cebc7c6c-4092-45c4-959d-10a8e52c247c');\nINSERT INTO \"tow_truck_type_features\" (\"id\", \"feature\", \"towTruckTypeId\") VALUES ('c44a40b0-fa04-43d0-b711-d55787d1accb', 'Wheel Lift', '3e3ac84e-4987-464a-a0e5-61a5e2a25d78');\nINSERT INTO \"tow_truck_type_features\" (\"id\", \"feature\", \"towTruckTypeId\") VALUES ('2c520e20-b809-49d7-86f3-b8d18d270c46', 'Wheel Lift', 'cebc7c6c-4092-45c4-959d-10a8e52c247c');\nINSERT INTO \"tow_truck_type_features\" (\"id\", \"feature\", \"towTruckTypeId\") VALUES ('1875e1ab-f5a2-4beb-bfba-40d5235822aa', 'Winch', '4f7205cc-0c92-47f9-8299-e9c054fb775e');\nINSERT INTO \"tow_truck_type_features\" (\"id\", \"feature\", \"towTruckTypeId\") VALUES ('c45fa96d-3be3-47e0-b492-522ca76cc7f7', 'Boom', '9ca0e3e5-c889-4fb4-9f96-ce67fc5069f1');\nINSERT INTO \"tow_truck_type_features\" (\"id\", \"feature\", \"towTruckTypeId\") VALUES ('256b89b2-55e5-4db7-85e1-2ddabb2759a4', 'Wheel Lift', 'eb01a351-287f-4788-9a3d-6f1e2e931420');\nINSERT INTO \"tow_truck_type_features\" (\"id\", \"feature\", \"towTruckTypeId\") VALUES ('b1975318-ea2d-4a2a-8db7-31e960c2cbce', 'Wheel Lift', '3e3ac84e-4987-464a-a0e5-61a5e2a25d78');\nINSERT INTO \"tow_truck_type_features\" (\"id\", \"feature\", \"towTruckTypeId\") VALUES ('20fc486d-9e69-4b34-b2ee-7860ca4caf62', 'Boom', '4f7205cc-0c92-47f9-8299-e9c054fb775e');\nINSERT INTO \"tow_truck_type_features\" (\"id\", \"feature\", \"towTruckTypeId\") VALUES ('58fbaec9-c6ff-4a8a-ac56-e73b71860e1d', 'Hydraulic Lift', '67e6acbe-59bf-43e9-a4df-b80cf279aee8');\n\nINSERT INTO \"notification_preference\" (\"id\", \"preference\", \"userId\") VALUES ('989f9c9f-3f7d-42ae-9171-0a511eb6d9ae', 'sms', '21a857f1-ba5f-4435-bcf6-f910ec07c0dc');\nINSERT INTO \"notification_preference\" (\"id\", \"preference\", \"userId\") VALUES ('4464dd39-f352-4487-acf0-a2dc96ac3dfb', 'email', '6779316e-4b0c-4261-9a5c-7e45ca6c5362');\nINSERT INTO \"notification_preference\" (\"id\", \"preference\", \"userId\") VALUES ('62fe0c07-4512-4376-8f0d-96bb104f6471', 'none', 'be1f6788-7b44-4b9e-b237-d5ffc02bd05e');\nINSERT INTO \"notification_preference\" (\"id\", \"preference\", \"userId\") VALUES ('0bb83ff9-7dd9-4eb3-978e-ae32c07185e4', 'sms', '21a857f1-ba5f-4435-bcf6-f910ec07c0dc');\nINSERT INTO \"notification_preference\" (\"id\", \"preference\", \"userId\") VALUES ('da53dfe5-6ffe-492a-ad13-b10ea356c4a9', 'push_notification', '64074fc2-22e2-4b88-8739-7f53603f8a25');\nINSERT INTO \"notification_preference\" (\"id\", \"preference\", \"userId\") VALUES ('dfafec0e-8171-4ad1-9acc-c0d731030e7c', 'push_notification', '104e46f4-d5bb-47a5-b11d-b19e1c8c0edc');\nINSERT INTO \"notification_preference\" (\"id\", \"preference\", \"userId\") VALUES ('05441afc-f73f-4ac4-b619-c81fe0f80829', 'sms', '2c57c4f8-a84b-4104-8789-25b8aa57289d');\nINSERT INTO \"notification_preference\" (\"id\", \"preference\", \"userId\") VALUES ('6838f062-4989-475b-b466-2f99544e919c', 'none', 'e7e70418-6b15-4f6e-9b7a-a967ff4d5e6a');\nINSERT INTO \"notification_preference\" (\"id\", \"preference\", \"userId\") VALUES ('34f918e9-89a5-425e-a026-ea869db3b5f7', 'sms', '6779316e-4b0c-4261-9a5c-7e45ca6c5362');\nINSERT INTO \"notification_preference\" (\"id\", \"preference\", \"userId\") VALUES ('4612cf89-d7e7-48ee-93c3-67d34f4f2450', 'email', 'ea21c0f9-269c-4141-bf55-8e30582c90bd');\n\nINSERT INTO \"password_history\" (\"id\", \"password\", \"dateChanged\", \"userId\") VALUES ('79986b49-2bf5-4e3a-8b79-4f4e014659bb', '$2b$10$ppubsZypHzkqW9dkhMB97ul2.wSsvaCoDE2CzqIHygddRMKXvpYUC', '2025-03-28T13:38:48.090Z', '21a857f1-ba5f-4435-bcf6-f910ec07c0dc');\nINSERT INTO \"password_history\" (\"id\", \"password\", \"dateChanged\", \"userId\") VALUES ('d3900fdc-df01-4776-9671-eb1f0857333e', '$2b$10$ppubsZypHzkqW9dkhMB97ul2.wSsvaCoDE2CzqIHygddRMKXvpYUC', '2024-03-20T04:48:32.976Z', 'e7e70418-6b15-4f6e-9b7a-a967ff4d5e6a');\nINSERT INTO \"password_history\" (\"id\", \"password\", \"dateChanged\", \"userId\") VALUES ('95bb51f1-b0f9-4ec6-90b4-bdc4212af74f', '$2b$10$ppubsZypHzkqW9dkhMB97ul2.wSsvaCoDE2CzqIHygddRMKXvpYUC', '2025-04-02T04:51:11.400Z', '2c57c4f8-a84b-4104-8789-25b8aa57289d');\nINSERT INTO \"password_history\" (\"id\", \"password\", \"dateChanged\", \"userId\") VALUES ('ae6d47af-d6a1-4123-ad24-86c0f299f880', '$2b$10$ppubsZypHzkqW9dkhMB97ul2.wSsvaCoDE2CzqIHygddRMKXvpYUC', '2025-05-31T00:20:32.860Z', '2c57c4f8-a84b-4104-8789-25b8aa57289d');\nINSERT INTO \"password_history\" (\"id\", \"password\", \"dateChanged\", \"userId\") VALUES ('c3e856bb-01fd-436c-8709-912e73b98d38', '$2b$10$ppubsZypHzkqW9dkhMB97ul2.wSsvaCoDE2CzqIHygddRMKXvpYUC', '2024-12-20T20:53:32.954Z', '21a857f1-ba5f-4435-bcf6-f910ec07c0dc');\nINSERT INTO \"password_history\" (\"id\", \"password\", \"dateChanged\", \"userId\") VALUES ('af7f51ba-df3b-4d64-95ed-7fc74c5781c2', '$2b$10$ppubsZypHzkqW9dkhMB97ul2.wSsvaCoDE2CzqIHygddRMKXvpYUC', '2024-10-18T16:56:44.467Z', 'e7e70418-6b15-4f6e-9b7a-a967ff4d5e6a');\nINSERT INTO \"password_history\" (\"id\", \"password\", \"dateChanged\", \"userId\") VALUES ('68bceea0-6d20-4882-b5e1-be46486f4e40', '$2b$10$ppubsZypHzkqW9dkhMB97ul2.wSsvaCoDE2CzqIHygddRMKXvpYUC', '2024-08-01T16:21:04.449Z', 'ea21c0f9-269c-4141-bf55-8e30582c90bd');\nINSERT INTO \"password_history\" (\"id\", \"password\", \"dateChanged\", \"userId\") VALUES ('d810a9c5-f53d-4b12-95e1-89ed9e28fdb5', '$2b$10$ppubsZypHzkqW9dkhMB97ul2.wSsvaCoDE2CzqIHygddRMKXvpYUC', '2025-03-03T17:47:42.025Z', '6779316e-4b0c-4261-9a5c-7e45ca6c5362');\nINSERT INTO \"password_history\" (\"id\", \"password\", \"dateChanged\", \"userId\") VALUES ('24432c7a-60e3-49d8-83aa-3d21f709c827', '$2b$10$ppubsZypHzkqW9dkhMB97ul2.wSsvaCoDE2CzqIHygddRMKXvpYUC', '2023-10-12T04:00:35.828Z', 'be1f6788-7b44-4b9e-b237-d5ffc02bd05e');\nINSERT INTO \"password_history\" (\"id\", \"password\", \"dateChanged\", \"userId\") VALUES ('83a07e6e-fa67-4d4b-be5e-c75460352c7d', '$2b$10$ppubsZypHzkqW9dkhMB97ul2.wSsvaCoDE2CzqIHygddRMKXvpYUC', '2023-08-16T07:55:27.617Z', '5a16a5a6-a1f9-46d7-96ad-11a4de936f28');\n\nINSERT INTO \"user_form\" (\"id\", \"formData\", \"userId\") VALUES ('e501a097-1e21-4ebc-b619-c47c3cf82296', '{\"curtus\":\"vesper\",\"stultus\":\"modi\",\"depereo\":\"veniam\",\"argumentum\":\"degusto\",\"arguo\":\"cibo\"}'::jsonb, '104e46f4-d5bb-47a5-b11d-b19e1c8c0edc');\nINSERT INTO \"user_form\" (\"id\", \"formData\", \"userId\") VALUES ('cd8b499b-bf39-4f49-a485-098341f8eaf6', '{\"benevolentia\":\"asporto\",\"bibo\":\"totus\",\"textor\":\"depono\"}'::jsonb, '21a857f1-ba5f-4435-bcf6-f910ec07c0dc');\nINSERT INTO \"user_form\" (\"id\", \"formData\", \"userId\") VALUES ('f7ab1dc2-897b-40fa-b462-86b8591e4759', '{\"vae\":\"auditor\",\"tersus\":\"chirographum\",\"admiratio\":\"urbs\",\"venia\":\"apud\",\"appositus\":\"illum\"}'::jsonb, '6779316e-4b0c-4261-9a5c-7e45ca6c5362');\nINSERT INTO \"user_form\" (\"id\", \"formData\", \"userId\") VALUES ('7da01358-d931-4afc-92c8-9d9d5e0e4af5', '{\"veritatis\":\"titulus\",\"arcesso\":\"baiulus\",\"quia\":\"vix\",\"territo\":\"veniam\"}'::jsonb, '2c57c4f8-a84b-4104-8789-25b8aa57289d');\nINSERT INTO \"user_form\" (\"id\", \"formData\", \"userId\") VALUES ('e3133cbf-0016-4f12-8cca-94ab35d96f29', '{\"uberrime\":\"aduro\",\"casso\":\"temporibus\",\"inventore\":\"vergo\",\"arca\":\"viridis\",\"dicta\":\"ea\"}'::jsonb, 'ea21c0f9-269c-4141-bf55-8e30582c90bd');\nINSERT INTO \"user_form\" (\"id\", \"formData\", \"userId\") VALUES ('96961bc4-47eb-4215-931b-f475ac675bba', '{\"numquam\":\"debilito\",\"maiores\":\"delinquo\",\"acidus\":\"perspiciatis\",\"aedificium\":\"vallum\",\"auxilium\":\"amplexus\"}'::jsonb, 'e7e70418-6b15-4f6e-9b7a-a967ff4d5e6a');\nINSERT INTO \"user_form\" (\"id\", \"formData\", \"userId\") VALUES ('490ab479-aeab-4215-8405-f4342cdf27dc', '{\"antea\":\"tristis\",\"peccatus\":\"patrocinor\",\"incidunt\":\"talus\",\"trepide\":\"iusto\"}'::jsonb, '64074fc2-22e2-4b88-8739-7f53603f8a25');\nINSERT INTO \"user_form\" (\"id\", \"formData\", \"userId\") VALUES ('beb8ed50-1c84-48e2-9853-47e47bed7d25', '{\"vergo\":\"traho\",\"vado\":\"modi\",\"tandem\":\"victoria\"}'::jsonb, 'ea21c0f9-269c-4141-bf55-8e30582c90bd');\nINSERT INTO \"user_form\" (\"id\", \"formData\", \"userId\") VALUES ('6befabdc-97e9-4d53-a814-c79b3b223ddc', '{\"concido\":\"aveho\",\"delectatio\":\"debeo\",\"benigne\":\"alioqui\"}'::jsonb, '104e46f4-d5bb-47a5-b11d-b19e1c8c0edc');\nINSERT INTO \"user_form\" (\"id\", \"formData\", \"userId\") VALUES ('aa3f1308-cd13-4948-8472-ad5559a9c177', '{\"adipisci\":\"videlicet\",\"ambulo\":\"angelus\",\"ullus\":\"fugiat\",\"amitto\":\"tabgo\"}'::jsonb, '104e46f4-d5bb-47a5-b11d-b19e1c8c0edc');\n\nINSERT INTO \"vehicle_form\" (\"id\", \"formData\", \"vehicleId\") VALUES ('069b22e8-e48b-4a7e-bfc0-98f6e46ef3b1', '{\"bene\":\"rerum\",\"caste\":\"amicitia\",\"theca\":\"ciminatio\"}'::jsonb, '797565c5-6963-4627-a344-4f4f37fc1037');\nINSERT INTO \"vehicle_form\" (\"id\", \"formData\", \"vehicleId\") VALUES ('643488d9-8130-4234-9768-87959fb1f18f', '{\"corrupti\":\"pariatur\",\"cometes\":\"cerno\",\"tenus\":\"nobis\",\"solutio\":\"culpo\",\"substantia\":\"caste\"}'::jsonb, '83b26437-1af8-4dd7-baff-f734ad8373fb');\nINSERT INTO \"vehicle_form\" (\"id\", \"formData\", \"vehicleId\") VALUES ('b7d75362-dccf-49c3-9898-7acab1800584', '{\"teres\":\"magni\",\"summopere\":\"una\",\"similique\":\"suffragium\",\"celebrer\":\"repudiandae\"}'::jsonb, '834689fe-195a-45c6-ba41-0e79face7098');\nINSERT INTO \"vehicle_form\" (\"id\", \"formData\", \"vehicleId\") VALUES ('e0c310a7-127c-46b2-a3b9-798ed7dd3a23', '{\"crapula\":\"illo\",\"utor\":\"conforto\",\"custodia\":\"apparatus\",\"nisi\":\"benigne\"}'::jsonb, '797565c5-6963-4627-a344-4f4f37fc1037');\nINSERT INTO \"vehicle_form\" (\"id\", \"formData\", \"vehicleId\") VALUES ('76fd8855-480f-491a-8bb8-8a55e7ece276', '{\"turbo\":\"thesis\",\"ex\":\"voluptas\",\"vero\":\"caecus\"}'::jsonb, '797565c5-6963-4627-a344-4f4f37fc1037');\nINSERT INTO \"vehicle_form\" (\"id\", \"formData\", \"vehicleId\") VALUES ('32a3ae1b-8876-458b-986c-94a8a0ad509a', '{\"abutor\":\"comes\",\"minima\":\"velum\",\"commodo\":\"cumque\",\"voco\":\"fugiat\",\"beneficium\":\"vulariter\"}'::jsonb, 'c47aeb37-5ff2-40c1-b20a-1060c990149f');\nINSERT INTO \"vehicle_form\" (\"id\", \"formData\", \"vehicleId\") VALUES ('545a9dc3-756e-4a23-b297-c3b5254eae7c', '{\"enim\":\"auctor\",\"coadunatio\":\"taceo\",\"commodi\":\"creo\",\"aestas\":\"statim\",\"thema\":\"urbs\"}'::jsonb, '834689fe-195a-45c6-ba41-0e79face7098');\nINSERT INTO \"vehicle_form\" (\"id\", \"formData\", \"vehicleId\") VALUES ('bc4966bd-968d-45a3-9365-bf80d7c21761', '{\"accommodo\":\"vinum\",\"suadeo\":\"vero\",\"adsum\":\"expedita\"}'::jsonb, 'f5af0173-3160-40d1-a399-add939be96c2');\nINSERT INTO \"vehicle_form\" (\"id\", \"formData\", \"vehicleId\") VALUES ('84b2be0a-a073-406c-a987-cc9b4487e971', '{\"volo\":\"crepusculum\",\"defluo\":\"neque\",\"sonitus\":\"desipio\"}'::jsonb, 'c47aeb37-5ff2-40c1-b20a-1060c990149f');\nINSERT INTO \"vehicle_form\" (\"id\", \"formData\", \"vehicleId\") VALUES ('a83dfd23-c5b7-421b-98e0-7fb57e9691be', '{\"taedium\":\"civitas\",\"certus\":\"voluptas\",\"vado\":\"astrum\",\"velut\":\"articulus\"}'::jsonb, '209f0f60-77c0-44df-b73f-d36d3b0d07aa');\n    ")];
                    case 1:
                        _a.sent();
                        return [3 /*break*/, 3];
                    case 2:
                        error_1 = _a.sent();
                        return [3 /*break*/, 3];
                    case 3: return [2 /*return*/];
                }
            });
        });
    };
    Script1702311247028.prototype.down = function (queryRunner) {
        return __awaiter(this, void 0, void 0, function () { return __generator(this, function (_a) {
            return [2 /*return*/];
        }); });
    };
    return Script1702311247028;
}());
exports.Script1702311247028 = Script1702311247028;


// C:\grua-booking-system-25\server\dist\core\database\setup\database.setup.module.js
"use strict";
var __esDecorate = (this && this.__esDecorate) || function (ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {
    function accept(f) { if (f !== void 0 && typeof f !== "function") throw new TypeError("Function expected"); return f; }
    var kind = contextIn.kind, key = kind === "getter" ? "get" : kind === "setter" ? "set" : "value";
    var target = !descriptorIn && ctor ? contextIn["static"] ? ctor : ctor.prototype : null;
    var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});
    var _, done = false;
    for (var i = decorators.length - 1; i >= 0; i--) {
        var context = {};
        for (var p in contextIn) context[p] = p === "access" ? {} : contextIn[p];
        for (var p in contextIn.access) context.access[p] = contextIn.access[p];
        context.addInitializer = function (f) { if (done) throw new TypeError("Cannot add initializers after decoration has completed"); extraInitializers.push(accept(f || null)); };
        var result = (0, decorators[i])(kind === "accessor" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);
        if (kind === "accessor") {
            if (result === void 0) continue;
            if (result === null || typeof result !== "object") throw new TypeError("Object expected");
            if (_ = accept(result.get)) descriptor.get = _;
            if (_ = accept(result.set)) descriptor.set = _;
            if (_ = accept(result.init)) initializers.unshift(_);
        }
        else if (_ = accept(result)) {
            if (kind === "field") initializers.unshift(_);
            else descriptor[key] = _;
        }
    }
    if (target) Object.defineProperty(target, contextIn.name, descriptor);
    done = true;
};
var __runInitializers = (this && this.__runInitializers) || function (thisArg, initializers, value) {
    var useValue = arguments.length > 2;
    for (var i = 0; i < initializers.length; i++) {
        value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);
    }
    return useValue ? value : void 0;
};
var __setFunctionName = (this && this.__setFunctionName) || function (f, name, prefix) {
    if (typeof name === "symbol") name = name.description ? "[".concat(name.description, "]") : "";
    return Object.defineProperty(f, "name", { configurable: true, value: prefix ? "".concat(prefix, " ", name) : name });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.DatabaseSetupModule = void 0;
var common_1 = require("@nestjs/common");
var typeorm_1 = require("@nestjs/typeorm");
var database_configuration_service_1 = require("../configuration/database.configuration.service");
var DatabaseSetupModule = function () {
    var _classDecorators = [(0, common_1.Module)({
            imports: [
                typeorm_1.TypeOrmModule.forRootAsync({
                    inject: [database_configuration_service_1.DatabaseConfigurationService],
                    useFactory: function (databaseService) {
                        var options = databaseService.getOptions();
                        return options;
                    },
                }),
            ],
            providers: [],
            exports: [],
        })];
    var _classDescriptor;
    var _classExtraInitializers = [];
    var _classThis;
    var DatabaseSetupModule = _classThis = /** @class */ (function () {
        function DatabaseSetupModule_1() {
        }
        return DatabaseSetupModule_1;
    }());
    __setFunctionName(_classThis, "DatabaseSetupModule");
    (function () {
        var _metadata = typeof Symbol === "function" && Symbol.metadata ? Object.create(null) : void 0;
        __esDecorate(null, _classDescriptor = { value: _classThis }, _classDecorators, { kind: "class", name: _classThis.name, metadata: _metadata }, null, _classExtraInitializers);
        DatabaseSetupModule = _classThis = _classDescriptor.value;
        if (_metadata) Object.defineProperty(_classThis, Symbol.metadata, { enumerable: true, configurable: true, writable: true, value: _metadata });
        __runInitializers(_classThis, _classExtraInitializers);
    })();
    return DatabaseSetupModule = _classThis;
}();
exports.DatabaseSetupModule = DatabaseSetupModule;


// C:\grua-booking-system-25\server\dist\core\database\index.js
"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", { value: true });
__exportStar(require("./configuration/database.configuration.module"), exports);
__exportStar(require("./helper/ColumnNumericTransformer"), exports);
__exportStar(require("./helper/database.helper"), exports);
__exportStar(require("./helper/database.helper.module"), exports);
__exportStar(require("./migrations/database.migration.module"), exports);
__exportStar(require("./migrations/database.migration.service"), exports);
__exportStar(require("./setup/database.setup.module"), exports);


// C:\grua-booking-system-25\server\dist\core\database\configuration\database.configuration.module.js
"use strict";
var __esDecorate = (this && this.__esDecorate) || function (ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {
    function accept(f) { if (f !== void 0 && typeof f !== "function") throw new TypeError("Function expected"); return f; }
    var kind = contextIn.kind, key = kind === "getter" ? "get" : kind === "setter" ? "set" : "value";
    var target = !descriptorIn && ctor ? contextIn["static"] ? ctor : ctor.prototype : null;
    var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});
    var _, done = false;
    for (var i = decorators.length - 1; i >= 0; i--) {
        var context = {};
        for (var p in contextIn) context[p] = p === "access" ? {} : contextIn[p];
        for (var p in contextIn.access) context.access[p] = contextIn.access[p];
        context.addInitializer = function (f) { if (done) throw new TypeError("Cannot add initializers after decoration has completed"); extraInitializers.push(accept(f || null)); };
        var result = (0, decorators[i])(kind === "accessor" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);
        if (kind === "accessor") {
            if (result === void 0) continue;
            if (result === null || typeof result !== "object") throw new TypeError("Object expected");
            if (_ = accept(result.get)) descriptor.get = _;
            if (_ = accept(result.set)) descriptor.set = _;
            if (_ = accept(result.init)) initializers.unshift(_);
        }
        else if (_ = accept(result)) {
            if (kind === "field") initializers.unshift(_);
            else descriptor[key] = _;
        }
    }
    if (target) Object.defineProperty(target, contextIn.name, descriptor);
    done = true;
};
var __runInitializers = (this && this.__runInitializers) || function (thisArg, initializers, value) {
    var useValue = arguments.length > 2;
    for (var i = 0; i < initializers.length; i++) {
        value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);
    }
    return useValue ? value : void 0;
};
var __setFunctionName = (this && this.__setFunctionName) || function (f, name, prefix) {
    if (typeof name === "symbol") name = name.description ? "[".concat(name.description, "]") : "";
    return Object.defineProperty(f, "name", { configurable: true, value: prefix ? "".concat(prefix, " ", name) : name });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.ExceptionFilter = void 0;
var common_1 = require("@nestjs/common");
var ExceptionFilter = function () {
    var _classDecorators = [(0, common_1.Catch)(common_1.HttpException)];
    var _classDescriptor;
    var _classExtraInitializers = [];
    var _classThis;
    var ExceptionFilter = _classThis = /** @class */ (function () {
        function ExceptionFilter_1(exceptionService) {
            this.exceptionService = exceptionService;
        }
        ExceptionFilter_1.prototype.catch = function (exception, host) {
            var context = host.switchToHttp();
            var response = context.getResponse();
            var request = context.getRequest();
            var status = exception.getStatus();
            if (this.exceptionService.isCustom(exception)) {
                var payload = this.exceptionService.getPayload(exception);
                response.status(status).json({
                    code: payload.code,
                    message: payload.message,
                });
            }
            else {
                var payload = exception.getResponse();
                var message = exception.message;
                var data = payload === null || payload === void 0 ? void 0 : payload.message;
                response.status(status).json({
                    statusCode: status,
                    timestamp: new Date().toISOString(),
                    path: request.url,
                    message: message,
                    data: data,
                });
            }
        };
        return ExceptionFilter_1;
    }());
    __setFunctionName(_classThis, "ExceptionFilter");
    (function () {
        var _metadata = typeof Symbol === "function" && Symbol.metadata ? Object.create(null) : void 0;
        __esDecorate(null, _classDescriptor = { value: _classThis }, _classDecorators, { kind: "class", name: _classThis.name, metadata: _metadata }, null, _classExtraInitializers);
        ExceptionFilter = _classThis = _classDescriptor.value;
        if (_metadata) Object.defineProperty(_classThis, Symbol.metadata, { enumerable: true, configurable: true, writable: true, value: _metadata });
        __runInitializers(_classThis, _classExtraInitializers);
    })();
    return ExceptionFilter = _classThis;
}();
exports.ExceptionFilter = ExceptionFilter;


// C:\grua-booking-system-25\server\dist\core\exception\exception.js
"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Exception = void 0;
var common_1 = require("@nestjs/common");
var Exception = /** @class */ (function (_super) {
    __extends(Exception, _super);
    function Exception(options) {
        return _super.call(this, __assign(__assign({}, options), { type: 'CORE_EXCEPTION' }), options.status) || this;
    }
    return Exception;
}(common_1.HttpException));
exports.Exception = Exception;


// C:\grua-booking-system-25\server\dist\core\exception\exception.module.js
"use strict";
var __esDecorate = (this && this.__esDecorate) || function (ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {
    function accept(f) { if (f !== void 0 && typeof f !== "function") throw new TypeError("Function expected"); return f; }
    var kind = contextIn.kind, key = kind === "getter" ? "get" : kind === "setter" ? "set" : "value";
    var target = !descriptorIn && ctor ? contextIn["static"] ? ctor : ctor.prototype : null;
    var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});
    var _, done = false;
    for (var i = decorators.length - 1; i >= 0; i--) {
        var context = {};
        for (var p in contextIn) context[p] = p === "access" ? {} : contextIn[p];
        for (var p in contextIn.access) context.access[p] = contextIn.access[p];
        context.addInitializer = function (f) { if (done) throw new TypeError("Cannot add initializers after decoration has completed"); extraInitializers.push(accept(f || null)); };
        var result = (0, decorators[i])(kind === "accessor" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);
        if (kind === "accessor") {
            if (result === void 0) continue;
            if (result === null || typeof result !== "object") throw new TypeError("Object expected");
            if (_ = accept(result.get)) descriptor.get = _;
            if (_ = accept(result.set)) descriptor.set = _;
            if (_ = accept(result.init)) initializers.unshift(_);
        }
        else if (_ = accept(result)) {
            if (kind === "field") initializers.unshift(_);
            else descriptor[key] = _;
        }
    }
    if (target) Object.defineProperty(target, contextIn.name, descriptor);
    done = true;
};
var __runInitializers = (this && this.__runInitializers) || function (thisArg, initializers, value) {
    var useValue = arguments.length > 2;
    for (var i = 0; i < initializers.length; i++) {
        value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);
    }
    return useValue ? value : void 0;
};
var __setFunctionName = (this && this.__setFunctionName) || function (f, name, prefix) {
    if (typeof name === "symbol") name = name.description ? "[".concat(name.description, "]") : "";
    return Object.defineProperty(f, "name", { configurable: true, value: prefix ? "".concat(prefix, " ", name) : name });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.ExceptionModule = void 0;
var common_1 = require("@nestjs/common");
var core_1 = require("@nestjs/core");
var exception_filter_1 = require("./exception.filter");
var exception_service_1 = require("./exception.service");
var ExceptionModule = function () {
    var _classDecorators = [(0, common_1.Global)(), (0, common_1.Module)({
            providers: [exception_service_1.ExceptionService],
            exports: [exception_service_1.ExceptionService],
        })];
    var _classDescriptor;
    var _classExtraInitializers = [];
    var _classThis;
    var ExceptionModule = _classThis = /** @class */ (function () {
        function ExceptionModule_1() {
        }
        ExceptionModule_1.getFilters = function () {
            return [
                {
                    provide: core_1.APP_FILTER,
                    useClass: exception_filter_1.ExceptionFilter,
                },
            ];
        };
        return ExceptionModule_1;
    }());
    __setFunctionName(_classThis, "ExceptionModule");
    (function () {
        var _metadata = typeof Symbol === "function" && Symbol.metadata ? Object.create(null) : void 0;
        __esDecorate(null, _classDescriptor = { value: _classThis }, _classDecorators, { kind: "class", name: _classThis.name, metadata: _metadata }, null, _classExtraInitializers);
        ExceptionModule = _classThis = _classDescriptor.value;
        if (_metadata) Object.defineProperty(_classThis, Symbol.metadata, { enumerable: true, configurable: true, writable: true, value: _metadata });
        __runInitializers(_classThis, _classExtraInitializers);
    })();
    return ExceptionModule = _classThis;
}();
exports.ExceptionModule = ExceptionModule;
"use strict";
var __esDecorate = (this && this.__esDecorate) || function (ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {
    function accept(f) { if (f !== void 0 && typeof f !== "function") throw new TypeError("Function expected"); return f; }
    var kind = contextIn.kind, key = kind === "getter" ? "get" : kind === "setter" ? "set" : "value";
    var target = !descriptorIn && ctor ? contextIn["static"] ? ctor : ctor.prototype : null;
    var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});
    var _, done = false;
    for (var i = decorators.length - 1; i >= 0; i--) {
        var context = {};
        for (var p in contextIn) context[p] = p === "access" ? {} : contextIn[p];
        for (var p in contextIn.access) context.access[p] = contextIn.access[p];
        context.addInitializer = function (f) { if (done) throw new TypeError("Cannot add initializers after decoration has completed"); extraInitializers.push(accept(f || null)); };
        var result = (0, decorators[i])(kind === "accessor" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);
        if (kind === "accessor") {
            if (result === void 0) continue;
            if (result === null || typeof result !== "object") throw new TypeError("Object expected");
            if (_ = accept(result.get)) descriptor.get = _;
            if (_ = accept(result.set)) descriptor.set = _;
            if (_ = accept(result.init)) initializers.unshift(_);
        }
        else if (_ = accept(result)) {
            if (kind === "field") initializers.unshift(_);
            else descriptor[key] = _;
        }
    }
    if (target) Object.defineProperty(target, contextIn.name, descriptor);
    done = true;
};
var __runInitializers = (this && this.__runInitializers) || function (thisArg, initializers, value) {
    var useValue = arguments.length > 2;
    for (var i = 0; i < initializers.length; i++) {
        value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);
    }
    return useValue ? value : void 0;
};
var __setFunctionName = (this && this.__setFunctionName) || function (f, name, prefix) {
    if (typeof name === "symbol") name = name.description ? "[".concat(name.description, "]") : "";
    return Object.defineProperty(f, "name", { configurable: true, value: prefix ? "".concat(prefix, " ", name) : name });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.ExceptionService = void 0;
var common_1 = require("@nestjs/common");
var exception_1 = require("./exception");
var ExceptionService = function () {
    var _classDecorators = [(0, common_1.Injectable)()];
    var _classDescriptor;
    var _classExtraInitializers = [];
    var _classThis;
    var ExceptionService = _classThis = /** @class */ (function () {
        function ExceptionService_1(loggerService) {
            this.loggerService = loggerService;
            this.logger = this.loggerService.create({ name: 'ExceptionService' });
        }
        ExceptionService_1.prototype.throw = function (payload) {
            var _a;
            var message = (_a = payload.privateMessage) !== null && _a !== void 0 ? _a : payload.publicMessage;
            this.logger.log("[ErrorCode | ".concat(payload.code, "] ").concat(message), payload);
            throw new exception_1.Exception({
                code: payload.code,
                message: payload.publicMessage,
                status: payload.status,
            });
        };
        ExceptionService_1.prototype.isCustom = function (exception) {
            try {
                var payload = exception.getResponse();
                return (payload === null || payload === void 0 ? void 0 : payload.type) === 'CORE_EXCEPTION';
            }
            catch (error) {
                return false;
            }
        };
        ExceptionService_1.prototype.getPayload = function (exception) {
            var payload = exception.getResponse();
            return payload;
        };
        return ExceptionService_1;
    }());
    __setFunctionName(_classThis, "ExceptionService");
    (function () {
        var _metadata = typeof Symbol === "function" && Symbol.metadata ? Object.create(null) : void 0;
        __esDecorate(null, _classDescriptor = { value: _classThis }, _classDecorators, { kind: "class", name: _classThis.name, metadata: _metadata }, null, _classExtraInitializers);
        ExceptionService = _classThis = _classDescriptor.value;
        if (_metadata) Object.defineProperty(_classThis, Symbol.metadata, { enumerable: true, configurable: true, writable: true, value: _metadata });
        __runInitializers(_classThis, _classExtraInitializers);
    })();
    return ExceptionService = _classThis;
}();
exports.ExceptionService = ExceptionService;


// C:\grua-booking-system-25\server\dist\core\exception\index.js
"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", { value: true });
__exportStar(require("./exception.module"), exports);
__exportStar(require("./exception.service"), exports);


// C:\grua-booking-system-25\server\dist\core\logging\index.js
"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", { value: true });
__exportStar(require("./logging.module"), exports);


// C:\grua-booking-system-25\server\dist\core\logging\logging.interceptor.js
"use strict";
var __esDecorate = (this && this.__esDecorate) || function (ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {
    function accept(f) { if (f !== void 0 && typeof f !== "function") throw new TypeError("Function expected"); return f; }
    var kind = contextIn.kind, key = kind === "getter" ? "get" : kind === "setter" ? "set" : "value";
    var target = !descriptorIn && ctor ? contextIn["static"] ? ctor : ctor.prototype : null;
    var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});
    var _, done = false;
    for (var i = decorators.length - 1; i >= 0; i--) {
        var context = {};
        for (var p in contextIn) context[p] = p === "access" ? {} : contextIn[p];
        for (var p in contextIn.access) context.access[p] = contextIn.access[p];
        context.addInitializer = function (f) { if (done) throw new TypeError("Cannot add initializers after decoration has completed"); extraInitializers.push(accept(f || null)); };
        var result = (0, decorators[i])(kind === "accessor" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);
        if (kind === "accessor") {
            if (result === void 0) continue;
            if (result === null || typeof result !== "object") throw new TypeError("Object expected");
            if (_ = accept(result.get)) descriptor.get = _;
            if (_ = accept(result.set)) descriptor.set = _;
            if (_ = accept(result.init)) initializers.unshift(_);
        }
        else if (_ = accept(result)) {
            if (kind === "field") initializers.unshift(_);
            else descriptor[key] = _;
        }
    }
    if (target) Object.defineProperty(target, contextIn.name, descriptor);
    done = true;
};
var __runInitializers = (this && this.__runInitializers) || function (thisArg, initializers, value) {
    var useValue = arguments.length > 2;
    for (var i = 0; i < initializers.length; i++) {
        value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);
    }
    return useValue ? value : void 0;
};
var __setFunctionName = (this && this.__setFunctionName) || function (f, name, prefix) {
    if (typeof name === "symbol") name = name.description ? "[".concat(name.description, "]") : "";
    return Object.defineProperty(f, "name", { configurable: true, value: prefix ? "".concat(prefix, " ", name) : name });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.LoggingInterceptor = void 0;
var common_1 = require("@nestjs/common");
var context_1 = require("@server/helpers/context");
var operators_1 = require("rxjs/operators");
var LoggingInterceptor = function () {
    var _classDecorators = [(0, common_1.Injectable)()];
    var _classDescriptor;
    var _classExtraInitializers = [];
    var _classThis;
    var LoggingInterceptor = _classThis = /** @class */ (function () {
        function LoggingInterceptor_1(loggingService) {
            this.loggingService = loggingService;
        }
        LoggingInterceptor_1.prototype.intercept = function (context, next) {
            var _this = this;
            var request = context_1.ContextHelper.toRequest(context);
            this.loggingService.logOnStart(request);
            return next.handle().pipe((0, operators_1.tap)(function () {
                _this.loggingService.logOnStop(request);
            }));
        };
        return LoggingInterceptor_1;
    }());
    __setFunctionName(_classThis, "LoggingInterceptor");
    (function () {
        var _metadata = typeof Symbol === "function" && Symbol.metadata ? Object.create(null) : void 0;
        __esDecorate(null, _classDescriptor = { value: _classThis }, _classDecorators, { kind: "class", name: _classThis.name, metadata: _metadata }, null, _classExtraInitializers);
        LoggingInterceptor = _classThis = _classDescriptor.value;
        if (_metadata) Object.defineProperty(_classThis, Symbol.metadata, { enumerable: true, configurable: true, writable: true, value: _metadata });
        __runInitializers(_classThis, _classExtraInitializers);
    })();
    return LoggingInterceptor = _classThis;
}();
exports.LoggingInterceptor = LoggingInterceptor;


// C:\grua-booking-system-25\server\dist\core\logging\logging.module.js
"use strict";
var __esDecorate = (this && this.__esDecorate) || function (ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {
    function accept(f) { if (f !== void 0 && typeof f !== "function") throw new TypeError("Function expected"); return f; }
    var kind = contextIn.kind, key = kind === "getter" ? "get" : kind === "setter" ? "set" : "value";
    var target = !descriptorIn && ctor ? contextIn["static"] ? ctor : ctor.prototype : null;
    var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});
    var _, done = false;
    for (var i = decorators.length - 1; i >= 0; i--) {
        var context = {};
        for (var p in contextIn) context[p] = p === "access" ? {} : contextIn[p];
        for (var p in contextIn.access) context.access[p] = contextIn.access[p];
        context.addInitializer = function (f) { if (done) throw new TypeError("Cannot add initializers after decoration has completed"); extraInitializers.push(accept(f || null)); };
        var result = (0, decorators[i])(kind === "accessor" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);
        if (kind === "accessor") {
            if (result === void 0) continue;
            if (result === null || typeof result !== "object") throw new TypeError("Object expected");
            if (_ = accept(result.get)) descriptor.get = _;
            if (_ = accept(result.set)) descriptor.set = _;
            if (_ = accept(result.init)) initializers.unshift(_);
        }
        else if (_ = accept(result)) {
            if (kind === "field") initializers.unshift(_);
            else descriptor[key] = _;
        }
    }
    if (target) Object.defineProperty(target, contextIn.name, descriptor);
    done = true;
};
var __runInitializers = (this && this.__runInitializers) || function (thisArg, initializers, value) {
    var useValue = arguments.length > 2;
    for (var i = 0; i < initializers.length; i++) {
        value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);
    }
    return useValue ? value : void 0;
};
var __setFunctionName = (this && this.__setFunctionName) || function (f, name, prefix) {
    if (typeof name === "symbol") name = name.description ? "[".concat(name.description, "]") : "";
    return Object.defineProperty(f, "name", { configurable: true, value: prefix ? "".concat(prefix, " ", name) : name });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.LoggingModule = void 0;
var common_1 = require("@nestjs/common");
var core_1 = require("@nestjs/core");
var domain_1 = require("@server/modules/authentication/domain");
var logging_interceptor_1 = require("./logging.interceptor");
var logging_service_1 = require("./logging.service");
var LoggingModule = function () {
    var _classDecorators = [(0, common_1.Module)({
            imports: [domain_1.AuthenticationDomainModule],
            providers: [logging_service_1.LoggingService],
            exports: [logging_service_1.LoggingService],
        })];
    var _classDescriptor;
    var _classExtraInitializers = [];
    var _classThis;
    var LoggingModule = _classThis = /** @class */ (function () {
        function LoggingModule_1() {
        }
        LoggingModule_1.getInterceptors = function () {
            return [
                {
                    provide: core_1.APP_INTERCEPTOR,
                    useClass: logging_interceptor_1.LoggingInterceptor,
                },
            ];
        };
        return LoggingModule_1;
    }());
    __setFunctionName(_classThis, "LoggingModule");
    (function () {
        var _metadata = typeof Symbol === "function" && Symbol.metadata ? Object.create(null) : void 0;
        __esDecorate(null, _classDescriptor = { value: _classThis }, _classDecorators, { kind: "class", name: _classThis.name, metadata: _metadata }, null, _classExtraInitializers);
        LoggingModule = _classThis = _classDescriptor.value;
        if (_metadata) Object.defineProperty(_classThis, Symbol.metadata, { enumerable: true, configurable: true, writable: true, value: _metadata });
        __runInitializers(_classThis, _classExtraInitializers);
    })();
    return LoggingModule = _classThis;
}();
exports.LoggingModule = LoggingModule;
"use strict";
var __esDecorate = (this && this.__esDecorate) || function (ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {
    function accept(f) { if (f !== void 0 && typeof f !== "function") throw new TypeError("Function expected"); return f; }
    var kind = contextIn.kind, key = kind === "getter" ? "get" : kind === "setter" ? "set" : "value";
    var target = !descriptorIn && ctor ? contextIn["static"] ? ctor : ctor.prototype : null;
    var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});
    var _, done = false;
    for (var i = decorators.length - 1; i >= 0; i--) {
        var context = {};
        for (var p in contextIn) context[p] = p === "access" ? {} : contextIn[p];
        for (var p in contextIn.access) context.access[p] = contextIn.access[p];
        context.addInitializer = function (f) { if (done) throw new TypeError("Cannot add initializers after decoration has completed"); extraInitializers.push(accept(f || null)); };
        var result = (0, decorators[i])(kind === "accessor" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);
        if (kind === "accessor") {
            if (result === void 0) continue;
            if (result === null || typeof result !== "object") throw new TypeError("Object expected");
            if (_ = accept(result.get)) descriptor.get = _;
            if (_ = accept(result.set)) descriptor.set = _;
            if (_ = accept(result.init)) initializers.unshift(_);
        }
        else if (_ = accept(result)) {
            if (kind === "field") initializers.unshift(_);
            else descriptor[key] = _;
        }
    }
    if (target) Object.defineProperty(target, contextIn.name, descriptor);
    done = true;
};
var __runInitializers = (this && this.__runInitializers) || function (thisArg, initializers, value) {
    var useValue = arguments.length > 2;
    for (var i = 0; i < initializers.length; i++) {
        value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);
    }
    return useValue ? value : void 0;
};
var __setFunctionName = (this && this.__setFunctionName) || function (f, name, prefix) {
    if (typeof name === "symbol") name = name.description ? "[".concat(name.description, "]") : "";
    return Object.defineProperty(f, "name", { configurable: true, value: prefix ? "".concat(prefix, " ", name) : name });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.LoggingService = void 0;
var common_1 = require("@nestjs/common");
var request_1 = require("@server/helpers/request");
var LoggingService = function () {
    var _classDecorators = [(0, common_1.Injectable)()];
    var _classDescriptor;
    var _classExtraInitializers = [];
    var _classThis;
    var LoggingService = _classThis = /** @class */ (function () {
        function LoggingService_1(authenticationDomainFacade, loggerService) {
            this.authenticationDomainFacade = authenticationDomainFacade;
            this.loggerService = loggerService;
            this.logger = this.loggerService.create({ name: 'LoggingInterceptor' });
        }
        LoggingService_1.prototype.logOnStart = function (request) {
            var _a, _b, _c, _d, _e, _f;
            var path = request_1.RequestHelper.getPath(request);
            var method = request_1.RequestHelper.getMethod(request);
            var authenticationPayload = this.authenticationDomainFacade.getRequestPayload(request);
            var id = (_b = (_a = authenticationPayload === null || authenticationPayload === void 0 ? void 0 : authenticationPayload.user) === null || _a === void 0 ? void 0 : _a.id) !== null && _b !== void 0 ? _b : '???';
            var email = (_d = (_c = authenticationPayload === null || authenticationPayload === void 0 ? void 0 : authenticationPayload.user) === null || _c === void 0 ? void 0 : _c.email) !== null && _d !== void 0 ? _d : '???@???.com';
            var name = (_f = (_e = authenticationPayload === null || authenticationPayload === void 0 ? void 0 : authenticationPayload.user) === null || _e === void 0 ? void 0 : _e.name) !== null && _f !== void 0 ? _f : '???';
            var data = {
                path: path,
                authentication: authenticationPayload,
            };
            this.logger.log("[START] ".concat(name, " - ").concat(email, " - ").concat(id, " | ").concat(method, " ").concat(path), data);
        };
        LoggingService_1.prototype.logOnStop = function (request) {
            var _a, _b, _c, _d, _e, _f;
            var path = request_1.RequestHelper.getPath(request);
            var method = request_1.RequestHelper.getMethod(request);
            var authenticationPayload = this.authenticationDomainFacade.getRequestPayload(request);
            var id = (_b = (_a = authenticationPayload === null || authenticationPayload === void 0 ? void 0 : authenticationPayload.user) === null || _a === void 0 ? void 0 : _a.id) !== null && _b !== void 0 ? _b : '???';
            var email = (_d = (_c = authenticationPayload === null || authenticationPayload === void 0 ? void 0 : authenticationPayload.user) === null || _c === void 0 ? void 0 : _c.email) !== null && _d !== void 0 ? _d : '???@???.com';
            var name = (_f = (_e = authenticationPayload === null || authenticationPayload === void 0 ? void 0 : authenticationPayload.user) === null || _e === void 0 ? void 0 : _e.name) !== null && _f !== void 0 ? _f : '???';
            this.logger.log("[STOP] ".concat(name, " - ").concat(email, " - ").concat(id, " | ").concat(method, " ").concat(path));
        };
        return LoggingService_1;
    }());
    __setFunctionName(_classThis, "LoggingService");
    (function () {
        var _metadata = typeof Symbol === "function" && Symbol.metadata ? Object.create(null) : void 0;
        __esDecorate(null, _classDescriptor = { value: _classThis }, _classDecorators, { kind: "class", name: _classThis.name, metadata: _metadata }, null, _classExtraInitializers);
        LoggingService = _classThis = _classDescriptor.value;
        if (_metadata) Object.defineProperty(_classThis, Symbol.metadata, { enumerable: true, configurable: true, writable: true, value: _metadata });
        __runInitializers(_classThis, _classExtraInitializers);
    })();
    return LoggingService = _classThis;
}();
exports.LoggingService = LoggingService;


// C:\grua-booking-system-25\server\dist\core\accessControl\internal\accessControl.validator.js
"use strict";
var __esDecorate = (this && this.__esDecorate) || function (ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {
    function accept(f) { if (f !== void 0 && typeof f !== "function") throw new TypeError("Function expected"); return f; }
    var kind = contextIn.kind, key = kind === "getter" ? "get" : kind === "setter" ? "set" : "value";
    var target = !descriptorIn && ctor ? contextIn["static"] ? ctor : ctor.prototype : null;
    var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});
    var _, done = false;
    for (var i = decorators.length - 1; i >= 0; i--) {
        var context = {};
        for (var p in contextIn) context[p] = p === "access" ? {} : contextIn[p];
        for (var p in contextIn.access) context.access[p] = contextIn.access[p];
        context.addInitializer = function (f) { if (done) throw new TypeError("Cannot add initializers after decoration has completed"); extraInitializers.push(accept(f || null)); };
        var result = (0, decorators[i])(kind === "accessor" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);
        if (kind === "accessor") {
            if (result === void 0) continue;
            if (result === null || typeof result !== "object") throw new TypeError("Object expected");
            if (_ = accept(result.get)) descriptor.get = _;
            if (_ = accept(result.set)) descriptor.set = _;
            if (_ = accept(result.init)) initializers.unshift(_);
        }
        else if (_ = accept(result)) {
            if (kind === "field") initializers.unshift(_);
            else descriptor[key] = _;
        }
    }
    if (target) Object.defineProperty(target, contextIn.name, descriptor);
    done = true;
};
var __runInitializers = (this && this.__runInitializers) || function (thisArg, initializers, value) {
    var useValue = arguments.length > 2;
    for (var i = 0; i < initializers.length; i++) {
        value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);
    }
    return useValue ? value : void 0;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (g && (g = 0, op[0] && (_ = 0)), _) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __setFunctionName = (this && this.__setFunctionName) || function (f, name, prefix) {
    if (typeof name === "symbol") name = name.description ? "[".concat(name.description, "]") : "";
    return Object.defineProperty(f, "name", { configurable: true, value: prefix ? "".concat(prefix, " ", name) : name });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.AccessControlValidator = void 0;
var common_1 = require("@nestjs/common");
var AccessControlValidator = function () {
    var _classDecorators = [(0, common_1.Injectable)()];
    var _classDescriptor;
    var _classExtraInitializers = [];
    var _classThis;
    var AccessControlValidator = _classThis = /** @class */ (function () {
        function AccessControlValidator_1() {
        }
        AccessControlValidator_1.prototype.check = function (_a) {
            var userData = _a.userData, constraints = _a.constraints;
            return __awaiter(this, void 0, void 0, function () {
                var roles, _i, roles_1, role;
                return __generator(this, function (_b) {
                    roles = constraints.roles;
                    for (_i = 0, roles_1 = roles; _i < roles_1.length; _i++) {
                        role = roles_1[_i];
                        this.checkRole(userData, role);
                    }
                    return [2 /*return*/];
                });
            });
        };
        AccessControlValidator_1.prototype.checkRole = function (userData, role) {
            var isFound = userData.roles.includes(role);
            if (!isFound) {
                var user = userData.user, roles = userData.roles;
                throw new Error("User ".concat(user.email, " (").concat(user.id, ") has role(s) \"").concat(roles.join('", "'), "\" but is missing \"").concat(role, "\""));
            }
        };
        return AccessControlValidator_1;
    }());
    __setFunctionName(_classThis, "AccessControlValidator");
    (function () {
        var _metadata = typeof Symbol === "function" && Symbol.metadata ? Object.create(null) : void 0;
        __esDecorate(null, _classDescriptor = { value: _classThis }, _classDecorators, { kind: "class", name: _classThis.name, metadata: _metadata }, null, _classExtraInitializers);
        AccessControlValidator = _classThis = _classDescriptor.value;
        if (_metadata) Object.defineProperty(_classThis, Symbol.metadata, { enumerable: true, configurable: true, writable: true, value: _metadata });
        __runInitializers(_classThis, _classExtraInitializers);
    })();
    return AccessControlValidator = _classThis;
}();
exports.AccessControlValidator = AccessControlValidator;


// C:\grua-booking-system-25\server\dist\core\accessControl\accessControl.js
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.AccessControl = void 0;
require("reflect-metadata");
var accessControl_role_decorator_1 = require("./decorators/accessControl.role.decorator");
var AccessControl;
(function (AccessControl) {
    AccessControl.Roles = accessControl_role_decorator_1.AccessControlRoleDecorator.set;
    AccessControl.getRoles = accessControl_role_decorator_1.AccessControlRoleDecorator.get;
})(AccessControl || (exports.AccessControl = AccessControl = {}));


// C:\grua-booking-system-25\server\dist\core\accessControl\accessControl.module.js
"use strict";
var __esDecorate = (this && this.__esDecorate) || function (ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {
    function accept(f) { if (f !== void 0 && typeof f !== "function") throw new TypeError("Function expected"); return f; }
    var kind = contextIn.kind, key = kind === "getter" ? "get" : kind === "setter" ? "set" : "value";
    var target = !descriptorIn && ctor ? contextIn["static"] ? ctor : ctor.prototype : null;
    var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});
    var _, done = false;
    for (var i = decorators.length - 1; i >= 0; i--) {
        var context = {};
        for (var p in contextIn) context[p] = p === "access" ? {} : contextIn[p];
        for (var p in contextIn.access) context.access[p] = contextIn.access[p];
        context.addInitializer = function (f) { if (done) throw new TypeError("Cannot add initializers after decoration has completed"); extraInitializers.push(accept(f || null)); };
        var result = (0, decorators[i])(kind === "accessor" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);
        if (kind === "accessor") {
            if (result === void 0) continue;
            if (result === null || typeof result !== "object") throw new TypeError("Object expected");
            if (_ = accept(result.get)) descriptor.get = _;
            if (_ = accept(result.set)) descriptor.set = _;
            if (_ = accept(result.init)) initializers.unshift(_);
        }
        else if (_ = accept(result)) {
            if (kind === "field") initializers.unshift(_);
            else descriptor[key] = _;
        }
    }
    if (target) Object.defineProperty(target, contextIn.name, descriptor);
    done = true;
};
var __runInitializers = (this && this.__runInitializers) || function (thisArg, initializers, value) {
    var useValue = arguments.length > 2;
    for (var i = 0; i < initializers.length; i++) {
        value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);
    }
    return useValue ? value : void 0;
};
var __setFunctionName = (this && this.__setFunctionName) || function (f, name, prefix) {
    if (typeof name === "symbol") name = name.description ? "[".concat(name.description, "]") : "";
    return Object.defineProperty(f, "name", { configurable: true, value: prefix ? "".concat(prefix, " ", name) : name });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.AccessControlModule = void 0;
var common_1 = require("@nestjs/common");
var core_1 = require("@nestjs/core");
var accessControl_1 = require("@server/modules/authorization/accessControl");
var accessControl_guard_1 = require("./guards/accessControl.guard");
var accessControl_service_1 = require("./internal/accessControl.service");
var accessControl_validator_1 = require("./internal/accessControl.validator");
var AccessControlModule = function () {
    var _classDecorators = [(0, common_1.Global)(), (0, common_1.Module)({
            imports: [accessControl_1.AuthorizationAccessControlModule],
            providers: [accessControl_service_1.AccessControlService, accessControl_validator_1.AccessControlValidator],
            exports: [accessControl_service_1.AccessControlService],
        })];
    var _classDescriptor;
    var _classExtraInitializers = [];
    var _classThis;
    var AccessControlModule = _classThis = /** @class */ (function () {
        function AccessControlModule_1() {
        }
        AccessControlModule_1.getGuards = function () {
            return [{ provide: core_1.APP_GUARD, useClass: accessControl_guard_1.AccessControlGuard }];
        };
        return AccessControlModule_1;
    }());
    __setFunctionName(_classThis, "AccessControlModule");
    (function () {
        var _metadata = typeof Symbol === "function" && Symbol.metadata ? Object.create(null) : void 0;
        __esDecorate(null, _classDescriptor = { value: _classThis }, _classDecorators, { kind: "class", name: _classThis.name, metadata: _metadata }, null, _classExtraInitializers);
        AccessControlModule = _classThis = _classDescriptor.value;
        if (_metadata) Object.defineProperty(_classThis, Symbol.metadata, { enumerable: true, configurable: true, writable: true, value: _metadata });
        __runInitializers(_classThis, _classExtraInitializers);
    })();
    return AccessControlModule = _classThis;
}();
exports.AccessControlModule = AccessControlModule;


// C:\grua-booking-system-25\server\dist\core\accessControl\index.js
"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", { value: true });
__exportStar(require("./accessControl"), exports);
__exportStar(require("./accessControl.module"), exports);
__exportStar(require("./internal/accessControl.provider"), exports);


// C:\grua-booking-system-25\server\dist\core\accessControl\decorators\accessControl.role.decorator.js
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.AccessControlRoleDecorator = void 0;
var common_1 = require("@nestjs/common");
var AccessControlRoleDecorator;
(function (AccessControlRoleDecorator) {
    var KEY = 'access-control.roles';
    AccessControlRoleDecorator.set = function () {
        var names = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            names[_i] = arguments[_i];
        }
        return (0, common_1.SetMetadata)(KEY, names);
    };
    function get(context, reflector) {
        var _a;
        return ((_a = reflector.getAllAndOverride(KEY, [
            context.getHandler(),
            context.getClass(),
        ])) !== null && _a !== void 0 ? _a : []);
    }
    AccessControlRoleDecorator.get = get;
})(AccessControlRoleDecorator || (exports.AccessControlRoleDecorator = AccessControlRoleDecorator = {}));


// C:\grua-booking-system-25\server\dist\core\accessControl\domain\role\accessControl.role.js
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });


// C:\grua-booking-system-25\server\dist\core\accessControl\domain\role\accessControl.role.manager.js
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.AccessControlRoleManager = void 0;
var AccessControlRoleManager;
(function (AccessControlRoleManager) {
    function isStatusFound(status) {
        return status === 'found';
    }
    AccessControlRoleManager.isStatusFound = isStatusFound;
    function isStatusNotFound(status) {
        return status === 'not-found';
    }
    AccessControlRoleManager.isStatusNotFound = isStatusNotFound;
    function isStatusUnknown(status) {
        return status === 'unknown';
    }
    AccessControlRoleManager.isStatusUnknown = isStatusUnknown;
})(AccessControlRoleManager || (exports.AccessControlRoleManager = AccessControlRoleManager = {}));


// C:\grua-booking-system-25\server\dist\core\accessControl\domain\role\index.js
"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", { value: true });
__exportStar(require("./accessControl.role"), exports);
__exportStar(require("./accessControl.role.manager"), exports);


// C:\grua-booking-system-25\server\dist\core\accessControl\domain\role\accessControl.role.js
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });


// C:\grua-booking-system-25\server\dist\core\accessControl\domain\role\accessControl.role.manager.js
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.AccessControlRoleManager = void 0;
var AccessControlRoleManager;
(function (AccessControlRoleManager) {
    function isStatusFound(status) {
        return status === 'found';
    }
    AccessControlRoleManager.isStatusFound = isStatusFound;
    function isStatusNotFound(status) {
        return status === 'not-found';
    }
    AccessControlRoleManager.isStatusNotFound = isStatusNotFound;
    function isStatusUnknown(status) {
        return status === 'unknown';
    }
    AccessControlRoleManager.isStatusUnknown = isStatusUnknown;
})(AccessControlRoleManager || (exports.AccessControlRoleManager = AccessControlRoleManager = {}));


// C:\grua-booking-system-25\server\dist\core\accessControl\domain\role\index.js
"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", { value: true });
__exportStar(require("./accessControl.role"), exports);
__exportStar(require("./accessControl.role.manager"), exports);


// C:\grua-booking-system-25\server\dist\core\accessControl\guards\accessControl.guard.js
"use strict";
var __esDecorate = (this && this.__esDecorate) || function (ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {
    function accept(f) { if (f !== void 0 && typeof f !== "function") throw new TypeError("Function expected"); return f; }
    var kind = contextIn.kind, key = kind === "getter" ? "get" : kind === "setter" ? "set" : "value";
    var target = !descriptorIn && ctor ? contextIn["static"] ? ctor : ctor.prototype : null;
    var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});
    var _, done = false;
    for (var i = decorators.length - 1; i >= 0; i--) {
        var context = {};
        for (var p in contextIn) context[p] = p === "access" ? {} : contextIn[p];
        for (var p in contextIn.access) context.access[p] = contextIn.access[p];
        context.addInitializer = function (f) { if (done) throw new TypeError("Cannot add initializers after decoration has completed"); extraInitializers.push(accept(f || null)); };
        var result = (0, decorators[i])(kind === "accessor" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);
        if (kind === "accessor") {
            if (result === void 0) continue;
            if (result === null || typeof result !== "object") throw new TypeError("Object expected");
            if (_ = accept(result.get)) descriptor.get = _;
            if (_ = accept(result.set)) descriptor.set = _;
            if (_ = accept(result.init)) initializers.unshift(_);
        }
        else if (_ = accept(result)) {
            if (kind === "field") initializers.unshift(_);
            else descriptor[key] = _;
        }
    }
    if (target) Object.defineProperty(target, contextIn.name, descriptor);
    done = true;
};
var __runInitializers = (this && this.__runInitializers) || function (thisArg, initializers, value) {
    var useValue = arguments.length > 2;
    for (var i = 0; i < initializers.length; i++) {
        value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);
    }
    return useValue ? value : void 0;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (g && (g = 0, op[0] && (_ = 0)), _) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __setFunctionName = (this && this.__setFunctionName) || function (f, name, prefix) {
    if (typeof name === "symbol") name = name.description ? "[".concat(name.description, "]") : "";
    return Object.defineProperty(f, "name", { configurable: true, value: prefix ? "".concat(prefix, " ", name) : name });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.AccessControlGuard = void 0;
var common_1 = require("@nestjs/common");
var AccessControlGuard = function () {
    var _classDecorators = [(0, common_1.Injectable)()];
    var _classDescriptor;
    var _classExtraInitializers = [];
    var _classThis;
    var AccessControlGuard = _classThis = /** @class */ (function () {
        function AccessControlGuard_1(reflector, service) {
            this.reflector = reflector;
            this.service = service;
        }
        AccessControlGuard_1.prototype.canActivate = function (context) {
            return __awaiter(this, void 0, void 0, function () {
                return __generator(this, function (_a) {
                    return [2 /*return*/, this.service.run(this.reflector, context)];
                });
            });
        };
        return AccessControlGuard_1;
    }());
    __setFunctionName(_classThis, "AccessControlGuard");
    (function () {
        var _metadata = typeof Symbol === "function" && Symbol.metadata ? Object.create(null) : void 0;
        __esDecorate(null, _classDescriptor = { value: _classThis }, _classDecorators, { kind: "class", name: _classThis.name, metadata: _metadata }, null, _classExtraInitializers);
        AccessControlGuard = _classThis = _classDescriptor.value;
        if (_metadata) Object.defineProperty(_classThis, Symbol.metadata, { enumerable: true, configurable: true, writable: true, value: _metadata });
        __runInitializers(_classThis, _classExtraInitializers);
    })();
    return AccessControlGuard = _classThis;
}();
exports.AccessControlGuard = AccessControlGuard;


// C:\grua-booking-system-25\server\dist\core\accessControl\internal\accessControl.provider.js
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });


// C:\grua-booking-system-25\server\dist\core\accessControl\internal\accessControl.service.js
"use strict";
var __esDecorate = (this && this.__esDecorate) || function (ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {
    function accept(f) { if (f !== void 0 && typeof f !== "function") throw new TypeError("Function expected"); return f; }
    var kind = contextIn.kind, key = kind === "getter" ? "get" : kind === "setter" ? "set" : "value";
    var target = !descriptorIn && ctor ? contextIn["static"] ? ctor : ctor.prototype : null;
    var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});
    var _, done = false;
    for (var i = decorators.length - 1; i >= 0; i--) {
        var context = {};
        for (var p in contextIn) context[p] = p === "access" ? {} : contextIn[p];
        for (var p in contextIn.access) context.access[p] = contextIn.access[p];
        context.addInitializer = function (f) { if (done) throw new TypeError("Cannot add initializers after decoration has completed"); extraInitializers.push(accept(f || null)); };
        var result = (0, decorators[i])(kind === "accessor" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);
        if (kind === "accessor") {
            if (result === void 0) continue;
            if (result === null || typeof result !== "object") throw new TypeError("Object expected");
            if (_ = accept(result.get)) descriptor.get = _;
            if (_ = accept(result.set)) descriptor.set = _;
            if (_ = accept(result.init)) initializers.unshift(_);
        }
        else if (_ = accept(result)) {
            if (kind === "field") initializers.unshift(_);
            else descriptor[key] = _;
        }
    }
    if (target) Object.defineProperty(target, contextIn.name, descriptor);
    done = true;
};
var __runInitializers = (this && this.__runInitializers) || function (thisArg, initializers, value) {
    var useValue = arguments.length > 2;
    for (var i = 0; i < initializers.length; i++) {
        value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);
    }
    return useValue ? value : void 0;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (g && (g = 0, op[0] && (_ = 0)), _) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __setFunctionName = (this && this.__setFunctionName) || function (f, name, prefix) {
    if (typeof name === "symbol") name = name.description ? "[".concat(name.description, "]") : "";
    return Object.defineProperty(f, "name", { configurable: true, value: prefix ? "".concat(prefix, " ", name) : name });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.AccessControlService = void 0;
var common_1 = require("@nestjs/common");
var context_1 = require("@server/helpers/context");
var utility_1 = require("@server/helpers/utility");
var accessControl_role_decorator_1 = require("../decorators/accessControl.role.decorator");
var AccessControlService = function () {
    var _classDecorators = [(0, common_1.Injectable)()];
    var _classDescriptor;
    var _classExtraInitializers = [];
    var _classThis;
    var AccessControlService = _classThis = /** @class */ (function () {
        function AccessControlService_1(authorizationAccessControlService, validator) {
            this.authorizationAccessControlService = authorizationAccessControlService;
            this.validator = validator;
        }
        AccessControlService_1.prototype.run = function (reflector, context) {
            return __awaiter(this, void 0, void 0, function () {
                var request, constraints, canSkip, userData;
                var _this = this;
                return __generator(this, function (_a) {
                    switch (_a.label) {
                        case 0:
                            request = context_1.ContextHelper.toRequest(context);
                            constraints = this.getConstraints(reflector, context);
                            canSkip = utility_1.Utility.isEmpty(constraints.roles);
                            if (canSkip) {
                                return [2 /*return*/, true];
                            }
                            return [4 /*yield*/, this.authorizationAccessControlService.findUserData(request)];
                        case 1:
                            userData = _a.sent();
                            return [4 /*yield*/, this.validator
                                    .check({
                                    userData: userData,
                                    constraints: constraints,
                                })
                                    .catch(function (error) {
                                    _this.authorizationAccessControlService.onError(error);
                                })];
                        case 2:
                            _a.sent();
                            return [2 /*return*/, true];
                    }
                });
            });
        };
        AccessControlService_1.prototype.getConstraints = function (reflector, context) {
            var roles = accessControl_role_decorator_1.AccessControlRoleDecorator.get(context, reflector);
            return {
                roles: roles,
            };
        };
        return AccessControlService_1;
    }());
    __setFunctionName(_classThis, "AccessControlService");
    (function () {
        var _metadata = typeof Symbol === "function" && Symbol.metadata ? Object.create(null) : void 0;
        __esDecorate(null, _classDescriptor = { value: _classThis }, _classDecorators, { kind: "class", name: _classThis.name, metadata: _metadata }, null, _classExtraInitializers);
        AccessControlService = _classThis = _classDescriptor.value;
        if (_metadata) Object.defineProperty(_classThis, Symbol.metadata, { enumerable: true, configurable: true, writable: true, value: _metadata });
        __runInitializers(_classThis, _classExtraInitializers);
    })();
    return AccessControlService = _classThis;
}();
exports.AccessControlService = AccessControlService;


// C:\grua-booking-system-25\server\dist\core\accessControl\internal\accessControl.type.js
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });


// C:\grua-booking-system-25\server\dist\core\accessControl\internal\accessControl.validator.js
"use strict";
var __esDecorate = (this && this.__esDecorate) || function (ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {
    function accept(f) { if (f !== void 0 && typeof f !== "function") throw new TypeError("Function expected"); return f; }
    var kind = contextIn.kind, key = kind === "getter" ? "get" : kind === "setter" ? "set" : "value";
    var target = !descriptorIn && ctor ? contextIn["static"] ? ctor : ctor.prototype : null;
    var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});
    var _, done = false;
    for (var i = decorators.length - 1; i >= 0; i--) {
        var context = {};
        for (var p in contextIn) context[p] = p === "access" ? {} : contextIn[p];
        for (var p in contextIn.access) context.access[p] = contextIn.access[p];
        context.addInitializer = function (f) { if (done) throw new TypeError("Cannot add initializers after decoration has completed"); extraInitializers.push(accept(f || null)); };
        var result = (0, decorators[i])(kind === "accessor" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);
        if (kind === "accessor") {
            if (result === void 0) continue;
            if (result === null || typeof result !== "object") throw new TypeError("Object expected");
            if (_ = accept(result.get)) descriptor.get = _;
            if (_ = accept(result.set)) descriptor.set = _;
            if (_ = accept(result.init)) initializers.unshift(_);
        }
        else if (_ = accept(result)) {
            if (kind === "field") initializers.unshift(_);
            else descriptor[key] = _;
        }
    }
    if (target) Object.defineProperty(target, contextIn.name, descriptor);
    done = true;
};
var __runInitializers = (this && this.__runInitializers) || function (thisArg, initializers, value) {
    var useValue = arguments.length > 2;
    for (var i = 0; i < initializers.length; i++) {
        value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);
    }
    return useValue ? value : void 0;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (g && (g = 0, op[0] && (_ = 0)), _) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __setFunctionName = (this && this.__setFunctionName) || function (f, name, prefix) {
    if (typeof name === "symbol") name = name.description ? "[".concat(name.description, "]") : "";
    return Object.defineProperty(f, "name", { configurable: true, value: prefix ? "".concat(prefix, " ", name) : name });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.AccessControlValidator = void 0;
var common_1 = require("@nestjs/common");
var AccessControlValidator = function () {
    var _classDecorators = [(0, common_1.Injectable)()];
    var _classDescriptor;
    var _classExtraInitializers = [];
    var _classThis;
    var AccessControlValidator = _classThis = /** @class */ (function () {
        function AccessControlValidator_1() {
        }
        AccessControlValidator_1.prototype.check = function (_a) {
            var userData = _a.userData, constraints = _a.constraints;
            return __awaiter(this, void 0, void 0, function () {
                var roles, _i, roles_1, role;
                return __generator(this, function (_b) {
                    roles = constraints.roles;
                    for (_i = 0, roles_1 = roles; _i < roles_1.length; _i++) {
                        role = roles_1[_i];
                        this.checkRole(userData, role);
                    }
                    return [2 /*return*/];
                });
            });
        };
        AccessControlValidator_1.prototype.checkRole = function (userData, role) {
            var isFound = userData.roles.includes(role);
            if (!isFound) {
                var user = userData.user, roles = userData.roles;
                throw new Error("User ".concat(user.email, " (").concat(user.id, ") has role(s) \"").concat(roles.join('", "'), "\" but is missing \"").concat(role, "\""));
            }
        };
        return AccessControlValidator_1;
    }());
    __setFunctionName(_classThis, "AccessControlValidator");
    (function () {
        var _metadata = typeof Symbol === "function" && Symbol.metadata ? Object.create(null) : void 0;
        __esDecorate(null, _classDescriptor = { value: _classThis }, _classDecorators, { kind: "class", name: _classThis.name, metadata: _metadata }, null, _classExtraInitializers);
        AccessControlValidator = _classThis = _classDescriptor.value;
        if (_metadata) Object.defineProperty(_classThis, Symbol.metadata, { enumerable: true, configurable: true, writable: true, value: _metadata });
        __runInitializers(_classThis, _classExtraInitializers);
    })();
    return AccessControlValidator = _classThis;
}();
exports.AccessControlValidator = AccessControlValidator;


// C:\grua-booking-system-25\server\dist\core\authentication\authentication.decorator.js
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Authentication = void 0;
var common_1 = require("@nestjs/common");
require("reflect-metadata");
var Authentication;
(function (Authentication) {
    var KEY_PUBLIC = 'authentication.public';
    var KEY_USER_NOT_VERIFIED_ALLOWED = 'authentication.user-not-verified.allowed';
    var KEY_USER_VISITOR_ALLOWED = 'authentication.user-visitor.allowed';
    Authentication.AllowUserNotVerified = function (isAllowed) {
        if (isAllowed === void 0) { isAllowed = true; }
        return (0, common_1.SetMetadata)(KEY_USER_NOT_VERIFIED_ALLOWED, isAllowed);
    };
    function isUserNotVerifiedAllowed(context, reflector) {
        var _a;
        var DEFAULT_VALUE = false;
        return ((_a = getValue(context, reflector, KEY_USER_NOT_VERIFIED_ALLOWED)) !== null && _a !== void 0 ? _a : DEFAULT_VALUE);
    }
    Authentication.isUserNotVerifiedAllowed = isUserNotVerifiedAllowed;
    Authentication.Public = function () { return (0, common_1.SetMetadata)(KEY_PUBLIC, true); };
    function isPublic(context, reflector) {
        return getValue(context, reflector, KEY_PUBLIC);
    }
    Authentication.isPublic = isPublic;
    Authentication.AllowVisitor = function (isAllowed) {
        if (isAllowed === void 0) { isAllowed = true; }
        return (0, common_1.SetMetadata)(KEY_USER_VISITOR_ALLOWED, isAllowed);
    };
    function isVisitorAllowed(context, reflector) {
        var _a;
        var DEFAULT_VALUE = true;
        return ((_a = getValue(context, reflector, KEY_USER_VISITOR_ALLOWED)) !== null && _a !== void 0 ? _a : DEFAULT_VALUE);
    }
    Authentication.isVisitorAllowed = isVisitorAllowed;
    function getValue(context, reflector, key) {
        return reflector.getAllAndOverride(key, [
            context.getHandler(),
            context.getClass(),
        ]);
    }
})(Authentication || (exports.Authentication = Authentication = {}));


// C:\grua-booking-system-25\server\dist\core\authentication\index.js
"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", { value: true });
__exportStar(require("./authentication.decorator"), exports);


// C:\grua-booking-system-25\server\dist\core\configuration\configuration.module.js
"use strict";
var __esDecorate = (this && this.__esDecorate) || function (ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {
    function accept(f) { if (f !== void 0 && typeof f !== "function") throw new TypeError("Function expected"); return f; }
    var kind = contextIn.kind, key = kind === "getter" ? "get" : kind === "setter" ? "set" : "value";
    var target = !descriptorIn && ctor ? contextIn["static"] ? ctor : ctor.prototype : null;
    var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});
    var _, done = false;
    for (var i = decorators.length - 1; i >= 0; i--) {
        var context = {};
        for (var p in contextIn) context[p] = p === "access" ? {} : contextIn[p];
        for (var p in contextIn.access) context.access[p] = contextIn.access[p];
        context.addInitializer = function (f) { if (done) throw new TypeError("Cannot add initializers after decoration has completed"); extraInitializers.push(accept(f || null)); };
        var result = (0, decorators[i])(kind === "accessor" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);
        if (kind === "accessor") {
            if (result === void 0) continue;
            if (result === null || typeof result !== "object") throw new TypeError("Object expected");
            if (_ = accept(result.get)) descriptor.get = _;
            if (_ = accept(result.set)) descriptor.set = _;
            if (_ = accept(result.init)) initializers.unshift(_);
        }
        else if (_ = accept(result)) {
            if (kind === "field") initializers.unshift(_);
            else descriptor[key] = _;
        }
    }
    if (target) Object.defineProperty(target, contextIn.name, descriptor);
    done = true;
};
var __runInitializers = (this && this.__runInitializers) || function (thisArg, initializers, value) {
    var useValue = arguments.length > 2;
    for (var i = 0; i < initializers.length; i++) {
        value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);
    }
    return useValue ? value : void 0;
};
var __setFunctionName = (this && this.__setFunctionName) || function (f, name, prefix) {
    if (typeof name === "symbol") name = name.description ? "[".concat(name.description, "]") : "";
    return Object.defineProperty(f, "name", { configurable: true, value: prefix ? "".concat(prefix, " ", name) : name });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.ConfigurationModule = void 0;
var common_1 = require("@nestjs/common");
var config_1 = require("@nestjs/config");
var configuration_service_1 = require("./configuration.service");
var ConfigurationModule = function () {
    var _classDecorators = [(0, common_1.Global)(), (0, common_1.Module)({
            imports: [config_1.ConfigModule.forRoot()],
            providers: [configuration_service_1.ConfigurationService],
            exports: [configuration_service_1.ConfigurationService],
        })];
    var _classDescriptor;
    var _classExtraInitializers = [];
    var _classThis;
    var ConfigurationModule = _classThis = /** @class */ (function () {
        function ConfigurationModule_1() {
        }
        return ConfigurationModule_1;
    }());
    __setFunctionName(_classThis, "ConfigurationModule");
    (function () {
        var _metadata = typeof Symbol === "function" && Symbol.metadata ? Object.create(null) : void 0;
        __esDecorate(null, _classDescriptor = { value: _classThis }, _classDecorators, { kind: "class", name: _classThis.name, metadata: _metadata }, null, _classExtraInitializers);
        ConfigurationModule = _classThis = _classDescriptor.value;
        if (_metadata) Object.defineProperty(_classThis, Symbol.metadata, { enumerable: true, configurable: true, writable: true, value: _metadata });
        __runInitializers(_classThis, _classExtraInitializers);
    })();
    return ConfigurationModule = _classThis;
}();
exports.ConfigurationModule = ConfigurationModule;


// C:\grua-booking-system-25\server\dist\core\configuration\configuration.service.js
"use strict";
var __esDecorate = (this && this.__esDecorate) || function (ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {
    function accept(f) { if (f !== void 0 && typeof f !== "function") throw new TypeError("Function expected"); return f; }
    var kind = contextIn.kind, key = kind === "getter" ? "get" : kind === "setter" ? "set" : "value";
    var target = !descriptorIn && ctor ? contextIn["static"] ? ctor : ctor.prototype : null;
    var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});
    var _, done = false;
    for (var i = decorators.length - 1; i >= 0; i--) {
        var context = {};
        for (var p in contextIn) context[p] = p === "access" ? {} : contextIn[p];
        for (var p in contextIn.access) context.access[p] = contextIn.access[p];
        context.addInitializer = function (f) { if (done) throw new TypeError("Cannot add initializers after decoration has completed"); extraInitializers.push(accept(f || null)); };
        var result = (0, decorators[i])(kind === "accessor" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);
        if (kind === "accessor") {
            if (result === void 0) continue;
            if (result === null || typeof result !== "object") throw new TypeError("Object expected");
            if (_ = accept(result.get)) descriptor.get = _;
            if (_ = accept(result.set)) descriptor.set = _;
            if (_ = accept(result.init)) initializers.unshift(_);
        }
        else if (_ = accept(result)) {
            if (kind === "field") initializers.unshift(_);
            else descriptor[key] = _;
        }
    }
    if (target) Object.defineProperty(target, contextIn.name, descriptor);
    done = true;
};
var __runInitializers = (this && this.__runInitializers) || function (thisArg, initializers, value) {
    var useValue = arguments.length > 2;
    for (var i = 0; i < initializers.length; i++) {
        value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);
    }
    return useValue ? value : void 0;
};
var __setFunctionName = (this && this.__setFunctionName) || function (f, name, prefix) {
    if (typeof name === "symbol") name = name.description ? "[".concat(name.description, "]") : "";
    return Object.defineProperty(f, "name", { configurable: true, value: prefix ? "".concat(prefix, " ", name) : name });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.ConfigurationService = void 0;
var common_1 = require("@nestjs/common");
var utility_1 = require("@server/helpers/utility");
var configuration_service_object_1 = require("./configuration.service.object");
var ConfigurationService = function () {
    var _classDecorators = [(0, common_1.Injectable)()];
    var _classDescriptor;
    var _classExtraInitializers = [];
    var _classThis;
    var ConfigurationService = _classThis = /** @class */ (function () {
        function ConfigurationService_1(manager) {
            this.manager = manager;
        }
        ConfigurationService_1.prototype.get = function (key, valueDefault) {
            var value = this.manager.get(key);
            if (!utility_1.Utility.isDefined(value)) {
                value = valueDefault;
            }
            return value;
        };
        ConfigurationService_1.prototype.getPort = function () {
            var value = this.manager.get(configuration_service_object_1.ConfigurationServiceObject.Key.PORT);
            if (!utility_1.Utility.isDefined(value)) {
                value = 3099;
            }
            return value;
        };
        ConfigurationService_1.prototype.getNumber = function (key, valueDefault) {
            var value = this.manager.get(key);
            if (!utility_1.Utility.isDefined(value)) {
                value = valueDefault;
            }
            return value;
        };
        ConfigurationService_1.prototype.getBoolean = function (key, valueDefault) {
            var value = this.manager.get(key);
            if (!utility_1.Utility.isDefined(value)) {
                value = valueDefault;
            }
            return value;
        };
        ConfigurationService_1.prototype.getEnvironment = function () {
            var value = this.get(configuration_service_object_1.ConfigurationServiceObject.Key.ENVIRONMENT, configuration_service_object_1.ConfigurationServiceObject.Environment.DEVELOPMENT);
            return value;
        };
        ConfigurationService_1.prototype.getAuthenticationTokenMethod = function () {
            var value = this.manager.get(configuration_service_object_1.ConfigurationServiceObject.Key.AUTHENTICATION_TOKEN_METHOD, configuration_service_object_1.ConfigurationServiceObject.AuthenticationTokenMethod.COOKIES);
            return value;
        };
        ConfigurationService_1.prototype.getClientBaseUrl = function () {
            var value = this.manager.get(configuration_service_object_1.ConfigurationServiceObject.Key.CLIENT_BASE_URL);
            var valueClean = utility_1.Utility.removeTrailingSlash(value);
            return valueClean;
        };
        ConfigurationService_1.prototype.getBaseUrl = function () {
            var port = this.getPort();
            var value = this.manager.get(configuration_service_object_1.ConfigurationServiceObject.Key.BASE_URL);
            if (!utility_1.Utility.isDefined(value)) {
                value = "http://localhost:".concat(port);
            }
            var valueClean = utility_1.Utility.removeTrailingSlash(value);
            return valueClean;
        };
        ConfigurationService_1.prototype.isEnvironmentDevelopment = function () {
            return (this.getEnvironment() ===
                configuration_service_object_1.ConfigurationServiceObject.Environment.DEVELOPMENT);
        };
        ConfigurationService_1.prototype.isEnvironmentProduction = function () {
            return (this.getEnvironment() ===
                configuration_service_object_1.ConfigurationServiceObject.Environment.PRODUCTION);
        };
        return ConfigurationService_1;
    }());
    __setFunctionName(_classThis, "ConfigurationService");
    (function () {
        var _metadata = typeof Symbol === "function" && Symbol.metadata ? Object.create(null) : void 0;
        __esDecorate(null, _classDescriptor = { value: _classThis }, _classDecorators, { kind: "class", name: _classThis.name, metadata: _metadata }, null, _classExtraInitializers);
        ConfigurationService = _classThis = _classDescriptor.value;
        if (_metadata) Object.defineProperty(_classThis, Symbol.metadata, { enumerable: true, configurable: true, writable: true, value: _metadata });
        __runInitializers(_classThis, _classExtraInitializers);
    })();
    return ConfigurationService = _classThis;
}();
exports.ConfigurationService = ConfigurationService;


// C:\grua-booking-system-25\server\dist\core\configuration\configuration.service.object.js
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ConfigurationServiceObject = void 0;
var ConfigurationServiceObject;
(function (ConfigurationServiceObject) {
    var Key;
    (function (Key) {
        Key["PORT"] = "PORT";
        Key["ENVIRONMENT"] = "NODE_ENV";
        Key["CLIENT_BASE_URL"] = "SERVER_CLIENT_BASE_URL";
        Key["BASE_URL"] = "SERVER_BASE_URL";
        Key["AUTHENTICATION_TOKEN_METHOD"] = "SERVER_AUTHENTICATION_TOKEN_METHOD";
    })(Key = ConfigurationServiceObject.Key || (ConfigurationServiceObject.Key = {}));
    var Environment;
    (function (Environment) {
        Environment["DEVELOPMENT"] = "development";
        Environment["PRODUCTION"] = "production";
    })(Environment = ConfigurationServiceObject.Environment || (ConfigurationServiceObject.Environment = {}));
    var AuthenticationTokenMethod;
    (function (AuthenticationTokenMethod) {
        AuthenticationTokenMethod["COOKIES"] = "cookies";
        AuthenticationTokenMethod["HEADER"] = "header";
    })(AuthenticationTokenMethod = ConfigurationServiceObject.AuthenticationTokenMethod || (ConfigurationServiceObject.AuthenticationTokenMethod = {}));
})(ConfigurationServiceObject || (exports.ConfigurationServiceObject = ConfigurationServiceObject = {}));


// C:\grua-booking-system-25\server\dist\core\configuration\index.js
"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", { value: true });
__exportStar(require("./configuration.module"), exports);
__exportStar(require("./configuration.service"), exports);
__exportStar(require("./configuration.service.object"), exports);


// C:\grua-booking-system-25\server\dist\core\cookie\cookie.module.js
"use strict";
var __esDecorate = (this && this.__esDecorate) || function (ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {
    function accept(f) { if (f !== void 0 && typeof f !== "function") throw new TypeError("Function expected"); return f; }
    var kind = contextIn.kind, key = kind === "getter" ? "get" : kind === "setter" ? "set" : "value";
    var target = !descriptorIn && ctor ? contextIn["static"] ? ctor : ctor.prototype : null;
    var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});
    var _, done = false;
    for (var i = decorators.length - 1; i >= 0; i--) {
        var context = {};
        for (var p in contextIn) context[p] = p === "access" ? {} : contextIn[p];
        for (var p in contextIn.access) context.access[p] = contextIn.access[p];
        context.addInitializer = function (f) { if (done) throw new TypeError("Cannot add initializers after decoration has completed"); extraInitializers.push(accept(f || null)); };
        var result = (0, decorators[i])(kind === "accessor" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);
        if (kind === "accessor") {
            if (result === void 0) continue;
            if (result === null || typeof result !== "object") throw new TypeError("Object expected");
            if (_ = accept(result.get)) descriptor.get = _;
            if (_ = accept(result.set)) descriptor.set = _;
            if (_ = accept(result.init)) initializers.unshift(_);
        }
        else if (_ = accept(result)) {
            if (kind === "field") initializers.unshift(_);
            else descriptor[key] = _;
        }
    }
    if (target) Object.defineProperty(target, contextIn.name, descriptor);
    done = true;
};
var __runInitializers = (this && this.__runInitializers) || function (thisArg, initializers, value) {
    var useValue = arguments.length > 2;
    for (var i = 0; i < initializers.length; i++) {
        value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);
    }
    return useValue ? value : void 0;
};
var __setFunctionName = (this && this.__setFunctionName) || function (f, name, prefix) {
    if (typeof name === "symbol") name = name.description ? "[".concat(name.description, "]") : "";
    return Object.defineProperty(f, "name", { configurable: true, value: prefix ? "".concat(prefix, " ", name) : name });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.CookieModule = void 0;
var common_1 = require("@nestjs/common");
var cookie_service_1 = require("./cookie.service");
var CookieModule = function () {
    var _classDecorators = [(0, common_1.Global)(), (0, common_1.Module)({
            imports: [],
            providers: [cookie_service_1.CookieService],
            exports: [cookie_service_1.CookieService],
        })];
    var _classDescriptor;
    var _classExtraInitializers = [];
    var _classThis;
    var CookieModule = _classThis = /** @class */ (function () {
        function CookieModule_1() {
        }
        return CookieModule_1;
    }());
    __setFunctionName(_classThis, "CookieModule");
    (function () {
        var _metadata = typeof Symbol === "function" && Symbol.metadata ? Object.create(null) : void 0;
        __esDecorate(null, _classDescriptor = { value: _classThis }, _classDecorators, { kind: "class", name: _classThis.name, metadata: _metadata }, null, _classExtraInitializers);
        CookieModule = _classThis = _classDescriptor.value;
        if (_metadata) Object.defineProperty(_classThis, Symbol.metadata, { enumerable: true, configurable: true, writable: true, value: _metadata });
        __runInitializers(_classThis, _classExtraInitializers);
    })();
    return CookieModule = _classThis;
}();
exports.CookieModule = CookieModule;


// C:\grua-booking-system-25\server\dist\core\cookie\cookie.service.js
"use strict";
var __esDecorate = (this && this.__esDecorate) || function (ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {
    function accept(f) { if (f !== void 0 && typeof f !== "function") throw new TypeError("Function expected"); return f; }
    var kind = contextIn.kind, key = kind === "getter" ? "get" : kind === "setter" ? "set" : "value";
    var target = !descriptorIn && ctor ? contextIn["static"] ? ctor : ctor.prototype : null;
    var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});
    var _, done = false;
    for (var i = decorators.length - 1; i >= 0; i--) {
        var context = {};
        for (var p in contextIn) context[p] = p === "access" ? {} : contextIn[p];
        for (var p in contextIn.access) context.access[p] = contextIn.access[p];
        context.addInitializer = function (f) { if (done) throw new TypeError("Cannot add initializers after decoration has completed"); extraInitializers.push(accept(f || null)); };
        var result = (0, decorators[i])(kind === "accessor" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);
        if (kind === "accessor") {
            if (result === void 0) continue;
            if (result === null || typeof result !== "object") throw new TypeError("Object expected");
            if (_ = accept(result.get)) descriptor.get = _;
            if (_ = accept(result.set)) descriptor.set = _;
            if (_ = accept(result.init)) initializers.unshift(_);
        }
        else if (_ = accept(result)) {
            if (kind === "field") initializers.unshift(_);
            else descriptor[key] = _;
        }
    }
    if (target) Object.defineProperty(target, contextIn.name, descriptor);
    done = true;
};
var __runInitializers = (this && this.__runInitializers) || function (thisArg, initializers, value) {
    var useValue = arguments.length > 2;
    for (var i = 0; i < initializers.length; i++) {
        value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);
    }
    return useValue ? value : void 0;
};
var __setFunctionName = (this && this.__setFunctionName) || function (f, name, prefix) {
    if (typeof name === "symbol") name = name.description ? "[".concat(name.description, "]") : "";
    return Object.defineProperty(f, "name", { configurable: true, value: prefix ? "".concat(prefix, " ", name) : name });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.CookieService = void 0;
var common_1 = require("@nestjs/common");
var configuration_1 = require("../configuration");
var Key;
(function (Key) {
    Key["ACCESS_TOKEN"] = "APP_ACCESS_TOKEN";
})(Key || (Key = {}));
var TIME_24_HOURS = 60 * 60 * 24 * 1000;
var CookieService = function () {
    var _classDecorators = [(0, common_1.Injectable)()];
    var _classDescriptor;
    var _classExtraInitializers = [];
    var _classThis;
    var CookieService = _classThis = /** @class */ (function () {
        function CookieService_1(configurationService) {
            this.configurationService = configurationService;
        }
        CookieService_1.prototype.getAccessToken = function (request) {
            return request.cookies[Key.ACCESS_TOKEN];
        };
        CookieService_1.prototype.setAccessToken = function (response, token) {
            var options = this.getOptions();
            response.cookie(Key.ACCESS_TOKEN, token, options);
        };
        CookieService_1.prototype.deleteAccessToken = function (response) {
            response.clearCookie(Key.ACCESS_TOKEN);
        };
        CookieService_1.prototype.getOptions = function () {
            var _a;
            var options = (_a = {},
                _a[configuration_1.ConfigurationServiceObject.Environment.DEVELOPMENT] = {
                    maxAge: TIME_24_HOURS,
                    secure: true,
                    httpOnly: false,
                    sameSite: 'lax',
                },
                _a[configuration_1.ConfigurationServiceObject.Environment.PRODUCTION] = {
                    maxAge: TIME_24_HOURS,
                    secure: true,
                    httpOnly: true,
                    sameSite: 'none',
                },
                _a);
            var environment = this.configurationService.getEnvironment();
            var valueDefault = options[configuration_1.ConfigurationServiceObject.Environment.DEVELOPMENT];
            var value = options[environment];
            return value !== null && value !== void 0 ? value : valueDefault;
        };
        return CookieService_1;
    }());
    __setFunctionName(_classThis, "CookieService");
    (function () {
        var _metadata = typeof Symbol === "function" && Symbol.metadata ? Object.create(null) : void 0;
        __esDecorate(null, _classDescriptor = { value: _classThis }, _classDecorators, { kind: "class", name: _classThis.name, metadata: _metadata }, null, _classExtraInitializers);
        CookieService = _classThis = _classDescriptor.value;
        if (_metadata) Object.defineProperty(_classThis, Symbol.metadata, { enumerable: true, configurable: true, writable: true, value: _metadata });
        __runInitializers(_classThis, _classExtraInitializers);
    })();
    return CookieService = _classThis;
}();
exports.CookieService = CookieService;


// C:\grua-booking-system-25\server\dist\core\cookie\index.js
"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", { value: true });
__exportStar(require("./cookie.module"), exports);
__exportStar(require("./cookie.service"), exports);


// C:\grua-booking-system-25\server\dist\core\cors\cors.module.js
"use strict";
var __esDecorate = (this && this.__esDecorate) || function (ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {
    function accept(f) { if (f !== void 0 && typeof f !== "function") throw new TypeError("Function expected"); return f; }
    var kind = contextIn.kind, key = kind === "getter" ? "get" : kind === "setter" ? "set" : "value";
    var target = !descriptorIn && ctor ? contextIn["static"] ? ctor : ctor.prototype : null;
    var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});
    var _, done = false;
    for (var i = decorators.length - 1; i >= 0; i--) {
        var context = {};
        for (var p in contextIn) context[p] = p === "access" ? {} : contextIn[p];
        for (var p in contextIn.access) context.access[p] = contextIn.access[p];
        context.addInitializer = function (f) { if (done) throw new TypeError("Cannot add initializers after decoration has completed"); extraInitializers.push(accept(f || null)); };
        var result = (0, decorators[i])(kind === "accessor" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);
        if (kind === "accessor") {
            if (result === void 0) continue;
            if (result === null || typeof result !== "object") throw new TypeError("Object expected");
            if (_ = accept(result.get)) descriptor.get = _;
            if (_ = accept(result.set)) descriptor.set = _;
            if (_ = accept(result.init)) initializers.unshift(_);
        }
        else if (_ = accept(result)) {
            if (kind === "field") initializers.unshift(_);
            else descriptor[key] = _;
        }
    }
    if (target) Object.defineProperty(target, contextIn.name, descriptor);
    done = true;
};
var __runInitializers = (this && this.__runInitializers) || function (thisArg, initializers, value) {
    var useValue = arguments.length > 2;
    for (var i = 0; i < initializers.length; i++) {
        value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);
    }
    return useValue ? value : void 0;
};
var __setFunctionName = (this && this.__setFunctionName) || function (f, name, prefix) {
    if (typeof name === "symbol") name = name.description ? "[".concat(name.description, "]") : "";
    return Object.defineProperty(f, "name", { configurable: true, value: prefix ? "".concat(prefix, " ", name) : name });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.CorsModule = void 0;
var common_1 = require("@nestjs/common");
var cors_service_1 = require("./cors.service");
var CorsModule = function () {
    var _classDecorators = [(0, common_1.Module)({
            imports: [],
            providers: [cors_service_1.CorsService],
            exports: [cors_service_1.CorsService],
        })];
    var _classDescriptor;
    var _classExtraInitializers = [];
    var _classThis;
    var CorsModule = _classThis = /** @class */ (function () {
        function CorsModule_1() {
        }
        return CorsModule_1;
    }());
    __setFunctionName(_classThis, "CorsModule");
    (function () {
        var _metadata = typeof Symbol === "function" && Symbol.metadata ? Object.create(null) : void 0;
        __esDecorate(null, _classDescriptor = { value: _classThis }, _classDecorators, { kind: "class", name: _classThis.name, metadata: _metadata }, null, _classExtraInitializers);
        CorsModule = _classThis = _classDescriptor.value;
        if (_metadata) Object.defineProperty(_classThis, Symbol.metadata, { enumerable: true, configurable: true, writable: true, value: _metadata });
        __runInitializers(_classThis, _classExtraInitializers);
    })();
    return CorsModule = _classThis;
}();
exports.CorsModule = CorsModule;


// C:\grua-booking-system-25\server\dist\core\cors\cors.service.js
"use strict";
var __esDecorate = (this && this.__esDecorate) || function (ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {
    function accept(f) { if (f !== void 0 && typeof f !== "function") throw new TypeError("Function expected"); return f; }
    var kind = contextIn.kind, key = kind === "getter" ? "get" : kind === "setter" ? "set" : "value";
    var target = !descriptorIn && ctor ? contextIn["static"] ? ctor : ctor.prototype : null;
    var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});
    var _, done = false;
    for (var i = decorators.length - 1; i >= 0; i--) {
        var context = {};
        for (var p in contextIn) context[p] = p === "access" ? {} : contextIn[p];
        for (var p in contextIn.access) context.access[p] = contextIn.access[p];
        context.addInitializer = function (f) { if (done) throw new TypeError("Cannot add initializers after decoration has completed"); extraInitializers.push(accept(f || null)); };
        var result = (0, decorators[i])(kind === "accessor" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);
        if (kind === "accessor") {
            if (result === void 0) continue;
            if (result === null || typeof result !== "object") throw new TypeError("Object expected");
            if (_ = accept(result.get)) descriptor.get = _;
            if (_ = accept(result.set)) descriptor.set = _;
            if (_ = accept(result.init)) initializers.unshift(_);
        }
        else if (_ = accept(result)) {
            if (kind === "field") initializers.unshift(_);
            else descriptor[key] = _;
        }
    }
    if (target) Object.defineProperty(target, contextIn.name, descriptor);
    done = true;
};
var __runInitializers = (this && this.__runInitializers) || function (thisArg, initializers, value) {
    var useValue = arguments.length > 2;
    for (var i = 0; i < initializers.length; i++) {
        value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);
    }
    return useValue ? value : void 0;
};
var __setFunctionName = (this && this.__setFunctionName) || function (f, name, prefix) {
    if (typeof name === "symbol") name = name.description ? "[".concat(name.description, "]") : "";
    return Object.defineProperty(f, "name", { configurable: true, value: prefix ? "".concat(prefix, " ", name) : name });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.CorsService = void 0;
var common_1 = require("@nestjs/common");
var configuration_1 = require("../configuration");
var CorsService = function () {
    var _classDecorators = [(0, common_1.Injectable)()];
    var _classDescriptor;
    var _classExtraInitializers = [];
    var _classThis;
    var CorsService = _classThis = /** @class */ (function () {
        function CorsService_1(configurationService) {
            this.configurationService = configurationService;
        }
        CorsService_1.prototype.getOptions = function () {
            var _a;
            var clientBaseUrl = this.configurationService.getClientBaseUrl();
            var options = (_a = {},
                _a[configuration_1.ConfigurationServiceObject.Environment.DEVELOPMENT] = {
                    origin: [clientBaseUrl],
                    credentials: true,
                },
                _a[configuration_1.ConfigurationServiceObject.Environment.PRODUCTION] = {
                    origin: clientBaseUrl,
                    credentials: true,
                },
                _a);
            var environment = this.configurationService.getEnvironment();
            var value = options[environment];
            var valueDefault = options[configuration_1.ConfigurationServiceObject.Environment.DEVELOPMENT];
            return value !== null && value !== void 0 ? value : valueDefault;
        };
        return CorsService_1;
    }());
    __setFunctionName(_classThis, "CorsService");
    (function () {
        var _metadata = typeof Symbol === "function" && Symbol.metadata ? Object.create(null) : void 0;
        __esDecorate(null, _classDescriptor = { value: _classThis }, _classDecorators, { kind: "class", name: _classThis.name, metadata: _metadata }, null, _classExtraInitializers);
        CorsService = _classThis = _classDescriptor.value;
        if (_metadata) Object.defineProperty(_classThis, Symbol.metadata, { enumerable: true, configurable: true, writable: true, value: _metadata });
        __runInitializers(_classThis, _classExtraInitializers);
    })();
    return CorsService = _classThis;
}();
exports.CorsService = CorsService;


// C:\grua-booking-system-25\server\dist\core\cors\index.js
"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", { value: true });
__exportStar(require("./cors.module"), exports);
__exportStar(require("./cors.service"), exports);


// C:\grua-booking-system-25\server\dist\core\database\configuration\database.configuration.module.js
"use strict";
var __esDecorate = (this && this.__esDecorate) || function (ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {
    function accept(f) { if (f !== void 0 && typeof f !== "function") throw new TypeError("Function expected"); return f; }
    var kind = contextIn.kind, key = kind === "getter" ? "get" : kind === "setter" ? "set" : "value";
    var target = !descriptorIn && ctor ? contextIn["static"] ? ctor : ctor.prototype : null;
    var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});
    var _, done = false;
    for (var i = decorators.length - 1; i >= 0; i--) {
        var context = {};
        for (var p in contextIn) context[p] = p === "access" ? {} : contextIn[p];
        for (var p in contextIn.access) context.access[p] = contextIn.access[p];
        context.addInitializer = function (f) { if (done) throw new TypeError("Cannot add initializers after decoration has completed"); extraInitializers.push(accept(f || null)); };
        var result = (0, decorators[i])(kind === "accessor" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);
        if (kind === "accessor") {
            if (result === void 0) continue;
            if (result === null || typeof result !== "object") throw new TypeError("Object expected");
            if (_ = accept(result.get)) descriptor.get = _;
            if (_ = accept(result.set)) descriptor.set = _;
            if (_ = accept(result.init)) initializers.unshift(_);
        }
        else if (_ = accept(result)) {
            if (kind === "field") initializers.unshift(_);
            else descriptor[key] = _;
        }
    }
    if (target) Object.defineProperty(target, contextIn.name, descriptor);
    done = true;
};
var __runInitializers = (this && this.__runInitializers) || function (thisArg, initializers, value) {
    var useValue = arguments.length > 2;
    for (var i = 0; i < initializers.length; i++) {
        value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);
    }
    return useValue ? value : void 0;
};
var __setFunctionName = (this && this.__setFunctionName) || function (f, name, prefix) {
    if (typeof name === "symbol") name = name.description ? "[".concat(name.description, "]") : "";
    return Object.defineProperty(f, "name", { configurable: true, value: prefix ? "".concat(prefix, " ", name) : name });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.DatabaseConfigurationModule = void 0;
var common_1 = require("@nestjs/common");
var database_configuration_service_1 = require("./database.configuration.service");
var DatabaseConfigurationModule = function () {
    var _classDecorators = [(0, common_1.Global)(), (0, common_1.Module)({
            imports: [],
            providers: [database_configuration_service_1.DatabaseConfigurationService],
            exports: [database_configuration_service_1.DatabaseConfigurationService],
        })];
    var _classDescriptor;
    var _classExtraInitializers = [];
    var _classThis;
    var DatabaseConfigurationModule = _classThis = /** @class */ (function () {
        function DatabaseConfigurationModule_1() {
        }
        return DatabaseConfigurationModule_1;
    }());
    __setFunctionName(_classThis, "DatabaseConfigurationModule");
    (function () {
        var _metadata = typeof Symbol === "function" && Symbol.metadata ? Object.create(null) : void 0;
        __esDecorate(null, _classDescriptor = { value: _classThis }, _classDecorators, { kind: "class", name: _classThis.name, metadata: _metadata }, null, _classExtraInitializers);
        DatabaseConfigurationModule = _classThis = _classDescriptor.value;
        if (_metadata) Object.defineProperty(_classThis, Symbol.metadata, { enumerable: true, configurable: true, writable: true, value: _metadata });
        __runInitializers(_classThis, _classExtraInitializers);
    })();
    return DatabaseConfigurationModule = _classThis;
}();
exports.DatabaseConfigurationModule = DatabaseConfigurationModule;


// C:\grua-booking-system-25\server\dist\core\database\configuration\database.configuration.service.js
"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __esDecorate = (this && this.__esDecorate) || function (ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {
    function accept(f) { if (f !== void 0 && typeof f !== "function") throw new TypeError("Function expected"); return f; }
    var kind = contextIn.kind, key = kind === "getter" ? "get" : kind === "setter" ? "set" : "value";
    var target = !descriptorIn && ctor ? contextIn["static"] ? ctor : ctor.prototype : null;
    var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});
    var _, done = false;
    for (var i = decorators.length - 1; i >= 0; i--) {
        var context = {};
        for (var p in contextIn) context[p] = p === "access" ? {} : contextIn[p];
        for (var p in contextIn.access) context.access[p] = contextIn.access[p];
        context.addInitializer = function (f) { if (done) throw new TypeError("Cannot add initializers after decoration has completed"); extraInitializers.push(accept(f || null)); };
        var result = (0, decorators[i])(kind === "accessor" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);
        if (kind === "accessor") {
            if (result === void 0) continue;
            if (result === null || typeof result !== "object") throw new TypeError("Object expected");
            if (_ = accept(result.get)) descriptor.get = _;
            if (_ = accept(result.set)) descriptor.set = _;
            if (_ = accept(result.init)) initializers.unshift(_);
        }
        else if (_ = accept(result)) {
            if (kind === "field") initializers.unshift(_);
            else descriptor[key] = _;
        }
    }
    if (target) Object.defineProperty(target, contextIn.name, descriptor);
    done = true;
};
var __runInitializers = (this && this.__runInitializers) || function (thisArg, initializers, value) {
    var useValue = arguments.length > 2;
    for (var i = 0; i < initializers.length; i++) {
        value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);
    }
    return useValue ? value : void 0;
};
var __setFunctionName = (this && this.__setFunctionName) || function (f, name, prefix) {
    if (typeof name === "symbol") name = name.description ? "[".concat(name.description, "]") : "";
    return Object.defineProperty(f, "name", { configurable: true, value: prefix ? "".concat(prefix, " ", name) : name });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.DatabaseConfigurationService = void 0;
var common_1 = require("@nestjs/common");
var DatabaseConfigurationService = function () {
    var _classDecorators = [(0, common_1.Injectable)()];
    var _classDescriptor;
    var _classExtraInitializers = [];
    var _classThis;
    var DatabaseConfigurationService = _classThis = /** @class */ (function () {
        function DatabaseConfigurationService_1(configurationService) {
            this.configurationService = configurationService;
        }
        DatabaseConfigurationService_1.prototype.getOptions = function () {
            var isProduction = this.configurationService.isEnvironmentProduction();
            if (isProduction) {
                return __assign(__assign(__assign({}, this.getOptionsBase()), this.getOptionsCommon()), this.getOptionsProduction());
            }
            else {
                return __assign(__assign(__assign({}, this.getOptionsBase()), this.getOptionsCommon()), this.getOptionsDevelopment());
            }
        };
        DatabaseConfigurationService_1.prototype.getOptionsMigration = function () {
            var isProduction = this.configurationService.isEnvironmentProduction();
            var options = __assign(__assign({}, this.getOptionsBase()), { migrationsTableName: 'typeorm_migrations', migrations: ['src/core/database/migrations/scripts/*.ts'], entities: ['src/modules/**/*.model.ts'] });
            if (isProduction) {
                return __assign(__assign({}, options), { ssl: {
                        rejectUnauthorized: false,
                    } });
            }
            else {
                return __assign({}, options);
            }
        };
        DatabaseConfigurationService_1.prototype.getOptionsBase = function () {
            var _a;
            var url = (_a = this.configurationService.get('DATABASE_URL')) !== null && _a !== void 0 ? _a : this.configurationService.get('SERVER_DATABASE_URL');
            var username = url.split('//')[1].split(':')[0];
            var password = url.split(':')[2].split('@')[0];
            var host = url.split('@')[1].split(':')[0];
            var port = Number(url.split(':')[3].split('/')[0]);
            var database = url.split('/').slice(-1)[0];
            var isAmazon = host.includes('amazonaws.com');
            var options = {
                type: 'postgres',
                host: host,
                username: username,
                password: password,
                port: port,
                database: database,
            };
            if (isAmazon) {
                options['ssl'] = {
                    rejectUnauthorized: false,
                };
            }
            return options;
        };
        DatabaseConfigurationService_1.prototype.isMigrationActive = function () {
            return this.configurationService.getBoolean('DATABASE_MIGRATION_ACTIVE');
        };
        DatabaseConfigurationService_1.prototype.getOptionsCommon = function () {
            return {
                autoLoadEntities: true,
            };
        };
        DatabaseConfigurationService_1.prototype.getOptionsDevelopment = function () {
            return {
                synchronize: !this.isMigrationActive(),
            };
        };
        DatabaseConfigurationService_1.prototype.getOptionsProduction = function () {
            return {
                synchronize: true,
                ssl: {
                    rejectUnauthorized: false,
                },
            };
        };
        return DatabaseConfigurationService_1;
    }());
    __setFunctionName(_classThis, "DatabaseConfigurationService");
    (function () {
        var _metadata = typeof Symbol === "function" && Symbol.metadata ? Object.create(null) : void 0;
        __esDecorate(null, _classDescriptor = { value: _classThis }, _classDecorators, { kind: "class", name: _classThis.name, metadata: _metadata }, null, _classExtraInitializers);
        DatabaseConfigurationService = _classThis = _classDescriptor.value;
        if (_metadata) Object.defineProperty(_classThis, Symbol.metadata, { enumerable: true, configurable: true, writable: true, value: _metadata });
        __runInitializers(_classThis, _classExtraInitializers);
    })();
    return DatabaseConfigurationService = _classThis;
}();
exports.DatabaseConfigurationService = DatabaseConfigurationService;


// C:\grua-booking-system-25\server\dist\core\database\helper\ColumnNumericTransformer.js
"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.ColumnNumeric = exports.ColumnNumericTransformer = void 0;
var typeorm_1 = require("typeorm");
var ColumnNumericTransformer = /** @class */ (function () {
    function ColumnNumericTransformer() {
    }
    ColumnNumericTransformer.prototype.to = function (data) {
        return data;
    };
    ColumnNumericTransformer.prototype.from = function (data) {
        return parseFloat(data);
    };
    return ColumnNumericTransformer;
}());
exports.ColumnNumericTransformer = ColumnNumericTransformer;
function ColumnNumeric(options) {
    return function (target, propertyKey) {
        (0, typeorm_1.Column)(__assign(__assign({}, options), { type: 'numeric', transformer: new ColumnNumericTransformer() }))(target, propertyKey);
    };
}
exports.ColumnNumeric = ColumnNumeric;


// C:\grua-booking-system-25\server\dist\core\database\helper\database.helper.js


// C:\grua-booking-system-25\server\dist\core\logging\logging.service.js
"use strict";
var __esDecorate = (this && this.__esDecorate) || function (ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {
    function accept(f) { if (f !== void 0 && typeof f !== "function") throw new TypeError("Function expected"); return f; }
    var kind = contextIn.kind, key = kind === "getter" ? "get" : kind === "setter" ? "set" : "value";
    var target = !descriptorIn && ctor ? contextIn["static"] ? ctor : ctor.prototype : null;
    var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});
    var _, done = false;
    for (var i = decorators.length - 1; i >= 0; i--) {
        var context = {};
        for (var p in contextIn) context[p] = p === "access" ? {} : contextIn[p];
        for (var p in contextIn.access) context.access[p] = contextIn.access[p];
        context.addInitializer = function (f) { if (done) throw new TypeError("Cannot add initializers after decoration has completed"); extraInitializers.push(accept(f || null)); };
        var result = (0, decorators[i])(kind === "accessor" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);
        if (kind === "accessor") {
            if (result === void 0) continue;
            if (result === null || typeof result !== "object") throw new TypeError("Object expected");
            if (_ = accept(result.get)) descriptor.get = _;
            if (_ = accept(result.set)) descriptor.set = _;
            if (_ = accept(result.init)) initializers.unshift(_);
        }
        else if (_ = accept(result)) {
            if (kind === "field") initializers.unshift(_);
            else descriptor[key] = _;
        }
    }
    if (target) Object.defineProperty(target, contextIn.name, descriptor);
    done = true;
};
var __runInitializers = (this && this.__runInitializers) || function (thisArg, initializers, value) {
    var useValue = arguments.length > 2;
    for (var i = 0; i < initializers.length; i++) {
        value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);
    }
    return useValue ? value : void 0;
};
var __setFunctionName = (this && this.__setFunctionName) || function (f, name, prefix) {
    if (typeof name === "symbol") name = name.description ? "[".concat(name.description, "]") : "";
    return Object.defineProperty(f, "name", { configurable: true, value: prefix ? "".concat(prefix, " ", name) : name });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.LoggingService = void 0;
var common_1 = require("@nestjs/common");
var request_1 = require("@server/helpers/request");
var LoggingService = function () {
    var _classDecorators = [(0, common_1.Injectable)()];
    var _classDescriptor;
    var _classExtraInitializers = [];
    var _classThis;
    var LoggingService = _classThis = /** @class */ (function () {
        function LoggingService_1(authenticationDomainFacade, loggerService) {
            this.authenticationDomainFacade = authenticationDomainFacade;
            this.loggerService = loggerService;
            this.logger = this.loggerService.create({ name: 'LoggingInterceptor' });
        }
        LoggingService_1.prototype.logOnStart = function (request) {
            var _a, _b, _c, _d, _e, _f;
            var path = request_1.RequestHelper.getPath(request);
            var method = request_1.RequestHelper.getMethod(request);
            var authenticationPayload = this.authenticationDomainFacade.getRequestPayload(request);
            var id = (_b = (_a = authenticationPayload === null || authenticationPayload === void 0 ? void 0 : authenticationPayload.user) === null || _a === void 0 ? void 0 : _a.id) !== null && _b !== void 0 ? _b : '???';
            var email = (_d = (_c = authenticationPayload === null || authenticationPayload === void 0 ? void 0 : authenticationPayload.user) === null || _c === void 0 ? void 0 : _c.email) !== null && _d !== void 0 ? _d : '???@???.com';
            var name = (_f = (_e = authenticationPayload === null || authenticationPayload === void 0 ? void 0 : authenticationPayload.user) === null || _e === void 0 ? void 0 : _e.name) !== null && _f !== void 0 ? _f : '???';
            var data = {
                path: path,
                authentication: authenticationPayload,
            };
            this.logger.log("[START] ".concat(name, " - ").concat(email, " - ").concat(id, " | ").concat(method, " ").concat(path), data);
        };
        LoggingService_1.prototype.logOnStop = function (request) {
            var _a, _b, _c, _d, _e, _f;
            var path = request_1.RequestHelper.getPath(request);
            var method = request_1.RequestHelper.getMethod(request);
            var authenticationPayload = this.authenticationDomainFacade.getRequestPayload(request);
            var id = (_b = (_a = authenticationPayload === null || authenticationPayload === void 0 ? void 0 : authenticationPayload.user) === null || _a === void 0 ? void 0 : _a.id) !== null && _b !== void 0 ? _b : '???';
            var email = (_d = (_c = authenticationPayload === null || authenticationPayload === void 0 ? void 0 : authenticationPayload.user) === null || _c === void 0 ? void 0 : _c.email) !== null && _d !== void 0 ? _d : '???@???.com';
            var name = (_f = (_e = authenticationPayload === null || authenticationPayload === void 0 ? void 0 : authenticationPayload.user) === null || _e === void 0 ? void 0 : _e.name) !== null && _f !== void 0 ? _f : '???';
            this.logger.log("[STOP] ".concat(name, " - ").concat(email, " - ").concat(id, " | ").concat(method, " ").concat(path));
        };
        return LoggingService_1;
    }());
    __setFunctionName(_classThis, "LoggingService");
    (function () {
        var _metadata = typeof Symbol === "function" && Symbol.metadata ? Object.create(null) : void 0;
        __esDecorate(null, _classDescriptor = { value: _classThis }, _classDecorators, { kind: "class", name: _classThis.name, metadata: _metadata }, null, _classExtraInitializers);
        LoggingService = _classThis = _classDescriptor.value;
        if (_metadata) Object.defineProperty(_classThis, Symbol.metadata, { enumerable: true, configurable: true, writable: true, value: _metadata });
        __runInitializers(_classThis, _classExtraInitializers);
    })();
    return LoggingService = _classThis;
}();
exports.LoggingService = LoggingService;


// C:\grua-booking-system-25\server\dist\helpers\context\index.js
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ContextHelper = void 0;
var ContextHelper;
(function (ContextHelper) {
    function toRequest(context) {
        return context.switchToHttp().getRequest();
    }
    ContextHelper.toRequest = toRequest;
})(ContextHelper || (exports.ContextHelper = ContextHelper = {}));


// C:\grua-booking-system-25\server\dist\helpers\date\index.js
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.DateHelper = void 0;
var DateHelper;
(function (DateHelper) {
    function getNow() {
        return new Date();
    }
    DateHelper.getNow = getNow;
    function addMinutes(date, minutes) {
        var dateUpdated = new Date(date.getTime());
        var seconds = minutes * 60;
        var milliseconds = seconds * 1000;
        dateUpdated.setTime(dateUpdated.getTime() + milliseconds);
        return dateUpdated;
    }
    DateHelper.addMinutes = addMinutes;
    function isBefore(dateBefore, dateAfter) {
        return dateBefore < dateAfter;
    }
    DateHelper.isBefore = isBefore;
})(DateHelper || (exports.DateHelper = DateHelper = {}));


// C:\grua-booking-system-25\server\dist\helpers\dto\dto.helper.js
"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (g && (g = 0, op[0] && (_ = 0)), _) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.DtoHelper = void 0;
var class_transformer_1 = require("class-transformer");
var class_validator_1 = require("class-validator");
require("reflect-metadata");
var utility_1 = require("../utility");
var DtoHelper;
(function (DtoHelper) {
    // ? Function implementation (not visible from the outside)
    function apply(className, target) {
        return (0, class_transformer_1.plainToClass)(className, target !== null && target !== void 0 ? target : {}, {
            excludeExtraneousValues: true,
        });
    }
    DtoHelper.apply = apply;
    /* -------------------------------------------------------------------------- */
    /*                  CHECK PROPERTIES BEFORE HANDLING REQUEST                  */
    /* -------------------------------------------------------------------------- */
    function validationFactory(metadataKey, model, source) {
        return function (target, propertyName, descriptor) {
            Reflect.defineMetadata(metadataKey, model, target, propertyName);
            var method = descriptor.value;
            descriptor.value = function () {
                return __awaiter(this, arguments, void 0, function () {
                    var model, request, response, plain, instance, errors, keys, body, _i, keys_1, key;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                model = Reflect.getOwnMetadata(metadataKey, target, propertyName);
                                request = arguments[0], response = arguments[1];
                                plain = request[source];
                                instance = (0, class_transformer_1.plainToInstance)(model, plain);
                                return [4 /*yield*/, (0, class_validator_1.validate)(instance)];
                            case 1:
                                errors = _a.sent();
                                if (errors.length > 0) {
                                    response.status(400).json(transformValidationErrorsToJSON(errors));
                                    return [2 /*return*/];
                                }
                                keys = Object.getOwnPropertyNames(new model());
                                body = {};
                                for (_i = 0, keys_1 = keys; _i < keys_1.length; _i++) {
                                    key = keys_1[_i];
                                    if (utility_1.Utility.isDefined(plain[key])) {
                                        body[key] = plain[key];
                                    }
                                }
                                request.body = body;
                                return [2 /*return*/, method.apply(this, arguments)];
                        }
                    });
                });
            };
        };
    }
    DtoHelper.validationFactory = validationFactory;
    function transformValidationErrorsToJSON(errors) {
        return errors.reduce(function (p, c) {
            if (!c.children || !c.children.length) {
                p[c.property] = Object.keys(c.constraints).map(function (key) { return c.constraints[key]; });
            }
            else {
                p[c.property] = transformValidationErrorsToJSON(c.children);
            }
            return p;
        }, {});
    }
})(DtoHelper || (exports.DtoHelper = DtoHelper = {}));


// C:\grua-booking-system-25\server\dist\helpers\file\file.helper.js
"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (g && (g = 0, op[0] && (_ = 0)), _) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.FileHelper = void 0;
var fs = require("fs");
var os = require("os");
var Path = require("path");
var path_1 = require("path");
var PlatformTools_1 = require("typeorm/platform/PlatformTools");
var FileHelper;
(function (FileHelper) {
    function getRoot() {
        return Path.join(__dirname, '../../..');
    }
    FileHelper.getRoot = getRoot;
    function findFileContent(path) {
        return fs.readFileSync(path, 'utf-8');
    }
    FileHelper.findFileContent = findFileContent;
    function writeFolder(path) {
        fs.mkdirSync(path, { recursive: true });
    }
    FileHelper.writeFolder = writeFolder;
    function writeFile(path, content) {
        var pathFolder = path.split('/').slice(0, -1).join('/');
        writeFolder(pathFolder);
        return fs.writeFileSync(path, content);
    }
    FileHelper.writeFile = writeFile;
    function joinPaths() {
        var paths = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            paths[_i] = arguments[_i];
        }
        return path_1.join.apply(void 0, paths);
    }
    FileHelper.joinPaths = joinPaths;
    function createReadStream(path) {
        return fs.createReadStream(path);
    }
    FileHelper.createReadStream = createReadStream;
    function buildTemporaryPath(path) {
        var pathTemporary = Path.join(os.tmpdir(), 'marblism-tmp', path);
        return pathTemporary;
    }
    FileHelper.buildTemporaryPath = buildTemporaryPath;
    function fromArrayBufferToReadable(arrayBuffer) {
        var buffer = Buffer.from(arrayBuffer);
        var readableStream = new PlatformTools_1.Readable({
            read: function () {
                this.push(buffer); // Push the buffer to the stream
                this.push(null); // Indicate the end of the stream
            },
        });
        return readableStream;
    }
    FileHelper.fromArrayBufferToReadable = fromArrayBufferToReadable;
    function createReadStreamFromArrayBuffer(arrayBuffer, filename) {
        return __awaiter(this, void 0, void 0, function () {
            var path, pathFolder;
            return __generator(this, function (_a) {
                path = buildTemporaryPath(filename);
                pathFolder = path.split('/').slice(0, -1).join('/');
                deleteFolder(pathFolder);
                writeFolder(pathFolder);
                fs.writeFileSync(path, Buffer.from(arrayBuffer));
                return [2 /*return*/, fs.createReadStream(path)];
            });
        });
    }
    FileHelper.createReadStreamFromArrayBuffer = createReadStreamFromArrayBuffer;
    function deleteFile(path) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                fs.unlinkSync(path);
                return [2 /*return*/];
            });
        });
    }
    FileHelper.deleteFile = deleteFile;
    function deleteFolder(path) {
        try {
            fs.rmdirSync(path, { recursive: true });
        }
        catch (error) {
            // ignore
        }
    }
    FileHelper.deleteFolder = deleteFolder;
})(FileHelper || (exports.FileHelper = FileHelper = {}));


// C:\grua-booking-system-25\server\dist\helpers\file\index.js
"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", { value: true });
__exportStar(require("./file.helper"), exports);


// C:\grua-booking-system-25\server\dist\helpers\hash\hash.helper.js
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.HashHelper = void 0;
var Bcrypt = require("bcryptjs");
var saltRounds = 10;
var HashHelper;
(function (HashHelper) {
    function run(content) {
        var salt = Bcrypt.genSaltSync(saltRounds);
        var hash = Bcrypt.hashSync(content, salt);
        return hash;
    }
    HashHelper.run = run;
    function verify(value, valueHash) {
        return Bcrypt.compareSync(value, valueHash);
    }
    HashHelper.verify = verify;
})(HashHelper || (exports.HashHelper = HashHelper = {}));


// C:\grua-booking-system-25\server\dist\helpers\regex\index.js
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Regex = void 0;
var Regex;
(function (Regex) {
    function findMatches(content, regexExp) {
        var _a;
        var matches = (_a = content.match(regexExp)) !== null && _a !== void 0 ? _a : [];
        return matches;
    }
    Regex.findMatches = findMatches;
    /**
     * Returns all captured group of each regex matches.
     */
    function findCaptures(content, regexExp) {
        var captures = [];
        var matches = findMatches(content, regexExp);
        for (var _i = 0, matches_1 = matches; _i < matches_1.length; _i++) {
            var match = matches_1[_i];
            var regexExpCopy = new RegExp(regexExp);
            var groups = regexExpCopy.exec(match).slice(1);
            captures.push(groups);
        }
        return captures;
    }
    Regex.findCaptures = findCaptures;
})(Regex || (exports.Regex = Regex = {}));


// C:\grua-booking-system-25\server\dist\helpers\request\index.js
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.RequestHelper = void 0;
var bodyParser = require("body-parser");
var RequestHelper;
(function (RequestHelper) {
    function getPath(request) {
        return request === null || request === void 0 ? void 0 : request.path;
    }
    RequestHelper.getPath = getPath;
    function getMethod(request) {
        return request === null || request === void 0 ? void 0 : request.method;
    }
    RequestHelper.getMethod = getMethod;
    function getBody(request) {
        return request === null || request === void 0 ? void 0 : request.body;
    }
    RequestHelper.getBody = getBody;
    function getQueryOptions(request) {
        var queryOptions = request.query.queryOptions;
        if (queryOptions) {
            try {
                return JSON.parse(queryOptions);
            }
            catch (error) {
                throw new Error(error);
            }
        }
        return {};
    }
    RequestHelper.getQueryOptions = getQueryOptions;
    function getAuthorization(request) {
        var _a, _b;
        var token = (_a = request === null || request === void 0 ? void 0 : request.headers) === null || _a === void 0 ? void 0 : _a['authorization'];
        return (_b = token === null || token === void 0 ? void 0 : token.replace('Bearer ', '')) === null || _b === void 0 ? void 0 : _b.trim();
    }
    RequestHelper.getAuthorization = getAuthorization;
    function getRawBody(request) {
        return request === null || request === void 0 ? void 0 : request['rawBodyBuffer'];
    }
    RequestHelper.getRawBody = getRawBody;
    function handleRawBody(request, response, next) {
        var _a;
        if (!((_a = request === null || request === void 0 ? void 0 : request.path) === null || _a === void 0 ? void 0 : _a.endsWith('/raw'))) {
            next();
            return;
        }
        var captureRawBodyMiddleware = bodyParser.raw({ type: function () { return true; } });
        captureRawBodyMiddleware(request, response, function (error) {
            if (error) {
                next();
                return;
            }
            request['rawBodyBuffer'] = request.body;
            next();
        });
    }
    RequestHelper.handleRawBody = handleRawBody;
})(RequestHelper || (exports.RequestHelper = RequestHelper = {}));


// C:\grua-booking-system-25\server\dist\helpers\string\string.helper.js
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var string_helper_1 = require("./string.helper");
describe('toCamelCase', function () {
    test('When a string is already in camel case, then it stays in camel case', function () {
        var result = string_helper_1.StringHelper.toCamelCase('hello_world');
        var expected = 'helloWorld';
        expect(result).toEqual(expected);
    });
    test('When a string is given, then it is converted to camel case', function () {
        var result = string_helper_1.StringHelper.toCamelCase('hello_world');
        var expected = 'helloWorld';
        expect(result).toEqual(expected);
    });
    test('When a string with underscore is given, then it is converted to camel case', function () {
        var result = string_helper_1.StringHelper.toCamelCase('__hello_world__');
        var expected = '__helloWorld__';
        expect(result).toEqual(expected);
    });
});


// C:\grua-booking-system-25\server\dist\helpers\utility\index.js
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Utility = void 0;
var uuid_1 = require("uuid");
var Utility;
(function (Utility) {
    function sleep(milliseconds) {
        return new Promise(function (resolve, reject) {
            setTimeout(function () {
                resolve();
            }, milliseconds);
        });
    }
    Utility.sleep = sleep;
    function getUUID() {
        return (0, uuid_1.v4)();
    }
    Utility.getUUID = getUUID;
    function buildRandomAlphanumericString(length) {
        var alphanumericCharacters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';
        var result = '';
        for (var i = 0; i < length; i++) {
            var randomIndex = Math.floor(Math.random() * alphanumericCharacters.length);
            result += alphanumericCharacters.charAt(randomIndex);
        }
        return result;
    }
    Utility.buildRandomAlphanumericString = buildRandomAlphanumericString;
    function isDefined(value) {
        var isEmptyString = typeof value === 'string' && value === '';
        return value !== null && value !== undefined && !isEmptyString;
    }
    Utility.isDefined = isDefined;
    function isNull(value) {
        return !isDefined(value);
    }
    Utility.isNull = isNull;
    function arrayUnique(items) {
        var uniqueSet = new Set(items);
        return Array.from(uniqueSet);
    }
    Utility.arrayUnique = arrayUnique;
    function removeTrailingSlash(content) {
        var REGEX_SLASH = /\/$/g;
        return content.replace(REGEX_SLASH, '');
    }
    Utility.removeTrailingSlash = removeTrailingSlash;
    function isEmpty(value) {
        if (!isDefined(value)) {
            return true;
        }
        var isArray = Array.isArray(value);
        if (isArray) {
            return value.length === 0;
        }
        var isString = typeof value === 'string';
        if (isString) {
            return value.trim() !== '';
        }
        return false;
    }
    Utility.isEmpty = isEmpty;
})(Utility || (exports.Utility = Utility = {}));


// C:\grua-booking-system-25\server\dist\helpers\context\index.js
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ContextHelper = void 0;
var ContextHelper;
(function (ContextHelper) {
    function toRequest(context) {
        return context.switchToHttp().getRequest();
    }
    ContextHelper.toRequest = toRequest;
})(ContextHelper || (exports.ContextHelper = ContextHelper = {}));


// C:\grua-booking-system-25\server\dist\helpers\date\index.js
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.DateHelper = void 0;
var DateHelper;
(function (DateHelper) {
    function getNow() {
        return new Date();
    }
    DateHelper.getNow = getNow;
    function addMinutes(date, minutes) {
        var dateUpdated = new Date(date.getTime());
        var seconds = minutes * 60;
        var milliseconds = seconds * 1000;
        dateUpdated.setTime(dateUpdated.getTime() + milliseconds);
        return dateUpdated;
    }
    DateHelper.addMinutes = addMinutes;
    function isBefore(dateBefore, dateAfter) {
        return dateBefore < dateAfter;
    }
    DateHelper.isBefore = isBefore;
})(DateHelper || (exports.DateHelper = DateHelper = {}));


// C:\grua-booking-system-25\server\dist\helpers\dto\dto.helper.js
"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (g && (g = 0, op[0] && (_ = 0)), _) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.DtoHelper = void 0;
var class_transformer_1 = require("class-transformer");
var class_validator_1 = require("class-validator");
require("reflect-metadata");
var utility_1 = require("../utility");
var DtoHelper;
(function (DtoHelper) {
    // ? Function implementation (not visible from the outside)
    function apply(className, target) {
        return (0, class_transformer_1.plainToClass)(className, target !== null && target !== void 0 ? target : {}, {
            excludeExtraneousValues: true,
        });
    }
    DtoHelper.apply = apply;
    /* -------------------------------------------------------------------------- */
    /*                  CHECK PROPERTIES BEFORE HANDLING REQUEST                  */
    /* -------------------------------------------------------------------------- */
    function validationFactory(metadataKey, model, source) {
        return function (target, propertyName, descriptor) {
            Reflect.defineMetadata(metadataKey, model, target, propertyName);
            var method = descriptor.value;
            descriptor.value = function () {
                return __awaiter(this, arguments, void 0, function () {
                    var model, request, response, plain, instance, errors, keys, body, _i, keys_1, key;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                model = Reflect.getOwnMetadata(metadataKey, target, propertyName);
                                request = arguments[0], response = arguments[1];
                                plain = request[source];
                                instance = (0, class_transformer_1.plainToInstance)(model, plain);
                                return [4 /*yield*/, (0, class_validator_1.validate)(instance)];
                            case 1:
                                errors = _a.sent();
                                if (errors.length > 0) {
                                    response.status(400).json(transformValidationErrorsToJSON(errors));
                                    return [2 /*return*/];
                                }
                                keys = Object.getOwnPropertyNames(new model());
                                body = {};
                                for (_i = 0, keys_1 = keys; _i < keys_1.length; _i++) {
                                    key = keys_1[_i];
                                    if (utility_1.Utility.isDefined(plain[key])) {
                                        body[key] = plain[key];
                                    }
                                }
                                request.body = body;
                                return [2 /*return*/, method.apply(this, arguments)];
                        }
                    });
                });
            };
        };
    }
    DtoHelper.validationFactory = validationFactory;
    function transformValidationErrorsToJSON(errors) {
        return errors.reduce(function (p, c) {
            if (!c.children || !c.children.length) {
                p[c.property] = Object.keys(c.constraints).map(function (key) { return c.constraints[key]; });
            }
            else {
                p[c.property] = transformValidationErrorsToJSON(c.children);
            }
            return p;
        }, {});
    }
})(DtoHelper || (exports.DtoHelper = DtoHelper = {}));


// C:\grua-booking-system-25\server\dist\helpers\dto\index.js
"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", { value: true });
__exportStar(require("./dto.helper"), exports);


// C:\grua-booking-system-25\server\dist\helpers\file\file.helper.js
"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (g && (g = 0, op[0] && (_ = 0)), _) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.FileHelper = void 0;
var fs = require("fs");
var os = require("os");
var Path = require("path");
var path_1 = require("path");
var PlatformTools_1 = require("typeorm/platform/PlatformTools");
var FileHelper;
(function (FileHelper) {
    function getRoot() {
        return Path.join(__dirname, '../../..');
    }
    FileHelper.getRoot = getRoot;
    function findFileContent(path) {
        return fs.readFileSync(path, 'utf-8');
    }
    FileHelper.findFileContent = findFileContent;
    function writeFolder(path) {
        fs.mkdirSync(path, { recursive: true });
    }
    FileHelper.writeFolder = writeFolder;
    function writeFile(path, content) {
        var pathFolder = path.split('/').slice(0, -1).join('/');
        writeFolder(pathFolder);
        return fs.writeFileSync(path, content);
    }
    FileHelper.writeFile = writeFile;
    function joinPaths() {
        var paths = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            paths[_i] = arguments[_i];
        }
        return path_1.join.apply(void 0, paths);
    }
    FileHelper.joinPaths = joinPaths;
    function createReadStream(path) {
        return fs.createReadStream(path);
    }
    FileHelper.createReadStream = createReadStream;
    function buildTemporaryPath(path) {
        var pathTemporary = Path.join(os.tmpdir(), 'marblism-tmp', path);
        return pathTemporary;
    }
    FileHelper.buildTemporaryPath = buildTemporaryPath;
    function fromArrayBufferToReadable(arrayBuffer) {
        var buffer = Buffer.from(arrayBuffer);
        var readableStream = new PlatformTools_1.Readable({
            read: function () {
                this.push(buffer); // Push the buffer to the stream
                this.push(null); // Indicate the end of the stream
            },
        });
        return readableStream;
    }
    FileHelper.fromArrayBufferToReadable = fromArrayBufferToReadable;
    function createReadStreamFromArrayBuffer(arrayBuffer, filename) {
        return __awaiter(this, void 0, void 0, function () {
            var path, pathFolder;
            return __generator(this, function (_a) {
                path = buildTemporaryPath(filename);
                pathFolder = path.split('/').slice(0, -1).join('/');
                deleteFolder(pathFolder);
                writeFolder(pathFolder);
                fs.writeFileSync(path, Buffer.from(arrayBuffer));
                return [2 /*return*/, fs.createReadStream(path)];
            });
        });
    }
    FileHelper.createReadStreamFromArrayBuffer = createReadStreamFromArrayBuffer;
    function deleteFile(path) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                fs.unlinkSync(path);
                return [2 /*return*/];
            });
        });
    }
    FileHelper.deleteFile = deleteFile;
    function deleteFolder(path) {
        try {
            fs.rmdirSync(path, { recursive: true });
        }
        catch (error) {
            // ignore
        }
    }
    FileHelper.deleteFolder = deleteFolder;
})(FileHelper || (exports.FileHelper = FileHelper = {}));


// C:\grua-booking-system-25\server\dist\helpers\file\index.js
"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", { value: true });
__exportStar(require("./file.helper"), exports);


// C:\grua-booking-system-25\server\dist\helpers\hash\hash.helper.js
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.HashHelper = void 0;
var Bcrypt = require("bcryptjs");
var saltRounds = 10;
var HashHelper;
(function (HashHelper) {
    function run(content) {
        var salt = Bcrypt.genSaltSync(saltRounds);
        var hash = Bcrypt.hashSync(content, salt);
        return hash;
    }
    HashHelper.run = run;
    function verify(value, valueHash) {
        return Bcrypt.compareSync(value, valueHash);
    }
    HashHelper.verify = verify;
})(HashHelper || (exports.HashHelper = HashHelper = {}));


// C:\grua-booking-system-25\server\dist\helpers\regex\index.js
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Regex = void 0;
var Regex;
(function (Regex) {
    function findMatches(content, regexExp) {
        var _a;
        var matches = (_a = content.match(regexExp)) !== null && _a !== void 0 ? _a : [];
        return matches;
    }
    Regex.findMatches = findMatches;
    /**
     * Returns all captured group of each regex matches.
     */
    function findCaptures(content, regexExp) {
        var captures = [];
        var matches = findMatches(content, regexExp);
        for (var _i = 0, matches_1 = matches; _i < matches_1.length; _i++) {
            var match = matches_1[_i];
            var regexExpCopy = new RegExp(regexExp);
            var groups = regexExpCopy.exec(match).slice(1);
            captures.push(groups);
        }
        return captures;
    }
    Regex.findCaptures = findCaptures;
})(Regex || (exports.Regex = Regex = {}));


// C:\grua-booking-system-25\server\dist\helpers\request\index.js
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.RequestHelper = void 0;
var bodyParser = require("body-parser");
var RequestHelper;
(function (RequestHelper) {
    function getPath(request) {
        return request === null || request === void 0 ? void 0 : request.path;
    }
    RequestHelper.getPath = getPath;
    function getMethod(request) {
        return request === null || request === void 0 ? void 0 : request.method;
    }
    RequestHelper.getMethod = getMethod;
    function getBody(request) {
        return request === null || request === void 0 ? void 0 : request.body;
    }
    RequestHelper.getBody = getBody;
    function getQueryOptions(request) {
        var queryOptions = request.query.queryOptions;
        if (queryOptions) {
            try {
                return JSON.parse(queryOptions);
            }
            catch (error) {
                throw new Error(error);
            }
        }
        return {};
    }
    RequestHelper.getQueryOptions = getQueryOptions;
    function getAuthorization(request) {
        var _a, _b;
        var token = (_a = request === null || request === void 0 ? void 0 : request.headers) === null || _a === void 0 ? void 0 : _a['authorization'];
        return (_b = token === null || token === void 0 ? void 0 : token.replace('Bearer ', '')) === null || _b === void 0 ? void 0 : _b.trim();
    }
    RequestHelper.getAuthorization = getAuthorization;
    function getRawBody(request) {
        return request === null || request === void 0 ? void 0 : request['rawBodyBuffer'];
    }
    RequestHelper.getRawBody = getRawBody;
    function handleRawBody(request, response, next) {
        var _a;
        if (!((_a = request === null || request === void 0 ? void 0 : request.path) === null || _a === void 0 ? void 0 : _a.endsWith('/raw'))) {
            next();
            return;
        }
        var captureRawBodyMiddleware = bodyParser.raw({ type: function () { return true; } });
        captureRawBodyMiddleware(request, response, function (error) {
            if (error) {
                next();
                return;
            }
            request['rawBodyBuffer'] = request.body;
            next();
        });
    }
    RequestHelper.handleRawBody = handleRawBody;
})(RequestHelper || (exports.RequestHelper = RequestHelper = {}));


// C:\grua-booking-system-25\server\dist\helpers\string\string.helper.js
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.StringHelper = void 0;
var regex_1 = require("../regex");
var StringHelper;
(function (StringHelper) {
    function toSnakeCase(content) {
        return content.replace(/([a-z])([A-Z])/g, '$1_$2').toLowerCase();
    }
    StringHelper.toSnakeCase = toSnakeCase;
    function toCamelCase(content) {
        var _a, _b;
        var REGEX_PREFIX = /^(_{0,2})/g;
        var REGEX_SUFFIX = /(_{0,2})$/g;
        var prefix = (_a = regex_1.Regex.findMatches(content, /^(_{0,2})/g)[0]) !== null && _a !== void 0 ? _a : '';
        var suffix = (_b = regex_1.Regex.findMatches(content, /(_{0,2})$/g)[0]) !== null && _b !== void 0 ? _b : '';
        var contentClean = content
            .replace(REGEX_PREFIX, '')
            .replace(REGEX_SUFFIX, '');
        var contentCamelCase = contentClean.replace(/_([a-zA-Z0-9])/g, function (_, match) { return match.toUpperCase(); });
        return "".concat(prefix).concat(contentCamelCase).concat(suffix);
    }
    StringHelper.toCamelCase = toCamelCase;
})(StringHelper || (exports.StringHelper = StringHelper = {}));


// C:\grua-booking-system-25\server\dist\helpers\string\string.helper.test.js
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var string_helper_1 = require("./string.helper");
describe('toCamelCase', function () {
    test('When a string is already in camel case, then it stays in camel case', function () {
        var result = string_helper_1.StringHelper.toCamelCase('hello_world');
        var expected = 'helloWorld';
        expect(result).toEqual(expected);
    });
    test('When a string is given, then it is converted to camel case', function () {
        var result = string_helper_1.StringHelper.toCamelCase('hello_world');
        var expected = 'helloWorld';
        expect(result).toEqual(expected);
    });
    test('When a string with underscore is given, then it is converted to camel case', function () {
        var result = string_helper_1.StringHelper.toCamelCase('__hello_world__');
        var expected = '__helloWorld__';
        expect(result).toEqual(expected);
    });
});


// C:\grua-booking-system-25\server\dist\helpers\utility\index.js
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Utility = void 0;
var uuid_1 = require("uuid");
var Utility;
(function (Utility) {
    function sleep(milliseconds) {
        return new Promise(function (resolve, reject) {
            setTimeout(function () {
                resolve();
            }, milliseconds);
        });
    }
    Utility.sleep = sleep;
    function getUUID() {
        return (0, uuid_1.v4)();
    }
    Utility.getUUID = getUUID;
    function buildRandomAlphanumericString(length) {
        var alphanumericCharacters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';
        var result = '';
        for (var i = 0; i < length; i++) {
            var randomIndex = Math.floor(Math.random() * alphanumericCharacters.length);
            result += alphanumericCharacters.charAt(randomIndex);
        }
        return result;
    }
    Utility.buildRandomAlphanumericString = buildRandomAlphanumericString;
    function isDefined(value) {
        var isEmptyString = typeof value === 'string' && value === '';
        return value !== null && value !== undefined && !isEmptyString;
    }
    Utility.isDefined = isDefined;
    function isNull(value) {
        return !isDefined(value);
    }
    Utility.isNull = isNull;
    function arrayUnique(items) {
        var uniqueSet = new Set(items);
        return Array.from(uniqueSet);
    }
    Utility.arrayUnique = arrayUnique;
    function removeTrailingSlash(content) {
        var REGEX_SLASH = /\/$/g;
        return content.replace(REGEX_SLASH, '');
    }
    Utility.removeTrailingSlash = removeTrailingSlash;
    function isEmpty(value) {
        if (!isDefined(value)) {
            return true;
        }
        var isArray = Array.isArray(value);
        if (isArray) {
            return value.length === 0;
        }
        var isString = typeof value === 'string';
        if (isString) {
            return value.trim() !== '';
        }
        return false;
    }
    Utility.isEmpty = isEmpty;
})(Utility || (exports.Utility = Utility = {}));


// C:\grua-booking-system-25\server\dist\libraries\email\internal\providers\mailjet\mailjet.provider.js
"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __esDecorate = (this && this.__esDecorate) || function (ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {
    function accept(f) { if (f !== void 0 && typeof f !== "function") throw new TypeError("Function expected"); return f; }
    var kind = contextIn.kind, key = kind === "getter" ? "get" : kind === "setter" ? "set" : "value";
    var target = !descriptorIn && ctor ? contextIn["static"] ? ctor : ctor.prototype : null;
    var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});
    var _, done = false;
    for (var i = decorators.length - 1; i >= 0; i--) {
        var context = {};
        for (var p in contextIn) context[p] = p === "access" ? {} : contextIn[p];
        for (var p in contextIn.access) context.access[p] = contextIn.access[p];
        context.addInitializer = function (f) { if (done) throw new TypeError("Cannot add initializers after decoration has completed"); extraInitializers.push(accept(f || null)); };
        var result = (0, decorators[i])(kind === "accessor" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);
        if (kind === "accessor") {
            if (result === void 0) continue;
            if (result === null || typeof result !== "object") throw new TypeError("Object expected");
            if (_ = accept(result.get)) descriptor.get = _;
            if (_ = accept(result.set)) descriptor.set = _;
            if (_ = accept(result.init)) initializers.unshift(_);
        }
        else if (_ = accept(result)) {
            if (kind === "field") initializers.unshift(_);
            else descriptor[key] = _;
        }
    }
    if (target) Object.defineProperty(target, contextIn.name, descriptor);
    done = true;
};
var __runInitializers = (this && this.__runInitializers) || function (thisArg, initializers, value) {
    var useValue = arguments.length > 2;
    for (var i = 0; i < initializers.length; i++) {
        value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);
    }
    return useValue ? value : void 0;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (g && (g = 0, op[0] && (_ = 0)), _) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __setFunctionName = (this && this.__setFunctionName) || function (f, name, prefix) {
    if (typeof name === "symbol") name = name.description ? "[".concat(name.description, "]") : "";
    return Object.defineProperty(f, "name", { configurable: true, value: prefix ? "".concat(prefix, " ", name) : name });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.MailjetProvider = void 0;
var common_1 = require("@nestjs/common");
var node_mailjet_1 = require("node-mailjet");
var email_type_1 = require("../../email.type");
var MailjetProvider = function () {
    var _classDecorators = [(0, common_1.Injectable)()];
    var _classDescriptor;
    var _classExtraInitializers = [];
    var _classThis;
    var MailjetProvider = _classThis = /** @class */ (function () {
        function MailjetProvider_1(configurationService, loggerService, templateService) {
            var _a;
            this.configurationService = configurationService;
            this.loggerService = loggerService;
            this.templateService = templateService;
            this.templateIds = (_a = {},
                _a[email_type_1.EmailType.DEFAULT] = null,
                _a[email_type_1.EmailType.AUTHENTICATION_WELCOME] = null,
                _a[email_type_1.EmailType.AUTHENTICATION_FORGOT_PASSWORD] = null,
                _a[email_type_1.EmailType.AUTHORIZATION_VERIFICATION_CODE] = null,
                _a);
            this.logger = this.loggerService.create({ name: 'MailjetProvider' });
            this.initialise();
        }
        MailjetProvider_1.prototype.initialise = function () {
            var isProduction = this.configurationService.isEnvironmentProduction();
            if (!isProduction) {
                this.logger.warning("Mailjet is disabled in development");
                return;
            }
            try {
                var apiKey = this.configurationService.get('SERVER_EMAIL_MAILJET_API_KEY');
                var secretKey = this.configurationService.get('SERVER_EMAIL_MAILJET_SECRET_KEY');
                if (!apiKey || !secretKey) {
                    this.logger.warning("Set EMAIL_MAILJET_API_KEY and EMAIL_MAILJET_SECRET_KEY to activate Mailjet");
                    return;
                }
                this.client = new node_mailjet_1.default({ apiKey: apiKey, apiSecret: secretKey });
                this.logger.success("Mailjet service active");
            }
            catch (error) {
                this.logger.error("Could not start Mailjet service");
                this.logger.error(error);
            }
        };
        MailjetProvider_1.prototype.send = function (options) {
            return __awaiter(this, void 0, void 0, function () {
                var message;
                var _this = this;
                return __generator(this, function (_a) {
                    message = this.buildMessage(options);
                    return [2 /*return*/, this.client
                            .post('send', { version: 'v3.1' })
                            .request({
                            Messages: [
                                __assign({}, message),
                            ],
                        })
                            .then(function (result) {
                            _this.logger.log("Emails sent", result);
                        })
                            .catch(function (error) {
                            _this.logger.error("Could not send emails (".concat(error.statusCode, ")"));
                        })];
                });
            });
        };
        MailjetProvider_1.prototype.buildMessage = function (options) {
            var from = {
                Email: email_type_1.EmailSender.default.email,
                Name: email_type_1.EmailSender.default.name,
            };
            var to = options.to.map(function (item) { return ({ Email: item.email, Name: item.name }); });
            var message = {
                From: from,
                To: to,
                Subject: options.subject,
                HTMLPart: undefined,
                Variables: undefined,
                TemplateLanguage: undefined,
                templateId: undefined,
            };
            var templateId = this.templateIds[options.type];
            if (templateId) {
                message.TemplateLanguage = true;
                message.templateId = templateId;
                message.Variables = options.variables;
            }
            else {
                var content = this.templateService.get(options);
                message.HTMLPart = content;
            }
            return message;
        };
        return MailjetProvider_1;
    }());
    __setFunctionName(_classThis, "MailjetProvider");
    (function () {
        var _metadata = typeof Symbol === "function" && Symbol.metadata ? Object.create(null) : void 0;
        __esDecorate(null, _classDescriptor = { value: _classThis }, _classDecorators, { kind: "class", name: _classThis.name, metadata: _metadata }, null, _classExtraInitializers);
        MailjetProvider = _classThis = _classDescriptor.value;
        if (_metadata) Object.defineProperty(_classThis, Symbol.metadata, { enumerable: true, configurable: true, writable: true, value: _metadata });
        __runInitializers(_classThis, _classExtraInitializers);
    })();
    return MailjetProvider = _classThis;
}();
exports.MailjetProvider = MailjetProvider;


// C:\grua-booking-system-25\server\dist\libraries\email\internal\providers\nodemailer\nodemailer.provider.js
"use strict";
var __esDecorate = (this && this.__esDecorate) || function (ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {
    function accept(f) { if (f !== void 0 && typeof f !== "function") throw new TypeError("Function expected"); return f; }
    var kind = contextIn.kind, key = kind === "getter" ? "get" : kind === "setter" ? "set" : "value";
    var target = !descriptorIn && ctor ? contextIn["static"] ? ctor : ctor.prototype : null;
    var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});
    var _, done = false;
    for (var i = decorators.length - 1; i >= 0; i--) {
        var context = {};
        for (var p in contextIn) context[p] = p === "access" ? {} : contextIn[p];
        for (var p in contextIn.access) context.access[p] = contextIn.access[p];
        context.addInitializer = function (f) { if (done) throw new TypeError("Cannot add initializers after decoration has completed"); extraInitializers.push(accept(f || null)); };
        var result = (0, decorators[i])(kind === "accessor" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);
        if (kind === "accessor") {
            if (result === void 0) continue;
            if (result === null || typeof result !== "object") throw new TypeError("Object expected");
            if (_ = accept(result.get)) descriptor.get = _;
            if (_ = accept(result.set)) descriptor.set = _;
            if (_ = accept(result.init)) initializers.unshift(_);
        }
        else if (_ = accept(result)) {
            if (kind === "field") initializers.unshift(_);
            else descriptor[key] = _;
        }
    }
    if (target) Object.defineProperty(target, contextIn.name, descriptor);
    done = true;
};
var __runInitializers = (this && this.__runInitializers) || function (thisArg, initializers, value) {
    var useValue = arguments.length > 2;
    for (var i = 0; i < initializers.length; i++) {
        value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);
    }
    return useValue ? value : void 0;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (g && (g = 0, op[0] && (_ = 0)), _) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __setFunctionName = (this && this.__setFunctionName) || function (f, name, prefix) {
    if (typeof name === "symbol") name = name.description ? "[".concat(name.description, "]") : "";
    return Object.defineProperty(f, "name", { configurable: true, value: prefix ? "".concat(prefix, " ", name) : name });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.NodemailerProvider = void 0;
var common_1 = require("@nestjs/common");
var NodemailerSDK = require("nodemailer");
var email_type_1 = require("../../email.type");
var NodemailerProvider = function () {
    var _classDecorators = [(0, common_1.Injectable)()];
    var _classDescriptor;
    var _classExtraInitializers = [];
    var _classThis;
    var NodemailerProvider = _classThis = /** @class */ (function () {
        function NodemailerProvider_1(loggerService, configurationService, templateService) {
            this.loggerService = loggerService;
            this.configurationService = configurationService;
            this.templateService = templateService;
            this.logger = this.loggerService.create({ name: 'NodemailerProvider' });
            this.initialise();
        }
        NodemailerProvider_1.prototype.initialise = function () {
            var _a;
            try {
                var host = (_a = this.configurationService.get('SERVER_EMAIL_MAILPIT_HOST')) !== null && _a !== void 0 ? _a : 'localhost';
                var port = this.configurationService.getNumber('SERVER_EMAIL_MAILPIT_PORT', 1022);
                this.client = NodemailerSDK.createTransport({
                    host: host,
                    port: port,
                });
                this.logger.success("Nodemailer is active (".concat(host, ":").concat(port, ")"));
            }
            catch (error) {
                this.logger.error("Nodemailer failed to start: ".concat(error.message));
            }
        };
        NodemailerProvider_1.prototype.send = function (options) {
            return __awaiter(this, void 0, void 0, function () {
                var from, content, _i, _a, to;
                var _this = this;
                return __generator(this, function (_b) {
                    switch (_b.label) {
                        case 0:
                            from = email_type_1.EmailSender.default;
                            content = this.templateService.get(options);
                            _i = 0, _a = options.to;
                            _b.label = 1;
                        case 1:
                            if (!(_i < _a.length)) return [3 /*break*/, 4];
                            to = _a[_i];
                            return [4 /*yield*/, this.client
                                    .sendMail({
                                    from: "".concat(from.name, " <").concat(from.email, ">"),
                                    to: to.email,
                                    subject: options.subject,
                                    html: content,
                                })
                                    .then(function (result) {
                                    _this.logger.log("Emails sent");
                                })
                                    .catch(function (error) {
                                    _this.logger.error("Could not send emails (".concat(error.statusCode, ")"));
                                    _this.logger.error(error);
                                })];
                        case 2:
                            _b.sent();
                            _b.label = 3;
                        case 3:
                            _i++;
                            return [3 /*break*/, 1];
                        case 4: return [2 /*return*/];
                    }
                });
            });
        };
        return NodemailerProvider_1;
    }());
    __setFunctionName(_classThis, "NodemailerProvider");
    (function () {
        var _metadata = typeof Symbol === "function" && Symbol.metadata ? Object.create(null) : void 0;
        __esDecorate(null, _classDescriptor = { value: _classThis }, _classDecorators, { kind: "class", name: _classThis.name, metadata: _metadata }, null, _classExtraInitializers);
        NodemailerProvider = _classThis = _classDescriptor.value;
        if (_metadata) Object.defineProperty(_classThis, Symbol.metadata, { enumerable: true, configurable: true, writable: true, value: _metadata });
        __runInitializers(_classThis, _classExtraInitializers);
    })();
    return NodemailerProvider = _classThis;
}();
exports.NodemailerProvider = NodemailerProvider;


// C:\grua-booking-system-25\server\dist\libraries\email\internal\providers\provider.js
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });


// C:\grua-booking-system-25\server\dist\libraries\email\internal\providers\mailjet\mailjet.provider.js
"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __esDecorate = (this && this.__esDecorate) || function (ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {
    function accept(f) { if (f !== void 0 && typeof f !== "function") throw new TypeError("Function expected"); return f; }
    var kind = contextIn.kind, key = kind === "getter" ? "get" : kind === "setter" ? "set" : "value";
    var target = !descriptorIn && ctor ? contextIn["static"] ? ctor : ctor.prototype : null;
    var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});
    var _, done = false;
    for (var i = decorators.length - 1; i >= 0; i--) {
        var context = {};
        for (var p in contextIn) context[p] = p === "access" ? {} : contextIn[p];
        for (var p in contextIn.access) context.access[p] = contextIn.access[p];
        context.addInitializer = function (f) { if (done) throw new TypeError("Cannot add initializers after decoration has completed"); extraInitializers.push(accept(f || null)); };
        var result = (0, decorators[i])(kind === "accessor" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);
        if (kind === "accessor") {
            if (result === void 0) continue;
            if (result === null || typeof result !== "object") throw new TypeError("Object expected");
            if (_ = accept(result.get)) descriptor.get = _;
            if (_ = accept(result.set)) descriptor.set = _;
            if (_ = accept(result.init)) initializers.unshift(_);
        }
        else if (_ = accept(result)) {
            if (kind === "field") initializers.unshift(_);
            else descriptor[key] = _;
        }
    }
    if (target) Object.defineProperty(target, contextIn.name, descriptor);
    done = true;
};
var __runInitializers = (this && this.__runInitializers) || function (thisArg, initializers, value) {
    var useValue = arguments.length > 2;
    for (var i = 0; i < initializers.length; i++) {
        value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);
    }
    return useValue ? value : void 0;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (g && (g = 0, op[0] && (_ = 0)), _) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __setFunctionName = (this && this.__setFunctionName) || function (f, name, prefix) {
    if (typeof name === "symbol") name = name.description ? "[".concat(name.description, "]") : "";
    return Object.defineProperty(f, "name", { configurable: true, value: prefix ? "".concat(prefix, " ", name) : name });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.MailjetProvider = void 0;
var common_1 = require("@nestjs/common");
var node_mailjet_1 = require("node-mailjet");
var email_type_1 = require("../../email.type");
var MailjetProvider = function () {
    var _classDecorators = [(0, common_1.Injectable)()];
    var _classDescriptor;
    var _classExtraInitializers = [];
    var _classThis;
    var MailjetProvider = _classThis = /** @class */ (function () {
        function MailjetProvider_1(configurationService, loggerService, templateService) {
            var _a;
            this.configurationService = configurationService;
            this.loggerService = loggerService;
            this.templateService = templateService;
            this.templateIds = (_a = {},
                _a[email_type_1.EmailType.DEFAULT] = null,
                _a[email_type_1.EmailType.AUTHENTICATION_WELCOME] = null,
                _a[email_type_1.EmailType.AUTHENTICATION_FORGOT_PASSWORD] = null,
                _a[email_type_1.EmailType.AUTHORIZATION_VERIFICATION_CODE] = null,
                _a);
            this.logger = this.loggerService.create({ name: 'MailjetProvider' });
            this.initialise();
        }
        MailjetProvider_1.prototype.initialise = function () {
            var isProduction = this.configurationService.isEnvironmentProduction();
            if (!isProduction) {
                this.logger.warning("Mailjet is disabled in development");
                return;
            }
            try {
                var apiKey = this.configurationService.get('SERVER_EMAIL_MAILJET_API_KEY');
                var secretKey = this.configurationService.get('SERVER_EMAIL_MAILJET_SECRET_KEY');
                if (!apiKey || !secretKey) {
                    this.logger.warning("Set EMAIL_MAILJET_API_KEY and EMAIL_MAILJET_SECRET_KEY to activate Mailjet");
                    return;
                }
                this.client = new node_mailjet_1.default({ apiKey: apiKey, apiSecret: secretKey });
                this.logger.success("Mailjet service active");
            }
            catch (error) {
                this.logger.error("Could not start Mailjet service");
                this.logger.error(error);
            }
        };
        MailjetProvider_1.prototype.send = function (options) {
            return __awaiter(this, void 0, void 0, function () {
                var message;
                var _this = this;
                return __generator(this, function (_a) {
                    message = this.buildMessage(options);
                    return [2 /*return*/, this.client
                            .post('send', { version: 'v3.1' })
                            .request({
                            Messages: [
                                __assign({}, message),
                            ],
                        })
                            .then(function (result) {
                            _this.logger.log("Emails sent", result);
                        })
                            .catch(function (error) {
                            _this.logger.error("Could not send emails (".concat(error.statusCode, ")"));
                        })];
                });
            });
        };
        MailjetProvider_1.prototype.buildMessage = function (options) {
            var from = {
                Email: email_type_1.EmailSender.default.email,
                Name: email_type_1.EmailSender.default.name,
            };
            var to = options.to.map(function (item) { return ({ Email: item.email, Name: item.name }); });
            var message = {
                From: from,
                To: to,
                Subject: options.subject,
                HTMLPart: undefined,
                Variables: undefined,
                TemplateLanguage: undefined,
                templateId: undefined,
            };
            var templateId = this.templateIds[options.type];
            if (templateId) {
                message.TemplateLanguage = true;
                message.templateId = templateId;
                message.Variables = options.variables;
            }
            else {
                var content = this.templateService.get(options);
                message.HTMLPart = content;
            }
            return message;
        };
        return MailjetProvider_1;
    }());
    __setFunctionName(_classThis, "MailjetProvider");
    (function () {
        var _metadata = typeof Symbol === "function" && Symbol.metadata ? Object.create(null) : void 0;
        __esDecorate(null, _classDescriptor = { value: _classThis }, _classDecorators, { kind: "class", name: _classThis.name, metadata: _metadata }, null, _classExtraInitializers);
        MailjetProvider = _classThis = _classDescriptor.value;
        if (_metadata) Object.defineProperty(_classThis, Symbol.metadata, { enumerable: true, configurable: true, writable: true, value: _metadata });
        __runInitializers(_classThis, _classExtraInitializers);
    })();
    return MailjetProvider = _classThis;
}();
exports.MailjetProvider = MailjetProvider;


// C:\grua-booking-system-25\server\dist\libraries\email\internal\providers\nodemailer\nodemailer.provider.js
"use strict";
var __esDecorate = (this && this.__esDecorate) || function (ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {
    function accept(f) { if (f !== void 0 && typeof f !== "function") throw new TypeError("Function expected"); return f; }
    var kind = contextIn.kind, key = kind === "getter" ? "get" : kind === "setter" ? "set" : "value";
    var target = !descriptorIn && ctor ? contextIn["static"] ? ctor : ctor.prototype : null;
    var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});
    var _, done = false;
    for (var i = decorators.length - 1; i >= 0; i--) {
        var context = {};
        for (var p in contextIn) context[p] = p === "access" ? {} : contextIn[p];
        for (var p in contextIn.access) context.access[p] = contextIn.access[p];
        context.addInitializer = function (f) { if (done) throw new TypeError("Cannot add initializers after decoration has completed"); extraInitializers.push(accept(f || null)); };
        var result = (0, decorators[i])(kind === "accessor" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);
        if (kind === "accessor") {
            if (result === void 0) continue;
            if (result === null || typeof result !== "object") throw new TypeError("Object expected");
            if (_ = accept(result.get)) descriptor.get = _;
            if (_ = accept(result.set)) descriptor.set = _;
            if (_ = accept(result.init)) initializers.unshift(_);
        }
        else if (_ = accept(result)) {
            if (kind === "field") initializers.unshift(_);
            else descriptor[key] = _;
        }
    }
    if (target) Object.defineProperty(target, contextIn.name, descriptor);
    done = true;
};
var __runInitializers = (this && this.__runInitializers) || function (thisArg, initializers, value) {
    var useValue = arguments.length > 2;
    for (var i = 0; i < initializers.length; i++) {
        value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);
    }
    return useValue ? value : void 0;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (g && (g = 0, op[0] && (_ = 0)), _) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __setFunctionName = (this && this.__setFunctionName) || function (f, name, prefix) {
    if (typeof name === "symbol") name = name.description ? "[".concat(name.description, "]") : "";
    return Object.defineProperty(f, "name", { configurable: true, value: prefix ? "".concat(prefix, " ", name) : name });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.NodemailerProvider = void 0;
var common_1 = require("@nestjs/common");
var NodemailerSDK = require("nodemailer");
var email_type_1 = require("../../email.type");
var NodemailerProvider = function () {
    var _classDecorators = [(0, common_1.Injectable)()];
    var _classDescriptor;
    var _classExtraInitializers = [];
    var _classThis;
    var NodemailerProvider = _classThis = /** @class */ (function () {
        function NodemailerProvider_1(loggerService, configurationService, templateService) {
            this.loggerService = loggerService;
            this.configurationService = configurationService;
            this.templateService = templateService;
            this.logger = this.loggerService.create({ name: 'NodemailerProvider' });
            this.initialise();
        }
        NodemailerProvider_1.prototype.initialise = function () {
            var _a;
            try {
                var host = (_a = this.configurationService.get('SERVER_EMAIL_MAILPIT_HOST')) !== null && _a !== void 0 ? _a : 'localhost';
                var port = this.configurationService.getNumber('SERVER_EMAIL_MAILPIT_PORT', 1022);
                this.client = NodemailerSDK.createTransport({
                    host: host,
                    port: port,
                });
                this.logger.success("Nodemailer is active (".concat(host, ":").concat(port, ")"));
            }
            catch (error) {
                this.logger.error("Nodemailer failed to start: ".concat(error.message));
            }
        };
        NodemailerProvider_1.prototype.send = function (options) {
            return __awaiter(this, void 0, void 0, function () {
                var from, content, _i, _a, to;
                var _this = this;
                return __generator(this, function (_b) {
                    switch (_b.label) {
                        case 0:
                            from = email_type_1.EmailSender.default;
                            content = this.templateService.get(options);
                            _i = 0, _a = options.to;
                            _b.label = 1;
                        case 1:
                            if (!(_i < _a.length)) return [3 /*break*/, 4];
                            to = _a[_i];
                            return [4 /*yield*/, this.client
                                    .sendMail({
                                    from: "".concat(from.name, " <").concat(from.email, ">"),
                                    to: to.email,
                                    subject: options.subject,
                                    html: content,
                                })
                                    .then(function (result) {
                                    _this.logger.log("Emails sent");
                                })
                                    .catch(function (error) {
                                    _this.logger.error("Could not send emails (".concat(error.statusCode, ")"));
                                    _this.logger.error(error);
                                })];
                        case 2:
                            _b.sent();
                            _b.label = 3;
                        case 3:
                            _i++;
                            return [3 /*break*/, 1];
                        case 4: return [2 /*return*/];
                    }
                });
            });
        };
        return NodemailerProvider_1;
    }());
    __setFunctionName(_classThis, "NodemailerProvider");
    (function () {
        var _metadata = typeof Symbol === "function" && Symbol.metadata ? Object.create(null) : void 0;
        __esDecorate(null, _classDescriptor = { value: _classThis }, _classDecorators, { kind: "class", name: _classThis.name, metadata: _metadata }, null, _classExtraInitializers);
        NodemailerProvider = _classThis = _classDescriptor.value;
        if (_metadata) Object.defineProperty(_classThis, Symbol.metadata, { enumerable: true, configurable: true, writable: true, value: _metadata });
        __runInitializers(_classThis, _classExtraInitializers);
    })();
    return NodemailerProvider = _classThis;
}();
exports.NodemailerProvider = NodemailerProvider;


// C:\grua-booking-system-25\server\dist\libraries\email\internal\templates\components.js
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Components = void 0;
exports.Components = {
    '<Card>': "\n      <div class=\"card\">\n    ".trim(),
    '</Card>': '</div>',
    '<Card.Header>': "\n      <table \n        class=\"card-header\"\n        cellpadding=\"0\" \n        cellspacing=\"0\" \n        style=\"border-collapse:separate;border-spacing:0;table-layout:fixed;width:100%;text-align:center\"\n      >\n        <tbody>\n    ".trim(),
    '</Card.Header>': '</tbody></table>',
    '<Card.Body>': "\n      <table \n        class=\"card-body\"\n        cellpadding=\"0\" \n        cellspacing=\"0\" \n        style=\"border-collapse:separate;border-spacing:0;table-layout:fixed;width:100%\"\n      >\n        <tbody>\n    ".trim(),
    '</Card.Body>': '</tbody></table>',
    '<Card.Footer>': "\n      <table \n        class=\"card-footer\"\n        cellpadding=\"0\" \n        cellspacing=\"0\" \n        style=\"border-collapse:separate;border-spacing:0;table-layout:fixed;width:100%;text-align:center\"\n      >\n        <tbody>\n    ".trim(),
    '</Card.Footer>': '</tbody></table>',
    '<p>': '<tr><td><p>',
    '</p>': '</p></td></tr>',
    '<h2>': '<tr><td><h2>',
    '</h2>': '</h2></td></tr>',
    '<hr />': '<tr><td><hr /></td></tr>',
};


// C:\grua-booking-system-25\server\dist\libraries\email\internal\templates\email.template.service.js
"use strict";
var __esDecorate = (this && this.__esDecorate) || function (ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {
    function accept(f) { if (f !== void 0 && typeof f !== "function") throw new TypeError("Function expected"); return f; }
    var kind = contextIn.kind, key = kind === "getter" ? "get" : kind === "setter" ? "set" : "value";
    var target = !descriptorIn && ctor ? contextIn["static"] ? ctor : ctor.prototype : null;
    var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});
    var _, done = false;
    for (var i = decorators.length - 1; i >= 0; i--) {
        var context = {};
        for (var p in contextIn) context[p] = p === "access" ? {} : contextIn[p];
        for (var p in contextIn.access) context.access[p] = contextIn.access[p];
        context.addInitializer = function (f) { if (done) throw new TypeError("Cannot add initializers after decoration has completed"); extraInitializers.push(accept(f || null)); };
        var result = (0, decorators[i])(kind === "accessor" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);
        if (kind === "accessor") {
            if (result === void 0) continue;
            if (result === null || typeof result !== "object") throw new TypeError("Object expected");
            if (_ = accept(result.get)) descriptor.get = _;
            if (_ = accept(result.set)) descriptor.set = _;
            if (_ = accept(result.init)) initializers.unshift(_);
        }
        else if (_ = accept(result)) {
            if (kind === "field") initializers.unshift(_);
            else descriptor[key] = _;
        }
    }
    if (target) Object.defineProperty(target, contextIn.name, descriptor);
    done = true;
};
var __runInitializers = (this && this.__runInitializers) || function (thisArg, initializers, value) {
    var useValue = arguments.length > 2;
    for (var i = 0; i < initializers.length; i++) {
        value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);
    }
    return useValue ? value : void 0;
};
var __setFunctionName = (this && this.__setFunctionName) || function (f, name, prefix) {
    if (typeof name === "symbol") name = name.description ? "[".concat(name.description, "]") : "";
    return Object.defineProperty(f, "name", { configurable: true, value: prefix ? "".concat(prefix, " ", name) : name });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.EmailTemplateService = void 0;
var common_1 = require("@nestjs/common");
var file_1 = require("@server/helpers/file");
var email_type_1 = require("../email.type");
var components_1 = require("./components");
var EmailTemplateService = function () {
    var _classDecorators = [(0, common_1.Injectable)()];
    var _classDescriptor;
    var _classExtraInitializers = [];
    var _classThis;
    var EmailTemplateService = _classThis = /** @class */ (function () {
        function EmailTemplateService_1() {
            var _a;
            this.pathTemplates = "".concat(file_1.FileHelper.getRoot(), "/src/libraries/email/internal/templates");
            this.mapping = (_a = {},
                _a[email_type_1.EmailType.AUTHORIZATION_VERIFICATION_CODE] = 'authorization-verification-code',
                _a[email_type_1.EmailType.AUTHENTICATION_WELCOME] = 'authentication-welcome',
                _a[email_type_1.EmailType.AUTHENTICATION_FORGOT_PASSWORD] = 'authentication-forgot-password',
                _a[email_type_1.EmailType.DEFAULT] = 'default',
                _a);
        }
        EmailTemplateService_1.prototype.get = function (options) {
            var _a;
            var values = (_a = options.variables) !== null && _a !== void 0 ? _a : { content: options.content };
            var pathBase = this.getPathBase();
            var pathCSS = this.getPathCSS();
            var pathTemplate = this.getPathTemplate(options.type);
            var contentBase = file_1.FileHelper.findFileContent(pathBase);
            var contentCSS = file_1.FileHelper.findFileContent(pathCSS);
            var contentTemplate = file_1.FileHelper.findFileContent(pathTemplate);
            var content = this.buildContent(contentTemplate, values);
            content = this.buildContent(contentBase, { style: contentCSS, content: content });
            content = this.buildComponents(content);
            return content;
        };
        EmailTemplateService_1.prototype.getPathTemplate = function (type) {
            var _a;
            var name = (_a = this.mapping[type]) !== null && _a !== void 0 ? _a : this.mapping[email_type_1.EmailType.DEFAULT];
            var path = "".concat(this.pathTemplates, "/").concat(name, ".template.html");
            return path;
        };
        EmailTemplateService_1.prototype.getPathBase = function () {
            var path = "".concat(this.pathTemplates, "/base.html");
            return path;
        };
        EmailTemplateService_1.prototype.getPathCSS = function () {
            var path = "".concat(this.pathTemplates, "/style.css");
            return path;
        };
        EmailTemplateService_1.prototype.buildContent = function (content, values) {
            var contentBuilt = content;
            for (var _i = 0, _a = Object.entries(values); _i < _a.length; _i++) {
                var _b = _a[_i], key = _b[0], value = _b[1];
                var token = new RegExp("{{ ".concat(key, " }}"), 'g');
                contentBuilt = contentBuilt.replace(token, value);
            }
            return contentBuilt;
        };
        EmailTemplateService_1.prototype.buildComponents = function (content) {
            var contentUpdated = content;
            for (var _i = 0, _a = Object.entries(components_1.Components); _i < _a.length; _i++) {
                var _b = _a[_i], key = _b[0], value = _b[1];
                var tag = new RegExp("".concat(key), 'g');
                contentUpdated = contentUpdated.replace(tag, value);
            }
            return contentUpdated;
        };
        return EmailTemplateService_1;
    }());
    __setFunctionName(_classThis, "EmailTemplateService");
    (function () {
        var _metadata = typeof Symbol === "function" && Symbol.metadata ? Object.create(null) : void 0;
        __esDecorate(null, _classDescriptor = { value: _classThis }, _classDecorators, { kind: "class", name: _classThis.name, metadata: _metadata }, null, _classExtraInitializers);
        EmailTemplateService = _classThis = _classDescriptor.value;
        if (_metadata) Object.defineProperty(_classThis, Symbol.metadata, { enumerable: true, configurable: true, writable: true, value: _metadata });
        __runInitializers(_classThis, _classExtraInitializers);
    })();
    return EmailTemplateService = _classThis;
}();
exports.EmailTemplateService = EmailTemplateService;


// C:\grua-booking-system-25\server\dist\libraries\email\internal\email.type.js
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.EmailSender = exports.EmailType = void 0;
var EmailType;
(function (EmailType) {
    EmailType["DEFAULT"] = "default";
    EmailType["AUTHENTICATION_WELCOME"] = "authentication.welcome.password";
    EmailType["AUTHENTICATION_FORGOT_PASSWORD"] = "authentication.forgot.password";
    EmailType["AUTHORIZATION_VERIFICATION_CODE"] = "authorization.verification.code";
})(EmailType || (exports.EmailType = EmailType = {}));
exports.EmailSender = {
    default: {
        email: 'no-reply@marblism.com',
        name: 'Marblism',
    },
};


// C:\grua-booking-system-25\server\dist\libraries\email\internal\providers\mailjet\mailjet.provider.js
"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __esDecorate = (this && this.__esDecorate) || function (ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {
    function accept(f) { if (f !== void 0 && typeof f !== "function") throw new TypeError("Function expected"); return f; }
    var kind = contextIn.kind, key = kind === "getter" ? "get" : kind === "setter" ? "set" : "value";
    var target = !descriptorIn && ctor ? contextIn["static"] ? ctor : ctor.prototype : null;
    var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});
    var _, done = false;
    for (var i = decorators.length - 1; i >= 0; i--) {
        var context = {};
        for (var p in contextIn) context[p] = p === "access" ? {} : contextIn[p];
        for (var p in contextIn.access) context.access[p] = contextIn.access[p];
        context.addInitializer = function (f) { if (done) throw new TypeError("Cannot add initializers after decoration has completed"); extraInitializers.push(accept(f || null)); };
        var result = (0, decorators[i])(kind === "accessor" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);
        if (kind === "accessor") {
            if (result === void 0) continue;
            if (result === null || typeof result !== "object") throw new TypeError("Object expected");
            if (_ = accept(result.get)) descriptor.get = _;
            if (_ = accept(result.set)) descriptor.set = _;
            if (_ = accept(result.init)) initializers.unshift(_);
        }
        else if (_ = accept(result)) {
            if (kind === "field") initializers.unshift(_);
            else descriptor[key] = _;
        }
    }
    if (target) Object.defineProperty(target, contextIn.name, descriptor);
    done = true;
};
var __runInitializers = (this && this.__runInitializers) || function (thisArg, initializers, value) {
    var useValue = arguments.length > 2;
    for (var i = 0; i < initializers.length; i++) {
        value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);
    }
    return useValue ? value : void 0;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (g && (g = 0, op[0] && (_ = 0)), _) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __setFunctionName = (this && this.__setFunctionName) || function (f, name, prefix) {
    if (typeof name === "symbol") name = name.description ? "[".concat(name.description, "]") : "";
    return Object.defineProperty(f, "name", { configurable: true, value: prefix ? "".concat(prefix, " ", name) : name });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.MailjetProvider = void 0;
var common_1 = require("@nestjs/common");
var node_mailjet_1 = require("node-mailjet");
var email_type_1 = require("../../email.type");
var MailjetProvider = function () {
    var _classDecorators = [(0, common_1.Injectable)()];
    var _classDescriptor;
    var _classExtraInitializers = [];
    var _classThis;
    var MailjetProvider = _classThis = /** @class */ (function () {
        function MailjetProvider_1(configurationService, loggerService, templateService) {
            var _a;
            this.configurationService = configurationService;
            this.loggerService = loggerService;
            this.templateService = templateService;
            this.templateIds = (_a = {},
                _a[email_type_1.EmailType.DEFAULT] = null,
                _a[email_type_1.EmailType.AUTHENTICATION_WELCOME] = null,
                _a[email_type_1.EmailType.AUTHENTICATION_FORGOT_PASSWORD] = null,
                _a[email_type_1.EmailType.AUTHORIZATION_VERIFICATION_CODE] = null,
                _a);
            this.logger = this.loggerService.create({ name: 'MailjetProvider' });
            this.initialise();
        }
        MailjetProvider_1.prototype.initialise = function () {
            var isProduction = this.configurationService.isEnvironmentProduction();
            if (!isProduction) {
                this.logger.warning("Mailjet is disabled in development");
                return;
            }
            try {
                var apiKey = this.configurationService.get('SERVER_EMAIL_MAILJET_API_KEY');
                var secretKey = this.configurationService.get('SERVER_EMAIL_MAILJET_SECRET_KEY');
                if (!apiKey || !secretKey) {
                    this.logger.warning("Set EMAIL_MAILJET_API_KEY and EMAIL_MAILJET_SECRET_KEY to activate Mailjet");
                    return;
                }
                this.client = new node_mailjet_1.default({ apiKey: apiKey, apiSecret: secretKey });
                this.logger.success("Mailjet service active");
            }
            catch (error) {
                this.logger.error("Could not start Mailjet service");
                this.logger.error(error);
            }
        };
        MailjetProvider_1.prototype.send = function (options) {
            return __awaiter(this, void 0, void 0, function () {
                var message;
                var _this = this;
                return __generator(this, function (_a) {
                    message = this.buildMessage(options);
                    return [2 /*return*/, this.client
                            .post('send', { version: 'v3.1' })
                            .request({
                            Messages: [
                                __assign({}, message),
                            ],
                        })
                            .then(function (result) {
                            _this.logger.log("Emails sent", result);
                        })
                            .catch(function (error) {
                            _this.logger.error("Could not send emails (".concat(error.statusCode, ")"));
                        })];
                });
            });
        };
        MailjetProvider_1.prototype.buildMessage = function (options) {
            var from = {
                Email: email_type_1.EmailSender.default.email,
                Name: email_type_1.EmailSender.default.name,
            };
            var to = options.to.map(function (item) { return ({ Email: item.email, Name: item.name }); });
            var message = {
                From: from,
                To: to,
                Subject: options.subject,
                HTMLPart: undefined,
                Variables: undefined,
                TemplateLanguage: undefined,
                templateId: undefined,
            };
            var templateId = this.templateIds[options.type];
            if (templateId) {
                message.TemplateLanguage = true;
                message.templateId = templateId;
                message.Variables = options.variables;
            }
            else {
                var content = this.templateService.get(options);
                message.HTMLPart = content;
            }
            return message;
        };
        return MailjetProvider_1;
    }());
    __setFunctionName(_classThis, "MailjetProvider");
    (function () {
        var _metadata = typeof Symbol === "function" && Symbol.metadata ? Object.create(null) : void 0;
        __esDecorate(null, _classDescriptor = { value: _classThis }, _classDecorators, { kind: "class", name: _classThis.name, metadata: _metadata }, null, _classExtraInitializers);
        MailjetProvider = _classThis = _classDescriptor.value;
        if (_metadata) Object.defineProperty(_classThis, Symbol.metadata, { enumerable: true, configurable: true, writable: true, value: _metadata });
        __runInitializers(_classThis, _classExtraInitializers);
    })();
    return MailjetProvider = _classThis;
}();
exports.MailjetProvider = MailjetProvider;


// C:\grua-booking-system-25\server\dist\libraries\email\internal\providers\nodemailer\nodemailer.provider.js
"use strict";
var __esDecorate = (this && this.__esDecorate) || function (ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {
    function accept(f) { if (f !== void 0 && typeof f !== "function") throw new TypeError("Function expected"); return f; }
    var kind = contextIn.kind, key = kind === "getter" ? "get" : kind === "setter" ? "set" : "value";
    var target = !descriptorIn && ctor ? contextIn["static"] ? ctor : ctor.prototype : null;
    var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});
    var _, done = false;
    for (var i = decorators.length - 1; i >= 0; i--) {
        var context = {};
        for (var p in contextIn) context[p] = p === "access" ? {} : contextIn[p];
        for (var p in contextIn.access) context.access[p] = contextIn.access[p];
        context.addInitializer = function (f) { if (done) throw new TypeError("Cannot add initializers after decoration has completed"); extraInitializers.push(accept(f || null)); };
        var result = (0, decorators[i])(kind === "accessor" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);
        if (kind === "accessor") {
            if (result === void 0) continue;
            if (result === null || typeof result !== "object") throw new TypeError("Object expected");
            if (_ = accept(result.get)) descriptor.get = _;
            if (_ = accept(result.set)) descriptor.set = _;
            if (_ = accept(result.init)) initializers.unshift(_);
        }
        else if (_ = accept(result)) {
            if (kind === "field") initializers.unshift(_);
            else descriptor[key] = _;
        }
    }
    if (target) Object.defineProperty(target, contextIn.name, descriptor);
    done = true;
};
var __runInitializers = (this && this.__runInitializers) || function (thisArg, initializers, value) {
    var useValue = arguments.length > 2;
    for (var i = 0; i < initializers.length; i++) {
        value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);
    }
    return useValue ? value : void 0;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (g && (g = 0, op[0] && (_ = 0)), _) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __setFunctionName = (this && this.__setFunctionName) || function (f, name, prefix) {
    if (typeof name === "symbol") name = name.description ? "[".concat(name.description, "]") : "";
    return Object.defineProperty(f, "name", { configurable: true, value: prefix ? "".concat(prefix, " ", name) : name });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.NodemailerProvider = void 0;
var common_1 = require("@nestjs/common");
var NodemailerSDK = require("nodemailer");
var email_type_1 = require("../../email.type");
var NodemailerProvider = function () {
    var _classDecorators = [(0, common_1.Injectable)()];
    var _classDescriptor;
    var _classExtraInitializers = [];
    var _classThis;
    var NodemailerProvider = _classThis = /** @class */ (function () {
        function NodemailerProvider_1(loggerService, configurationService, templateService) {
            this.loggerService = loggerService;
            this.configurationService = configurationService;
            this.templateService = templateService;
            this.logger = this.loggerService.create({ name: 'NodemailerProvider' });
            this.initialise();
        }
        NodemailerProvider_1.prototype.initialise = function () {
            var _a;
            try {
                var host = (_a = this.configurationService.get('SERVER_EMAIL_MAILPIT_HOST')) !== null && _a !== void 0 ? _a : 'localhost';
                var port = this.configurationService.getNumber('SERVER_EMAIL_MAILPIT_PORT', 1022);
                this.client = NodemailerSDK.createTransport({
                    host: host,
                    port: port,
                });
                this.logger.success("Nodemailer is active (".concat(host, ":").concat(port, ")"));
            }
            catch (error) {
                this.logger.error("Nodemailer failed to start: ".concat(error.message));
            }
        };
        NodemailerProvider_1.prototype.send = function (options) {
            return __awaiter(this, void 0, void 0, function () {
                var from, content, _i, _a, to;
                var _this = this;
                return __generator(this, function (_b) {
                    switch (_b.label) {
                        case 0:
                            from = email_type_1.EmailSender.default;
                            content = this.templateService.get(options);
                            _i = 0, _a = options.to;
                            _b.label = 1;
                        case 1:
                            if (!(_i < _a.length)) return [3 /*break*/, 4];
                            to = _a[_i];
                            return [4 /*yield*/, this.client
                                    .sendMail({
                                    from: "".concat(from.name, " <").concat(from.email, ">"),
                                    to: to.email,
                                    subject: options.subject,
                                    html: content,
                                })
                                    .then(function (result) {
                                    _this.logger.log("Emails sent");
                                })
                                    .catch(function (error) {
                                    _this.logger.error("Could not send emails (".concat(error.statusCode, ")"));
                                    _this.logger.error(error);
                                })];
                        case 2:
                            _b.sent();
                            _b.label = 3;
                        case 3:
                            _i++;
                            return [3 /*break*/, 1];
                        case 4: return [2 /*return*/];
                    }
                });
            });
        };
        return NodemailerProvider_1;
    }());
    __setFunctionName(_classThis, "NodemailerProvider");
    (function () {
        var _metadata = typeof Symbol === "function" && Symbol.metadata ? Object.create(null) : void 0;
        __esDecorate(null, _classDescriptor = { value: _classThis }, _classDecorators, { kind: "class", name: _classThis.name, metadata: _metadata }, null, _classExtraInitializers);
        NodemailerProvider = _classThis = _classDescriptor.value;
        if (_metadata) Object.defineProperty(_classThis, Symbol.metadata, { enumerable: true, configurable: true, writable: true, value: _metadata });
        __runInitializers(_classThis, _classExtraInitializers);
    })();
    return NodemailerProvider = _classThis;
}();
exports.NodemailerProvider = NodemailerProvider;


// C:\grua-booking-system-25\server\dist\libraries\email\internal\providers\provider.js
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });


// C:\grua-booking-system-25\server\dist\libraries\email\internal\providers\mailjet\mailjet.provider.js
"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __esDecorate = (this && this.__esDecorate) || function (ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {
    function accept(f) { if (f !== void 0 && typeof f !== "function") throw new TypeError("Function expected"); return f; }
    var kind = contextIn.kind, key = kind === "getter" ? "get" : kind === "setter" ? "set" : "value";
    var target = !descriptorIn && ctor ? contextIn["static"] ? ctor : ctor.prototype : null;
    var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});
    var _, done = false;
    for (var i = decorators.length - 1; i >= 0; i--) {
        var context = {};
        for (var p in contextIn) context[p] = p === "access" ? {} : contextIn[p];
        for (var p in contextIn.access) context.access[p] = contextIn.access[p];
        context.addInitializer = function (f) { if (done) throw new TypeError("Cannot add initializers after decoration has completed"); extraInitializers.push(accept(f || null)); };
        var result = (0, decorators[i])(kind === "accessor" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);
        if (kind === "accessor") {
            if (result === void 0) continue;
            if (result === null || typeof result !== "object") throw new TypeError("Object expected");
            if (_ = accept(result.get)) descriptor.get = _;
            if (_ = accept(result.set)) descriptor.set = _;
            if (_ = accept(result.init)) initializers.unshift(_);
        }
        else if (_ = accept(result)) {
            if (kind === "field") initializers.unshift(_);
            else descriptor[key] = _;
        }
    }
    if (target) Object.defineProperty(target, contextIn.name, descriptor);
    done = true;
};
var __runInitializers = (this && this.__runInitializers) || function (thisArg, initializers, value) {
    var useValue = arguments.length > 2;
    for (var i = 0; i < initializers.length; i++) {
        value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);
    }
    return useValue ? value : void 0;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (g && (g = 0, op[0] && (_ = 0)), _) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __setFunctionName = (this && this.__setFunctionName) || function (f, name, prefix) {
    if (typeof name === "symbol") name = name.description ? "[".concat(name.description, "]") : "";
    return Object.defineProperty(f, "name", { configurable: true, value: prefix ? "".concat(prefix, " ", name) : name });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.MailjetProvider = void 0;
var common_1 = require("@nestjs/common");
var node_mailjet_1 = require("node-mailjet");
var email_type_1 = require("../../email.type");
var MailjetProvider = function () {
    var _classDecorators = [(0, common_1.Injectable)()];
    var _classDescriptor;
    var _classExtraInitializers = [];
    var _classThis;
    var MailjetProvider = _classThis = /** @class */ (function () {
        function MailjetProvider_1(configurationService, loggerService, templateService) {
            var _a;
            this.configurationService = configurationService;
            this.loggerService = loggerService;
            this.templateService = templateService;
            this.templateIds = (_a = {},
                _a[email_type_1.EmailType.DEFAULT] = null,
                _a[email_type_1.EmailType.AUTHENTICATION_WELCOME] = null,
                _a[email_type_1.EmailType.AUTHENTICATION_FORGOT_PASSWORD] = null,
                _a[email_type_1.EmailType.AUTHORIZATION_VERIFICATION_CODE] = null,
                _a);
            this.logger = this.loggerService.create({ name: 'MailjetProvider' });
            this.initialise();
        }
        MailjetProvider_1.prototype.initialise = function () {
            var isProduction = this.configurationService.isEnvironmentProduction();
            if (!isProduction) {
                this.logger.warning("Mailjet is disabled in development");
                return;
            }
            try {
                var apiKey = this.configurationService.get('SERVER_EMAIL_MAILJET_API_KEY');
                var secretKey = this.configurationService.get('SERVER_EMAIL_MAILJET_SECRET_KEY');
                if (!apiKey || !secretKey) {
                    this.logger.warning("Set EMAIL_MAILJET_API_KEY and EMAIL_MAILJET_SECRET_KEY to activate Mailjet");
                    return;
                }
                this.client = new node_mailjet_1.default({ apiKey: apiKey, apiSecret: secretKey });
                this.logger.success("Mailjet service active");
            }
            catch (error) {
                this.logger.error("Could not start Mailjet service");
                this.logger.error(error);
            }
        };
        MailjetProvider_1.prototype.send = function (options) {
            return __awaiter(this, void 0, void 0, function () {
                var message;
                var _this = this;
                return __generator(this, function (_a) {
                    message = this.buildMessage(options);
                    return [2 /*return*/, this.client
                            .post('send', { version: 'v3.1' })
                            .request({
                            Messages: [
                                __assign({}, message),
                            ],
                        })
                            .then(function (result) {
                            _this.logger.log("Emails sent", result);
                        })
                            .catch(function (error) {
                            _this.logger.error("Could not send emails (".concat(error.statusCode, ")"));
                        })];
                });
            });
        };
        MailjetProvider_1.prototype.buildMessage = function (options) {
            var from = {
                Email: email_type_1.EmailSender.default.email,
                Name: email_type_1.EmailSender.default.name,
            };
            var to = options.to.map(function (item) { return ({ Email: item.email, Name: item.name }); });
            var message = {
                From: from,
                To: to,
                Subject: options.subject,
                HTMLPart: undefined,
                Variables: undefined,
                TemplateLanguage: undefined,
                templateId: undefined,
            };
            var templateId = this.templateIds[options.type];
            if (templateId) {
                message.TemplateLanguage = true;
                message.templateId = templateId;
                message.Variables = options.variables;
            }
            else {
                var content = this.templateService.get(options);
                message.HTMLPart = content;
            }
            return message;
        };
        return MailjetProvider_1;
    }());
    __setFunctionName(_classThis, "MailjetProvider");
    (function () {
        var _metadata = typeof Symbol === "function" && Symbol.metadata ? Object.create(null) : void 0;
        __esDecorate(null, _classDescriptor = { value: _classThis }, _classDecorators, { kind: "class", name: _classThis.name, metadata: _metadata }, null, _classExtraInitializers);
        MailjetProvider = _classThis = _classDescriptor.value;
        if (_metadata) Object.defineProperty(_classThis, Symbol.metadata, { enumerable: true, configurable: true, writable: true, value: _metadata });
        __runInitializers(_classThis, _classExtraInitializers);
    })();
    return MailjetProvider = _classThis;
}();
exports.MailjetProvider = MailjetProvider;


// C:\grua-booking-system-25\server\dist\libraries\email\internal\providers\nodemailer\nodemailer.provider.js
"use strict";
var __esDecorate = (this && this.__esDecorate) || function (ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {
    function accept(f) { if (f !== void 0 && typeof f !== "function") throw new TypeError("Function expected"); return f; }
    var kind = contextIn.kind, key = kind === "getter" ? "get" : kind === "setter" ? "set" : "value";
    var target = !descriptorIn && ctor ? contextIn["static"] ? ctor : ctor.prototype : null;
    var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});
    var _, done = false;
    for (var i = decorators.length - 1; i >= 0; i--) {
        var context = {};
        for (var p in contextIn) context[p] = p === "access" ? {} : contextIn[p];
        for (var p in contextIn.access) context.access[p] = contextIn.access[p];
        context.addInitializer = function (f) { if (done) throw new TypeError("Cannot add initializers after decoration has completed"); extraInitializers.push(accept(f || null)); };
        var result = (0, decorators[i])(kind === "accessor" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);
        if (kind === "accessor") {
            if (result === void 0) continue;
            if (result === null || typeof result !== "object") throw new TypeError("Object expected");
            if (_ = accept(result.get)) descriptor.get = _;
            if (_ = accept(result.set)) descriptor.set = _;
            if (_ = accept(result.init)) initializers.unshift(_);
        }
        else if (_ = accept(result)) {
            if (kind === "field") initializers.unshift(_);
            else descriptor[key] = _;
        }
    }
    if (target) Object.defineProperty(target, contextIn.name, descriptor);
    done = true;
};
var __runInitializers = (this && this.__runInitializers) || function (thisArg, initializers, value) {
    var useValue = arguments.length > 2;
    for (var i = 0; i < initializers.length; i++) {
        value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);
    }
    return useValue ? value : void 0;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (g && (g = 0, op[0] && (_ = 0)), _) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __setFunctionName = (this && this.__setFunctionName) || function (f, name, prefix) {
    if (typeof name === "symbol") name = name.description ? "[".concat(name.description, "]") : "";
    return Object.defineProperty(f, "name", { configurable: true, value: prefix ? "".concat(prefix, " ", name) : name });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.NodemailerProvider = void 0;
var common_1 = require("@nestjs/common");
var NodemailerSDK = require("nodemailer");
var email_type_1 = require("../../email.type");
var NodemailerProvider = function () {
    var _classDecorators = [(0, common_1.Injectable)()];
    var _classDescriptor;
    var _classExtraInitializers = [];
    var _classThis;
    var NodemailerProvider = _classThis = /** @class */ (function () {
        function NodemailerProvider_1(loggerService, configurationService, templateService) {
            this.loggerService = loggerService;
            this.configurationService = configurationService;
            this.templateService = templateService;
            this.logger = this.loggerService.create({ name: 'NodemailerProvider' });
            this.initialise();
        }
        NodemailerProvider_1.prototype.initialise = function () {
            var _a;
            try {
                var host = (_a = this.configurationService.get('SERVER_EMAIL_MAILPIT_HOST')) !== null && _a !== void 0 ? _a : 'localhost';
                var port = this.configurationService.getNumber('SERVER_EMAIL_MAILPIT_PORT', 1022);
                this.client = NodemailerSDK.createTransport({
                    host: host,
                    port: port,
                });
                this.logger.success("Nodemailer is active (".concat(host, ":").concat(port, ")"));
            }
            catch (error) {
                this.logger.error("Nodemailer failed to start: ".concat(error.message));
            }
        };
        NodemailerProvider_1.prototype.send = function (options) {
            return __awaiter(this, void 0, void 0, function () {
                var from, content, _i, _a, to;
                var _this = this;
                return __generator(this, function (_b) {
                    switch (_b.label) {
                        case 0:
                            from = email_type_1.EmailSender.default;
                            content = this.templateService.get(options);
                            _i = 0, _a = options.to;
                            _b.label = 1;
                        case 1:
                            if (!(_i < _a.length)) return [3 /*break*/, 4];
                            to = _a[_i];
                            return [4 /*yield*/, this.client
                                    .sendMail({
                                    from: "".concat(from.name, " <").concat(from.email, ">"),
                                    to: to.email,
                                    subject: options.subject,
                                    html: content,
                                })
                                    .then(function (result) {
                                    _this.logger.log("Emails sent");
                                })
                                    .catch(function (error) {
                                    _this.logger.error("Could not send emails (".concat(error.statusCode, ")"));
                                    _this.logger.error(error);
                                })];
                        case 2:
                            _b.sent();
                            _b.label = 3;
                        case 3:
                            _i++;
                            return [3 /*break*/, 1];
                        case 4: return [2 /*return*/];
                    }
                });
            });
        };
        return NodemailerProvider_1;
    }());
    __setFunctionName(_classThis, "NodemailerProvider");
    (function () {
        var _metadata = typeof Symbol === "function" && Symbol.metadata ? Object.create(null) : void 0;
        __esDecorate(null, _classDescriptor = { value: _classThis }, _classDecorators, { kind: "class", name: _classThis.name, metadata: _metadata }, null, _classExtraInitializers);
        NodemailerProvider = _classThis = _classDescriptor.value;
        if (_metadata) Object.defineProperty(_classThis, Symbol.metadata, { enumerable: true, configurable: true, writable: true, value: _metadata });
        __runInitializers(_classThis, _classExtraInitializers);
    })();
    return NodemailerProvider = _classThis;
}();
exports.NodemailerProvider = NodemailerProvider;


// C:\grua-booking-system-25\server\dist\libraries\email\internal\templates\components.js
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Components = void 0;
exports.Components = {
    '<Card>': "\n      <div class=\"card\">\n    ".trim(),
    '</Card>': '</div>',
    '<Card.Header>': "\n      <table \n        class=\"card-header\"\n        cellpadding=\"0\" \n        cellspacing=\"0\" \n        style=\"border-collapse:separate;border-spacing:0;table-layout:fixed;width:100%;text-align:center\"\n      >\n        <tbody>\n    ".trim(),
    '</Card.Header>': '</tbody></table>',
    '<Card.Body>': "\n      <table \n        class=\"card-body\"\n        cellpadding=\"0\" \n        cellspacing=\"0\" \n        style=\"border-collapse:separate;border-spacing:0;table-layout:fixed;width:100%\"\n      >\n        <tbody>\n    ".trim(),
    '</Card.Body>': '</tbody></table>',
    '<Card.Footer>': "\n      <table \n        class=\"card-footer\"\n        cellpadding=\"0\" \n        cellspacing=\"0\" \n        style=\"border-collapse:separate;border-spacing:0;table-layout:fixed;width:100%;text-align:center\"\n      >\n        <tbody>\n    ".trim(),
    '</Card.Footer>': '</tbody></table>',
    '<p>': '<tr><td><p>',
    '</p>': '</p></td></tr>',
    '<h2>': '<tr><td><h2>',
    '</h2>': '</h2></td></tr>',
    '<hr />': '<tr><td><hr /></td></tr>',
};


// C:\grua-booking-system-25\server\dist\libraries\email\internal\templates\email.template.service.js
"use strict";
var __esDecorate = (this && this.__esDecorate) || function (ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {
    function accept(f) { if (f !== void 0 && typeof f !== "function") throw new TypeError("Function expected"); return f; }
    var kind = contextIn.kind, key = kind === "getter" ? "get" : kind === "setter" ? "set" : "value";
    var target = !descriptorIn && ctor ? contextIn["static"] ? ctor : ctor.prototype : null;
    var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});
    var _, done = false;
    for (var i = decorators.length - 1; i >= 0; i--) {
        var context = {};
        for (var p in contextIn) context[p] = p === "access" ? {} : contextIn[p];
        for (var p in contextIn.access) context.access[p] = contextIn.access[p];
        context.addInitializer = function (f) { if (done) throw new TypeError("Cannot add initializers after decoration has completed"); extraInitializers.push(accept(f || null)); };
        var result = (0, decorators[i])(kind === "accessor" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);
        if (kind === "accessor") {
            if (result === void 0) continue;
            if (result === null || typeof result !== "object") throw new TypeError("Object expected");
            if (_ = accept(result.get)) descriptor.get = _;
            if (_ = accept(result.set)) descriptor.set = _;
            if (_ = accept(result.init)) initializers.unshift(_);
        }
        else if (_ = accept(result)) {
            if (kind === "field") initializers.unshift(_);
            else descriptor[key] = _;
        }
    }
    if (target) Object.defineProperty(target, contextIn.name, descriptor);
    done = true;
};
var __runInitializers = (this && this.__runInitializers) || function (thisArg, initializers, value) {
    var useValue = arguments.length > 2;
    for (var i = 0; i < initializers.length; i++) {
        value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);
    }
    return useValue ? value : void 0;
};
var __setFunctionName = (this && this.__setFunctionName) || function (f, name, prefix) {
    if (typeof name === "symbol") name = name.description ? "[".concat(name.description, "]") : "";
    return Object.defineProperty(f, "name", { configurable: true, value: prefix ? "".concat(prefix, " ", name) : name });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.EmailTemplateService = void 0;
var common_1 = require("@nestjs/common");
var file_1 = require("@server/helpers/file");
var email_type_1 = require("../email.type");
var components_1 = require("./components");
var EmailTemplateService = function () {
    var _classDecorators = [(0, common_1.Injectable)()];
    var _classDescriptor;
    var _classExtraInitializers = [];
    var _classThis;
    var EmailTemplateService = _classThis = /** @class */ (function () {
        function EmailTemplateService_1() {
            var _a;
            this.pathTemplates = "".concat(file_1.FileHelper.getRoot(), "/src/libraries/email/internal/templates");
            this.mapping = (_a = {},
                _a[email_type_1.EmailType.AUTHORIZATION_VERIFICATION_CODE] = 'authorization-verification-code',
                _a[email_type_1.EmailType.AUTHENTICATION_WELCOME] = 'authentication-welcome',
                _a[email_type_1.EmailType.AUTHENTICATION_FORGOT_PASSWORD] = 'authentication-forgot-password',
                _a[email_type_1.EmailType.DEFAULT] = 'default',
                _a);
        }
        EmailTemplateService_1.prototype.get = function (options) {
            var _a;
            var values = (_a = options.variables) !== null && _a !== void 0 ? _a : { content: options.content };
            var pathBase = this.getPathBase();
            var pathCSS = this.getPathCSS();
            var pathTemplate = this.getPathTemplate(options.type);
            var contentBase = file_1.FileHelper.findFileContent(pathBase);
            var contentCSS = file_1.FileHelper.findFileContent(pathCSS);
            var contentTemplate = file_1.FileHelper.findFileContent(pathTemplate);
            var content = this.buildContent(contentTemplate, values);
            content = this.buildContent(contentBase, { style: contentCSS, content: content });
            content = this.buildComponents(content);
            return content;
        };
        EmailTemplateService_1.prototype.getPathTemplate = function (type) {
            var _a;
            var name = (_a = this.mapping[type]) !== null && _a !== void 0 ? _a : this.mapping[email_type_1.EmailType.DEFAULT];
            var path = "".concat(this.pathTemplates, "/").concat(name, ".template.html");
            return path;
        };
        EmailTemplateService_1.prototype.getPathBase = function () {
            var path = "".concat(this.pathTemplates, "/base.html");
            return path;
        };
        EmailTemplateService_1.prototype.getPathCSS = function () {
            var path = "".concat(this.pathTemplates, "/style.css");
            return path;
        };
        EmailTemplateService_1.prototype.buildContent = function (content, values) {
            var contentBuilt = content;
            for (var _i = 0, _a = Object.entries(values); _i < _a.length; _i++) {
                var _b = _a[_i], key = _b[0], value = _b[1];
                var token = new RegExp("{{ ".concat(key, " }}"), 'g');
                contentBuilt = contentBuilt.replace(token, value);
            }
            return contentBuilt;
        };
        EmailTemplateService_1.prototype.buildComponents = function (content) {
            var contentUpdated = content;
            for (var _i = 0, _a = Object.entries(components_1.Components); _i < _a.length; _i++) {
                var _b = _a[_i], key = _b[0], value = _b[1];
                var tag = new RegExp("".concat(key), 'g');
                contentUpdated = contentUpdated.replace(tag, value);
            }
            return contentUpdated;
        };
        return EmailTemplateService_1;
    }());
    __setFunctionName(_classThis, "EmailTemplateService");
    (function () {
        var _metadata = typeof Symbol === "function" && Symbol.metadata ? Object.create(null) : void 0;
        __esDecorate(null, _classDescriptor = { value: _classThis }, _classDecorators, { kind: "class", name: _classThis.name, metadata: _metadata }, null, _classExtraInitializers);
        EmailTemplateService = _classThis = _classDescriptor.value;
        if (_metadata) Object.defineProperty(_classThis, Symbol.metadata, { enumerable: true, configurable: true, writable: true, value: _metadata });
        __runInitializers(_classThis, _classExtraInitializers);
    })();
    return EmailTemplateService = _classThis;
}();
exports.EmailTemplateService = EmailTemplateService;


// C:\grua-booking-system-25\server\dist\libraries\email\email.service.js
"use strict";
var __esDecorate = (this && this.__esDecorate) || function (ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {
    function accept(f) { if (f !== void 0 && typeof f !== "function") throw new TypeError("Function expected"); return f; }
    var kind = contextIn.kind, key = kind === "getter" ? "get" : kind === "setter" ? "set" : "value";
    var target = !descriptorIn && ctor ? contextIn["static"] ? ctor : ctor.prototype : null;
    var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});
    var _, done = false;
    for (var i = decorators.length - 1; i >= 0; i--) {
        var context = {};
        for (var p in contextIn) context[p] = p === "access" ? {} : contextIn[p];
        for (var p in contextIn.access) context.access[p] = contextIn.access[p];
        context.addInitializer = function (f) { if (done) throw new TypeError("Cannot add initializers after decoration has completed"); extraInitializers.push(accept(f || null)); };
        var result = (0, decorators[i])(kind === "accessor" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);
        if (kind === "accessor") {
            if (result === void 0) continue;
            if (result === null || typeof result !== "object") throw new TypeError("Object expected");
            if (_ = accept(result.get)) descriptor.get = _;
            if (_ = accept(result.set)) descriptor.set = _;
            if (_ = accept(result.init)) initializers.unshift(_);
        }
        else if (_ = accept(result)) {
            if (kind === "field") initializers.unshift(_);
            else descriptor[key] = _;
        }
    }
    if (target) Object.defineProperty(target, contextIn.name, descriptor);
    done = true;
};
var __runInitializers = (this && this.__runInitializers) || function (thisArg, initializers, value) {
    var useValue = arguments.length > 2;
    for (var i = 0; i < initializers.length; i++) {
        value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);
    }
    return useValue ? value : void 0;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (g && (g = 0, op[0] && (_ = 0)), _) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __setFunctionName = (this && this.__setFunctionName) || function (f, name, prefix) {
    if (typeof name === "symbol") name = name.description ? "[".concat(name.description, "]") : "";
    return Object.defineProperty(f, "name", { configurable: true, value: prefix ? "".concat(prefix, " ", name) : name });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.EmailService = void 0;
var common_1 = require("@nestjs/common");
var email_type_1 = require("./internal/email.type");
var EmailService = function () {
    var _classDecorators = [(0, common_1.Injectable)()];
    var _classDescriptor;
    var _classExtraInitializers = [];
    var _classThis;
    var EmailService = _classThis = /** @class */ (function () {
        function EmailService_1(loggerService, configurationService, nodemailerProvider, mailjetProvider) {
            this.loggerService = loggerService;
            this.configurationService = configurationService;
            this.nodemailerProvider = nodemailerProvider;
            this.mailjetProvider = mailjetProvider;
            this.Type = email_type_1.EmailType;
            this.logger = this.loggerService.create({ name: 'EmailService' });
            var isProduction = this.configurationService.isEnvironmentProduction();
            if (isProduction) {
                this.provider = this.mailjetProvider;
            }
            else {
                this.provider = this.nodemailerProvider;
            }
        }
        EmailService_1.prototype.send = function (options) {
            return __awaiter(this, void 0, void 0, function () {
                var _this = this;
                return __generator(this, function (_a) {
                    return [2 /*return*/, this.provider
                            .send({
                            type: options.type,
                            content: options.content,
                            to: [
                                {
                                    name: options.name,
                                    email: options.email,
                                },
                            ],
                            variables: options.variables,
                            subject: options.subject,
                        })
                            .then(function () {
                            _this.logger.log("Email sent to ".concat(options.email), options);
                        })];
                });
            });
        };
        return EmailService_1;
    }());
    __setFunctionName(_classThis, "EmailService");
    (function () {
        var _metadata = typeof Symbol === "function" && Symbol.metadata ? Object.create(null) : void 0;
        __esDecorate(null, _classDescriptor = { value: _classThis }, _classDecorators, { kind: "class", name: _classThis.name, metadata: _metadata }, null, _classExtraInitializers);
        EmailService = _classThis = _classDescriptor.value;
        if (_metadata) Object.defineProperty(_classThis, Symbol.metadata, { enumerable: true, configurable: true, writable: true, value: _metadata });
        __runInitializers(_classThis, _classExtraInitializers);
    })();
    return EmailService = _classThis;
}();
exports.EmailService = EmailService;


// C:\grua-booking-system-25\server\dist\libraries\email\index.js
"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", { value: true });
__exportStar(require("./email.service"), exports);


// C:\grua-booking-system-25\server\dist\libraries\email\internal\providers\mailjet\mailjet.provider.js
"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __esDecorate = (this && this.__esDecorate) || function (ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {
    function accept(f) { if (f !== void 0 && typeof f !== "function") throw new TypeError("Function expected"); return f; }
    var kind = contextIn.kind, key = kind === "getter" ? "get" : kind === "setter" ? "set" : "value";
    var target = !descriptorIn && ctor ? contextIn["static"] ? ctor : ctor.prototype : null;
    var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});
    var _, done = false;
    for (var i = decorators.length - 1; i >= 0; i--) {
        var context = {};
        for (var p in contextIn) context[p] = p === "access" ? {} : contextIn[p];
        for (var p in contextIn.access) context.access[p] = contextIn.access[p];
        context.addInitializer = function (f) { if (done) throw new TypeError("Cannot add initializers after decoration has completed"); extraInitializers.push(accept(f || null)); };
        var result = (0, decorators[i])(kind === "accessor" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);
        if (kind === "accessor") {
            if (result === void 0) continue;
            if (result === null || typeof result !== "object") throw new TypeError("Object expected");
            if (_ = accept(result.get)) descriptor.get = _;
            if (_ = accept(result.set)) descriptor.set = _;
            if (_ = accept(result.init)) initializers.unshift(_);
        }
        else if (_ = accept(result)) {
            if (kind === "field") initializers.unshift(_);
            else descriptor[key] = _;
        }
    }
    if (target) Object.defineProperty(target, contextIn.name, descriptor);
    done = true;
};
var __runInitializers = (this && this.__runInitializers) || function (thisArg, initializers, value) {
    var useValue = arguments.length > 2;
    for (var i = 0; i < initializers.length; i++) {
        value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);
    }
    return useValue ? value : void 0;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (g && (g = 0, op[0] && (_ = 0)), _) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __setFunctionName = (this && this.__setFunctionName) || function (f, name, prefix) {
    if (typeof name === "symbol") name = name.description ? "[".concat(name.description, "]") : "";
    return Object.defineProperty(f, "name", { configurable: true, value: prefix ? "".concat(prefix, " ", name) : name });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.MailjetProvider = void 0;
var common_1 = require("@nestjs/common");
var node_mailjet_1 = require("node-mailjet");
var email_type_1 = require("../../email.type");
var MailjetProvider = function () {
    var _classDecorators = [(0, common_1.Injectable)()];
    var _classDescriptor;
    var _classExtraInitializers = [];
    var _classThis;
    var MailjetProvider = _classThis = /** @class */ (function () {
        function MailjetProvider_1(configurationService, loggerService, templateService) {
            var _a;
            this.configurationService = configurationService;
            this.loggerService = loggerService;
            this.templateService = templateService;
            this.templateIds = (_a = {},
                _a[email_type_1.EmailType.DEFAULT] = null,
                _a[email_type_1.EmailType.AUTHENTICATION_WELCOME] = null,
                _a[email_type_1.EmailType.AUTHENTICATION_FORGOT_PASSWORD] = null,
                _a[email_type_1.EmailType.AUTHORIZATION_VERIFICATION_CODE] = null,
                _a);
            this.logger = this.loggerService.create({ name: 'MailjetProvider' });
            this.initialise();
        }
        MailjetProvider_1.prototype.initialise = function () {
            var isProduction = this.configurationService.isEnvironmentProduction();
            if (!isProduction) {
                this.logger.warning("Mailjet is disabled in development");
                return;
            }
            try {
                var apiKey = this.configurationService.get('SERVER_EMAIL_MAILJET_API_KEY');
                var secretKey = this.configurationService.get('SERVER_EMAIL_MAILJET_SECRET_KEY');
                if (!apiKey || !secretKey) {
                    this.logger.warning("Set EMAIL_MAILJET_API_KEY and EMAIL_MAILJET_SECRET_KEY to activate Mailjet");
                    return;
                }
                this.client = new node_mailjet_1.default({ apiKey: apiKey, apiSecret: secretKey });
                this.logger.success("Mailjet service active");
            }
            catch (error) {
                this.logger.error("Could not start Mailjet service");
                this.logger.error(error);
            }
        };
        MailjetProvider_1.prototype.send = function (options) {
            return __awaiter(this, void 0, void 0, function () {
                var message;
                var _this = this;
                return __generator(this, function (_a) {
                    message = this.buildMessage(options);
                    return [2 /*return*/, this.client
                            .post('send', { version: 'v3.1' })
                            .request({
                            Messages: [
                                __assign({}, message),
                            ],
                        })
                            .then(function (result) {
                            _this.logger.log("Emails sent", result);
                        })
                            .catch(function (error) {
                            _this.logger.error("Could not send emails (".concat(error.statusCode, ")"));
                        })];
                });
            });
        };
        MailjetProvider_1.prototype.buildMessage = function (options) {
            var from = {
                Email: email_type_1.EmailSender.default.email,
                Name: email_type_1.EmailSender.default.name,
            };
            var to = options.to.map(function (item) { return ({ Email: item.email, Name: item.name }); });
            var message = {
                From: from,
                To: to,
                Subject: options.subject,
                HTMLPart: undefined,
                Variables: undefined,
                TemplateLanguage: undefined,
                templateId: undefined,
            };
            var templateId = this.templateIds[options.type];
            if (templateId) {
                message.TemplateLanguage = true;
                message.templateId = templateId;
                message.Variables = options.variables;
            }
            else {
                var content = this.templateService.get(options);
                message.HTMLPart = content;
            }
            return message;
        };
        return MailjetProvider_1;
    }());
    __setFunctionName(_classThis, "MailjetProvider");
    (function () {
        var _metadata = typeof Symbol === "function" && Symbol.metadata ? Object.create(null) : void 0;
        __esDecorate(null, _classDescriptor = { value: _classThis }, _classDecorators, { kind: "class", name: _classThis.name, metadata: _metadata }, null, _classExtraInitializers);
        MailjetProvider = _classThis = _classDescriptor.value;
        if (_metadata) Object.defineProperty(_classThis, Symbol.metadata, { enumerable: true, configurable: true, writable: true, value: _metadata });
        __runInitializers(_classThis, _classExtraInitializers);
    })();
    return MailjetProvider = _classThis;
}();
exports.MailjetProvider = MailjetProvider;


// C:\grua-booking-system-25\server\dist\libraries\email\internal\providers\nodemailer\nodemailer.provider.js
"use strict";
var __esDecorate = (this && this.__esDecorate) || function (ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {
    function accept(f) { if (f !== void 0 && typeof f !== "function") throw new TypeError("Function expected"); return f; }
    var kind = contextIn.kind, key = kind === "getter" ? "get" : kind === "setter" ? "set" : "value";
    var target = !descriptorIn && ctor ? contextIn["static"] ? ctor : ctor.prototype : null;
    var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});
    var _, done = false;
    for (var i = decorators.length - 1; i >= 0; i--) {
        var context = {};
        for (var p in contextIn) context[p] = p === "access" ? {} : contextIn[p];
        for (var p in contextIn.access) context.access[p] = contextIn.access[p];
        context.addInitializer = function (f) { if (done) throw new TypeError("Cannot add initializers after decoration has completed"); extraInitializers.push(accept(f || null)); };
        var result = (0, decorators[i])(kind === "accessor" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);
        if (kind === "accessor") {
            if (result === void 0) continue;
            if (result === null || typeof result !== "object") throw new TypeError("Object expected");
            if (_ = accept(result.get)) descriptor.get = _;
            if (_ = accept(result.set)) descriptor.set = _;
            if (_ = accept(result.init)) initializers.unshift(_);
        }
        else if (_ = accept(result)) {
            if (kind === "field") initializers.unshift(_);
            else descriptor[key] = _;
        }
    }
    if (target) Object.defineProperty(target, contextIn.name, descriptor);
    done = true;
};
var __runInitializers = (this && this.__runInitializers) || function (thisArg, initializers, value) {
    var useValue = arguments.length > 2;
    for (var i = 0; i < initializers.length; i++) {
        value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);
    }
    return useValue ? value : void 0;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (g && (g = 0, op[0] && (_ = 0)), _) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __setFunctionName = (this && this.__setFunctionName) || function (f, name, prefix) {
    if (typeof name === "symbol") name = name.description ? "[".concat(name.description, "]") : "";
    return Object.defineProperty(f, "name", { configurable: true, value: prefix ? "".concat(prefix, " ", name) : name });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.NodemailerProvider = void 0;
var common_1 = require("@nestjs/common");
var NodemailerSDK = require("nodemailer");
var email_type_1 = require("../../email.type");
var NodemailerProvider = function () {
    var _classDecorators = [(0, common_1.Injectable)()];
    var _classDescriptor;
    var _classExtraInitializers = [];
    var _classThis;
    var NodemailerProvider = _classThis = /** @class */ (function () {
        function NodemailerProvider_1(loggerService, configurationService, templateService) {
            this.loggerService = loggerService;
            this.configurationService = configurationService;
            this.templateService = templateService;
            this.logger = this.loggerService.create({ name: 'NodemailerProvider' });
            this.initialise();
        }
        NodemailerProvider_1.prototype.initialise = function () {
            var _a;
            try {
                var host = (_a = this.configurationService.get('SERVER_EMAIL_MAILPIT_HOST')) !== null && _a !== void 0 ? _a : 'localhost';
                var port = this.configurationService.getNumber('SERVER_EMAIL_MAILPIT_PORT', 1022);
                this.client = NodemailerSDK.createTransport({
                    host: host,
                    port: port,
                });
                this.logger.success("Nodemailer is active (".concat(host, ":").concat(port, ")"));
            }
            catch (error) {
                this.logger.error("Nodemailer failed to start: ".concat(error.message));
            }
        };
        NodemailerProvider_1.prototype.send = function (options) {
            return __awaiter(this, void 0, void 0, function () {
                var from, content, _i, _a, to;
                var _this = this;
                return __generator(this, function (_b) {
                    switch (_b.label) {
                        case 0:
                            from = email_type_1.EmailSender.default;
                            content = this.templateService.get(options);
                            _i = 0, _a = options.to;
                            _b.label = 1;
                        case 1:
                            if (!(_i < _a.length)) return [3 /*break*/, 4];
                            to = _a[_i];
                            return [4 /*yield*/, this.client
                                    .sendMail({
                                    from: "".concat(from.name, " <").concat(from.email, ">"),
                                    to: to.email,
                                    subject: options.subject,
                                    html: content,
                                })
                                    .then(function (result) {
                                    _this.logger.log("Emails sent");
                                })
                                    .catch(function (error) {
                                    _this.logger.error("Could not send emails (".concat(error.statusCode, ")"));
                                    _this.logger.error(error);
                                })];
                        case 2:
                            _b.sent();
                            _b.label = 3;
                        case 3:
                            _i++;
                            return [3 /*break*/, 1];
                        case 4: return [2 /*return*/];
                    }
                });
            });
        };
        return NodemailerProvider_1;
    }());
    __setFunctionName(_classThis, "NodemailerProvider");
    (function () {
        var _metadata = typeof Symbol === "function" && Symbol.metadata ? Object.create(null) : void 0;
        __esDecorate(null, _classDescriptor = { value: _classThis }, _classDecorators, { kind: "class", name: _classThis.name, metadata: _metadata }, null, _classExtraInitializers);
        NodemailerProvider = _classThis = _classDescriptor.value;
        if (_metadata) Object.defineProperty(_classThis, Symbol.metadata, { enumerable: true, configurable: true, writable: true, value: _metadata });
        __runInitializers(_classThis, _classExtraInitializers);
    })();
    return NodemailerProvider = _classThis;
}();
exports.NodemailerProvider = NodemailerProvider;


// C:\grua-booking-system-25\server\dist\libraries\email\internal\providers\provider.js
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });


// C:\grua-booking-system-25\server\dist\libraries\email\internal\providers\mailjet\mailjet.provider.js
"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __esDecorate = (this && this.__esDecorate) || function (ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {
    function accept(f) { if (f !== void 0 && typeof f !== "function") throw new TypeError("Function expected"); return f; }
    var kind = contextIn.kind, key = kind === "getter" ? "get" : kind === "setter" ? "set" : "value";
    var target = !descriptorIn && ctor ? contextIn["static"] ? ctor : ctor.prototype : null;
    var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});
    var _, done = false;
    for (var i = decorators.length - 1; i >= 0; i--) {
        var context = {};
        for (var p in contextIn) context[p] = p === "access" ? {} : contextIn[p];
        for (var p in contextIn.access) context.access[p] = contextIn.access[p];
        context.addInitializer = function (f) { if (done) throw new TypeError("Cannot add initializers after decoration has completed"); extraInitializers.push(accept(f || null)); };
        var result = (0, decorators[i])(kind === "accessor" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);
        if (kind === "accessor") {
            if (result === void 0) continue;
            if (result === null || typeof result !== "object") throw new TypeError("Object expected");
            if (_ = accept(result.get)) descriptor.get = _;
            if (_ = accept(result.set)) descriptor.set = _;
            if (_ = accept(result.init)) initializers.unshift(_);
        }
        else if (_ = accept(result)) {
            if (kind === "field") initializers.unshift(_);
            else descriptor[key] = _;
        }
    }
    if (target) Object.defineProperty(target, contextIn.name, descriptor);
    done = true;
};
var __runInitializers = (this && this.__runInitializers) || function (thisArg, initializers, value) {
    var useValue = arguments.length > 2;
    for (var i = 0; i < initializers.length; i++) {
        value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);
    }
    return useValue ? value : void 0;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (g && (g = 0, op[0] && (_ = 0)), _) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __setFunctionName = (this && this.__setFunctionName) || function (f, name, prefix) {
    if (typeof name === "symbol") name = name.description ? "[".concat(name.description, "]") : "";
    return Object.defineProperty(f, "name", { configurable: true, value: prefix ? "".concat(prefix, " ", name) : name });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.MailjetProvider = void 0;
var common_1 = require("@nestjs/common");
var node_mailjet_1 = require("node-mailjet");
var email_type_1 = require("../../email.type");
var MailjetProvider = function () {
    var _classDecorators = [(0, common_1.Injectable)()];
    var _classDescriptor;
    var _classExtraInitializers = [];
    var _classThis;
    var MailjetProvider = _classThis = /** @class */ (function () {
        function MailjetProvider_1(configurationService, loggerService, templateService) {
            var _a;
            this.configurationService = configurationService;
            this.loggerService = loggerService;
            this.templateService = templateService;
            this.templateIds = (_a = {},
                _a[email_type_1.EmailType.DEFAULT] = null,
                _a[email_type_1.EmailType.AUTHENTICATION_WELCOME] = null,
                _a[email_type_1.EmailType.AUTHENTICATION_FORGOT_PASSWORD] = null,
                _a[email_type_1.EmailType.AUTHORIZATION_VERIFICATION_CODE] = null,
                _a);
            this.logger = this.loggerService.create({ name: 'MailjetProvider' });
            this.initialise();
        }
        MailjetProvider_1.prototype.initialise = function () {
            var isProduction = this.configurationService.isEnvironmentProduction();
            if (!isProduction) {
                this.logger.warning("Mailjet is disabled in development");
                return;
            }
            try {
                var apiKey = this.configurationService.get('SERVER_EMAIL_MAILJET_API_KEY');
                var secretKey = this.configurationService.get('SERVER_EMAIL_MAILJET_SECRET_KEY');
                if (!apiKey || !secretKey) {
                    this.logger.warning("Set EMAIL_MAILJET_API_KEY and EMAIL_MAILJET_SECRET_KEY to activate Mailjet");
                    return;
                }
                this.client = new node_mailjet_1.default({ apiKey: apiKey, apiSecret: secretKey });
                this.logger.success("Mailjet service active");
            }
            catch (error) {
                this.logger.error("Could not start Mailjet service");
                this.logger.error(error);
            }
        };
        MailjetProvider_1.prototype.send = function (options) {
            return __awaiter(this, void 0, void 0, function () {
                var message;
                var _this = this;
                return __generator(this, function (_a) {
                    message = this.buildMessage(options);
                    return [2 /*return*/, this.client
                            .post('send', { version: 'v3.1' })
                            .request({
                            Messages: [
                                __assign({}, message),
                            ],
                        })
                            .then(function (result) {
                            _this.logger.log("Emails sent", result);
                        })
                            .catch(function (error) {
                            _this.logger.error("Could not send emails (".concat(error.statusCode, ")"));
                        })];
                });
            });
        };
        MailjetProvider_1.prototype.buildMessage = function (options) {
            var from = {
                Email: email_type_1.EmailSender.default.email,
                Name: email_type_1.EmailSender.default.name,
            };
            var to = options.to.map(function (item) { return ({ Email: item.email, Name: item.name }); });
            var message = {
                From: from,
                To: to,
                Subject: options.subject,
                HTMLPart: undefined,
                Variables: undefined,
                TemplateLanguage: undefined,
                templateId: undefined,
            };
            var templateId = this.templateIds[options.type];
            if (templateId) {
                message.TemplateLanguage = true;
                message.templateId = templateId;
                message.Variables = options.variables;
            }
            else {
                var content = this.templateService.get(options);
                message.HTMLPart = content;
            }
            return message;
        };
        return MailjetProvider_1;
    }());
    __setFunctionName(_classThis, "MailjetProvider");
    (function () {
        var _metadata = typeof Symbol === "function" && Symbol.metadata ? Object.create(null) : void 0;
        __esDecorate(null, _classDescriptor = { value: _classThis }, _classDecorators, { kind: "class", name: _classThis.name, metadata: _metadata }, null, _classExtraInitializers);
        MailjetProvider = _classThis = _classDescriptor.value;
        if (_metadata) Object.defineProperty(_classThis, Symbol.metadata, { enumerable: true, configurable: true, writable: true, value: _metadata });
        __runInitializers(_classThis, _classExtraInitializers);
    })();
    return MailjetProvider = _classThis;
}();
exports.MailjetProvider = MailjetProvider;


// C:\grua-booking-system-25\server\dist\libraries\email\internal\providers\nodemailer\nodemailer.provider.js
"use strict";
var __esDecorate = (this && this.__esDecorate) || function (ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {
    function accept(f) { if (f !== void 0 && typeof f !== "function") throw new TypeError("Function expected"); return f; }
    var kind = contextIn.kind, key = kind === "getter" ? "get" : kind === "setter" ? "set" : "value";
    var target = !descriptorIn && ctor ? contextIn["static"] ? ctor : ctor.prototype : null;
    var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});
    var _, done = false;
    for (var i = decorators.length - 1; i >= 0; i--) {
        var context = {};
        for (var p in contextIn) context[p] = p === "access" ? {} : contextIn[p];
        for (var p in contextIn.access) context.access[p] = contextIn.access[p];
        context.addInitializer = function (f) { if (done) throw new TypeError("Cannot add initializers after decoration has completed"); extraInitializers.push(accept(f || null)); };
        var result = (0, decorators[i])(kind === "accessor" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);
        if (kind === "accessor") {
            if (result === void 0) continue;
            if (result === null || typeof result !== "object") throw new TypeError("Object expected");
            if (_ = accept(result.get)) descriptor.get = _;
            if (_ = accept(result.set)) descriptor.set = _;
            if (_ = accept(result.init)) initializers.unshift(_);
        }
        else if (_ = accept(result)) {
            if (kind === "field") initializers.unshift(_);
            else descriptor[key] = _;
        }
    }
    if (target) Object.defineProperty(target, contextIn.name, descriptor);
    done = true;
};
var __runInitializers = (this && this.__runInitializers) || function (thisArg, initializers, value) {
    var useValue = arguments.length > 2;
    for (var i = 0; i < initializers.length; i++) {
        value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);
    }
    return useValue ? value : void 0;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (g && (g = 0, op[0] && (_ = 0)), _) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __setFunctionName = (this && this.__setFunctionName) || function (f, name, prefix) {
    if (typeof name === "symbol") name = name.description ? "[".concat(name.description, "]") : "";
    return Object.defineProperty(f, "name", { configurable: true, value: prefix ? "".concat(prefix, " ", name) : name });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.NodemailerProvider = void 0;
var common_1 = require("@nestjs/common");
var NodemailerSDK = require("nodemailer");
var email_type_1 = require("../../email.type");
var NodemailerProvider = function () {
    var _classDecorators = [(0, common_1.Injectable)()];
    var _classDescriptor;
    var _classExtraInitializers = [];
    var _classThis;
    var NodemailerProvider = _classThis = /** @class */ (function () {
        function NodemailerProvider_1(loggerService, configurationService, templateService) {
            this.loggerService = loggerService;
            this.configurationService = configurationService;
            this.templateService = templateService;
            this.logger = this.loggerService.create({ name: 'NodemailerProvider' });
            this.initialise();
        }
        NodemailerProvider_1.prototype.initialise = function () {
            var _a;
            try {
                var host = (_a = this.configurationService.get('SERVER_EMAIL_MAILPIT_HOST')) !== null && _a !== void 0 ? _a : 'localhost';
                var port = this.configurationService.getNumber('SERVER_EMAIL_MAILPIT_PORT', 1022);
                this.client = NodemailerSDK.createTransport({
                    host: host,
                    port: port,
                });
                this.logger.success("Nodemailer is active (".concat(host, ":").concat(port, ")"));
            }
            catch (error) {
                this.logger.error("Nodemailer failed to start: ".concat(error.message));
            }
        };
        NodemailerProvider_1.prototype.send = function (options) {
            return __awaiter(this, void 0, void 0, function () {
                var from, content, _i, _a, to;
                var _this = this;
                return __generator(this, function (_b) {
                    switch (_b.label) {
                        case 0:
                            from = email_type_1.EmailSender.default;
                            content = this.templateService.get(options);
                            _i = 0, _a = options.to;
                            _b.label = 1;
                        case 1:
                            if (!(_i < _a.length)) return [3 /*break*/, 4];
                            to = _a[_i];
                            return [4 /*yield*/, this.client
                                    .sendMail({
                                    from: "".concat(from.name, " <").concat(from.email, ">"),
                                    to: to.email,
                                    subject: options.subject,
                                    html: content,
                                })
                                    .then(function (result) {
                                    _this.logger.log("Emails sent");
                                })
                                    .catch(function (error) {
                                    _this.logger.error("Could not send emails (".concat(error.statusCode, ")"));
                                    _this.logger.error(error);
                                })];
                        case 2:
                            _b.sent();
                            _b.label = 3;
                        case 3:
                            _i++;
                            return [3 /*break*/, 1];
                        case 4: return [2 /*return*/];
                    }
                });
            });
        };
        return NodemailerProvider_1;
    }());
    __setFunctionName(_classThis, "NodemailerProvider");
    (function () {
        var _metadata = typeof Symbol === "function" && Symbol.metadata ? Object.create(null) : void 0;
        __esDecorate(null, _classDescriptor = { value: _classThis }, _classDecorators, { kind: "class", name: _classThis.name, metadata: _metadata }, null, _classExtraInitializers);
        NodemailerProvider = _classThis = _classDescriptor.value;
        if (_metadata) Object.defineProperty(_classThis, Symbol.metadata, { enumerable: true, configurable: true, writable: true, value: _metadata });
        __runInitializers(_classThis, _classExtraInitializers);
    })();
    return NodemailerProvider = _classThis;
}();
exports.NodemailerProvider = NodemailerProvider;


// C:\grua-booking-system-25\server\dist\libraries\email\internal\templates\components.js
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Components = void 0;
exports.Components = {
    '<Card>': "\n      <div class=\"card\">\n    ".trim(),
    '</Card>': '</div>',
    '<Card.Header>': "\n      <table \n        class=\"card-header\"\n        cellpadding=\"0\" \n        cellspacing=\"0\" \n        style=\"border-collapse:separate;border-spacing:0;table-layout:fixed;width:100%;text-align:center\"\n      >\n        <tbody>\n    ".trim(),
    '</Card.Header>': '</tbody></table>',
    '<Card.Body>': "\n      <table \n        class=\"card-body\"\n        cellpadding=\"0\" \n        cellspacing=\"0\" \n        style=\"border-collapse:separate;border-spacing:0;table-layout:fixed;width:100%\"\n      >\n        <tbody>\n    ".trim(),
    '</Card.Body>': '</tbody></table>',
    '<Card.Footer>': "\n      <table \n        class=\"card-footer\"\n        cellpadding=\"0\" \n        cellspacing=\"0\" \n        style=\"border-collapse:separate;border-spacing:0;table-layout:fixed;width:100%;text-align:center\"\n      >\n        <tbody>\n    ".trim(),
    '</Card.Footer>': '</tbody></table>',
    '<p>': '<tr><td><p>',
    '</p>': '</p></td></tr>',
    '<h2>': '<tr><td><h2>',
    '</h2>': '</h2></td></tr>',
    '<hr />': '<tr><td><hr /></td></tr>',
};


// C:\grua-booking-system-25\server\dist\libraries\email\internal\templates\email.template.service.js
"use strict";
var __esDecorate = (this && this.__esDecorate) || function (ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {
    function accept(f) { if (f !== void 0 && typeof f !== "function") throw new TypeError("Function expected"); return f; }
    var kind = contextIn.kind, key = kind === "getter" ? "get" : kind === "setter" ? "set" : "value";
    var target = !descriptorIn && ctor ? contextIn["static"] ? ctor : ctor.prototype : null;
    var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});
    var _, done = false;
    for (var i = decorators.length - 1; i >= 0; i--) {
        var context = {};
        for (var p in contextIn) context[p] = p === "access" ? {} : contextIn[p];
        for (var p in contextIn.access) context.access[p] = contextIn.access[p];
        context.addInitializer = function (f) { if (done) throw new TypeError("Cannot add initializers after decoration has completed"); extraInitializers.push(accept(f || null)); };
        var result = (0, decorators[i])(kind === "accessor" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);
        if (kind === "accessor") {
            if (result === void 0) continue;
            if (result === null || typeof result !== "object") throw new TypeError("Object expected");
            if (_ = accept(result.get)) descriptor.get = _;
            if (_ = accept(result.set)) descriptor.set = _;
            if (_ = accept(result.init)) initializers.unshift(_);
        }
        else if (_ = accept(result)) {
            if (kind === "field") initializers.unshift(_);
            else descriptor[key] = _;
        }
    }
    if (target) Object.defineProperty(target, contextIn.name, descriptor);
    done = true;
};
var __runInitializers = (this && this.__runInitializers) || function (thisArg, initializers, value) {
    var useValue = arguments.length > 2;
    for (var i = 0; i < initializers.length; i++) {
        value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);
    }
    return useValue ? value : void 0;
};
var __setFunctionName = (this && this.__setFunctionName) || function (f, name, prefix) {
    if (typeof name === "symbol") name = name.description ? "[".concat(name.description, "]") : "";
    return Object.defineProperty(f, "name", { configurable: true, value: prefix ? "".concat(prefix, " ", name) : name });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.EmailTemplateService = void 0;
var common_1 = require("@nestjs/common");
var file_1 = require("@server/helpers/file");
var email_type_1 = require("../email.type");
var components_1 = require("./components");
var EmailTemplateService = function () {
    var _classDecorators = [(0, common_1.Injectable)()];
    var _classDescriptor;
    var _classExtraInitializers = [];
    var _classThis;
    var EmailTemplateService = _classThis = /** @class */ (function () {
        function EmailTemplateService_1() {
            var _a;
            this.pathTemplates = "".concat(file_1.FileHelper.getRoot(), "/src/libraries/email/internal/templates");
            this.mapping = (_a = {},
                _a[email_type_1.EmailType.AUTHORIZATION_VERIFICATION_CODE] = 'authorization-verification-code',
                _a[email_type_1.EmailType.AUTHENTICATION_WELCOME] = 'authentication-welcome',
                _a[email_type_1.EmailType.AUTHENTICATION_FORGOT_PASSWORD] = 'authentication-forgot-password',
                _a[email_type_1.EmailType.DEFAULT] = 'default',
                _a);
        }
        EmailTemplateService_1.prototype.get = function (options) {
            var _a;
            var values = (_a = options.variables) !== null && _a !== void 0 ? _a : { content: options.content };
            var pathBase = this.getPathBase();
            var pathCSS = this.getPathCSS();
            var pathTemplate = this.getPathTemplate(options.type);
            var contentBase = file_1.FileHelper.findFileContent(pathBase);
            var contentCSS = file_1.FileHelper.findFileContent(pathCSS);
            var contentTemplate = file_1.FileHelper.findFileContent(pathTemplate);
            var content = this.buildContent(contentTemplate, values);
            content = this.buildContent(contentBase, { style: contentCSS, content: content });
            content = this.buildComponents(content);
            return content;
        };
        EmailTemplateService_1.prototype.getPathTemplate = function (type) {
            var _a;
            var name = (_a = this.mapping[type]) !== null && _a !== void 0 ? _a : this.mapping[email_type_1.EmailType.DEFAULT];
            var path = "".concat(this.pathTemplates, "/").concat(name, ".template.html");
            return path;
        };
        EmailTemplateService_1.prototype.getPathBase = function () {
            var path = "".concat(this.pathTemplates, "/base.html");
            return path;
        };
        EmailTemplateService_1.prototype.getPathCSS = function () {
            var path = "".concat(this.pathTemplates, "/style.css");
            return path;
        };
        EmailTemplateService_1.prototype.buildContent = function (content, values) {
            var contentBuilt = content;
            for (var _i = 0, _a = Object.entries(values); _i < _a.length; _i++) {
                var _b = _a[_i], key = _b[0], value = _b[1];
                var token = new RegExp("{{ ".concat(key, " }}"), 'g');
                contentBuilt = contentBuilt.replace(token, value);
            }
            return contentBuilt;
        };
        EmailTemplateService_1.prototype.buildComponents = function (content) {
            var contentUpdated = content;
            for (var _i = 0, _a = Object.entries(components_1.Components); _i < _a.length; _i++) {
                var _b = _a[_i], key = _b[0], value = _b[1];
                var tag = new RegExp("".concat(key), 'g');
                contentUpdated = contentUpdated.replace(tag, value);
            }
            return contentUpdated;
        };
        return EmailTemplateService_1;
    }());
    __setFunctionName(_classThis, "EmailTemplateService");
    (function () {
        var _metadata = typeof Symbol === "function" && Symbol.metadata ? Object.create(null) : void 0;
        __esDecorate(null, _classDescriptor = { value: _classThis }, _classDecorators, { kind: "class", name: _classThis.name, metadata: _metadata }, null, _classExtraInitializers);
        EmailTemplateService = _classThis = _classDescriptor.value;
        if (_metadata) Object.defineProperty(_classThis, Symbol.metadata, { enumerable: true, configurable: true, writable: true, value: _metadata });
        __runInitializers(_classThis, _classExtraInitializers);
    })();
    return EmailTemplateService = _classThis;
}();
exports.EmailTemplateService = EmailTemplateService;


// C:\grua-booking-system-25\server\dist\libraries\email\internal\email.type.js
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.EmailSender = exports.EmailType = void 0;
var EmailType;
(function (EmailType) {
    EmailType["DEFAULT"] = "default";
    EmailType["AUTHENTICATION_WELCOME"] = "authentication.welcome.password";
    EmailType["AUTHENTICATION_FORGOT_PASSWORD"] = "authentication.forgot.password";
    EmailType["AUTHORIZATION_VERIFICATION_CODE"] = "authorization.verification.code";
})(EmailType || (exports.EmailType = EmailType = {}));
exports.EmailSender = {
    default: {
        email: 'no-reply@marblism.com',
        name: 'Marblism',
    },
};


// C:\grua-booking-system-25\server\dist\libraries\email\internal\providers\mailjet\mailjet.provider.js
"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __esDecorate = (this && this.__esDecorate) || function (ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {
    function accept(f) { if (f !== void 0 && typeof f !== "function") throw new TypeError("Function expected"); return f; }
    var kind = contextIn.kind, key = kind === "getter" ? "get" : kind === "setter" ? "set" : "value";
    var target = !descriptorIn && ctor ? contextIn["static"] ? ctor : ctor.prototype : null;
    var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});
    var _, done = false;
    for (var i = decorators.length - 1; i >= 0; i--) {
        var context = {};
        for (var p in contextIn) context[p] = p === "access" ? {} : contextIn[p];
        for (var p in contextIn.access) context.access[p] = contextIn.access[p];
        context.addInitializer = function (f) { if (done) throw new TypeError("Cannot add initializers after decoration has completed"); extraInitializers.push(accept(f || null)); };
        var result = (0, decorators[i])(kind === "accessor" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);
        if (kind === "accessor") {
            if (result === void 0) continue;
            if (result === null || typeof result !== "object") throw new TypeError("Object expected");
            if (_ = accept(result.get)) descriptor.get = _;
            if (_ = accept(result.set)) descriptor.set = _;
            if (_ = accept(result.init)) initializers.unshift(_);
        }
        else if (_ = accept(result)) {
            if (kind === "field") initializers.unshift(_);
            else descriptor[key] = _;
        }
    }
    if (target) Object.defineProperty(target, contextIn.name, descriptor);
    done = true;
};
var __runInitializers = (this && this.__runInitializers) || function (thisArg, initializers, value) {
    var useValue = arguments.length > 2;
    for (var i = 0; i < initializers.length; i++) {
        value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);
    }
    return useValue ? value : void 0;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (g && (g = 0, op[0] && (_ = 0)), _) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __setFunctionName = (this && this.__setFunctionName) || function (f, name, prefix) {
    if (typeof name === "symbol") name = name.description ? "[".concat(name.description, "]") : "";
    return Object.defineProperty(f, "name", { configurable: true, value: prefix ? "".concat(prefix, " ", name) : name });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.MailjetProvider = void 0;
var common_1 = require("@nestjs/common");
var node_mailjet_1 = require("node-mailjet");
var email_type_1 = require("../../email.type");
var MailjetProvider = function () {
    var _classDecorators = [(0, common_1.Injectable)()];
    var _classDescriptor;
    var _classExtraInitializers = [];
    var _classThis;
    var MailjetProvider = _classThis = /** @class */ (function () {
        function MailjetProvider_1(configurationService, loggerService, templateService) {
            var _a;
            this.configurationService = configurationService;
            this.loggerService = loggerService;
            this.templateService = templateService;
            this.templateIds = (_a = {},
                _a[email_type_1.EmailType.DEFAULT] = null,
                _a[email_type_1.EmailType.AUTHENTICATION_WELCOME] = null,
                _a[email_type_1.EmailType.AUTHENTICATION_FORGOT_PASSWORD] = null,
                _a[email_type_1.EmailType.AUTHORIZATION_VERIFICATION_CODE] = null,
                _a);
            this.logger = this.loggerService.create({ name: 'MailjetProvider' });
            this.initialise();
        }
        MailjetProvider_1.prototype.initialise = function () {
            var isProduction = this.configurationService.isEnvironmentProduction();
            if (!isProduction) {
                this.logger.warning("Mailjet is disabled in development");
                return;
            }
            try {
                var apiKey = this.configurationService.get('SERVER_EMAIL_MAILJET_API_KEY');
                var secretKey = this.configurationService.get('SERVER_EMAIL_MAILJET_SECRET_KEY');
                if (!apiKey || !secretKey) {
                    this.logger.warning("Set EMAIL_MAILJET_API_KEY and EMAIL_MAILJET_SECRET_KEY to activate Mailjet");
                    return;
                }
                this.client = new node_mailjet_1.default({ apiKey: apiKey, apiSecret: secretKey });
                this.logger.success("Mailjet service active");
            }
            catch (error) {
                this.logger.error("Could not start Mailjet service");
                this.logger.error(error);
            }
        };
        MailjetProvider_1.prototype.send = function (options) {
            return __awaiter(this, void 0, void 0, function () {
                var message;
                var _this = this;
                return __generator(this, function (_a) {
                    message = this.buildMessage(options);
                    return [2 /*return*/, this.client
                            .post('send', { version: 'v3.1' })
                            .request({
                            Messages: [
                                __assign({}, message),
                            ],
                        })
                            .then(function (result) {
                            _this.logger.log("Emails sent", result);
                        })
                            .catch(function (error) {
                            _this.logger.error("Could not send emails (".concat(error.statusCode, ")"));
                        })];
                });
            });
        };
        MailjetProvider_1.prototype.buildMessage = function (options) {
            var from = {
                Email: email_type_1.EmailSender.default.email,
                Name: email_type_1.EmailSender.default.name,
            };
            var to = options.to.map(function (item) { return ({ Email: item.email, Name: item.name }); });
            var message = {
                From: from,
                To: to,
                Subject: options.subject,
                HTMLPart: undefined,
                Variables: undefined,
                TemplateLanguage: undefined,
                templateId: undefined,
            };
            var templateId = this.templateIds[options.type];
            if (templateId) {
                message.TemplateLanguage = true;
                message.templateId = templateId;
                message.Variables = options.variables;
            }
            else {
                var content = this.templateService.get(options);
                message.HTMLPart = content;
            }
            return message;
        };
        return MailjetProvider_1;
    }());
    __setFunctionName(_classThis, "MailjetProvider");
    (function () {
        var _metadata = typeof Symbol === "function" && Symbol.metadata ? Object.create(null) : void 0;
        __esDecorate(null, _classDescriptor = { value: _classThis }, _classDecorators, { kind: "class", name: _classThis.name, metadata: _metadata }, null, _classExtraInitializers);
        MailjetProvider = _classThis = _classDescriptor.value;
        if (_metadata) Object.defineProperty(_classThis, Symbol.metadata, { enumerable: true, configurable: true, writable: true, value: _metadata });
        __runInitializers(_classThis, _classExtraInitializers);
    })();
    return MailjetProvider = _classThis;
}();
exports.MailjetProvider = MailjetProvider;


// C:\grua-booking-system-25\server\dist\libraries\email\internal\providers\nodemailer\nodemailer.provider.js
"use strict";
var __esDecorate = (this && this.__esDecorate) || function (ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {
    function accept(f) { if (f !== void 0 && typeof f !== "function") throw new TypeError("Function expected"); return f; }
    var kind = contextIn.kind, key = kind === "getter" ? "get" : kind === "setter" ? "set" : "value";
    var target = !descriptorIn && ctor ? contextIn["static"] ? ctor : ctor.prototype : null;
    var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});
    var _, done = false;
    for (var i = decorators.length - 1; i >= 0; i--) {
        var context = {};
        for (var p in contextIn) context[p] = p === "access" ? {} : contextIn[p];
        for (var p in contextIn.access) context.access[p] = contextIn.access[p];
        context.addInitializer = function (f) { if (done) throw new TypeError("Cannot add initializers after decoration has completed"); extraInitializers.push(accept(f || null)); };
        var result = (0, decorators[i])(kind === "accessor" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);
        if (kind === "accessor") {
            if (result === void 0) continue;
            if (result === null || typeof result !== "object") throw new TypeError("Object expected");
            if (_ = accept(result.get)) descriptor.get = _;
            if (_ = accept(result.set)) descriptor.set = _;
            if (_ = accept(result.init)) initializers.unshift(_);
        }
        else if (_ = accept(result)) {
            if (kind === "field") initializers.unshift(_);
            else descriptor[key] = _;
        }
    }
    if (target) Object.defineProperty(target, contextIn.name, descriptor);
    done = true;
};
var __runInitializers = (this && this.__runInitializers) || function (thisArg, initializers, value) {
    var useValue = arguments.length > 2;
    for (var i = 0; i < initializers.length; i++) {
        value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);
    }
    return useValue ? value : void 0;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (g && (g = 0, op[0] && (_ = 0)), _) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __setFunctionName = (this && this.__setFunctionName) || function (f, name, prefix) {
    if (typeof name === "symbol") name = name.description ? "[".concat(name.description, "]") : "";
    return Object.defineProperty(f, "name", { configurable: true, value: prefix ? "".concat(prefix, " ", name) : name });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.NodemailerProvider = void 0;
var common_1 = require("@nestjs/common");
var NodemailerSDK = require("nodemailer");
var email_type_1 = require("../../email.type");
var NodemailerProvider = function () {
    var _classDecorators = [(0, common_1.Injectable)()];
    var _classDescriptor;
    var _classExtraInitializers = [];
    var _classThis;
    var NodemailerProvider = _classThis = /** @class */ (function () {
        function NodemailerProvider_1(loggerService, configurationService, templateService) {
            this.loggerService = loggerService;
            this.configurationService = configurationService;
            this.templateService = templateService;
            this.logger = this.loggerService.create({ name: 'NodemailerProvider' });
            this.initialise();
        }
        NodemailerProvider_1.prototype.initialise = function () {
            var _a;
            try {
                var host = (_a = this.configurationService.get('SERVER_EMAIL_MAILPIT_HOST')) !== null && _a !== void 0 ? _a : 'localhost';
                var port = this.configurationService.getNumber('SERVER_EMAIL_MAILPIT_PORT', 1022);
                this.client = NodemailerSDK.createTransport({
                    host: host,
                    port: port,
                });
                this.logger.success("Nodemailer is active (".concat(host, ":").concat(port, ")"));
            }
            catch (error) {
                this.logger.error("Nodemailer failed to start: ".concat(error.message));
            }
        };
        NodemailerProvider_1.prototype.send = function (options) {
            return __awaiter(this, void 0, void 0, function () {
                var from, content, _i, _a, to;
                var _this = this;
                return __generator(this, function (_b) {
                    switch (_b.label) {
                        case 0:
                            from = email_type_1.EmailSender.default;
                            content = this.templateService.get(options);
                            _i = 0, _a = options.to;
                            _b.label = 1;
                        case 1:
                            if (!(_i < _a.length)) return [3 /*break*/, 4];
                            to = _a[_i];
                            return [4 /*yield*/, this.client
                                    .sendMail({
                                    from: "".concat(from.name, " <").concat(from.email, ">"),
                                    to: to.email,
                                    subject: options.subject,
                                    html: content,
                                })
                                    .then(function (result) {
                                    _this.logger.log("Emails sent");
                                })
                                    .catch(function (error) {
                                    _this.logger.error("Could not send emails (".concat(error.statusCode, ")"));
                                    _this.logger.error(error);
                                })];
                        case 2:
                            _b.sent();
                            _b.label = 3;
                        case 3:
                            _i++;
                            return [3 /*break*/, 1];
                        case 4: return [2 /*return*/];
                    }
                });
            });
        };
        return NodemailerProvider_1;
    }());
    __setFunctionName(_classThis, "NodemailerProvider");
    (function () {
        var _metadata = typeof Symbol === "function" && Symbol.metadata ? Object.create(null) : void 0;
        __esDecorate(null, _classDescriptor = { value: _classThis }, _classDecorators, { kind: "class", name: _classThis.name, metadata: _metadata }, null, _classExtraInitializers);
        NodemailerProvider = _classThis = _classDescriptor.value;
        if (_metadata) Object.defineProperty(_classThis, Symbol.metadata, { enumerable: true, configurable: true, writable: true, value: _metadata });
        __runInitializers(_classThis, _classExtraInitializers);
    })();
    return NodemailerProvider = _classThis;
}();
exports.NodemailerProvider = NodemailerProvider;


// C:\grua-booking-system-25\server\dist\libraries\email\internal\providers\provider.js
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });


// C:\grua-booking-system-25\server\dist\libraries\email\internal\providers\mailjet\mailjet.provider.js
"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __esDecorate = (this && this.__esDecorate) || function (ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {
    function accept(f) { if (f !== void 0 && typeof f !== "function") throw new TypeError("Function expected"); return f; }
    var kind = contextIn.kind, key = kind === "getter" ? "get" : kind === "setter" ? "set" : "value";
    var target = !descriptorIn && ctor ? contextIn["static"] ? ctor : ctor.prototype : null;
    var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});
    var _, done = false;
    for (var i = decorators.length - 1; i >= 0; i--) {
        var context = {};
        for (var p in contextIn) context[p] = p === "access" ? {} : contextIn[p];
        for (var p in contextIn.access) context.access[p] = contextIn.access[p];
        context.addInitializer = function (f) { if (done) throw new TypeError("Cannot add initializers after decoration has completed"); extraInitializers.push(accept(f || null)); };
        var result = (0, decorators[i])(kind === "accessor" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);
        if (kind === "accessor") {
            if (result === void 0) continue;
            if (result === null || typeof result !== "object") throw new TypeError("Object expected");
            if (_ = accept(result.get)) descriptor.get = _;
            if (_ = accept(result.set)) descriptor.set = _;
            if (_ = accept(result.init)) initializers.unshift(_);
        }
        else if (_ = accept(result)) {
            if (kind === "field") initializers.unshift(_);
            else descriptor[key] = _;
        }
    }
    if (target) Object.defineProperty(target, contextIn.name, descriptor);
    done = true;
};
var __runInitializers = (this && this.__runInitializers) || function (thisArg, initializers, value) {
    var useValue = arguments.length > 2;
    for (var i = 0; i < initializers.length; i++) {
        value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);
    }
    return useValue ? value : void 0;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (g && (g = 0, op[0] && (_ = 0)), _) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __setFunctionName = (this && this.__setFunctionName) || function (f, name, prefix) {
    if (typeof name === "symbol") name = name.description ? "[".concat(name.description, "]") : "";
    return Object.defineProperty(f, "name", { configurable: true, value: prefix ? "".concat(prefix, " ", name) : name });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.MailjetProvider = void 0;
var common_1 = require("@nestjs/common");
var node_mailjet_1 = require("node-mailjet");
var email_type_1 = require("../../email.type");
var MailjetProvider = function () {
    var _classDecorators = [(0, common_1.Injectable)()];
    var _classDescriptor;
    var _classExtraInitializers = [];
    var _classThis;
    var MailjetProvider = _classThis = /** @class */ (function () {
        function MailjetProvider_1(configurationService, loggerService, templateService) {
            var _a;
            this.configurationService = configurationService;
            this.loggerService = loggerService;
            this.templateService = templateService;
            this.templateIds = (_a = {},
                _a[email_type_1.EmailType.DEFAULT] = null,
                _a[email_type_1.EmailType.AUTHENTICATION_WELCOME] = null,
                _a[email_type_1.EmailType.AUTHENTICATION_FORGOT_PASSWORD] = null,
                _a[email_type_1.EmailType.AUTHORIZATION_VERIFICATION_CODE] = null,
                _a);
            this.logger = this.loggerService.create({ name: 'MailjetProvider' });
            this.initialise();
        }
        MailjetProvider_1.prototype.initialise = function () {
            var isProduction = this.configurationService.isEnvironmentProduction();
            if (!isProduction) {
                this.logger.warning("Mailjet is disabled in development");
                return;
            }
            try {
                var apiKey = this.configurationService.get('SERVER_EMAIL_MAILJET_API_KEY');
                var secretKey = this.configurationService.get('SERVER_EMAIL_MAILJET_SECRET_KEY');
                if (!apiKey || !secretKey) {
                    this.logger.warning("Set EMAIL_MAILJET_API_KEY and EMAIL_MAILJET_SECRET_KEY to activate Mailjet");
                    return;
                }
                this.client = new node_mailjet_1.default({ apiKey: apiKey, apiSecret: secretKey });
                this.logger.success("Mailjet service active");
            }
            catch (error) {
                this.logger.error("Could not start Mailjet service");
                this.logger.error(error);
            }
        };
        MailjetProvider_1.prototype.send = function (options) {
            return __awaiter(this, void 0, void 0, function () {
                var message;
                var _this = this;
                return __generator(this, function (_a) {
                    message = this.buildMessage(options);
                    return [2 /*return*/, this.client
                            .post('send', { version: 'v3.1' })
                            .request({
                            Messages: [
                                __assign({}, message),
                            ],
                        })
                            .then(function (result) {
                            _this.logger.log("Emails sent", result);
                        })
                            .catch(function (error) {
                            _this.logger.error("Could not send emails (".concat(error.statusCode, ")"));
                        })];
                });
            });
        };
        MailjetProvider_1.prototype.buildMessage = function (options) {
            var from = {
                Email: email_type_1.EmailSender.default.email,
                Name: email_type_1.EmailSender.default.name,
            };
            var to = options.to.map(function (item) { return ({ Email: item.email, Name: item.name }); });
            var message = {
                From: from,
                To: to,
                Subject: options.subject,
                HTMLPart: undefined,
                Variables: undefined,
                TemplateLanguage: undefined,
                templateId: undefined,
            };
            var templateId = this.templateIds[options.type];
            if (templateId) {
                message.TemplateLanguage = true;
                message.templateId = templateId;
                message.Variables = options.variables;
            }
            else {
                var content = this.templateService.get(options);
                message.HTMLPart = content;
            }
            return message;
        };
        return MailjetProvider_1;
    }());
    __setFunctionName(_classThis, "MailjetProvider");
    (function () {
        var _metadata = typeof Symbol === "function" && Symbol.metadata ? Object.create(null) : void 0;
        __esDecorate(null, _classDescriptor = { value: _classThis }, _classDecorators, { kind: "class", name: _classThis.name, metadata: _metadata }, null, _classExtraInitializers);
        MailjetProvider = _classThis = _classDescriptor.value;
        if (_metadata) Object.defineProperty(_classThis, Symbol.metadata, { enumerable: true, configurable: true, writable: true, value: _metadata });
        __runInitializers(_classThis, _classExtraInitializers);
    })();
    return MailjetProvider = _classThis;
}();
exports.MailjetProvider = MailjetProvider;


// C:\grua-booking-system-25\server\dist\libraries\email\internal\providers\nodemailer\nodemailer.provider.js
"use strict";
var __esDecorate = (this && this.__esDecorate) || function (ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {
    function accept(f) { if (f !== void 0 && typeof f !== "function") throw new TypeError("Function expected"); return f; }
    var kind = contextIn.kind, key = kind === "getter" ? "get" : kind === "setter" ? "set" : "value";
    var target = !descriptorIn && ctor ? contextIn["static"] ? ctor : ctor.prototype : null;
    var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});
    var _, done = false;
    for (var i = decorators.length - 1; i >= 0; i--) {
        var context = {};
        for (var p in contextIn) context[p] = p === "access" ? {} : contextIn[p];
        for (var p in contextIn.access) context.access[p] = contextIn.access[p];
        context.addInitializer = function (f) { if (done) throw new TypeError("Cannot add initializers after decoration has completed"); extraInitializers.push(accept(f || null)); };
        var result = (0, decorators[i])(kind === "accessor" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);
        if (kind === "accessor") {
            if (result === void 0) continue;
            if (result === null || typeof result !== "object") throw new TypeError("Object expected");
            if (_ = accept(result.get)) descriptor.get = _;
            if (_ = accept(result.set)) descriptor.set = _;
            if (_ = accept(result.init)) initializers.unshift(_);
        }
        else if (_ = accept(result)) {
            if (kind === "field") initializers.unshift(_);
            else descriptor[key] = _;
        }
    }
    if (target) Object.defineProperty(target, contextIn.name, descriptor);
    done = true;
};
var __runInitializers = (this && this.__runInitializers) || function (thisArg, initializers, value) {
    var useValue = arguments.length > 2;
    for (var i = 0; i < initializers.length; i++) {
        value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);
    }
    return useValue ? value : void 0;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (g && (g = 0, op[0] && (_ = 0)), _) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __setFunctionName = (this && this.__setFunctionName) || function (f, name, prefix) {
    if (typeof name === "symbol") name = name.description ? "[".concat(name.description, "]") : "";
    return Object.defineProperty(f, "name", { configurable: true, value: prefix ? "".concat(prefix, " ", name) : name });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.NodemailerProvider = void 0;
var common_1 = require("@nestjs/common");
var NodemailerSDK = require("nodemailer");
var email_type_1 = require("../../email.type");
var NodemailerProvider = function () {
    var _classDecorators = [(0, common_1.Injectable)()];
    var _classDescriptor;
    var _classExtraInitializers = [];
    var _classThis;
    var NodemailerProvider = _classThis = /** @class */ (function () {
        function NodemailerProvider_1(loggerService, configurationService, templateService) {
            this.loggerService = loggerService;
            this.configurationService = configurationService;
            this.templateService = templateService;
            this.logger = this.loggerService.create({ name: 'NodemailerProvider' });
            this.initialise();
        }
        NodemailerProvider_1.prototype.initialise = function () {
            var _a;
            try {
                var host = (_a = this.configurationService.get('SERVER_EMAIL_MAILPIT_HOST')) !== null && _a !== void 0 ? _a : 'localhost';
                var port = this.configurationService.getNumber('SERVER_EMAIL_MAILPIT_PORT', 1022);
                this.client = NodemailerSDK.createTransport({
                    host: host,
                    port: port,
                });
                this.logger.success("Nodemailer is active (".concat(host, ":").concat(port, ")"));
            }
            catch (error) {
                this.logger.error("Nodemailer failed to start: ".concat(error.message));
            }
        };
        NodemailerProvider_1.prototype.send = function (options) {
            return __awaiter(this, void 0, void 0, function () {
                var from, content, _i, _a, to;
                var _this = this;
                return __generator(this, function (_b) {
                    switch (_b.label) {
                        case 0:
                            from = email_type_1.EmailSender.default;
                            content = this.templateService.get(options);
                            _i = 0, _a = options.to;
                            _b.label = 1;
                        case 1:
                            if (!(_i < _a.length)) return [3 /*break*/, 4];
                            to = _a[_i];
                            return [4 /*yield*/, this.client
                                    .sendMail({
                                    from: "".concat(from.name, " <").concat(from.email, ">"),
                                    to: to.email,
                                    subject: options.subject,
                                    html: content,
                                })
                                    .then(function (result) {
                                    _this.logger.log("Emails sent");
                                })
                                    .catch(function (error) {
                                    _this.logger.error("Could not send emails (".concat(error.statusCode, ")"));
                                    _this.logger.error(error);
                                })];
                        case 2:
                            _b.sent();
                            _b.label = 3;
                        case 3:
                            _i++;
                            return [3 /*break*/, 1];
                        case 4: return [2 /*return*/];
                    }
                });
            });
        };
        return NodemailerProvider_1;
    }());
    __setFunctionName(_classThis, "NodemailerProvider");
    (function () {
        var _metadata = typeof Symbol === "function" && Symbol.metadata ? Object.create(null) : void 0;
        __esDecorate(null, _classDescriptor = { value: _classThis }, _classDecorators, { kind: "class", name: _classThis.name, metadata: _metadata }, null, _classExtraInitializers);
        NodemailerProvider = _classThis = _classDescriptor.value;
        if (_metadata) Object.defineProperty(_classThis, Symbol.metadata, { enumerable: true, configurable: true, writable: true, value: _metadata });
        __runInitializers(_classThis, _classExtraInitializers);
    })();
    return NodemailerProvider = _classThis;
}();
exports.NodemailerProvider = NodemailerProvider;


// C:\grua-booking-system-25\server\dist\libraries\email\internal\templates\components.js
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Components = void 0;
exports.Components = {
    '<Card>': "\n      <div class=\"card\">\n    ".trim(),
    '</Card>': '</div>',
    '<Card.Header>': "\n      <table \n        class=\"card-header\"\n        cellpadding=\"0\" \n        cellspacing=\"0\" \n        style=\"border-collapse:separate;border-spacing:0;table-layout:fixed;width:100%;text-align:center\"\n      >\n        <tbody>\n    ".trim(),
    '</Card.Header>': '</tbody></table>',
    '<Card.Body>': "\n      <table \n        class=\"card-body\"\n        cellpadding=\"0\" \n        cellspacing=\"0\" \n        style=\"border-collapse:separate;border-spacing:0;table-layout:fixed;width:100%\"\n      >\n        <tbody>\n    ".trim(),
    '</Card.Body>': '</tbody></table>',
    '<Card.Footer>': "\n      <table \n        class=\"card-footer\"\n        cellpadding=\"0\" \n        cellspacing=\"0\" \n        style=\"border-collapse:separate;border-spacing:0;table-layout:fixed;width:100%;text-align:center\"\n      >\n        <tbody>\n    ".trim(),
    '</Card.Footer>': '</tbody></table>',
    '<p>': '<tr><td><p>',
    '</p>': '</p></td></tr>',
    '<h2>': '<tr><td><h2>',
    '</h2>': '</h2></td></tr>',
    '<hr />': '<tr><td><hr /></td></tr>',
};


// C:\grua-booking-system-25\server\dist\libraries\email\internal\templates\email.template.service.js
"use strict";
var __esDecorate = (this && this.__esDecorate) || function (ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {
    function accept(f) { if (f !== void 0 && typeof f !== "function") throw new TypeError("Function expected"); return f; }
    var kind = contextIn.kind, key = kind === "getter" ? "get" : kind === "setter" ? "set" : "value";
    var target = !descriptorIn && ctor ? contextIn["static"] ? ctor : ctor.prototype : null;
    var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});
    var _, done = false;
    for (var i = decorators.length - 1; i >= 0; i--) {
        var context = {};
        for (var p in contextIn) context[p] = p === "access" ? {} : contextIn[p];
        for (var p in contextIn.access) context.access[p] = contextIn.access[p];
        context.addInitializer = function (f) { if (done) throw new TypeError("Cannot add initializers after decoration has completed"); extraInitializers.push(accept(f || null)); };
        var result = (0, decorators[i])(kind === "accessor" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);
        if (kind === "accessor") {
            if (result === void 0) continue;
            if (result === null || typeof result !== "object") throw new TypeError("Object expected");
            if (_ = accept(result.get)) descriptor.get = _;
            if (_ = accept(result.set)) descriptor.set = _;
            if (_ = accept(result.init)) initializers.unshift(_);
        }
        else if (_ = accept(result)) {
            if (kind === "field") initializers.unshift(_);
            else descriptor[key] = _;
        }
    }
    if (target) Object.defineProperty(target, contextIn.name, descriptor);
    done = true;
};
var __runInitializers = (this && this.__runInitializers) || function (thisArg, initializers, value) {
    var useValue = arguments.length > 2;
    for (var i = 0; i < initializers.length; i++) {
        value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);
    }
    return useValue ? value : void 0;
};
var __setFunctionName = (this && this.__setFunctionName) || function (f, name, prefix) {
    if (typeof name === "symbol") name = name.description ? "[".concat(name.description, "]") : "";
    return Object.defineProperty(f, "name", { configurable: true, value: prefix ? "".concat(prefix, " ", name) : name });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.EmailTemplateService = void 0;
var common_1 = require("@nestjs/common");
var file_1 = require("@server/helpers/file");
var email_type_1 = require("../email.type");
var components_1 = require("./components");
var EmailTemplateService = function () {
    var _classDecorators = [(0, common_1.Injectable)()];
    var _classDescriptor;
    var _classExtraInitializers = [];
    var _classThis;
    var EmailTemplateService = _classThis = /** @class */ (function () {
        function EmailTemplateService_1() {
            var _a;
            this.pathTemplates = "".concat(file_1.FileHelper.getRoot(), "/src/libraries/email/internal/templates");
            this.mapping = (_a = {},
                _a[email_type_1.EmailType.AUTHORIZATION_VERIFICATION_CODE] = 'authorization-verification-code',
                _a[email_type_1.EmailType.AUTHENTICATION_WELCOME] = 'authentication-welcome',
                _a[email_type_1.EmailType.AUTHENTICATION_FORGOT_PASSWORD] = 'authentication-forgot-password',
                _a[email_type_1.EmailType.DEFAULT] = 'default',
                _a);
        }
        EmailTemplateService_1.prototype.get = function (options) {
            var _a;
            var values = (_a = options.variables) !== null && _a !== void 0 ? _a : { content: options.content };
            var pathBase = this.getPathBase();
            var pathCSS = this.getPathCSS();
            var pathTemplate = this.getPathTemplate(options.type);
            var contentBase = file_1.FileHelper.findFileContent(pathBase);
            var contentCSS = file_1.FileHelper.findFileContent(pathCSS);
            var contentTemplate = file_1.FileHelper.findFileContent(pathTemplate);
            var content = this.buildContent(contentTemplate, values);
            content = this.buildContent(contentBase, { style: contentCSS, content: content });
            content = this.buildComponents(content);
            return content;
        };
        EmailTemplateService_1.prototype.getPathTemplate = function (type) {
            var _a;
            var name = (_a = this.mapping[type]) !== null && _a !== void 0 ? _a : this.mapping[email_type_1.EmailType.DEFAULT];
            var path = "".concat(this.pathTemplates, "/").concat(name, ".template.html");
            return path;
        };
        EmailTemplateService_1.prototype.getPathBase = function () {
            var path = "".concat(this.pathTemplates, "/base.html");
            return path;
        };
        EmailTemplateService_1.prototype.getPathCSS = function () {
            var path = "".concat(this.pathTemplates, "/style.css");
            return path;
        };
        EmailTemplateService_1.prototype.buildContent = function (content, values) {
            var contentBuilt = content;
            for (var _i = 0, _a = Object.entries(values); _i < _a.length; _i++) {
                var _b = _a[_i], key = _b[0], value = _b[1];
                var token = new RegExp("{{ ".concat(key, " }}"), 'g');
                contentBuilt = contentBuilt.replace(token, value);
            }
            return contentBuilt;
        };
        EmailTemplateService_1.prototype.buildComponents = function (content) {
            var contentUpdated = content;
            for (var _i = 0, _a = Object.entries(components_1.Components); _i < _a.length; _i++) {
                var _b = _a[_i], key = _b[0], value = _b[1];
                var tag = new RegExp("".concat(key), 'g');
                contentUpdated = contentUpdated.replace(tag, value);
            }
            return contentUpdated;
        };
        return EmailTemplateService_1;
    }());
    __setFunctionName(_classThis, "EmailTemplateService");
    (function () {
        var _metadata = typeof Symbol === "function" && Symbol.metadata ? Object.create(null) : void 0;
        __esDecorate(null, _classDescriptor = { value: _classThis }, _classDecorators, { kind: "class", name: _classThis.name, metadata: _metadata }, null, _classExtraInitializers);
        EmailTemplateService = _classThis = _classDescriptor.value;
        if (_metadata) Object.defineProperty(_classThis, Symbol.metadata, { enumerable: true, configurable: true, writable: true, value: _metadata });
        __runInitializers(_classThis, _classExtraInitializers);
    })();
    return EmailTemplateService = _classThis;
}();
exports.EmailTemplateService = EmailTemplateService;
"use strict";
var __esDecorate = (this && this.__esDecorate) || function (ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {
    function accept(f) { if (f !== void 0 && typeof f !== "function") throw new TypeError("Function expected"); return f; }
    var kind = contextIn.kind, key = kind === "getter" ? "get" : kind === "setter" ? "set" : "value";
    var target = !descriptorIn && ctor ? contextIn["static"] ? ctor : ctor.prototype : null;
    var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});
    var _, done = false;
    for (var i = decorators.length - 1; i >= 0; i--) {
        var context = {};
        for (var p in contextIn) context[p] = p === "access" ? {} : contextIn[p];
        for (var p in contextIn.access) context.access[p] = contextIn.access[p];
        context.addInitializer = function (f) { if (done) throw new TypeError("Cannot add initializers after decoration has completed"); extraInitializers.push(accept(f || null)); };
        var result = (0, decorators[i])(kind === "accessor" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);
        if (kind === "accessor") {
            if (result === void 0) continue;
            if (result === null || typeof result !== "object") throw new TypeError("Object expected");
            if (_ = accept(result.get)) descriptor.get = _;
            if (_ = accept(result.set)) descriptor.set = _;
            if (_ = accept(result.init)) initializers.unshift(_);
        }
        else if (_ = accept(result)) {
            if (kind === "field") initializers.unshift(_);
            else descriptor[key] = _;
        }
    }
    if (target) Object.defineProperty(target, contextIn.name, descriptor);
    done = true;
};
var __runInitializers = (this && this.__runInitializers) || function (thisArg, initializers, value) {
    var useValue = arguments.length > 2;
    for (var i = 0; i < initializers.length; i++) {
        value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);
    }
    return useValue ? value : void 0;
};
var __setFunctionName = (this && this.__setFunctionName) || function (f, name, prefix) {
    if (typeof name === "symbol") name = name.description ? "[".concat(name.description, "]") : "";
    return Object.defineProperty(f, "name", { configurable: true, value: prefix ? "".concat(prefix, " ", name) : name });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.EventModule = void 0;
var common_1 = require("@nestjs/common");
var event_emitter_1 = require("@nestjs/event-emitter");
var event_service_1 = require("./event.service");
var EventModule = function () {
    var _classDecorators = [(0, common_1.Global)(), (0, common_1.Module)({
            imports: [event_emitter_1.EventEmitterModule.forRoot()],
            providers: [event_service_1.EventService],
            exports: [event_service_1.EventService],
        })];
    var _classDescriptor;
    var _classExtraInitializers = [];
    var _classThis;
    var EventModule = _classThis = /** @class */ (function () {
        function EventModule_1() {
        }
        return EventModule_1;
    }());
    __setFunctionName(_classThis, "EventModule");
    (function () {
        var _metadata = typeof Symbol === "function" && Symbol.metadata ? Object.create(null) : void 0;
        __esDecorate(null, _classDescriptor = { value: _classThis }, _classDecorators, { kind: "class", name: _classThis.name, metadata: _metadata }, null, _classExtraInitializers);
        EventModule = _classThis = _classDescriptor.value;
        if (_metadata) Object.defineProperty(_classThis, Symbol.metadata, { enumerable: true, configurable: true, writable: true, value: _metadata });
        __runInitializers(_classThis, _classExtraInitializers);
    })();
    return EventModule = _classThis;
}();
exports.EventModule = EventModule;


// C:\grua-booking-system-25\server\dist\libraries\event\event.service.js
"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", { value: true });
__exportStar(require("./event.module"), exports);
__exportStar(require("./event.service"), exports);
__exportStar(require("./event.type"), exports);


// C:\grua-booking-system-25\server\dist\libraries\google\google.module.js
"use strict";
var __esDecorate = (this && this.__esDecorate) || function (ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {
    function accept(f) { if (f !== void 0 && typeof f !== "function") throw new TypeError("Function expected"); return f; }
    var kind = contextIn.kind, key = kind === "getter" ? "get" : kind === "setter" ? "set" : "value";
    var target = !descriptorIn && ctor ? contextIn["static"] ? ctor : ctor.prototype : null;
    var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});
    var _, done = false;
    for (var i = decorators.length - 1; i >= 0; i--) {
        var context = {};
        for (var p in contextIn) context[p] = p === "access" ? {} : contextIn[p];
        for (var p in contextIn.access) context.access[p] = contextIn.access[p];
        context.addInitializer = function (f) { if (done) throw new TypeError("Cannot add initializers after decoration has completed"); extraInitializers.push(accept(f || null)); };
        var result = (0, decorators[i])(kind === "accessor" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);
        if (kind === "accessor") {
            if (result === void 0) continue;
            if (result === null || typeof result !== "object") throw new TypeError("Object expected");
            if (_ = accept(result.get)) descriptor.get = _;
            if (_ = accept(result.set)) descriptor.set = _;
            if (_ = accept(result.init)) initializers.unshift(_);
        }
        else if (_ = accept(result)) {
            if (kind === "field") initializers.unshift(_);
            else descriptor[key] = _;
        }
    }
    if (target) Object.defineProperty(target, contextIn.name, descriptor);
    done = true;
};
var __runInitializers = (this && this.__runInitializers) || function (thisArg, initializers, value) {
    var useValue = arguments.length > 2;
    for (var i = 0; i < initializers.length; i++) {
        value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);
    }
    return useValue ? value : void 0;
};
var __setFunctionName = (this && this.__setFunctionName) || function (f, name, prefix) {
    if (typeof name === "symbol") name = name.description ? "[".concat(name.description, "]") : "";
    return Object.defineProperty(f, "name", { configurable: true, value: prefix ? "".concat(prefix, " ", name) : name });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.GoogleModule = void 0;
var common_1 = require("@nestjs/common");
var google_service_1 = require("./google.service");
var GoogleModule = function () {
    var _classDecorators = [(0, common_1.Module)({
            providers: [google_service_1.GoogleService],
            exports: [google_service_1.GoogleService],
        })];
    var _classDescriptor;
    var _classExtraInitializers = [];
    var _classThis;
    var GoogleModule = _classThis = /** @class */ (function () {
        function GoogleModule_1() {
        }
        return GoogleModule_1;
    }());
    __setFunctionName(_classThis, "GoogleModule");
    (function () {
        var _metadata = typeof Symbol === "function" && Symbol.metadata ? Object.create(null) : void 0;
        __esDecorate(null, _classDescriptor = { value: _classThis }, _classDecorators, { kind: "class", name: _classThis.name, metadata: _metadata }, null, _classExtraInitializers);
        GoogleModule = _classThis = _classDescriptor.value;
        if (_metadata) Object.defineProperty(_classThis, Symbol.metadata, { enumerable: true, configurable: true, writable: true, value: _metadata });
        __runInitializers(_classThis, _classExtraInitializers);
    })();
    return GoogleModule = _classThis;
}();
exports.GoogleModule = GoogleModule;


// C:\grua-booking-system-25\server\dist\libraries\google\google.service.js
"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", { value: true });
__exportStar(require("./google.module"), exports);
__exportStar(require("./google.service"), exports);


// C:\grua-booking-system-25\server\dist\libraries\http\http.module.js
"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", { value: true });
__exportStar(require("./http.module"), exports);
__exportStar(require("./http.service"), exports);


// C:\grua-booking-system-25\server\dist\libraries\logger\internal\datadog.service.js
"use strict";
var __esDecorate = (this && this.__esDecorate) || function (ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {
    function accept(f) { if (f !== void 0 && typeof f !== "function") throw new TypeError("Function expected"); return f; }
    var kind = contextIn.kind, key = kind === "getter" ? "get" : kind === "setter" ? "set" : "value";
    var target = !descriptorIn && ctor ? contextIn["static"] ? ctor : ctor.prototype : null;
    var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});
    var _, done = false;
    for (var i = decorators.length - 1; i >= 0; i--) {
        var context = {};
        for (var p in contextIn) context[p] = p === "access" ? {} : contextIn[p];
        for (var p in contextIn.access) context.access[p] = contextIn.access[p];
        context.addInitializer = function (f) { if (done) throw new TypeError("Cannot add initializers after decoration has completed"); extraInitializers.push(accept(f || null)); };
        var result = (0, decorators[i])(kind === "accessor" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);
        if (kind === "accessor") {
            if (result === void 0) continue;
            if (result === null || typeof result !== "object") throw new TypeError("Object expected");
            if (_ = accept(result.get)) descriptor.get = _;
            if (_ = accept(result.set)) descriptor.set = _;
            if (_ = accept(result.init)) initializers.unshift(_);
        }
        else if (_ = accept(result)) {
            if (kind === "field") initializers.unshift(_);
            else descriptor[key] = _;
        }
    }
    if (target) Object.defineProperty(target, contextIn.name, descriptor);
    done = true;
};
var __runInitializers = (this && this.__runInitializers) || function (thisArg, initializers, value) {
    var useValue = arguments.length > 2;
    for (var i = 0; i < initializers.length; i++) {
        value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);
    }
    return useValue ? value : void 0;
};
var __setFunctionName = (this && this.__setFunctionName) || function (f, name, prefix) {
    if (typeof name === "symbol") name = name.description ? "[".concat(name.description, "]") : "";
    return Object.defineProperty(f, "name", { configurable: true, value: prefix ? "".concat(prefix, " ", name) : name });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.WinstonService = void 0;
var common_1 = require("@nestjs/common");
var winston_1 = require("winston");
var WinstonService = function () {
    var _classDecorators = [(0, common_1.Injectable)()];
    var _classDescriptor;
    var _classExtraInitializers = [];
    var _classThis;
    var WinstonService = _classThis = /** @class */ (function () {
        function WinstonService_1(configurationService) {
            this.configurationService = configurationService;
        }
        WinstonService_1.prototype.create = function () {
            var isDevelopment = this.configurationService.isEnvironmentDevelopment();
            if (isDevelopment) {
                return this.createForDevelopment();
            }
            return this.createForProduction();
        };
        WinstonService_1.prototype.createForDevelopment = function () {
            return (0, winston_1.createLogger)({
                format: winston_1.format.combine(winston_1.format.colorize(), winston_1.format.timestamp(), winston_1.format.printf(function (_a) {
                    var timestamp = _a.timestamp, level = _a.level, message = _a.message;
                    return "[".concat(timestamp, "] [").concat(level, "] ").concat(message);
                })),
                transports: [new winston_1.transports.Console()],
            });
        };
        WinstonService_1.prototype.createForProduction = function () {
            return (0, winston_1.createLogger)({
                format: winston_1.format.json(),
                transports: [new winston_1.transports.Console()],
            });
        };
        return WinstonService_1;
    }());
    __setFunctionName(_classThis, "WinstonService");
    (function () {
        var _metadata = typeof Symbol === "function" && Symbol.metadata ? Object.create(null) : void 0;
        __esDecorate(null, _classDescriptor = { value: _classThis }, _classDecorators, { kind: "class", name: _classThis.name, metadata: _metadata }, null, _classExtraInitializers);
        WinstonService = _classThis = _classDescriptor.value;
        if (_metadata) Object.defineProperty(_classThis, Symbol.metadata, { enumerable: true, configurable: true, writable: true, value: _metadata });
        __runInitializers(_classThis, _classExtraInitializers);
    })();
    return WinstonService = _classThis;
}();
exports.WinstonService = WinstonService;


// C:\grua-booking-system-25\server\dist\libraries\logger\logger.module.js
"use strict";
var __esDecorate = (this && this.__esDecorate) || function (ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {
    function accept(f) { if (f !== void 0 && typeof f !== "function") throw new TypeError("Function expected"); return f; }
    var kind = contextIn.kind, key = kind === "getter" ? "get" : kind === "setter" ? "set" : "value";
    var target = !descriptorIn && ctor ? contextIn["static"] ? ctor : ctor.prototype : null;
    var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});
    var _, done = false;
    for (var i = decorators.length - 1; i >= 0; i--) {
        var context = {};
        for (var p in contextIn) context[p] = p === "access" ? {} : contextIn[p];
        for (var p in contextIn.access) context.access[p] = contextIn.access[p];
        context.addInitializer = function (f) { if (done) throw new TypeError("Cannot add initializers after decoration has completed"); extraInitializers.push(accept(f || null)); };
        var result = (0, decorators[i])(kind === "accessor" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);
        if (kind === "accessor") {
            if (result === void 0) continue;
            if (result === null || typeof result !== "object") throw new TypeError("Object expected");
            if (_ = accept(result.get)) descriptor.get = _;
            if (_ = accept(result.set)) descriptor.set = _;
            if (_ = accept(result.init)) initializers.unshift(_);
        }
        else if (_ = accept(result)) {
            if (kind === "field") initializers.unshift(_);
            else descriptor[key] = _;
        }
    }
    if (target) Object.defineProperty(target, contextIn.name, descriptor);
    done = true;
};
var __runInitializers = (this && this.__runInitializers) || function (thisArg, initializers, value) {
    var useValue = arguments.length > 2;
    for (var i = 0; i < initializers.length; i++) {
        value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);
    }
    return useValue ? value : void 0;
};
var __setFunctionName = (this && this.__setFunctionName) || function (f, name, prefix) {
    if (typeof name === "symbol") name = name.description ? "[".concat(name.description, "]") : "";
    return Object.defineProperty(f, "name", { configurable: true, value: prefix ? "".concat(prefix, " ", name) : name });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.LoggerModule = void 0;
var common_1 = require("@nestjs/common");
var datadog_service_1 = require("./internal/datadog.service");
var winston_service_1 = require("./internal/winston.service");
var logger_service_1 = require("./logger.service");
var LoggerModule = function () {
    var _classDecorators = [(0, common_1.Global)(), (0, common_1.Module)({
            imports: [],
            providers: [winston_service_1.WinstonService, datadog_service_1.DatadogService, logger_service_1.LoggerService],
            exports: [logger_service_1.LoggerService],
        })];
    var _classDescriptor;
    var _classExtraInitializers = [];
    var _classThis;
    var LoggerModule = _classThis = /** @class */ (function () {
        function LoggerModule_1() {
        }
        return LoggerModule_1;
    }());
    __setFunctionName(_classThis, "LoggerModule");
    (function () {
        var _metadata = typeof Symbol === "function" && Symbol.metadata ? Object.create(null) : void 0;
        __esDecorate(null, _classDescriptor = { value: _classThis }, _classDecorators, { kind: "class", name: _classThis.name, metadata: _metadata }, null, _classExtraInitializers);
        LoggerModule = _classThis = _classDescriptor.value;
        if (_metadata) Object.defineProperty(_classThis, Symbol.metadata, { enumerable: true, configurable: true, writable: true, value: _metadata });
        __runInitializers(_classThis, _classExtraInitializers);
    })();
    return LoggerModule = _classThis;
}();
exports.LoggerModule = LoggerModule;


// C:\grua-booking-system-25\server\dist\libraries\logger\logger.service.js
"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __esDecorate = (this && this.__esDecorate) || function (ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {
    function accept(f) { if (f !== void 0 && typeof f !== "function") throw new TypeError("Function expected"); return f; }
    var kind = contextIn.kind, key = kind === "getter" ? "get" : kind === "setter" ? "set" : "value";
    var target = !descriptorIn && ctor ? contextIn["static"] ? ctor : ctor.prototype : null;
    var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});
    var _, done = false;
    for (var i = decorators.length - 1; i >= 0; i--) {
        var context = {};
        for (var p in contextIn) context[p] = p === "access" ? {} : contextIn[p];
        for (var p in contextIn.access) context.access[p] = contextIn.access[p];
        context.addInitializer = function (f) { if (done) throw new TypeError("Cannot add initializers after decoration has completed"); extraInitializers.push(accept(f || null)); };
        var result = (0, decorators[i])(kind === "accessor" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);
        if (kind === "accessor") {
            if (result === void 0) continue;
            if (result === null || typeof result !== "object") throw new TypeError("Object expected");
            if (_ = accept(result.get)) descriptor.get = _;
            if (_ = accept(result.set)) descriptor.set = _;
            if (_ = accept(result.init)) initializers.unshift(_);
        }
        else if (_ = accept(result)) {
            if (kind === "field") initializers.unshift(_);
            else descriptor[key] = _;
        }
    }
    if (target) Object.defineProperty(target, contextIn.name, descriptor);
    done = true;
};
var __runInitializers = (this && this.__runInitializers) || function (thisArg, initializers, value) {
    var useValue = arguments.length > 2;
    for (var i = 0; i < initializers.length; i++) {
        value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);
    }
    return useValue ? value : void 0;
};
var __setFunctionName = (this && this.__setFunctionName) || function (f, name, prefix) {
    if (typeof name === "symbol") name = name.description ? "[".concat(name.description, "]") : "";
    return Object.defineProperty(f, "name", { configurable: true, value: prefix ? "".concat(prefix, " ", name) : name });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.LoggerService = void 0;
var common_1 = require("@nestjs/common");
var logger_1 = require("./logger");
var LoggerService = function () {
    var _classDecorators = [(0, common_1.Injectable)()];
    var _classDescriptor;
    var _classExtraInitializers = [];
    var _classThis;
    var LoggerService = _classThis = /** @class */ (function () {
        function LoggerService_1(winstonService) {
            this.winstonService = winstonService;
            this.instance = this.winstonService.create();
        }
        LoggerService_1.prototype.create = function (options) {
            return new logger_1.Logger(__assign(__assign({}, options), { instance: this.instance }));
        };
        LoggerService_1.prototype.log = function (message, data) {
            this.instance.info(message, { data: data });
        };
        LoggerService_1.prototype.success = function (message) {
            this.instance.info("[SUCCESS] ".concat(message));
        };
        LoggerService_1.prototype.error = function (error) {
            if (typeof error === 'string') {
                this.instance.error(error);
            }
            else {
                this.instance.error(error.message);
            }
        };
        return LoggerService_1;
    }());
    __setFunctionName(_classThis, "LoggerService");
    (function () {
        var _metadata = typeof Symbol === "function" && Symbol.metadata ? Object.create(null) : void 0;
        __esDecorate(null, _classDescriptor = { value: _classThis }, _classDecorators, { kind: "class", name: _classThis.name, metadata: _metadata }, null, _classExtraInitializers);
        LoggerService = _classThis = _classDescriptor.value;
        if (_metadata) Object.defineProperty(_classThis, Symbol.metadata, { enumerable: true, configurable: true, writable: true, value: _metadata });
        __runInitializers(_classThis, _classExtraInitializers);
    })();
    return LoggerService = _classThis;
}();
exports.LoggerService = LoggerService;


// C:\grua-booking-system-25\server\dist\libraries\logger\internal\datadog.service.js
"use strict";
var __esDecorate = (this && this.__esDecorate) || function (ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {
    function accept(f) { if (f !== void 0 && typeof f !== "function") throw new TypeError("Function expected"); return f; }
    var kind = contextIn.kind, key = kind === "getter" ? "get" : kind === "setter" ? "set" : "value";
    var target = !descriptorIn && ctor ? contextIn["static"] ? ctor : ctor.prototype : null;
    var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});
    var _, done = false;
    for (var i = decorators.length - 1; i >= 0; i--) {
        var context = {};
        for (var p in contextIn) context[p] = p === "access" ? {} : contextIn[p];
        for (var p in contextIn.access) context.access[p] = contextIn.access[p];
        context.addInitializer = function (f) { if (done) throw new TypeError("Cannot add initializers after decoration has completed"); extraInitializers.push(accept(f || null)); };
        var result = (0, decorators[i])(kind === "accessor" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);
        if (kind === "accessor") {
            if (result === void 0) continue;
            if (result === null || typeof result !== "object") throw new TypeError("Object expected");
            if (_ = accept(result.get)) descriptor.get = _;
            if (_ = accept(result.set)) descriptor.set = _;
            if (_ = accept(result.init)) initializers.unshift(_);
        }
        else if (_ = accept(result)) {
            if (kind === "field") initializers.unshift(_);
            else descriptor[key] = _;
        }
    }
    if (target) Object.defineProperty(target, contextIn.name, descriptor);
    done = true;
};
var __runInitializers = (this && this.__runInitializers) || function (thisArg, initializers, value) {
    var useValue = arguments.length > 2;
    for (var i = 0; i < initializers.length; i++) {
        value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);
    }
    return useValue ? value : void 0;
};
var __setFunctionName = (this && this.__setFunctionName) || function (f, name, prefix) {
    if (typeof name === "symbol") name = name.description ? "[".concat(name.description, "]") : "";
    return Object.defineProperty(f, "name", { configurable: true, value: prefix ? "".concat(prefix, " ", name) : name });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.DatadogService = void 0;
var common_1 = require("@nestjs/common");
var dd_trace_1 = require("dd-trace");
var DatadogService = function () {
    var _classDecorators = [(0, common_1.Injectable)()];
    var _classDescriptor;
    var _classExtraInitializers = [];
    var _classThis;
    var DatadogService = _classThis = /** @class */ (function () {
        function DatadogService_1() {
            dd_trace_1.default.init({
                logInjection: true,
            });
        }
        return DatadogService_1;
    }());
    __setFunctionName(_classThis, "DatadogService");
    (function () {
        var _metadata = typeof Symbol === "function" && Symbol.metadata ? Object.create(null) : void 0;
        __esDecorate(null, _classDescriptor = { value: _classThis }, _classDecorators, { kind: "class", name: _classThis.name, metadata: _metadata }, null, _classExtraInitializers);
        DatadogService = _classThis = _classDescriptor.value;
        if (_metadata) Object.defineProperty(_classThis, Symbol.metadata, { enumerable: true, configurable: true, writable: true, value: _metadata });
        __runInitializers(_classThis, _classExtraInitializers);
    })();
    return DatadogService = _classThis;
}();
exports.DatadogService = DatadogService;


// C:\grua-booking-system-25\server\dist\libraries\logger\internal\winston.service.js
"use strict";
var __esDecorate = (this && this.__esDecorate) || function (ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {
    function accept(f) { if (f !== void 0 && typeof f !== "function") throw new TypeError("Function expected"); return f; }
    var kind = contextIn.kind, key = kind === "getter" ? "get" : kind === "setter" ? "set" : "value";
    var target = !descriptorIn && ctor ? contextIn["static"] ? ctor : ctor.prototype : null;
    var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});
    var _, done = false;
    for (var i = decorators.length - 1; i >= 0; i--) {
        var context = {};
        for (var p in contextIn) context[p] = p === "access" ? {} : contextIn[p];
        for (var p in contextIn.access) context.access[p] = contextIn.access[p];
        context.addInitializer = function (f) { if (done) throw new TypeError("Cannot add initializers after decoration has completed"); extraInitializers.push(accept(f || null)); };
        var result = (0, decorators[i])(kind === "accessor" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);
        if (kind === "accessor") {
            if (result === void 0) continue;
            if (result === null || typeof result !== "object") throw new TypeError("Object expected");
            if (_ = accept(result.get)) descriptor.get = _;
            if (_ = accept(result.set)) descriptor.set = _;
            if (_ = accept(result.init)) initializers.unshift(_);
        }
        else if (_ = accept(result)) {
            if (kind === "field") initializers.unshift(_);
            else descriptor[key] = _;
        }
    }
    if (target) Object.defineProperty(target, contextIn.name, descriptor);
    done = true;
};
var __runInitializers = (this && this.__runInitializers) || function (thisArg, initializers, value) {
    var useValue = arguments.length > 2;
    for (var i = 0; i < initializers.length; i++) {
        value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);
    }
    return useValue ? value : void 0;
};
var __setFunctionName = (this && this.__setFunctionName) || function (f, name, prefix) {
    if (typeof name === "symbol") name = name.description ? "[".concat(name.description, "]") : "";
    return Object.defineProperty(f, "name", { configurable: true, value: prefix ? "".concat(prefix, " ", name) : name });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.WinstonService = void 0;
var common_1 = require("@nestjs/common");
var winston_1 = require("winston");
var WinstonService = function () {
    var _classDecorators = [(0, common_1.Injectable)()];
    var _classDescriptor;
    var _classExtraInitializers = [];
    var _classThis;
    var WinstonService = _classThis = /** @class */ (function () {
        function WinstonService_1(configurationService) {
            this.configurationService = configurationService;
        }
        WinstonService_1.prototype.create = function () {
            var isDevelopment = this.configurationService.isEnvironmentDevelopment();
            if (isDevelopment) {
                return this.createForDevelopment();
            }
            return this.createForProduction();
        };
        WinstonService_1.prototype.createForDevelopment = function () {
            return (0, winston_1.createLogger)({
                format: winston_1.format.combine(winston_1.format.colorize(), winston_1.format.timestamp(), winston_1.format.printf(function (_a) {
                    var timestamp = _a.timestamp, level = _a.level, message = _a.message;
                    return "[".concat(timestamp, "] [").concat(level, "] ").concat(message);
                })),
                transports: [new winston_1.transports.Console()],
            });
        };
        WinstonService_1.prototype.createForProduction = function () {
            return (0, winston_1.createLogger)({
                format: winston_1.format.json(),
                transports: [new winston_1.transports.Console()],
            });
        };
        return WinstonService_1;
    }());
    __setFunctionName(_classThis, "WinstonService");
    (function () {
        var _metadata = typeof Symbol === "function" && Symbol.metadata ? Object.create(null) : void 0;
        __esDecorate(null, _classDescriptor = { value: _classThis }, _classDecorators, { kind: "class", name: _classThis.name, metadata: _metadata }, null, _classExtraInitializers);
        WinstonService = _classThis = _classDescriptor.value;
        if (_metadata) Object.defineProperty(_classThis, Symbol.metadata, { enumerable: true, configurable: true, writable: true, value: _metadata });
        __runInitializers(_classThis, _classExtraInitializers);
    })();
    return WinstonService = _classThis;
}();
exports.WinstonService = WinstonService;


// C:\grua-booking-system-25\server\dist\libraries\payment\internal\providers\stripe\stripe.provider.js
"use strict";
var __esDecorate = (this && this.__esDecorate) || function (ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {
    function accept(f) { if (f !== void 0 && typeof f !== "function") throw new TypeError("Function expected"); return f; }
    var kind = contextIn.kind, key = kind === "getter" ? "get" : kind === "setter" ? "set" : "value";
    var target = !descriptorIn && ctor ? contextIn["static"] ? ctor : ctor.prototype : null;
    var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});
    var _, done = false;
    for (var i = decorators.length - 1; i >= 0; i--) {
        var context = {};
        for (var p in contextIn) context[p] = p === "access" ? {} : contextIn[p];
        for (var p in contextIn.access) context.access[p] = contextIn.access[p];
        context.addInitializer = function (f) { if (done) throw new TypeError("Cannot add initializers after decoration has completed"); extraInitializers.push(accept(f || null)); };
        var result = (0, decorators[i])(kind === "accessor" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);
        if (kind === "accessor") {
            if (result === void 0) continue;
            if (result === null || typeof result !== "object") throw new TypeError("Object expected");
            if (_ = accept(result.get)) descriptor.get = _;
            if (_ = accept(result.set)) descriptor.set = _;
            if (_ = accept(result.init)) initializers.unshift(_);
        }
        else if (_ = accept(result)) {
            if (kind === "field") initializers.unshift(_);
            else descriptor[key] = _;
        }
    }
    if (target) Object.defineProperty(target, contextIn.name, descriptor);
    done = true;
};
var __runInitializers = (this && this.__runInitializers) || function (thisArg, initializers, value) {
    var useValue = arguments.length > 2;
    for (var i = 0; i < initializers.length; i++) {
        value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);
    }
    return useValue ? value : void 0;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (g && (g = 0, op[0] && (_ = 0)), _) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __setFunctionName = (this && this.__setFunctionName) || function (f, name, prefix) {
    if (typeof name === "symbol") name = name.description ? "[".concat(name.description, "]") : "";
    return Object.defineProperty(f, "name", { configurable: true, value: prefix ? "".concat(prefix, " ", name) : name });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.StripeProvider = void 0;
var common_1 = require("@nestjs/common");
var stripe_1 = require("stripe");
var payment_type_1 = require("../../payment.type");
var StripeProvider = function () {
    var _classDecorators = [(0, common_1.Injectable)()];
    var _classDescriptor;
    var _classExtraInitializers = [];
    var _classThis;
    var StripeProvider = _classThis = /** @class */ (function () {
        function StripeProvider_1(configurationService, loggerService) {
            this.configurationService = configurationService;
            this.loggerService = loggerService;
            this.logger = this.loggerService.create({ name: 'StripeProvider' });
            this.initialise();
        }
        StripeProvider_1.prototype.isActive = function () {
            if (this.client) {
                return true;
            }
            else {
                return false;
            }
        };
        StripeProvider_1.prototype.initialise = function () {
            this.logger.log('Initialization...');
            try {
                var secretKey = this.configurationService.get('SERVER_PAYMENT_STRIPE_SECRET_KEY');
                this.webhookSecret = this.configurationService.get('SERVER_PAYMENT_STRIPE_WEBHOOK_SECRET');
                if (!this.webhookSecret && !secretKey) {
                    throw new Error('Set SERVER_PAYMENT_STRIPE_SECRET_KEY && SERVER_PAYMENT_STRIPE_WEBHOOK_SECRET in your .env to activate');
                }
                if (!this.webhookSecret) {
                    throw new Error('Set SERVER_PAYMENT_STRIPE_WEBHOOK_SECRET in your .env to activate');
                }
                if (!secretKey) {
                    throw new Error('Set SERVER_PAYMENT_STRIPE_SECRET_KEY in your .env to activate');
                }
                this.client = new stripe_1.Stripe(secretKey, {
                    apiVersion: '2024-04-10',
                });
                this.logger.success("Stripe active");
            }
            catch (error) {
                this.logger.warning("Stripe failed to start");
                this.logger.warning(error);
            }
        };
        StripeProvider_1.prototype.findManySubscriptions = function (customerId) {
            var _a, _b, _c;
            return __awaiter(this, void 0, void 0, function () {
                var response, subscriptions, _i, _d, subscription;
                return __generator(this, function (_e) {
                    switch (_e.label) {
                        case 0: return [4 /*yield*/, this.client.subscriptions.list({
                                customer: customerId,
                            })];
                        case 1:
                            response = _e.sent();
                            subscriptions = [];
                            for (_i = 0, _d = response.data; _i < _d.length; _i++) {
                                subscription = _d[_i];
                                subscriptions.push({
                                    productId: (_c = (_b = (_a = subscription.items) === null || _a === void 0 ? void 0 : _a.data) === null || _b === void 0 ? void 0 : _b[0].price) === null || _c === void 0 ? void 0 : _c.product,
                                    dateExpired: new Date(subscription.current_period_end * 1000),
                                    status: subscription.status,
                                });
                            }
                            return [2 /*return*/, subscriptions];
                    }
                });
            });
        };
        StripeProvider_1.prototype.findManyPayments = function (customerId) {
            var _a;
            return __awaiter(this, void 0, void 0, function () {
                var response, checkoutSessions, payments, _i, checkoutSessions_1, session, _b, _c, lineItem;
                return __generator(this, function (_d) {
                    switch (_d.label) {
                        case 0: return [4 /*yield*/, this.client.checkout.sessions.list({
                                expand: ['data.line_items'],
                                customer: customerId,
                            })];
                        case 1:
                            response = _d.sent();
                            checkoutSessions = (_a = response.data) === null || _a === void 0 ? void 0 : _a.filter(function (session) { return session.payment_status === 'paid'; });
                            payments = [];
                            for (_i = 0, checkoutSessions_1 = checkoutSessions; _i < checkoutSessions_1.length; _i++) {
                                session = checkoutSessions_1[_i];
                                for (_b = 0, _c = session.line_items.data; _b < _c.length; _b++) {
                                    lineItem = _c[_b];
                                    payments.push({
                                        productId: lineItem.price.product,
                                        amount: lineItem.price.unit_amount / 100,
                                        currency: lineItem.price.currency,
                                        date: new Date(session.created * 1000),
                                    });
                                }
                            }
                            return [2 /*return*/, payments];
                    }
                });
            });
        };
        StripeProvider_1.prototype.findManyProducts = function () {
            var _a;
            return __awaiter(this, void 0, void 0, function () {
                var response, products, _i, _b, item, product, price;
                return __generator(this, function (_c) {
                    switch (_c.label) {
                        case 0: return [4 /*yield*/, this.client.products.list({
                                expand: ['data.default_price'],
                            })];
                        case 1:
                            response = _c.sent();
                            products = [];
                            for (_i = 0, _b = response.data; _i < _b.length; _i++) {
                                item = _b[_i];
                                product = {
                                    id: item.id,
                                    type: payment_type_1.ProductType.ONE_TIME,
                                    name: item.name,
                                    price: 0,
                                    description: item.description,
                                };
                                price = item.default_price;
                                if (price === null || price === void 0 ? void 0 : price.recurring) {
                                    product.type = payment_type_1.ProductType.SUBSCRIPTION;
                                }
                                product.price = (_a = (price === null || price === void 0 ? void 0 : price.unit_amount) / 100) !== null && _a !== void 0 ? _a : 0;
                                products.push(product);
                            }
                            return [2 /*return*/, products];
                    }
                });
            });
        };
        StripeProvider_1.prototype.onPayment = function (body, sig) {
            var _a, _b;
            return __awaiter(this, void 0, void 0, function () {
                var event_1, data;
                return __generator(this, function (_c) {
                    try {
                        event_1 = this.client.webhooks.constructEvent(body.toString(), sig, this.webhookSecret);
                        data = (_a = event_1.data) === null || _a === void 0 ? void 0 : _a.object;
                        if (event_1.type === 'checkout.session.completed') {
                            this.logger.success("Stripe event \"".concat(event_1.type, "\" received"));
                            return [2 /*return*/, {
                                    userId: data.client_reference_id,
                                    stripeCustomerId: data.customer,
                                    metadata: (_b = data.metadata) !== null && _b !== void 0 ? _b : {},
                                    customerDetails: data.customer_details,
                                }];
                        }
                        this.logger.log("Stripe event \"".concat(event_1.type, "\" is not handled."));
                        return [2 /*return*/, null];
                    }
                    catch (error) {
                        throw new Error("Could not check webhook: ".concat(error.message));
                    }
                    return [2 /*return*/];
                });
            });
        };
        StripeProvider_1.prototype.createPaymentLink = function (_a) {
            var customerId = _a.customerId, productId = _a.productId, urlRedirection = _a.urlRedirection, _b = _a.metadata, metadata = _b === void 0 ? {} : _b;
            return __awaiter(this, void 0, void 0, function () {
                var price, session;
                return __generator(this, function (_c) {
                    switch (_c.label) {
                        case 0: return [4 /*yield*/, this.findOnePriceByIdOrFail(productId)];
                        case 1:
                            price = _c.sent();
                            return [4 /*yield*/, this.client.checkout.sessions.create({
                                    line_items: [
                                        {
                                            price: price.id,
                                            quantity: 1,
                                        },
                                    ],
                                    mode: price.recurring ? 'subscription' : 'payment',
                                    customer: customerId,
                                    ui_mode: 'hosted',
                                    success_url: urlRedirection,
                                    metadata: metadata,
                                })];
                        case 2:
                            session = _c.sent();
                            return [2 /*return*/, session.url];
                    }
                });
            });
        };
        StripeProvider_1.prototype.createCustomer = function (customer) {
            return __awaiter(this, void 0, void 0, function () {
                var result;
                return __generator(this, function (_a) {
                    switch (_a.label) {
                        case 0: return [4 /*yield*/, this.client.customers.create({
                                name: customer.name,
                                email: customer.email,
                            })];
                        case 1:
                            result = _a.sent();
                            return [2 /*return*/, result.id];
                    }
                });
            });
        };
        StripeProvider_1.prototype.findOnePriceByIdOrFail = function (productId) {
            var _a;
            return __awaiter(this, void 0, void 0, function () {
                var prices, price;
                return __generator(this, function (_b) {
                    switch (_b.label) {
                        case 0: return [4 /*yield*/, this.client.prices.list({
                                product: productId,
                                limit: 1,
                            })];
                        case 1:
                            prices = _b.sent();
                            price = (_a = prices.data) === null || _a === void 0 ? void 0 : _a[0];
                            if (!price) {
                                throw new Error("Could not find price for product ".concat(productId));
                            }
                            return [2 /*return*/, price];
                    }
                });
            });
        };
        return StripeProvider_1;
    }());
    __setFunctionName(_classThis, "StripeProvider");
    (function () {
        var _metadata = typeof Symbol === "function" && Symbol.metadata ? Object.create(null) : void 0;
        __esDecorate(null, _classDescriptor = { value: _classThis }, _classDecorators, { kind: "class", name: _classThis.name, metadata: _metadata }, null, _classExtraInitializers);
        StripeProvider = _classThis = _classDescriptor.value;
        if (_metadata) Object.defineProperty(_classThis, Symbol.metadata, { enumerable: true, configurable: true, writable: true, value: _metadata });
        __runInitializers(_classThis, _classExtraInitializers);
    })();
    return StripeProvider = _classThis;
}();
exports.StripeProvider = StripeProvider;


// C:\grua-booking-system-25\server\dist\libraries\payment\internal\providers\provider.js
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });


// C:\grua-booking-system-25\server\dist\libraries\payment\internal\providers\stripe\stripe.provider.js
"use strict";
var __esDecorate = (this && this.__esDecorate) || function (ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {
    function accept(f) { if (f !== void 0 && typeof f !== "function") throw new TypeError("Function expected"); return f; }
    var kind = contextIn.kind, key = kind === "getter" ? "get" : kind === "setter" ? "set" : "value";
    var target = !descriptorIn && ctor ? contextIn["static"] ? ctor : ctor.prototype : null;
    var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});
    var _, done = false;
    for (var i = decorators.length - 1; i >= 0; i--) {
        var context = {};
        for (var p in contextIn) context[p] = p === "access" ? {} : contextIn[p];
        for (var p in contextIn.access) context.access[p] = contextIn.access[p];
        context.addInitializer = function (f) { if (done) throw new TypeError("Cannot add initializers after decoration has completed"); extraInitializers.push(accept(f || null)); };
        var result = (0, decorators[i])(kind === "accessor" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);
        if (kind === "accessor") {
            if (result === void 0) continue;
            if (result === null || typeof result !== "object") throw new TypeError("Object expected");
            if (_ = accept(result.get)) descriptor.get = _;
            if (_ = accept(result.set)) descriptor.set = _;
            if (_ = accept(result.init)) initializers.unshift(_);
        }
        else if (_ = accept(result)) {
            if (kind === "field") initializers.unshift(_);
            else descriptor[key] = _;
        }
    }
    if (target) Object.defineProperty(target, contextIn.name, descriptor);
    done = true;
};
var __runInitializers = (this && this.__runInitializers) || function (thisArg, initializers, value) {
    var useValue = arguments.length > 2;
    for (var i = 0; i < initializers.length; i++) {
        value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);
    }
    return useValue ? value : void 0;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (g && (g = 0, op[0] && (_ = 0)), _) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __setFunctionName = (this && this.__setFunctionName) || function (f, name, prefix) {
    if (typeof name === "symbol") name = name.description ? "[".concat(name.description, "]") : "";
    return Object.defineProperty(f, "name", { configurable: true, value: prefix ? "".concat(prefix, " ", name) : name });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.StripeProvider = void 0;
var common_1 = require("@nestjs/common");
var stripe_1 = require("stripe");
var payment_type_1 = require("../../payment.type");
var StripeProvider = function () {
    var _classDecorators = [(0, common_1.Injectable)()];
    var _classDescriptor;
    var _classExtraInitializers = [];
    var _classThis;
    var StripeProvider = _classThis = /** @class */ (function () {
        function StripeProvider_1(configurationService, loggerService) {
            this.configurationService = configurationService;
            this.loggerService = loggerService;
            this.logger = this.loggerService.create({ name: 'StripeProvider' });
            this.initialise();
        }
        StripeProvider_1.prototype.isActive = function () {
            if (this.client) {
                return true;
            }
            else {
                return false;
            }
        };
        StripeProvider_1.prototype.initialise = function () {
            this.logger.log('Initialization...');
            try {
                var secretKey = this.configurationService.get('SERVER_PAYMENT_STRIPE_SECRET_KEY');
                this.webhookSecret = this.configurationService.get('SERVER_PAYMENT_STRIPE_WEBHOOK_SECRET');
                if (!this.webhookSecret && !secretKey) {
                    throw new Error('Set SERVER_PAYMENT_STRIPE_SECRET_KEY && SERVER_PAYMENT_STRIPE_WEBHOOK_SECRET in your .env to activate');
                }
                if (!this.webhookSecret) {
                    throw new Error('Set SERVER_PAYMENT_STRIPE_WEBHOOK_SECRET in your .env to activate');
                }
                if (!secretKey) {
                    throw new Error('Set SERVER_PAYMENT_STRIPE_SECRET_KEY in your .env to activate');
                }
                this.client = new stripe_1.Stripe(secretKey, {
                    apiVersion: '2024-04-10',
                });
                this.logger.success("Stripe active");
            }
            catch (error) {
                this.logger.warning("Stripe failed to start");
                this.logger.warning(error);
            }
        };
        StripeProvider_1.prototype.findManySubscriptions = function (customerId) {
            var _a, _b, _c;
            return __awaiter(this, void 0, void 0, function () {
                var response, subscriptions, _i, _d, subscription;
                return __generator(this, function (_e) {
                    switch (_e.label) {
                        case 0: return [4 /*yield*/, this.client.subscriptions.list({
                                customer: customerId,
                            })];
                        case 1:
                            response = _e.sent();
                            subscriptions = [];
                            for (_i = 0, _d = response.data; _i < _d.length; _i++) {
                                subscription = _d[_i];
                                subscriptions.push({
                                    productId: (_c = (_b = (_a = subscription.items) === null || _a === void 0 ? void 0 : _a.data) === null || _b === void 0 ? void 0 : _b[0].price) === null || _c === void 0 ? void 0 : _c.product,
                                    dateExpired: new Date(subscription.current_period_end * 1000),
                                    status: subscription.status,
                                });
                            }
                            return [2 /*return*/, subscriptions];
                    }
                });
            });
        };
        StripeProvider_1.prototype.findManyPayments = function (customerId) {
            var _a;
            return __awaiter(this, void 0, void 0, function () {
                var response, checkoutSessions, payments, _i, checkoutSessions_1, session, _b, _c, lineItem;
                return __generator(this, function (_d) {
                    switch (_d.label) {
                        case 0: return [4 /*yield*/, this.client.checkout.sessions.list({
                                expand: ['data.line_items'],
                                customer: customerId,
                            })];
                        case 1:
                            response = _d.sent();
                            checkoutSessions = (_a = response.data) === null || _a === void 0 ? void 0 : _a.filter(function (session) { return session.payment_status === 'paid'; });
                            payments = [];
                            for (_i = 0, checkoutSessions_1 = checkoutSessions; _i < checkoutSessions_1.length; _i++) {
                                session = checkoutSessions_1[_i];
                                for (_b = 0, _c = session.line_items.data; _b < _c.length; _b++) {
                                    lineItem = _c[_b];
                                    payments.push({
                                        productId: lineItem.price.product,
                                        amount: lineItem.price.unit_amount / 100,
                                        currency: lineItem.price.currency,
                                        date: new Date(session.created * 1000),
                                    });
                                }
                            }
                            return [2 /*return*/, payments];
                    }
                });
            });
        };
        StripeProvider_1.prototype.findManyProducts = function () {
            var _a;
            return __awaiter(this, void 0, void 0, function () {
                var response, products, _i, _b, item, product, price;
                return __generator(this, function (_c) {
                    switch (_c.label) {
                        case 0: return [4 /*yield*/, this.client.products.list({
                                expand: ['data.default_price'],
                            })];
                        case 1:
                            response = _c.sent();
                            products = [];
                            for (_i = 0, _b = response.data; _i < _b.length; _i++) {
                                item = _b[_i];
                                product = {
                                    id: item.id,
                                    type: payment_type_1.ProductType.ONE_TIME,
                                    name: item.name,
                                    price: 0,
                                    description: item.description,
                                };
                                price = item.default_price;
                                if (price === null || price === void 0 ? void 0 : price.recurring) {
                                    product.type = payment_type_1.ProductType.SUBSCRIPTION;
                                }
                                product.price = (_a = (price === null || price === void 0 ? void 0 : price.unit_amount) / 100) !== null && _a !== void 0 ? _a : 0;
                                products.push(product);
                            }
                            return [2 /*return*/, products];
                    }
                });
            });
        };
        StripeProvider_1.prototype.onPayment = function (body, sig) {
            var _a, _b;
            return __awaiter(this, void 0, void 0, function () {
                var event_1, data;
                return __generator(this, function (_c) {
                    try {
                        event_1 = this.client.webhooks.constructEvent(body.toString(), sig, this.webhookSecret);
                        data = (_a = event_1.data) === null || _a === void 0 ? void 0 : _a.object;
                        if (event_1.type === 'checkout.session.completed') {
                            this.logger.success("Stripe event \"".concat(event_1.type, "\" received"));
                            return [2 /*return*/, {
                                    userId: data.client_reference_id,
                                    stripeCustomerId: data.customer,
                                    metadata: (_b = data.metadata) !== null && _b !== void 0 ? _b : {},
                                    customerDetails: data.customer_details,
                                }];
                        }
                        this.logger.log("Stripe event \"".concat(event_1.type, "\" is not handled."));
                        return [2 /*return*/, null];
                    }
                    catch (error) {
                        throw new Error("Could not check webhook: ".concat(error.message));
                    }
                    return [2 /*return*/];
                });
            });
        };
        StripeProvider_1.prototype.createPaymentLink = function (_a) {
            var customerId = _a.customerId, productId = _a.productId, urlRedirection = _a.urlRedirection, _b = _a.metadata, metadata = _b === void 0 ? {} : _b;
            return __awaiter(this, void 0, void 0, function () {
                var price, session;
                return __generator(this, function (_c) {
                    switch (_c.label) {
                        case 0: return [4 /*yield*/, this.findOnePriceByIdOrFail(productId)];
                        case 1:
                            price = _c.sent();
                            return [4 /*yield*/, this.client.checkout.sessions.create({
                                    line_items: [
                                        {
                                            price: price.id,
                                            quantity: 1,
                                        },
                                    ],
                                    mode: price.recurring ? 'subscription' : 'payment',
                                    customer: customerId,
                                    ui_mode: 'hosted',
                                    success_url: urlRedirection,
                                    metadata: metadata,
                                })];
                        case 2:
                            session = _c.sent();
                            return [2 /*return*/, session.url];
                    }
                });
            });
        };
        StripeProvider_1.prototype.createCustomer = function (customer) {
            return __awaiter(this, void 0, void 0, function () {
                var result;
                return __generator(this, function (_a) {
                    switch (_a.label) {
                        case 0: return [4 /*yield*/, this.client.customers.create({
                                name: customer.name,
                                email: customer.email,
                            })];
                        case 1:
                            result = _a.sent();
                            return [2 /*return*/, result.id];
                    }
                });
            });
        };
        StripeProvider_1.prototype.findOnePriceByIdOrFail = function (productId) {
            var _a;
            return __awaiter(this, void 0, void 0, function () {
                var prices, price;
                return __generator(this, function (_b) {
                    switch (_b.label) {
                        case 0: return [4 /*yield*/, this.client.prices.list({
                                product: productId,
                                limit: 1,
                            })];
                        case 1:
                            prices = _b.sent();
                            price = (_a = prices.data) === null || _a === void 0 ? void 0 : _a[0];
                            if (!price) {
                                throw new Error("Could not find price for product ".concat(productId));
                            }
                            return [2 /*return*/, price];
                    }
                });
            });
        };
        return StripeProvider_1;
    }());
    __setFunctionName(_classThis, "StripeProvider");
    (function () {
        var _metadata = typeof Symbol === "function" && Symbol.metadata ? Object.create(null) : void 0;
        __esDecorate(null, _classDescriptor = { value: _classThis }, _classDecorators, { kind: "class", name: _classThis.name, metadata: _metadata }, null, _classExtraInitializers);
        StripeProvider = _classThis = _classDescriptor.value;
        if (_metadata) Object.defineProperty(_classThis, Symbol.metadata, { enumerable: true, configurable: true, writable: true, value: _metadata });
        __runInitializers(_classThis, _classExtraInitializers);
    })();
    return StripeProvider = _classThis;
}();
exports.StripeProvider = StripeProvider;


// C:\grua-booking-system-25\server\dist\libraries\payment\internal\payment.type.js
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ProductType = void 0;
var ProductType;
(function (ProductType) {
    ProductType["SUBSCRIPTION"] = "SUBSCRIPTION";
    ProductType["ONE_TIME"] = "ONE_TIME";
})(ProductType || (exports.ProductType = ProductType = {}));


// C:\grua-booking-system-25\server\dist\libraries\payment\internal\providers\stripe\stripe.provider.js
"use strict";
var __esDecorate = (this && this.__esDecorate) || function (ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {
    function accept(f) { if (f !== void 0 && typeof f !== "function") throw new TypeError("Function expected"); return f; }
    var kind = contextIn.kind, key = kind === "getter" ? "get" : kind === "setter" ? "set" : "value";
    var target = !descriptorIn && ctor ? contextIn["static"] ? ctor : ctor.prototype : null;
    var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});
    var _, done = false;
    for (var i = decorators.length - 1; i >= 0; i--) {
        var context = {};
        for (var p in contextIn) context[p] = p === "access" ? {} : contextIn[p];
        for (var p in contextIn.access) context.access[p] = contextIn.access[p];
        context.addInitializer = function (f) { if (done) throw new TypeError("Cannot add initializers after decoration has completed"); extraInitializers.push(accept(f || null)); };
        var result = (0, decorators[i])(kind === "accessor" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);
        if (kind === "accessor") {
            if (result === void 0) continue;
            if (result === null || typeof result !== "object") throw new TypeError("Object expected");
            if (_ = accept(result.get)) descriptor.get = _;
            if (_ = accept(result.set)) descriptor.set = _;
            if (_ = accept(result.init)) initializers.unshift(_);
        }
        else if (_ = accept(result)) {
            if (kind === "field") initializers.unshift(_);
            else descriptor[key] = _;
        }
    }
    if (target) Object.defineProperty(target, contextIn.name, descriptor);
    done = true;
};
var __runInitializers = (this && this.__runInitializers) || function (thisArg, initializers, value) {
    var useValue = arguments.length > 2;
    for (var i = 0; i < initializers.length; i++) {
        value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);
    }
    return useValue ? value : void 0;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (g && (g = 0, op[0] && (_ = 0)), _) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __setFunctionName = (this && this.__setFunctionName) || function (f, name, prefix) {
    if (typeof name === "symbol") name = name.description ? "[".concat(name.description, "]") : "";
    return Object.defineProperty(f, "name", { configurable: true, value: prefix ? "".concat(prefix, " ", name) : name });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.StripeProvider = void 0;
var common_1 = require("@nestjs/common");
var stripe_1 = require("stripe");
var payment_type_1 = require("../../payment.type");
var StripeProvider = function () {
    var _classDecorators = [(0, common_1.Injectable)()];
    var _classDescriptor;
    var _classExtraInitializers = [];
    var _classThis;
    var StripeProvider = _classThis = /** @class */ (function () {
        function StripeProvider_1(configurationService, loggerService) {
            this.configurationService = configurationService;
            this.loggerService = loggerService;
            this.logger = this.loggerService.create({ name: 'StripeProvider' });
            this.initialise();
        }
        StripeProvider_1.prototype.isActive = function () {
            if (this.client) {
                return true;
            }
            else {
                return false;
            }
        };
        StripeProvider_1.prototype.initialise = function () {
            this.logger.log('Initialization...');
            try {
                var secretKey = this.configurationService.get('SERVER_PAYMENT_STRIPE_SECRET_KEY');
                this.webhookSecret = this.configurationService.get('SERVER_PAYMENT_STRIPE_WEBHOOK_SECRET');
                if (!this.webhookSecret && !secretKey) {
                    throw new Error('Set SERVER_PAYMENT_STRIPE_SECRET_KEY && SERVER_PAYMENT_STRIPE_WEBHOOK_SECRET in your .env to activate');
                }
                if (!this.webhookSecret) {
                    throw new Error('Set SERVER_PAYMENT_STRIPE_WEBHOOK_SECRET in your .env to activate');
                }
                if (!secretKey) {
                    throw new Error('Set SERVER_PAYMENT_STRIPE_SECRET_KEY in your .env to activate');
                }
                this.client = new stripe_1.Stripe(secretKey, {
                    apiVersion: '2024-04-10',
                });
                this.logger.success("Stripe active");
            }
            catch (error) {
                this.logger.warning("Stripe failed to start");
                this.logger.warning(error);
            }
        };
        StripeProvider_1.prototype.findManySubscriptions = function (customerId) {
            var _a, _b, _c;
            return __awaiter(this, void 0, void 0, function () {
                var response, subscriptions, _i, _d, subscription;
                return __generator(this, function (_e) {
                    switch (_e.label) {
                        case 0: return [4 /*yield*/, this.client.subscriptions.list({
                                customer: customerId,
                            })];
                        case 1:
                            response = _e.sent();
                            subscriptions = [];
                            for (_i = 0, _d = response.data; _i < _d.length; _i++) {
                                subscription = _d[_i];
                                subscriptions.push({
                                    productId: (_c = (_b = (_a = subscription.items) === null || _a === void 0 ? void 0 : _a.data) === null || _b === void 0 ? void 0 : _b[0].price) === null || _c === void 0 ? void 0 : _c.product,
                                    dateExpired: new Date(subscription.current_period_end * 1000),
                                    status: subscription.status,
                                });
                            }
                            return [2 /*return*/, subscriptions];
                    }
                });
            });
        };
        StripeProvider_1.prototype.findManyPayments = function (customerId) {
            var _a;
            return __awaiter(this, void 0, void 0, function () {
                var response, checkoutSessions, payments, _i, checkoutSessions_1, session, _b, _c, lineItem;
                return __generator(this, function (_d) {
                    switch (_d.label) {
                        case 0: return [4 /*yield*/, this.client.checkout.sessions.list({
                                expand: ['data.line_items'],
                                customer: customerId,
                            })];
                        case 1:
                            response = _d.sent();
                            checkoutSessions = (_a = response.data) === null || _a === void 0 ? void 0 : _a.filter(function (session) { return session.payment_status === 'paid'; });
                            payments = [];
                            for (_i = 0, checkoutSessions_1 = checkoutSessions; _i < checkoutSessions_1.length; _i++) {
                                session = checkoutSessions_1[_i];
                                for (_b = 0, _c = session.line_items.data; _b < _c.length; _b++) {
                                    lineItem = _c[_b];
                                    payments.push({
                                        productId: lineItem.price.product,
                                        amount: lineItem.price.unit_amount / 100,
                                        currency: lineItem.price.currency,
                                        date: new Date(session.created * 1000),
                                    });
                                }
                            }
                            return [2 /*return*/, payments];
                    }
                });
            });
        };
        StripeProvider_1.prototype.findManyProducts = function () {
            var _a;
            return __awaiter(this, void 0, void 0, function () {
                var response, products, _i, _b, item, product, price;
                return __generator(this, function (_c) {
                    switch (_c.label) {
                        case 0: return [4 /*yield*/, this.client.products.list({
                                expand: ['data.default_price'],
                            })];
                        case 1:
                            response = _c.sent();
                            products = [];
                            for (_i = 0, _b = response.data; _i < _b.length; _i++) {
                                item = _b[_i];
                                product = {
                                    id: item.id,
                                    type: payment_type_1.ProductType.ONE_TIME,
                                    name: item.name,
                                    price: 0,
                                    description: item.description,
                                };
                                price = item.default_price;
                                if (price === null || price === void 0 ? void 0 : price.recurring) {
                                    product.type = payment_type_1.ProductType.SUBSCRIPTION;
                                }
                                product.price = (_a = (price === null || price === void 0 ? void 0 : price.unit_amount) / 100) !== null && _a !== void 0 ? _a : 0;
                                products.push(product);
                            }
                            return [2 /*return*/, products];
                    }
                });
            });
        };
        StripeProvider_1.prototype.onPayment = function (body, sig) {
            var _a, _b;
            return __awaiter(this, void 0, void 0, function () {
                var event_1, data;
                return __generator(this, function (_c) {
                    try {
                        event_1 = this.client.webhooks.constructEvent(body.toString(), sig, this.webhookSecret);
                        data = (_a = event_1.data) === null || _a === void 0 ? void 0 : _a.object;
                        if (event_1.type === 'checkout.session.completed') {
                            this.logger.success("Stripe event \"".concat(event_1.type, "\" received"));
                            return [2 /*return*/, {
                                    userId: data.client_reference_id,
                                    stripeCustomerId: data.customer,
                                    metadata: (_b = data.metadata) !== null && _b !== void 0 ? _b : {},
                                    customerDetails: data.customer_details,
                                }];
                        }
                        this.logger.log("Stripe event \"".concat(event_1.type, "\" is not handled."));
                        return [2 /*return*/, null];
                    }
                    catch (error) {
                        throw new Error("Could not check webhook: ".concat(error.message));
                    }
                    return [2 /*return*/];
                });
            });
        };
        StripeProvider_1.prototype.createPaymentLink = function (_a) {
            var customerId = _a.customerId, productId = _a.productId, urlRedirection = _a.urlRedirection, _b = _a.metadata, metadata = _b === void 0 ? {} : _b;
            return __awaiter(this, void 0, void 0, function () {
                var price, session;
                return __generator(this, function (_c) {
                    switch (_c.label) {
                        case 0: return [4 /*yield*/, this.findOnePriceByIdOrFail(productId)];
                        case 1:
                            price = _c.sent();
                            return [4 /*yield*/, this.client.checkout.sessions.create({
                                    line_items: [
                                        {
                                            price: price.id,
                                            quantity: 1,
                                        },
                                    ],
                                    mode: price.recurring ? 'subscription' : 'payment',
                                    customer: customerId,
                                    ui_mode: 'hosted',
                                    success_url: urlRedirection,
                                    metadata: metadata,
                                })];
                        case 2:
                            session = _c.sent();
                            return [2 /*return*/, session.url];
                    }
                });
            });
        };
        StripeProvider_1.prototype.createCustomer = function (customer) {
            return __awaiter(this, void 0, void 0, function () {
                var result;
                return __generator(this, function (_a) {
                    switch (_a.label) {
                        case 0: return [4 /*yield*/, this.client.customers.create({
                                name: customer.name,
                                email: customer.email,
                            })];
                        case 1:
                            result = _a.sent();
                            return [2 /*return*/, result.id];
                    }
                });
            });
        };
        StripeProvider_1.prototype.findOnePriceByIdOrFail = function (productId) {
            var _a;
            return __awaiter(this, void 0, void 0, function () {
                var prices, price;
                return __generator(this, function (_b) {
                    switch (_b.label) {
                        case 0: return [4 /*yield*/, this.client.prices.list({
                                product: productId,
                                limit: 1,
                            })];
                        case 1:
                            prices = _b.sent();
                            price = (_a = prices.data) === null || _a === void 0 ? void 0 : _a[0];
                            if (!price) {
                                throw new Error("Could not find price for product ".concat(productId));
                            }
                            return [2 /*return*/, price];
                    }
                });
            });
        };
        return StripeProvider_1;
    }());
    __setFunctionName(_classThis, "StripeProvider");
    (function () {
        var _metadata = typeof Symbol === "function" && Symbol.metadata ? Object.create(null) : void 0;
        __esDecorate(null, _classDescriptor = { value: _classThis }, _classDecorators, { kind: "class", name: _classThis.name, metadata: _metadata }, null, _classExtraInitializers);
        StripeProvider = _classThis = _classDescriptor.value;
        if (_metadata) Object.defineProperty(_classThis, Symbol.metadata, { enumerable: true, configurable: true, writable: true, value: _metadata });
        __runInitializers(_classThis, _classExtraInitializers);
    })();
    return StripeProvider = _classThis;
}();
exports.StripeProvider = StripeProvider;


// C:\grua-booking-system-25\server\dist\libraries\payment\internal\providers\provider.js
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });


// C:\grua-booking-system-25\server\dist\libraries\payment\internal\providers\stripe\stripe.provider.js
"use strict";
var __esDecorate = (this && this.__esDecorate) || function (ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {
    function accept(f) { if (f !== void 0 && typeof f !== "function") throw new TypeError("Function expected"); return f; }
    var kind = contextIn.kind, key = kind === "getter" ? "get" : kind === "setter" ? "set" : "value";
    var target = !descriptorIn && ctor ? contextIn["static"] ? ctor : ctor.prototype : null;
    var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});
    var _, done = false;
    for (var i = decorators.length - 1; i >= 0; i--) {
        var context = {};
        for (var p in contextIn) context[p] = p === "access" ? {} : contextIn[p];
        for (var p in contextIn.access) context.access[p] = contextIn.access[p];
        context.addInitializer = function (f) { if (done) throw new TypeError("Cannot add initializers after decoration has completed"); extraInitializers.push(accept(f || null)); };
        var result = (0, decorators[i])(kind === "accessor" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);
        if (kind === "accessor") {
            if (result === void 0) continue;
            if (result === null || typeof result !== "object") throw new TypeError("Object expected");
            if (_ = accept(result.get)) descriptor.get = _;
            if (_ = accept(result.set)) descriptor.set = _;
            if (_ = accept(result.init)) initializers.unshift(_);
        }
        else if (_ = accept(result)) {
            if (kind === "field") initializers.unshift(_);
            else descriptor[key] = _;
        }
    }
    if (target) Object.defineProperty(target, contextIn.name, descriptor);
    done = true;
};
var __runInitializers = (this && this.__runInitializers) || function (thisArg, initializers, value) {
    var useValue = arguments.length > 2;
    for (var i = 0; i < initializers.length; i++) {
        value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);
    }
    return useValue ? value : void 0;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (g && (g = 0, op[0] && (_ = 0)), _) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __setFunctionName = (this && this.__setFunctionName) || function (f, name, prefix) {
    if (typeof name === "symbol") name = name.description ? "[".concat(name.description, "]") : "";
    return Object.defineProperty(f, "name", { configurable: true, value: prefix ? "".concat(prefix, " ", name) : name });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.StripeProvider = void 0;
var common_1 = require("@nestjs/common");
var stripe_1 = require("stripe");
var payment_type_1 = require("../../payment.type");
var StripeProvider = function () {
    var _classDecorators = [(0, common_1.Injectable)()];
    var _classDescriptor;
    var _classExtraInitializers = [];
    var _classThis;
    var StripeProvider = _classThis = /** @class */ (function () {
        function StripeProvider_1(configurationService, loggerService) {
            this.configurationService = configurationService;
            this.loggerService = loggerService;
            this.logger = this.loggerService.create({ name: 'StripeProvider' });
            this.initialise();
        }
        StripeProvider_1.prototype.isActive = function () {
            if (this.client) {
                return true;
            }
            else {
                return false;
            }
        };
        StripeProvider_1.prototype.initialise = function () {
            this.logger.log('Initialization...');
            try {
                var secretKey = this.configurationService.get('SERVER_PAYMENT_STRIPE_SECRET_KEY');
                this.webhookSecret = this.configurationService.get('SERVER_PAYMENT_STRIPE_WEBHOOK_SECRET');
                if (!this.webhookSecret && !secretKey) {
                    throw new Error('Set SERVER_PAYMENT_STRIPE_SECRET_KEY && SERVER_PAYMENT_STRIPE_WEBHOOK_SECRET in your .env to activate');
                }
                if (!this.webhookSecret) {
                    throw new Error('Set SERVER_PAYMENT_STRIPE_WEBHOOK_SECRET in your .env to activate');
                }
                if (!secretKey) {
                    throw new Error('Set SERVER_PAYMENT_STRIPE_SECRET_KEY in your .env to activate');
                }
                this.client = new stripe_1.Stripe(secretKey, {
                    apiVersion: '2024-04-10',
                });
                this.logger.success("Stripe active");
            }
            catch (error) {
                this.logger.warning("Stripe failed to start");
                this.logger.warning(error);
            }
        };
        StripeProvider_1.prototype.findManySubscriptions = function (customerId) {
            var _a, _b, _c;
            return __awaiter(this, void 0, void 0, function () {
                var response, subscriptions, _i, _d, subscription;
                return __generator(this, function (_e) {
                    switch (_e.label) {
                        case 0: return [4 /*yield*/, this.client.subscriptions.list({
                                customer: customerId,
                            })];
                        case 1:
                            response = _e.sent();
                            subscriptions = [];
                            for (_i = 0, _d = response.data; _i < _d.length; _i++) {
                                subscription = _d[_i];
                                subscriptions.push({
                                    productId: (_c = (_b = (_a = subscription.items) === null || _a === void 0 ? void 0 : _a.data) === null || _b === void 0 ? void 0 : _b[0].price) === null || _c === void 0 ? void 0 : _c.product,
                                    dateExpired: new Date(subscription.current_period_end * 1000),
                                    status: subscription.status,
                                });
                            }
                            return [2 /*return*/, subscriptions];
                    }
                });
            });
        };
        StripeProvider_1.prototype.findManyPayments = function (customerId) {
            var _a;
            return __awaiter(this, void 0, void 0, function () {
                var response, checkoutSessions, payments, _i, checkoutSessions_1, session, _b, _c, lineItem;
                return __generator(this, function (_d) {
                    switch (_d.label) {
                        case 0: return [4 /*yield*/, this.client.checkout.sessions.list({
                                expand: ['data.line_items'],
                                customer: customerId,
                            })];
                        case 1:
                            response = _d.sent();
                            checkoutSessions = (_a = response.data) === null || _a === void 0 ? void 0 : _a.filter(function (session) { return session.payment_status === 'paid'; });
                            payments = [];
                            for (_i = 0, checkoutSessions_1 = checkoutSessions; _i < checkoutSessions_1.length; _i++) {
                                session = checkoutSessions_1[_i];
                                for (_b = 0, _c = session.line_items.data; _b < _c.length; _b++) {
                                    lineItem = _c[_b];
                                    payments.push({
                                        productId: lineItem.price.product,
                                        amount: lineItem.price.unit_amount / 100,
                                        currency: lineItem.price.currency,
                                        date: new Date(session.created * 1000),
                                    });
                                }
                            }
                            return [2 /*return*/, payments];
                    }
                });
            });
        };
        StripeProvider_1.prototype.findManyProducts = function () {
            var _a;
            return __awaiter(this, void 0, void 0, function () {
                var response, products, _i, _b, item, product, price;
                return __generator(this, function (_c) {
                    switch (_c.label) {
                        case 0: return [4 /*yield*/, this.client.products.list({
                                expand: ['data.default_price'],
                            })];
                        case 1:
                            response = _c.sent();
                            products = [];
                            for (_i = 0, _b = response.data; _i < _b.length; _i++) {
                                item = _b[_i];
                                product = {
                                    id: item.id,
                                    type: payment_type_1.ProductType.ONE_TIME,
                                    name: item.name,
                                    price: 0,
                                    description: item.description,
                                };
                                price = item.default_price;
                                if (price === null || price === void 0 ? void 0 : price.recurring) {
                                    product.type = payment_type_1.ProductType.SUBSCRIPTION;
                                }
                                product.price = (_a = (price === null || price === void 0 ? void 0 : price.unit_amount) / 100) !== null && _a !== void 0 ? _a : 0;
                                products.push(product);
                            }
                            return [2 /*return*/, products];
                    }
                });
            });
        };
        StripeProvider_1.prototype.onPayment = function (body, sig) {
            var _a, _b;
            return __awaiter(this, void 0, void 0, function () {
                var event_1, data;
                return __generator(this, function (_c) {
                    try {
                        event_1 = this.client.webhooks.constructEvent(body.toString(), sig, this.webhookSecret);
                        data = (_a = event_1.data) === null || _a === void 0 ? void 0 : _a.object;
                        if (event_1.type === 'checkout.session.completed') {
                            this.logger.success("Stripe event \"".concat(event_1.type, "\" received"));
                            return [2 /*return*/, {
                                    userId: data.client_reference_id,
                                    stripeCustomerId: data.customer,
                                    metadata: (_b = data.metadata) !== null && _b !== void 0 ? _b : {},
                                    customerDetails: data.customer_details,
                                }];
                        }
                        this.logger.log("Stripe event \"".concat(event_1.type, "\" is not handled."));
                        return [2 /*return*/, null];
                    }
                    catch (error) {
                        throw new Error("Could not check webhook: ".concat(error.message));
                    }
                    return [2 /*return*/];
                });
            });
        };
        StripeProvider_1.prototype.createPaymentLink = function (_a) {
            var customerId = _a.customerId, productId = _a.productId, urlRedirection = _a.urlRedirection, _b = _a.metadata, metadata = _b === void 0 ? {} : _b;
            return __awaiter(this, void 0, void 0, function () {
                var price, session;
                return __generator(this, function (_c) {
                    switch (_c.label) {
                        case 0: return [4 /*yield*/, this.findOnePriceByIdOrFail(productId)];
                        case 1:
                            price = _c.sent();
                            return [4 /*yield*/, this.client.checkout.sessions.create({
                                    line_items: [
                                        {
                                            price: price.id,
                                            quantity: 1,
                                        },
                                    ],
                                    mode: price.recurring ? 'subscription' : 'payment',
                                    customer: customerId,
                                    ui_mode: 'hosted',
                                    success_url: urlRedirection,
                                    metadata: metadata,
                                })];
                        case 2:
                            session = _c.sent();
                            return [2 /*return*/, session.url];
                    }
                });
            });
        };
        StripeProvider_1.prototype.createCustomer = function (customer) {
            return __awaiter(this, void 0, void 0, function () {
                var result;
                return __generator(this, function (_a) {
                    switch (_a.label) {
                        case 0: return [4 /*yield*/, this.client.customers.create({
                                name: customer.name,
                                email: customer.email,
                            })];
                        case 1:
                            result = _a.sent();
                            return [2 /*return*/, result.id];
                    }
                });
            });
        };
        StripeProvider_1.prototype.findOnePriceByIdOrFail = function (productId) {
            var _a;
            return __awaiter(this, void 0, void 0, function () {
                var prices, price;
                return __generator(this, function (_b) {
                    switch (_b.label) {
                        case 0: return [4 /*yield*/, this.client.prices.list({
                                product: productId,
                                limit: 1,
                            })];
                        case 1:
                            prices = _b.sent();
                            price = (_a = prices.data) === null || _a === void 0 ? void 0 : _a[0];
                            if (!price) {
                                throw new Error("Could not find price for product ".concat(productId));
                            }
                            return [2 /*return*/, price];
                    }
                });
            });
        };
        return StripeProvider_1;
    }());
    __setFunctionName(_classThis, "StripeProvider");
    (function () {
        var _metadata = typeof Symbol === "function" && Symbol.metadata ? Object.create(null) : void 0;
        __esDecorate(null, _classDescriptor = { value: _classThis }, _classDecorators, { kind: "class", name: _classThis.name, metadata: _metadata }, null, _classExtraInitializers);
        StripeProvider = _classThis = _classDescriptor.value;
        if (_metadata) Object.defineProperty(_classThis, Symbol.metadata, { enumerable: true, configurable: true, writable: true, value: _metadata });
        __runInitializers(_classThis, _classExtraInitializers);
    })();
    return StripeProvider = _classThis;
}();
exports.StripeProvider = StripeProvider;
"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __esDecorate = (this && this.__esDecorate) || function (ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {
    function accept(f) { if (f !== void 0 && typeof f !== "function") throw new TypeError("Function expected"); return f; }
    var kind = contextIn.kind, key = kind === "getter" ? "get" : kind === "setter" ? "set" : "value";
    var target = !descriptorIn && ctor ? contextIn["static"] ? ctor : ctor.prototype : null;
    var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});
    var _, done = false;
    for (var i = decorators.length - 1; i >= 0; i--) {
        var context = {};
        for (var p in contextIn) context[p] = p === "access" ? {} : contextIn[p];
        for (var p in contextIn.access) context.access[p] = contextIn.access[p];
        context.addInitializer = function (f) { if (done) throw new TypeError("Cannot add initializers after decoration has completed"); extraInitializers.push(accept(f || null)); };
        var result = (0, decorators[i])(kind === "accessor" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);
        if (kind === "accessor") {
            if (result === void 0) continue;
            if (result === null || typeof result !== "object") throw new TypeError("Object expected");
            if (_ = accept(result.get)) descriptor.get = _;
            if (_ = accept(result.set)) descriptor.set = _;
            if (_ = accept(result.init)) initializers.unshift(_);
        }
        else if (_ = accept(result)) {
            if (kind === "field") initializers.unshift(_);
            else descriptor[key] = _;
        }
    }
    if (target) Object.defineProperty(target, contextIn.name, descriptor);
    done = true;
};
var __runInitializers = (this && this.__runInitializers) || function (thisArg, initializers, value) {
    var useValue = arguments.length > 2;
    for (var i = 0; i < initializers.length; i++) {
        value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);
    }
    return useValue ? value : void 0;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (g && (g = 0, op[0] && (_ = 0)), _) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __setFunctionName = (this && this.__setFunctionName) || function (f, name, prefix) {
    if (typeof name === "symbol") name = name.description ? "[".concat(name.description, "]") : "";
    return Object.defineProperty(f, "name", { configurable: true, value: prefix ? "".concat(prefix, " ", name) : name });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.PaymentService = void 0;
var common_1 = require("@nestjs/common");
var PaymentService = function () {
    var _classDecorators = [(0, common_1.Injectable)()];
    var _classDescriptor;
    var _classExtraInitializers = [];
    var _classThis;
    var PaymentService = _classThis = /** @class */ (function () {
        function PaymentService_1(stripeProvider) {
            this.stripeProvider = stripeProvider;
        }
        PaymentService_1.prototype.onModuleInit = function () {
            return __awaiter(this, void 0, void 0, function () {
                return __generator(this, function (_a) {
                    if (this.stripeProvider.isActive()) {
                        this.provider = this.stripeProvider;
                    }
                    return [2 /*return*/];
                });
            });
        };
        PaymentService_1.prototype.isActive = function () {
            var _a;
            if (this.provider) {
                return (_a = this.provider) === null || _a === void 0 ? void 0 : _a.isActive();
            }
            return false;
        };
        PaymentService_1.prototype.getCustomerId = function (user) {
            return user.stripeCustomerId;
        };
        PaymentService_1.prototype.findManyProducts = function () {
            return __awaiter(this, void 0, void 0, function () {
                return __generator(this, function (_a) {
                    return [2 /*return*/, this.provider.findManyProducts()];
                });
            });
        };
        PaymentService_1.prototype.findManySubscriptions = function (user) {
            return __awaiter(this, void 0, void 0, function () {
                return __generator(this, function (_a) {
                    return [2 /*return*/, this.provider.findManySubscriptions(this.getCustomerId(user))];
                });
            });
        };
        PaymentService_1.prototype.findManyPayments = function (user) {
            return __awaiter(this, void 0, void 0, function () {
                return __generator(this, function (_a) {
                    return [2 /*return*/, this.provider.findManyPayments(this.getCustomerId(user))];
                });
            });
        };
        PaymentService_1.prototype.createPaymentLink = function (options) {
            return __awaiter(this, void 0, void 0, function () {
                var optionsPayment;
                return __generator(this, function (_a) {
                    optionsPayment = __assign(__assign({}, options), { customerId: this.getCustomerId(options.user) });
                    return [2 /*return*/, this.provider.createPaymentLink(optionsPayment)];
                });
            });
        };
        PaymentService_1.prototype.onPayment = function (body, sig) {
            return __awaiter(this, void 0, void 0, function () {
                return __generator(this, function (_a) {
                    return [2 /*return*/, this.provider.onPayment(body, sig)];
                });
            });
        };
        PaymentService_1.prototype.createCustomer = function (user) {
            var _a;
            return __awaiter(this, void 0, void 0, function () {
                return __generator(this, function (_b) {
                    return [2 /*return*/, this.provider.createCustomer({
                            name: (_a = user.name) !== null && _a !== void 0 ? _a : user.email,
                            email: user.email,
                        })];
                });
            });
        };
        return PaymentService_1;
    }());
    __setFunctionName(_classThis, "PaymentService");
    (function () {
        var _metadata = typeof Symbol === "function" && Symbol.metadata ? Object.create(null) : void 0;
        __esDecorate(null, _classDescriptor = { value: _classThis }, _classDecorators, { kind: "class", name: _classThis.name, metadata: _metadata }, null, _classExtraInitializers);
        PaymentService = _classThis = _classDescriptor.value;
        if (_metadata) Object.defineProperty(_classThis, Symbol.metadata, { enumerable: true, configurable: true, writable: true, value: _metadata });
        __runInitializers(_classThis, _classExtraInitializers);
    })();
    return PaymentService = _classThis;
}();
exports.PaymentService = PaymentService;


// C:\grua-booking-system-25\server\dist\libraries\payment\internal\providers\stripe\stripe.provider.js
"use strict";
var __esDecorate = (this && this.__esDecorate) || function (ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {
    function accept(f) { if (f !== void 0 && typeof f !== "function") throw new TypeError("Function expected"); return f; }
    var kind = contextIn.kind, key = kind === "getter" ? "get" : kind === "setter" ? "set" : "value";
    var target = !descriptorIn && ctor ? contextIn["static"] ? ctor : ctor.prototype : null;
    var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});
    var _, done = false;
    for (var i = decorators.length - 1; i >= 0; i--) {
        var context = {};
        for (var p in contextIn) context[p] = p === "access" ? {} : contextIn[p];
        for (var p in contextIn.access) context.access[p] = contextIn.access[p];
        context.addInitializer = function (f) { if (done) throw new TypeError("Cannot add initializers after decoration has completed"); extraInitializers.push(accept(f || null)); };
        var result = (0, decorators[i])(kind === "accessor" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);
        if (kind === "accessor") {
            if (result === void 0) continue;
            if (result === null || typeof result !== "object") throw new TypeError("Object expected");
            if (_ = accept(result.get)) descriptor.get = _;
            if (_ = accept(result.set)) descriptor.set = _;
            if (_ = accept(result.init)) initializers.unshift(_);
        }
        else if (_ = accept(result)) {
            if (kind === "field") initializers.unshift(_);
            else descriptor[key] = _;
        }
    }
    if (target) Object.defineProperty(target, contextIn.name, descriptor);
    done = true;
};
var __runInitializers = (this && this.__runInitializers) || function (thisArg, initializers, value) {
    var useValue = arguments.length > 2;
    for (var i = 0; i < initializers.length; i++) {
        value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);
    }
    return useValue ? value : void 0;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (g && (g = 0, op[0] && (_ = 0)), _) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __setFunctionName = (this && this.__setFunctionName) || function (f, name, prefix) {
    if (typeof name === "symbol") name = name.description ? "[".concat(name.description, "]") : "";
    return Object.defineProperty(f, "name", { configurable: true, value: prefix ? "".concat(prefix, " ", name) : name });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.StripeProvider = void 0;
var common_1 = require("@nestjs/common");
var stripe_1 = require("stripe");
var payment_type_1 = require("../../payment.type");
var StripeProvider = function () {
    var _classDecorators = [(0, common_1.Injectable)()];
    var _classDescriptor;
    var _classExtraInitializers = [];
    var _classThis;
    var StripeProvider = _classThis = /** @class */ (function () {
        function StripeProvider_1(configurationService, loggerService) {
            this.configurationService = configurationService;
            this.loggerService = loggerService;
            this.logger = this.loggerService.create({ name: 'StripeProvider' });
            this.initialise();
        }
        StripeProvider_1.prototype.isActive = function () {
            if (this.client) {
                return true;
            }
            else {
                return false;
            }
        };
        StripeProvider_1.prototype.initialise = function () {
            this.logger.log('Initialization...');
            try {
                var secretKey = this.configurationService.get('SERVER_PAYMENT_STRIPE_SECRET_KEY');
                this.webhookSecret = this.configurationService.get('SERVER_PAYMENT_STRIPE_WEBHOOK_SECRET');
                if (!this.webhookSecret && !secretKey) {
                    throw new Error('Set SERVER_PAYMENT_STRIPE_SECRET_KEY && SERVER_PAYMENT_STRIPE_WEBHOOK_SECRET in your .env to activate');
                }
                if (!this.webhookSecret) {
                    throw new Error('Set SERVER_PAYMENT_STRIPE_WEBHOOK_SECRET in your .env to activate');
                }
                if (!secretKey) {
                    throw new Error('Set SERVER_PAYMENT_STRIPE_SECRET_KEY in your .env to activate');
                }
                this.client = new stripe_1.Stripe(secretKey, {
                    apiVersion: '2024-04-10',
                });
                this.logger.success("Stripe active");
            }
            catch (error) {
                this.logger.warning("Stripe failed to start");
                this.logger.warning(error);
            }
        };
        StripeProvider_1.prototype.findManySubscriptions = function (customerId) {
            var _a, _b, _c;
            return __awaiter(this, void 0, void 0, function () {
                var response, subscriptions, _i, _d, subscription;
                return __generator(this, function (_e) {
                    switch (_e.label) {
                        case 0: return [4 /*yield*/, this.client.subscriptions.list({
                                customer: customerId,
                            })];
                        case 1:
                            response = _e.sent();
                            subscriptions = [];
                            for (_i = 0, _d = response.data; _i < _d.length; _i++) {
                                subscription = _d[_i];
                                subscriptions.push({
                                    productId: (_c = (_b = (_a = subscription.items) === null || _a === void 0 ? void 0 : _a.data) === null || _b === void 0 ? void 0 : _b[0].price) === null || _c === void 0 ? void 0 : _c.product,
                                    dateExpired: new Date(subscription.current_period_end * 1000),
                                    status: subscription.status,
                                });
                            }
                            return [2 /*return*/, subscriptions];
                    }
                });
            });
        };
        StripeProvider_1.prototype.findManyPayments = function (customerId) {
            var _a;
            return __awaiter(this, void 0, void 0, function () {
                var response, checkoutSessions, payments, _i, checkoutSessions_1, session, _b, _c, lineItem;
                return __generator(this, function (_d) {
                    switch (_d.label) {
                        case 0: return [4 /*yield*/, this.client.checkout.sessions.list({
                                expand: ['data.line_items'],
                                customer: customerId,
                            })];
                        case 1:
                            response = _d.sent();
                            checkoutSessions = (_a = response.data) === null || _a === void 0 ? void 0 : _a.filter(function (session) { return session.payment_status === 'paid'; });
                            payments = [];
                            for (_i = 0, checkoutSessions_1 = checkoutSessions; _i < checkoutSessions_1.length; _i++) {
                                session = checkoutSessions_1[_i];
                                for (_b = 0, _c = session.line_items.data; _b < _c.length; _b++) {
                                    lineItem = _c[_b];
                                    payments.push({
                                        productId: lineItem.price.product,
                                        amount: lineItem.price.unit_amount / 100,
                                        currency: lineItem.price.currency,
                                        date: new Date(session.created * 1000),
                                    });
                                }
                            }
                            return [2 /*return*/, payments];
                    }
                });
            });
        };
        StripeProvider_1.prototype.findManyProducts = function () {
            var _a;
            return __awaiter(this, void 0, void 0, function () {
                var response, products, _i, _b, item, product, price;
                return __generator(this, function (_c) {
                    switch (_c.label) {
                        case 0: return [4 /*yield*/, this.client.products.list({
                                expand: ['data.default_price'],
                            })];
                        case 1:
                            response = _c.sent();
                            products = [];
                            for (_i = 0, _b = response.data; _i < _b.length; _i++) {
                                item = _b[_i];
                                product = {
                                    id: item.id,
                                    type: payment_type_1.ProductType.ONE_TIME,
                                    name: item.name,
                                    price: 0,
                                    description: item.description,
                                };
                                price = item.default_price;
                                if (price === null || price === void 0 ? void 0 : price.recurring) {
                                    product.type = payment_type_1.ProductType.SUBSCRIPTION;
                                }
                                product.price = (_a = (price === null || price === void 0 ? void 0 : price.unit_amount) / 100) !== null && _a !== void 0 ? _a : 0;
                                products.push(product);
                            }
                            return [2 /*return*/, products];
                    }
                });
            });
        };
        StripeProvider_1.prototype.onPayment = function (body, sig) {
            var _a, _b;
            return __awaiter(this, void 0, void 0, function () {
                var event_1, data;
                return __generator(this, function (_c) {
                    try {
                        event_1 = this.client.webhooks.constructEvent(body.toString(), sig, this.webhookSecret);
                        data = (_a = event_1.data) === null || _a === void 0 ? void 0 : _a.object;
                        if (event_1.type === 'checkout.session.completed') {
                            this.logger.success("Stripe event \"".concat(event_1.type, "\" received"));
                            return [2 /*return*/, {
                                    userId: data.client_reference_id,
                                    stripeCustomerId: data.customer,
                                    metadata: (_b = data.metadata) !== null && _b !== void 0 ? _b : {},
                                    customerDetails: data.customer_details,
                                }];
                        }
                        this.logger.log("Stripe event \"".concat(event_1.type, "\" is not handled."));
                        return [2 /*return*/, null];
                    }
                    catch (error) {
                        throw new Error("Could not check webhook: ".concat(error.message));
                    }
                    return [2 /*return*/];
                });
            });
        };
        StripeProvider_1.prototype.createPaymentLink = function (_a) {
            var customerId = _a.customerId, productId = _a.productId, urlRedirection = _a.urlRedirection, _b = _a.metadata, metadata = _b === void 0 ? {} : _b;
            return __awaiter(this, void 0, void 0, function () {
                var price, session;
                return __generator(this, function (_c) {
                    switch (_c.label) {
                        case 0: return [4 /*yield*/, this.findOnePriceByIdOrFail(productId)];
                        case 1:
                            price = _c.sent();
                            return [4 /*yield*/, this.client.checkout.sessions.create({
                                    line_items: [
                                        {
                                            price: price.id,
                                            quantity: 1,
                                        },
                                    ],
                                    mode: price.recurring ? 'subscription' : 'payment',
                                    customer: customerId,
                                    ui_mode: 'hosted',
                                    success_url: urlRedirection,
                                    metadata: metadata,
                                })];
                        case 2:
                            session = _c.sent();
                            return [2 /*return*/, session.url];
                    }
                });
            });
        };
        StripeProvider_1.prototype.createCustomer = function (customer) {
            return __awaiter(this, void 0, void 0, function () {
                var result;
                return __generator(this, function (_a) {
                    switch (_a.label) {
                        case 0: return [4 /*yield*/, this.client.customers.create({
                                name: customer.name,
                                email: customer.email,
                            })];
                        case 1:
                            result = _a.sent();
                            return [2 /*return*/, result.id];
                    }
                });
            });
        };
        StripeProvider_1.prototype.findOnePriceByIdOrFail = function (productId) {
            var _a;
            return __awaiter(this, void 0, void 0, function () {
                var prices, price;
                return __generator(this, function (_b) {
                    switch (_b.label) {
                        case 0: return [4 /*yield*/, this.client.prices.list({
                                product: productId,
                                limit: 1,
                            })];
                        case 1:
                            prices = _b.sent();
                            price = (_a = prices.data) === null || _a === void 0 ? void 0 : _a[0];
                            if (!price) {
                                throw new Error("Could not find price for product ".concat(productId));
                            }
                            return [2 /*return*/, price];
                    }
                });
            });
        };
        return StripeProvider_1;
    }());
    __setFunctionName(_classThis, "StripeProvider");
    (function () {
        var _metadata = typeof Symbol === "function" && Symbol.metadata ? Object.create(null) : void 0;
        __esDecorate(null, _classDescriptor = { value: _classThis }, _classDecorators, { kind: "class", name: _classThis.name, metadata: _metadata }, null, _classExtraInitializers);
        StripeProvider = _classThis = _classDescriptor.value;
        if (_metadata) Object.defineProperty(_classThis, Symbol.metadata, { enumerable: true, configurable: true, writable: true, value: _metadata });
        __runInitializers(_classThis, _classExtraInitializers);
    })();
    return StripeProvider = _classThis;
}();
exports.StripeProvider = StripeProvider;


// C:\grua-booking-system-25\server\dist\libraries\payment\internal\providers\provider.js
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });


// C:\grua-booking-system-25\server\dist\libraries\payment\internal\providers\stripe\stripe.provider.js
"use strict";
var __esDecorate = (this && this.__esDecorate) || function (ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {
    function accept(f) { if (f !== void 0 && typeof f !== "function") throw new TypeError("Function expected"); return f; }
    var kind = contextIn.kind, key = kind === "getter" ? "get" : kind === "setter" ? "set" : "value";
    var target = !descriptorIn && ctor ? contextIn["static"] ? ctor : ctor.prototype : null;
    var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});
    var _, done = false;
    for (var i = decorators.length - 1; i >= 0; i--) {
        var context = {};
        for (var p in contextIn) context[p] = p === "access" ? {} : contextIn[p];
        for (var p in contextIn.access) context.access[p] = contextIn.access[p];
        context.addInitializer = function (f) { if (done) throw new TypeError("Cannot add initializers after decoration has completed"); extraInitializers.push(accept(f || null)); };
        var result = (0, decorators[i])(kind === "accessor" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);
        if (kind === "accessor") {
            if (result === void 0) continue;
            if (result === null || typeof result !== "object") throw new TypeError("Object expected");
            if (_ = accept(result.get)) descriptor.get = _;
            if (_ = accept(result.set)) descriptor.set = _;
            if (_ = accept(result.init)) initializers.unshift(_);
        }
        else if (_ = accept(result)) {
            if (kind === "field") initializers.unshift(_);
            else descriptor[key] = _;
        }
    }
    if (target) Object.defineProperty(target, contextIn.name, descriptor);
    done = true;
};
var __runInitializers = (this && this.__runInitializers) || function (thisArg, initializers, value) {
    var useValue = arguments.length > 2;
    for (var i = 0; i < initializers.length; i++) {
        value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);
    }
    return useValue ? value : void 0;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (g && (g = 0, op[0] && (_ = 0)), _) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __setFunctionName = (this && this.__setFunctionName) || function (f, name, prefix) {
    if (typeof name === "symbol") name = name.description ? "[".concat(name.description, "]") : "";
    return Object.defineProperty(f, "name", { configurable: true, value: prefix ? "".concat(prefix, " ", name) : name });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.StripeProvider = void 0;
var common_1 = require("@nestjs/common");
var stripe_1 = require("stripe");
var payment_type_1 = require("../../payment.type");
var StripeProvider = function () {
    var _classDecorators = [(0, common_1.Injectable)()];
    var _classDescriptor;
    var _classExtraInitializers = [];
    var _classThis;
    var StripeProvider = _classThis = /** @class */ (function () {
        function StripeProvider_1(configurationService, loggerService) {
            this.configurationService = configurationService;
            this.loggerService = loggerService;
            this.logger = this.loggerService.create({ name: 'StripeProvider' });
            this.initialise();
        }
        StripeProvider_1.prototype.isActive = function () {
            if (this.client) {
                return true;
            }
            else {
                return false;
            }
        };
        StripeProvider_1.prototype.initialise = function () {
            this.logger.log('Initialization...');
            try {
                var secretKey = this.configurationService.get('SERVER_PAYMENT_STRIPE_SECRET_KEY');
                this.webhookSecret = this.configurationService.get('SERVER_PAYMENT_STRIPE_WEBHOOK_SECRET');
                if (!this.webhookSecret && !secretKey) {
                    throw new Error('Set SERVER_PAYMENT_STRIPE_SECRET_KEY && SERVER_PAYMENT_STRIPE_WEBHOOK_SECRET in your .env to activate');
                }
                if (!this.webhookSecret) {
                    throw new Error('Set SERVER_PAYMENT_STRIPE_WEBHOOK_SECRET in your .env to activate');
                }
                if (!secretKey) {
                    throw new Error('Set SERVER_PAYMENT_STRIPE_SECRET_KEY in your .env to activate');
                }
                this.client = new stripe_1.Stripe(secretKey, {
                    apiVersion: '2024-04-10',
                });
                this.logger.success("Stripe active");
            }
            catch (error) {
                this.logger.warning("Stripe failed to start");
                this.logger.warning(error);
            }
        };
        StripeProvider_1.prototype.findManySubscriptions = function (customerId) {
            var _a, _b, _c;
            return __awaiter(this, void 0, void 0, function () {
                var response, subscriptions, _i, _d, subscription;
                return __generator(this, function (_e) {
                    switch (_e.label) {
                        case 0: return [4 /*yield*/, this.client.subscriptions.list({
                                customer: customerId,
                            })];
                        case 1:
                            response = _e.sent();
                            subscriptions = [];
                            for (_i = 0, _d = response.data; _i < _d.length; _i++) {
                                subscription = _d[_i];
                                subscriptions.push({
                                    productId: (_c = (_b = (_a = subscription.items) === null || _a === void 0 ? void 0 : _a.data) === null || _b === void 0 ? void 0 : _b[0].price) === null || _c === void 0 ? void 0 : _c.product,
                                    dateExpired: new Date(subscription.current_period_end * 1000),
                                    status: subscription.status,
                                });
                            }
                            return [2 /*return*/, subscriptions];
                    }
                });
            });
        };
        StripeProvider_1.prototype.findManyPayments = function (customerId) {
            var _a;
            return __awaiter(this, void 0, void 0, function () {
                var response, checkoutSessions, payments, _i, checkoutSessions_1, session, _b, _c, lineItem;
                return __generator(this, function (_d) {
                    switch (_d.label) {
                        case 0: return [4 /*yield*/, this.client.checkout.sessions.list({
                                expand: ['data.line_items'],
                                customer: customerId,
                            })];
                        case 1:
                            response = _d.sent();
                            checkoutSessions = (_a = response.data) === null || _a === void 0 ? void 0 : _a.filter(function (session) { return session.payment_status === 'paid'; });
                            payments = [];
                            for (_i = 0, checkoutSessions_1 = checkoutSessions; _i < checkoutSessions_1.length; _i++) {
                                session = checkoutSessions_1[_i];
                                for (_b = 0, _c = session.line_items.data; _b < _c.length; _b++) {
                                    lineItem = _c[_b];
                                    payments.push({
                                        productId: lineItem.price.product,
                                        amount: lineItem.price.unit_amount / 100,
                                        currency: lineItem.price.currency,
                                        date: new Date(session.created * 1000),
                                    });
                                }
                            }
                            return [2 /*return*/, payments];
                    }
                });
            });
        };
        StripeProvider_1.prototype.findManyProducts = function () {
            var _a;
            return __awaiter(this, void 0, void 0, function () {
                var response, products, _i, _b, item, product, price;
                return __generator(this, function (_c) {
                    switch (_c.label) {
                        case 0: return [4 /*yield*/, this.client.products.list({
                                expand: ['data.default_price'],
                            })];
                        case 1:
                            response = _c.sent();
                            products = [];
                            for (_i = 0, _b = response.data; _i < _b.length; _i++) {
                                item = _b[_i];
                                product = {
                                    id: item.id,
                                    type: payment_type_1.ProductType.ONE_TIME,
                                    name: item.name,
                                    price: 0,
                                    description: item.description,
                                };
                                price = item.default_price;
                                if (price === null || price === void 0 ? void 0 : price.recurring) {
                                    product.type = payment_type_1.ProductType.SUBSCRIPTION;
                                }
                                product.price = (_a = (price === null || price === void 0 ? void 0 : price.unit_amount) / 100) !== null && _a !== void 0 ? _a : 0;
                                products.push(product);
                            }
                            return [2 /*return*/, products];
                    }
                });
            });
        };
        StripeProvider_1.prototype.onPayment = function (body, sig) {
            var _a, _b;
            return __awaiter(this, void 0, void 0, function () {
                var event_1, data;
                return __generator(this, function (_c) {
                    try {
                        event_1 = this.client.webhooks.constructEvent(body.toString(), sig, this.webhookSecret);
                        data = (_a = event_1.data) === null || _a === void 0 ? void 0 : _a.object;
                        if (event_1.type === 'checkout.session.completed') {
                            this.logger.success("Stripe event \"".concat(event_1.type, "\" received"));
                            return [2 /*return*/, {
                                    userId: data.client_reference_id,
                                    stripeCustomerId: data.customer,
                                    metadata: (_b = data.metadata) !== null && _b !== void 0 ? _b : {},
                                    customerDetails: data.customer_details,
                                }];
                        }
                        this.logger.log("Stripe event \"".concat(event_1.type, "\" is not handled."));
                        return [2 /*return*/, null];
                    }
                    catch (error) {
                        throw new Error("Could not check webhook: ".concat(error.message));
                    }
                    return [2 /*return*/];
                });
            });
        };
        StripeProvider_1.prototype.createPaymentLink = function (_a) {
            var customerId = _a.customerId, productId = _a.productId, urlRedirection = _a.urlRedirection, _b = _a.metadata, metadata = _b === void 0 ? {} : _b;
            return __awaiter(this, void 0, void 0, function () {
                var price, session;
                return __generator(this, function (_c) {
                    switch (_c.label) {
                        case 0: return [4 /*yield*/, this.findOnePriceByIdOrFail(productId)];
                        case 1:
                            price = _c.sent();
                            return [4 /*yield*/, this.client.checkout.sessions.create({
                                    line_items: [
                                        {
                                            price: price.id,
                                            quantity: 1,
                                        },
                                    ],
                                    mode: price.recurring ? 'subscription' : 'payment',
                                    customer: customerId,
                                    ui_mode: 'hosted',
                                    success_url: urlRedirection,
                                    metadata: metadata,
                                })];
                        case 2:
                            session = _c.sent();
                            return [2 /*return*/, session.url];
                    }
                });
            });
        };
        StripeProvider_1.prototype.createCustomer = function (customer) {
            return __awaiter(this, void 0, void 0, function () {
                var result;
                return __generator(this, function (_a) {
                    switch (_a.label) {
                        case 0: return [4 /*yield*/, this.client.customers.create({
                                name: customer.name,
                                email: customer.email,
                            })];
                        case 1:
                            result = _a.sent();
                            return [2 /*return*/, result.id];
                    }
                });
            });
        };
        StripeProvider_1.prototype.findOnePriceByIdOrFail = function (productId) {
            var _a;
            return __awaiter(this, void 0, void 0, function () {
                var prices, price;
                return __generator(this, function (_b) {
                    switch (_b.label) {
                        case 0: return [4 /*yield*/, this.client.prices.list({
                                product: productId,
                                limit: 1,
                            })];
                        case 1:
                            prices = _b.sent();
                            price = (_a = prices.data) === null || _a === void 0 ? void 0 : _a[0];
                            if (!price) {
                                throw new Error("Could not find price for product ".concat(productId));
                            }
                            return [2 /*return*/, price];
                    }
                });
            });
        };
        return StripeProvider_1;
    }());
    __setFunctionName(_classThis, "StripeProvider");
    (function () {
        var _metadata = typeof Symbol === "function" && Symbol.metadata ? Object.create(null) : void 0;
        __esDecorate(null, _classDescriptor = { value: _classThis }, _classDecorators, { kind: "class", name: _classThis.name, metadata: _metadata }, null, _classExtraInitializers);
        StripeProvider = _classThis = _classDescriptor.value;
        if (_metadata) Object.defineProperty(_classThis, Symbol.metadata, { enumerable: true, configurable: true, writable: true, value: _metadata });
        __runInitializers(_classThis, _classExtraInitializers);
    })();
    return StripeProvider = _classThis;
}();
exports.StripeProvider = StripeProvider;


// C:\grua-booking-system-25\server\dist\libraries\payment\internal\payment.type.js
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ProductType = void 0;
var ProductType;
(function (ProductType) {
    ProductType["SUBSCRIPTION"] = "SUBSCRIPTION";
    ProductType["ONE_TIME"] = "ONE_TIME";
})(ProductType || (exports.ProductType = ProductType = {}));


// C:\grua-booking-system-25\server\dist\libraries\payment\internal\providers\stripe\stripe.provider.js
"use strict";
var __esDecorate = (this && this.__esDecorate) || function (ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {
    function accept(f) { if (f !== void 0 && typeof f !== "function") throw new TypeError("Function expected"); return f; }
    var kind = contextIn.kind, key = kind === "getter" ? "get" : kind === "setter" ? "set" : "value";
    var target = !descriptorIn && ctor ? contextIn["static"] ? ctor : ctor.prototype : null;
    var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});
    var _, done = false;
    for (var i = decorators.length - 1; i >= 0; i--) {
        var context = {};
        for (var p in contextIn) context[p] = p === "access" ? {} : contextIn[p];
        for (var p in contextIn.access) context.access[p] = contextIn.access[p];
        context.addInitializer = function (f) { if (done) throw new TypeError("Cannot add initializers after decoration has completed"); extraInitializers.push(accept(f || null)); };
        var result = (0, decorators[i])(kind === "accessor" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);
        if (kind === "accessor") {
            if (result === void 0) continue;
            if (result === null || typeof result !== "object") throw new TypeError("Object expected");
            if (_ = accept(result.get)) descriptor.get = _;
            if (_ = accept(result.set)) descriptor.set = _;
            if (_ = accept(result.init)) initializers.unshift(_);
        }
        else if (_ = accept(result)) {
            if (kind === "field") initializers.unshift(_);
            else descriptor[key] = _;
        }
    }
    if (target) Object.defineProperty(target, contextIn.name, descriptor);
    done = true;
};
var __runInitializers = (this && this.__runInitializers) || function (thisArg, initializers, value) {
    var useValue = arguments.length > 2;
    for (var i = 0; i < initializers.length; i++) {
        value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);
    }
    return useValue ? value : void 0;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (g && (g = 0, op[0] && (_ = 0)), _) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __setFunctionName = (this && this.__setFunctionName) || function (f, name, prefix) {
    if (typeof name === "symbol") name = name.description ? "[".concat(name.description, "]") : "";
    return Object.defineProperty(f, "name", { configurable: true, value: prefix ? "".concat(prefix, " ", name) : name });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.StripeProvider = void 0;
var common_1 = require("@nestjs/common");
var stripe_1 = require("stripe");
var payment_type_1 = require("../../payment.type");
var StripeProvider = function () {
    var _classDecorators = [(0, common_1.Injectable)()];
    var _classDescriptor;
    var _classExtraInitializers = [];
    var _classThis;
    var StripeProvider = _classThis = /** @class */ (function () {
        function StripeProvider_1(configurationService, loggerService) {
            this.configurationService = configurationService;
            this.loggerService = loggerService;
            this.logger = this.loggerService.create({ name: 'StripeProvider' });
            this.initialise();
        }
        StripeProvider_1.prototype.isActive = function () {
            if (this.client) {
                return true;
            }
            else {
                return false;
            }
        };
        StripeProvider_1.prototype.initialise = function () {
            this.logger.log('Initialization...');
            try {
                var secretKey = this.configurationService.get('SERVER_PAYMENT_STRIPE_SECRET_KEY');
                this.webhookSecret = this.configurationService.get('SERVER_PAYMENT_STRIPE_WEBHOOK_SECRET');
                if (!this.webhookSecret && !secretKey) {
                    throw new Error('Set SERVER_PAYMENT_STRIPE_SECRET_KEY && SERVER_PAYMENT_STRIPE_WEBHOOK_SECRET in your .env to activate');
                }
                if (!this.webhookSecret) {
                    throw new Error('Set SERVER_PAYMENT_STRIPE_WEBHOOK_SECRET in your .env to activate');
                }
                if (!secretKey) {
                    throw new Error('Set SERVER_PAYMENT_STRIPE_SECRET_KEY in your .env to activate');
                }
                this.client = new stripe_1.Stripe(secretKey, {
                    apiVersion: '2024-04-10',
                });
                this.logger.success("Stripe active");
            }
            catch (error) {
                this.logger.warning("Stripe failed to start");
                this.logger.warning(error);
            }
        };
        StripeProvider_1.prototype.findManySubscriptions = function (customerId) {
            var _a, _b, _c;
            return __awaiter(this, void 0, void 0, function () {
                var response, subscriptions, _i, _d, subscription;
                return __generator(this, function (_e) {
                    switch (_e.label) {
                        case 0: return [4 /*yield*/, this.client.subscriptions.list({
                                customer: customerId,
                            })];
                        case 1:
                            response = _e.sent();
                            subscriptions = [];
                            for (_i = 0, _d = response.data; _i < _d.length; _i++) {
                                subscription = _d[_i];
                                subscriptions.push({
                                    productId: (_c = (_b = (_a = subscription.items) === null || _a === void 0 ? void 0 : _a.data) === null || _b === void 0 ? void 0 : _b[0].price) === null || _c === void 0 ? void 0 : _c.product,
                                    dateExpired: new Date(subscription.current_period_end * 1000),
                                    status: subscription.status,
                                });
                            }
                            return [2 /*return*/, subscriptions];
                    }
                });
            });
        };
        StripeProvider_1.prototype.findManyPayments = function (customerId) {
            var _a;
            return __awaiter(this, void 0, void 0, function () {
                var response, checkoutSessions, payments, _i, checkoutSessions_1, session, _b, _c, lineItem;
                return __generator(this, function (_d) {
                    switch (_d.label) {
                        case 0: return [4 /*yield*/, this.client.checkout.sessions.list({
                                expand: ['data.line_items'],
                                customer: customerId,
                            })];
                        case 1:
                            response = _d.sent();
                            checkoutSessions = (_a = response.data) === null || _a === void 0 ? void 0 : _a.filter(function (session) { return session.payment_status === 'paid'; });
                            payments = [];
                            for (_i = 0, checkoutSessions_1 = checkoutSessions; _i < checkoutSessions_1.length; _i++) {
                                session = checkoutSessions_1[_i];
                                for (_b = 0, _c = session.line_items.data; _b < _c.length; _b++) {
                                    lineItem = _c[_b];
                                    payments.push({
                                        productId: lineItem.price.product,
                                        amount: lineItem.price.unit_amount / 100,
                                        currency: lineItem.price.currency,
                                        date: new Date(session.created * 1000),
                                    });
                                }
                            }
                            return [2 /*return*/, payments];
                    }
                });
            });
        };
        StripeProvider_1.prototype.findManyProducts = function () {
            var _a;
            return __awaiter(this, void 0, void 0, function () {
                var response, products, _i, _b, item, product, price;
                return __generator(this, function (_c) {
                    switch (_c.label) {
                        case 0: return [4 /*yield*/, this.client.products.list({
                                expand: ['data.default_price'],
                            })];
                        case 1:
                            response = _c.sent();
                            products = [];
                            for (_i = 0, _b = response.data; _i < _b.length; _i++) {
                                item = _b[_i];
                                product = {
                                    id: item.id,
                                    type: payment_type_1.ProductType.ONE_TIME,
                                    name: item.name,
                                    price: 0,
                                    description: item.description,
                                };
                                price = item.default_price;
                                if (price === null || price === void 0 ? void 0 : price.recurring) {
                                    product.type = payment_type_1.ProductType.SUBSCRIPTION;
                                }
                                product.price = (_a = (price === null || price === void 0 ? void 0 : price.unit_amount) / 100) !== null && _a !== void 0 ? _a : 0;
                                products.push(product);
                            }
                            return [2 /*return*/, products];
                    }
                });
            });
        };
        StripeProvider_1.prototype.onPayment = function (body, sig) {
            var _a, _b;
            return __awaiter(this, void 0, void 0, function () {
                var event_1, data;
                return __generator(this, function (_c) {
                    try {
                        event_1 = this.client.webhooks.constructEvent(body.toString(), sig, this.webhookSecret);
                        data = (_a = event_1.data) === null || _a === void 0 ? void 0 : _a.object;
                        if (event_1.type === 'checkout.session.completed') {
                            this.logger.success("Stripe event \"".concat(event_1.type, "\" received"));
                            return [2 /*return*/, {
                                    userId: data.client_reference_id,
                                    stripeCustomerId: data.customer,
                                    metadata: (_b = data.metadata) !== null && _b !== void 0 ? _b : {},
                                    customerDetails: data.customer_details,
                                }];
                        }
                        this.logger.log("Stripe event \"".concat(event_1.type, "\" is not handled."));
                        return [2 /*return*/, null];
                    }
                    catch (error) {
                        throw new Error("Could not check webhook: ".concat(error.message));
                    }
                    return [2 /*return*/];
                });
            });
        };
        StripeProvider_1.prototype.createPaymentLink = function (_a) {
            var customerId = _a.customerId, productId = _a.productId, urlRedirection = _a.urlRedirection, _b = _a.metadata, metadata = _b === void 0 ? {} : _b;
            return __awaiter(this, void 0, void 0, function () {
                var price, session;
                return __generator(this, function (_c) {
                    switch (_c.label) {
                        case 0: return [4 /*yield*/, this.findOnePriceByIdOrFail(productId)];
                        case 1:
                            price = _c.sent();
                            return [4 /*yield*/, this.client.checkout.sessions.create({
                                    line_items: [
                                        {
                                            price: price.id,
                                            quantity: 1,
                                        },
                                    ],
                                    mode: price.recurring ? 'subscription' : 'payment',
                                    customer: customerId,
                                    ui_mode: 'hosted',
                                    success_url: urlRedirection,
                                    metadata: metadata,
                                })];
                        case 2:
                            session = _c.sent();
                            return [2 /*return*/, session.url];
                    }
                });
            });
        };
        StripeProvider_1.prototype.createCustomer = function (customer) {
            return __awaiter(this, void 0, void 0, function () {
                var result;
                return __generator(this, function (_a) {
                    switch (_a.label) {
                        case 0: return [4 /*yield*/, this.client.customers.create({
                                name: customer.name,
                                email: customer.email,
                            })];
                        case 1:
                            result = _a.sent();
                            return [2 /*return*/, result.id];
                    }
                });
            });
        };
        StripeProvider_1.prototype.findOnePriceByIdOrFail = function (productId) {
            var _a;
            return __awaiter(this, void 0, void 0, function () {
                var prices, price;
                return __generator(this, function (_b) {
                    switch (_b.label) {
                        case 0: return [4 /*yield*/, this.client.prices.list({
                                product: productId,
                                limit: 1,
                            })];
                        case 1:
                            prices = _b.sent();
                            price = (_a = prices.data) === null || _a === void 0 ? void 0 : _a[0];
                            if (!price) {
                                throw new Error("Could not find price for product ".concat(productId));
                            }
                            return [2 /*return*/, price];
                    }
                });
            });
        };
        return StripeProvider_1;
    }());
    __setFunctionName(_classThis, "StripeProvider");
    (function () {
        var _metadata = typeof Symbol === "function" && Symbol.metadata ? Object.create(null) : void 0;
        __esDecorate(null, _classDescriptor = { value: _classThis }, _classDecorators, { kind: "class", name: _classThis.name, metadata: _metadata }, null, _classExtraInitializers);
        StripeProvider = _classThis = _classDescriptor.value;
        if (_metadata) Object.defineProperty(_classThis, Symbol.metadata, { enumerable: true, configurable: true, writable: true, value: _metadata });
        __runInitializers(_classThis, _classExtraInitializers);
    })();
    return StripeProvider = _classThis;
}();
exports.StripeProvider = StripeProvider;


// C:\grua-booking-system-25\server\dist\libraries\payment\internal\providers\provider.js
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });


// C:\grua-booking-system-25\server\dist\libraries\payment\internal\providers\stripe\stripe.provider.js
"use strict";
var __esDecorate = (this && this.__esDecorate) || function (ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {
    function accept(f) { if (f !== void 0 && typeof f !== "function") throw new TypeError("Function expected"); return f; }
    var kind = contextIn.kind, key = kind === "getter" ? "get" : kind === "setter" ? "set" : "value";
    var target = !descriptorIn && ctor ? contextIn["static"] ? ctor : ctor.prototype : null;
    var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});
    var _, done = false;
    for (var i = decorators.length - 1; i >= 0; i--) {
        var context = {};
        for (var p in contextIn) context[p] = p === "access" ? {} : contextIn[p];
        for (var p in contextIn.access) context.access[p] = contextIn.access[p];
        context.addInitializer = function (f) { if (done) throw new TypeError("Cannot add initializers after decoration has completed"); extraInitializers.push(accept(f || null)); };
        var result = (0, decorators[i])(kind === "accessor" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);
        if (kind === "accessor") {
            if (result === void 0) continue;
            if (result === null || typeof result !== "object") throw new TypeError("Object expected");
            if (_ = accept(result.get)) descriptor.get = _;
            if (_ = accept(result.set)) descriptor.set = _;
            if (_ = accept(result.init)) initializers.unshift(_);
        }
        else if (_ = accept(result)) {
            if (kind === "field") initializers.unshift(_);
            else descriptor[key] = _;
        }
    }
    if (target) Object.defineProperty(target, contextIn.name, descriptor);
    done = true;
};
var __runInitializers = (this && this.__runInitializers) || function (thisArg, initializers, value) {
    var useValue = arguments.length > 2;
    for (var i = 0; i < initializers.length; i++) {
        value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);
    }
    return useValue ? value : void 0;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (g && (g = 0, op[0] && (_ = 0)), _) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __setFunctionName = (this && this.__setFunctionName) || function (f, name, prefix) {
    if (typeof name === "symbol") name = name.description ? "[".concat(name.description, "]") : "";
    return Object.defineProperty(f, "name", { configurable: true, value: prefix ? "".concat(prefix, " ", name) : name });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.StripeProvider = void 0;
var common_1 = require("@nestjs/common");
var stripe_1 = require("stripe");
var payment_type_1 = require("../../payment.type");
var StripeProvider = function () {
    var _classDecorators = [(0, common_1.Injectable)()];
    var _classDescriptor;
    var _classExtraInitializers = [];
    var _classThis;
    var StripeProvider = _classThis = /** @class */ (function () {
        function StripeProvider_1(configurationService, loggerService) {
            this.configurationService = configurationService;
            this.loggerService = loggerService;
            this.logger = this.loggerService.create({ name: 'StripeProvider' });
            this.initialise();
        }
        StripeProvider_1.prototype.isActive = function () {
            if (this.client) {
                return true;
            }
            else {
                return false;
            }
        };
        StripeProvider_1.prototype.initialise = function () {
            this.logger.log('Initialization...');
            try {
                var secretKey = this.configurationService.get('SERVER_PAYMENT_STRIPE_SECRET_KEY');
                this.webhookSecret = this.configurationService.get('SERVER_PAYMENT_STRIPE_WEBHOOK_SECRET');
                if (!this.webhookSecret && !secretKey) {
                    throw new Error('Set SERVER_PAYMENT_STRIPE_SECRET_KEY && SERVER_PAYMENT_STRIPE_WEBHOOK_SECRET in your .env to activate');
                }
                if (!this.webhookSecret) {
                    throw new Error('Set SERVER_PAYMENT_STRIPE_WEBHOOK_SECRET in your .env to activate');
                }
                if (!secretKey) {
                    throw new Error('Set SERVER_PAYMENT_STRIPE_SECRET_KEY in your .env to activate');
                }
                this.client = new stripe_1.Stripe(secretKey, {
                    apiVersion: '2024-04-10',
                });
                this.logger.success("Stripe active");
            }
            catch (error) {
                this.logger.warning("Stripe failed to start");
                this.logger.warning(error);
            }
        };
        StripeProvider_1.prototype.findManySubscriptions = function (customerId) {
            var _a, _b, _c;
            return __awaiter(this, void 0, void 0, function () {
                var response, subscriptions, _i, _d, subscription;
                return __generator(this, function (_e) {
                    switch (_e.label) {
                        case 0: return [4 /*yield*/, this.client.subscriptions.list({
                                customer: customerId,
                            })];
                        case 1:
                            response = _e.sent();
                            subscriptions = [];
                            for (_i = 0, _d = response.data; _i < _d.length; _i++) {
                                subscription = _d[_i];
                                subscriptions.push({
                                    productId: (_c = (_b = (_a = subscription.items) === null || _a === void 0 ? void 0 : _a.data) === null || _b === void 0 ? void 0 : _b[0].price) === null || _c === void 0 ? void 0 : _c.product,
                                    dateExpired: new Date(subscription.current_period_end * 1000),
                                    status: subscription.status,
                                });
                            }
                            return [2 /*return*/, subscriptions];
                    }
                });
            });
        };
        StripeProvider_1.prototype.findManyPayments = function (customerId) {
            var _a;
            return __awaiter(this, void 0, void 0, function () {
                var response, checkoutSessions, payments, _i, checkoutSessions_1, session, _b, _c, lineItem;
                return __generator(this, function (_d) {
                    switch (_d.label) {
                        case 0: return [4 /*yield*/, this.client.checkout.sessions.list({
                                expand: ['data.line_items'],
                                customer: customerId,
                            })];
                        case 1:
                            response = _d.sent();
                            checkoutSessions = (_a = response.data) === null || _a === void 0 ? void 0 : _a.filter(function (session) { return session.payment_status === 'paid'; });
                            payments = [];
                            for (_i = 0, checkoutSessions_1 = checkoutSessions; _i < checkoutSessions_1.length; _i++) {
                                session = checkoutSessions_1[_i];
                                for (_b = 0, _c = session.line_items.data; _b < _c.length; _b++) {
                                    lineItem = _c[_b];
                                    payments.push({
                                        productId: lineItem.price.product,
                                        amount: lineItem.price.unit_amount / 100,
                                        currency: lineItem.price.currency,
                                        date: new Date(session.created * 1000),
                                    });
                                }
                            }
                            return [2 /*return*/, payments];
                    }
                });
            });
        };
        StripeProvider_1.prototype.findManyProducts = function () {
            var _a;
            return __awaiter(this, void 0, void 0, function () {
                var response, products, _i, _b, item, product, price;
                return __generator(this, function (_c) {
                    switch (_c.label) {
                        case 0: return [4 /*yield*/, this.client.products.list({
                                expand: ['data.default_price'],
                            })];
                        case 1:
                            response = _c.sent();
                            products = [];
                            for (_i = 0, _b = response.data; _i < _b.length; _i++) {
                                item = _b[_i];
                                product = {
                                    id: item.id,
                                    type: payment_type_1.ProductType.ONE_TIME,
                                    name: item.name,
                                    price: 0,
                                    description: item.description,
                                };
                                price = item.default_price;
                                if (price === null || price === void 0 ? void 0 : price.recurring) {
                                    product.type = payment_type_1.ProductType.SUBSCRIPTION;
                                }
                                product.price = (_a = (price === null || price === void 0 ? void 0 : price.unit_amount) / 100) !== null && _a !== void 0 ? _a : 0;
                                products.push(product);
                            }
                            return [2 /*return*/, products];
                    }
                });
            });
        };
        StripeProvider_1.prototype.onPayment = function (body, sig) {
            var _a, _b;
            return __awaiter(this, void 0, void 0, function () {
                var event_1, data;
                return __generator(this, function (_c) {
                    try {
                        event_1 = this.client.webhooks.constructEvent(body.toString(), sig, this.webhookSecret);
                        data = (_a = event_1.data) === null || _a === void 0 ? void 0 : _a.object;
                        if (event_1.type === 'checkout.session.completed') {
                            this.logger.success("Stripe event \"".concat(event_1.type, "\" received"));
                            return [2 /*return*/, {
                                    userId: data.client_reference_id,
                                    stripeCustomerId: data.customer,
                                    metadata: (_b = data.metadata) !== null && _b !== void 0 ? _b : {},
                                    customerDetails: data.customer_details,
                                }];
                        }
                        this.logger.log("Stripe event \"".concat(event_1.type, "\" is not handled."));
                        return [2 /*return*/, null];
                    }
                    catch (error) {
                        throw new Error("Could not check webhook: ".concat(error.message));
                    }
                    return [2 /*return*/];
                });
            });
        };
        StripeProvider_1.prototype.createPaymentLink = function (_a) {
            var customerId = _a.customerId, productId = _a.productId, urlRedirection = _a.urlRedirection, _b = _a.metadata, metadata = _b === void 0 ? {} : _b;
            return __awaiter(this, void 0, void 0, function () {
                var price, session;
                return __generator(this, function (_c) {
                    switch (_c.label) {
                        case 0: return [4 /*yield*/, this.findOnePriceByIdOrFail(productId)];
                        case 1:
                            price = _c.sent();
                            return [4 /*yield*/, this.client.checkout.sessions.create({
                                    line_items: [
                                        {
                                            price: price.id,
                                            quantity: 1,
                                        },
                                    ],
                                    mode: price.recurring ? 'subscription' : 'payment',
                                    customer: customerId,
                                    ui_mode: 'hosted',
                                    success_url: urlRedirection,
                                    metadata: metadata,
                                })];
                        case 2:
                            session = _c.sent();
                            return [2 /*return*/, session.url];
                    }
                });
            });
        };
        StripeProvider_1.prototype.createCustomer = function (customer) {
            return __awaiter(this, void 0, void 0, function () {
                var result;
                return __generator(this, function (_a) {
                    switch (_a.label) {
                        case 0: return [4 /*yield*/, this.client.customers.create({
                                name: customer.name,
                                email: customer.email,
                            })];
                        case 1:
                            result = _a.sent();
                            return [2 /*return*/, result.id];
                    }
                });
            });
        };
        StripeProvider_1.prototype.findOnePriceByIdOrFail = function (productId) {
            var _a;
            return __awaiter(this, void 0, void 0, function () {
                var prices, price;
                return __generator(this, function (_b) {
                    switch (_b.label) {
                        case 0: return [4 /*yield*/, this.client.prices.list({
                                product: productId,
                                limit: 1,
                            })];
                        case 1:
                            prices = _b.sent();
                            price = (_a = prices.data) === null || _a === void 0 ? void 0 : _a[0];
                            if (!price) {
                                throw new Error("Could not find price for product ".concat(productId));
                            }
                            return [2 /*return*/, price];
                    }
                });
            });
        };
        return StripeProvider_1;
    }());
    __setFunctionName(_classThis, "StripeProvider");
    (function () {
        var _metadata = typeof Symbol === "function" && Symbol.metadata ? Object.create(null) : void 0;
        __esDecorate(null, _classDescriptor = { value: _classThis }, _classDecorators, { kind: "class", name: _classThis.name, metadata: _metadata }, null, _classExtraInitializers);
        StripeProvider = _classThis = _classDescriptor.value;
        if (_metadata) Object.defineProperty(_classThis, Symbol.metadata, { enumerable: true, configurable: true, writable: true, value: _metadata });
        __runInitializers(_classThis, _classExtraInitializers);
    })();
    return StripeProvider = _classThis;
}();
exports.StripeProvider = StripeProvider;


// C:\grua-booking-system-25\server\dist\libraries\socket\index.js
"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", { value: true });
__exportStar(require("./socket.module"), exports);
__exportStar(require("./socket.service"), exports);


// C:\grua-booking-system-25\server\dist\libraries\socket\socket.module.js
"use strict";
var __esDecorate = (this && this.__esDecorate) || function (ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {
    function accept(f) { if (f !== void 0 && typeof f !== "function") throw new TypeError("Function expected"); return f; }
    var kind = contextIn.kind, key = kind === "getter" ? "get" : kind === "setter" ? "set" : "value";
    var target = !descriptorIn && ctor ? contextIn["static"] ? ctor : ctor.prototype : null;
    var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});
    var _, done = false;
    for (var i = decorators.length - 1; i >= 0; i--) {
        var context = {};
        for (var p in contextIn) context[p] = p === "access" ? {} : contextIn[p];
        for (var p in contextIn.access) context.access[p] = contextIn.access[p];
        context.addInitializer = function (f) { if (done) throw new TypeError("Cannot add initializers after decoration has completed"); extraInitializers.push(accept(f || null)); };
        var result = (0, decorators[i])(kind === "accessor" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);
        if (kind === "accessor") {
            if (result === void 0) continue;
            if (result === null || typeof result !== "object") throw new TypeError("Object expected");
            if (_ = accept(result.get)) descriptor.get = _;
            if (_ = accept(result.set)) descriptor.set = _;
            if (_ = accept(result.init)) initializers.unshift(_);
        }
        else if (_ = accept(result)) {
            if (kind === "field") initializers.unshift(_);
            else descriptor[key] = _;
        }
    }
    if (target) Object.defineProperty(target, contextIn.name, descriptor);
    done = true;
};
var __runInitializers = (this && this.__runInitializers) || function (thisArg, initializers, value) {
    var useValue = arguments.length > 2;
    for (var i = 0; i < initializers.length; i++) {
        value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);
    }
    return useValue ? value : void 0;
};
var __setFunctionName = (this && this.__setFunctionName) || function (f, name, prefix) {
    if (typeof name === "symbol") name = name.description ? "[".concat(name.description, "]") : "";
    return Object.defineProperty(f, "name", { configurable: true, value: prefix ? "".concat(prefix, " ", name) : name });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.SocketModule = void 0;
var common_1 = require("@nestjs/common");
var socket_server_1 = require("./socket.server");
var socket_service_1 = require("./socket.service");
var SocketModule = function () {
    var _classDecorators = [(0, common_1.Module)({
            imports: [],
            providers: [socket_service_1.SocketService, socket_server_1.SocketServer],
            exports: [socket_service_1.SocketService],
        })];
    var _classDescriptor;
    var _classExtraInitializers = [];
    var _classThis;
    var SocketModule = _classThis = /** @class */ (function () {
        function SocketModule_1() {
        }
        return SocketModule_1;
    }());
    __setFunctionName(_classThis, "SocketModule");
    (function () {
        var _metadata = typeof Symbol === "function" && Symbol.metadata ? Object.create(null) : void 0;
        __esDecorate(null, _classDescriptor = { value: _classThis }, _classDecorators, { kind: "class", name: _classThis.name, metadata: _metadata }, null, _classExtraInitializers);
        SocketModule = _classThis = _classDescriptor.value;
        if (_metadata) Object.defineProperty(_classThis, Symbol.metadata, { enumerable: true, configurable: true, writable: true, value: _metadata });
        __runInitializers(_classThis, _classExtraInitializers);
    })();
    return SocketModule = _classThis;
}();
exports.SocketModule = SocketModule;


// C:\grua-booking-system-25\server\dist\libraries\socket\socket.server.js
"use strict";
var __esDecorate = (this && this.__esDecorate) || function (ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {
    function accept(f) { if (f !== void 0 && typeof f !== "function") throw new TypeError("Function expected"); return f; }
    var kind = contextIn.kind, key = kind === "getter" ? "get" : kind === "setter" ? "set" : "value";
    var target = !descriptorIn && ctor ? contextIn["static"] ? ctor : ctor.prototype : null;
    var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});
    var _, done = false;
    for (var i = decorators.length - 1; i >= 0; i--) {
        var context = {};
        for (var p in contextIn) context[p] = p === "access" ? {} : contextIn[p];
        for (var p in contextIn.access) context.access[p] = contextIn.access[p];
        context.addInitializer = function (f) { if (done) throw new TypeError("Cannot add initializers after decoration has completed"); extraInitializers.push(accept(f || null)); };
        var result = (0, decorators[i])(kind === "accessor" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);
        if (kind === "accessor") {
            if (result === void 0) continue;
            if (result === null || typeof result !== "object") throw new TypeError("Object expected");
            if (_ = accept(result.get)) descriptor.get = _;
            if (_ = accept(result.set)) descriptor.set = _;
            if (_ = accept(result.init)) initializers.unshift(_);
        }
        else if (_ = accept(result)) {
            if (kind === "field") initializers.unshift(_);
            else descriptor[key] = _;
        }
    }
    if (target) Object.defineProperty(target, contextIn.name, descriptor);
    done = true;
};
var __runInitializers = (this && this.__runInitializers) || function (thisArg, initializers, value) {
    var useValue = arguments.length > 2;
    for (var i = 0; i < initializers.length; i++) {
        value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);
    }
    return useValue ? value : void 0;
};
var __setFunctionName = (this && this.__setFunctionName) || function (f, name, prefix) {
    if (typeof name === "symbol") name = name.description ? "[".concat(name.description, "]") : "";
    return Object.defineProperty(f, "name", { configurable: true, value: prefix ? "".concat(prefix, " ", name) : name });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.SocketServer = void 0;
var websockets_1 = require("@nestjs/websockets");
var utility_1 = require("@server/helpers/utility");
var SocketServer = function () {
    var _classDecorators = [(0, websockets_1.WebSocketGateway)({ cors: true })];
    var _classDescriptor;
    var _classExtraInitializers = [];
    var _classThis;
    var _instanceExtraInitializers = [];
    var _server_decorators;
    var _server_initializers = [];
    var SocketServer = _classThis = /** @class */ (function () {
        function SocketServer_1() {
            this.server = (__runInitializers(this, _instanceExtraInitializers), __runInitializers(this, _server_initializers, void 0));
            this.clients = {};
        }
        SocketServer_1.prototype.handleConnection = function (client) {
            var args = [];
            for (var _i = 1; _i < arguments.length; _i++) {
                args[_i - 1] = arguments[_i];
            }
            var token = this.getClientToken(client);
            try {
                var userId = this.verifyTokenOrFail(token).userId;
                this.registerClient(userId, client);
            }
            catch (_) {
                // ignore
            }
        };
        SocketServer_1.prototype.handleDisconnect = function (client) {
            for (var _i = 0, _a = Object.entries(this.clients); _i < _a.length; _i++) {
                var _b = _a[_i], key = _b[0], value = _b[1];
                if (value.id === client.id) {
                    delete this.clients[key];
                    break;
                }
            }
        };
        SocketServer_1.prototype.sendToUser = function (userId, key, payload) {
            var client = this.getClient(userId);
            if (client) {
                client.emit(key, payload);
            }
        };
        SocketServer_1.prototype.getClientToken = function (client) {
            return client.handshake.query.token;
        };
        SocketServer_1.prototype.verifyTokenOrFail = function (token) {
            var isUndefined = token === 'undefined' || !utility_1.Utility.isDefined(token);
            if (isUndefined) {
                throw new Error("Token is undefined");
            }
            return { userId: token };
        };
        SocketServer_1.prototype.registerClient = function (userId, client) {
            if (!this.clients[userId]) {
                this.clients[userId] = client;
            }
        };
        SocketServer_1.prototype.getClient = function (userId) {
            return this.clients[userId];
        };
        return SocketServer_1;
    }());
    __setFunctionName(_classThis, "SocketServer");
    (function () {
        var _metadata = typeof Symbol === "function" && Symbol.metadata ? Object.create(null) : void 0;
        _server_decorators = [(0, websockets_1.WebSocketServer)()];
        __esDecorate(null, null, _server_decorators, { kind: "field", name: "server", static: false, private: false, access: { has: function (obj) { return "server" in obj; }, get: function (obj) { return obj.server; }, set: function (obj, value) { obj.server = value; } }, metadata: _metadata }, _server_initializers, _instanceExtraInitializers);
        __esDecorate(null, _classDescriptor = { value: _classThis }, _classDecorators, { kind: "class", name: _classThis.name, metadata: _metadata }, null, _classExtraInitializers);
        SocketServer = _classThis = _classDescriptor.value;
        if (_metadata) Object.defineProperty(_classThis, Symbol.metadata, { enumerable: true, configurable: true, writable: true, value: _metadata });
        __runInitializers(_classThis, _classExtraInitializers);
    })();
    return SocketServer = _classThis;
}();
exports.SocketServer = SocketServer;


// C:\grua-booking-system-25\server\dist\libraries\socket\socket.service.js
"use strict";
var __esDecorate = (this && this.__esDecorate) || function (ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {
    function accept(f) { if (f !== void 0 && typeof f !== "function") throw new TypeError("Function expected"); return f; }
    var kind = contextIn.kind, key = kind === "getter" ? "get" : kind === "setter" ? "set" : "value";
    var target = !descriptorIn && ctor ? contextIn["static"] ? ctor : ctor.prototype : null;
    var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});
    var _, done = false;
    for (var i = decorators.length - 1; i >= 0; i--) {
        var context = {};
        for (var p in contextIn) context[p] = p === "access" ? {} : contextIn[p];
        for (var p in contextIn.access) context.access[p] = contextIn.access[p];
        context.addInitializer = function (f) { if (done) throw new TypeError("Cannot add initializers after decoration has completed"); extraInitializers.push(accept(f || null)); };
        var result = (0, decorators[i])(kind === "accessor" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);
        if (kind === "accessor") {
            if (result === void 0) continue;
            if (result === null || typeof result !== "object") throw new TypeError("Object expected");
            if (_ = accept(result.get)) descriptor.get = _;
            if (_ = accept(result.set)) descriptor.set = _;
            if (_ = accept(result.init)) initializers.unshift(_);
        }
        else if (_ = accept(result)) {
            if (kind === "field") initializers.unshift(_);
            else descriptor[key] = _;
        }
    }
    if (target) Object.defineProperty(target, contextIn.name, descriptor);
    done = true;
};
var __runInitializers = (this && this.__runInitializers) || function (thisArg, initializers, value) {
    var useValue = arguments.length > 2;
    for (var i = 0; i < initializers.length; i++) {
        value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);
    }
    return useValue ? value : void 0;
};
var __setFunctionName = (this && this.__setFunctionName) || function (f, name, prefix) {
    if (typeof name === "symbol") name = name.description ? "[".concat(name.description, "]") : "";
    return Object.defineProperty(f, "name", { configurable: true, value: prefix ? "".concat(prefix, " ", name) : name });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.SocketService = void 0;
var common_1 = require("@nestjs/common");
var SocketService = function () {
    var _classDecorators = [(0, common_1.Injectable)()];
    var _classDescriptor;
    var _classExtraInitializers = [];
    var _classThis;
    var SocketService = _classThis = /** @class */ (function () {
        function SocketService_1(socketServer) {
            this.socketServer = socketServer;
        }
        SocketService_1.prototype.send = function (userId, key, payload) {
            this.socketServer.sendToUser(userId, key, payload);
        };
        return SocketService_1;
    }());
    __setFunctionName(_classThis, "SocketService");
    (function () {
        var _metadata = typeof Symbol === "function" && Symbol.metadata ? Object.create(null) : void 0;
        __esDecorate(null, _classDescriptor = { value: _classThis }, _classDecorators, { kind: "class", name: _classThis.name, metadata: _metadata }, null, _classExtraInitializers);
        SocketService = _classThis = _classDescriptor.value;
        if (_metadata) Object.defineProperty(_classThis, Symbol.metadata, { enumerable: true, configurable: true, writable: true, value: _metadata });
        __runInitializers(_classThis, _classExtraInitializers);
    })();
    return SocketService = _classThis;
}();
exports.SocketService = SocketService;


// C:\grua-booking-system-25\server\dist\libraries\upload\internal\providers\aws\upload.provider.aws.js
"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __esDecorate = (this && this.__esDecorate) || function (ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {
    function accept(f) { if (f !== void 0 && typeof f !== "function") throw new TypeError("Function expected"); return f; }
    var kind = contextIn.kind, key = kind === "getter" ? "get" : kind === "setter" ? "set" : "value";
    var target = !descriptorIn && ctor ? contextIn["static"] ? ctor : ctor.prototype : null;
    var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});
    var _, done = false;
    for (var i = decorators.length - 1; i >= 0; i--) {
        var context = {};
        for (var p in contextIn) context[p] = p === "access" ? {} : contextIn[p];
        for (var p in contextIn.access) context.access[p] = contextIn.access[p];
        context.addInitializer = function (f) { if (done) throw new TypeError("Cannot add initializers after decoration has completed"); extraInitializers.push(accept(f || null)); };
        var result = (0, decorators[i])(kind === "accessor" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);
        if (kind === "accessor") {
            if (result === void 0) continue;
            if (result === null || typeof result !== "object") throw new TypeError("Object expected");
            if (_ = accept(result.get)) descriptor.get = _;
            if (_ = accept(result.set)) descriptor.set = _;
            if (_ = accept(result.init)) initializers.unshift(_);
        }
        else if (_ = accept(result)) {
            if (kind === "field") initializers.unshift(_);
            else descriptor[key] = _;
        }
    }
    if (target) Object.defineProperty(target, contextIn.name, descriptor);
    done = true;
};
var __runInitializers = (this && this.__runInitializers) || function (thisArg, initializers, value) {
    var useValue = arguments.length > 2;
    for (var i = 0; i < initializers.length; i++) {
        value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);
    }
    return useValue ? value : void 0;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (g && (g = 0, op[0] && (_ = 0)), _) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __setFunctionName = (this && this.__setFunctionName) || function (f, name, prefix) {
    if (typeof name === "symbol") name = name.description ? "[".concat(name.description, "]") : "";
    return Object.defineProperty(f, "name", { configurable: true, value: prefix ? "".concat(prefix, " ", name) : name });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.UploadProviderAws = void 0;
var client_s3_1 = require("@aws-sdk/client-s3");
var s3_request_presigner_1 = require("@aws-sdk/s3-request-presigner");
var common_1 = require("@nestjs/common");
var upload_provider_1 = require("@server/libraries/upload/upload.provider");
var ONE_HOUR_IN_SECONDS = 60 * 60;
var UploadProviderAws = function () {
    var _classDecorators = [(0, common_1.Injectable)()];
    var _classDescriptor;
    var _classExtraInitializers = [];
    var _classThis;
    var _classSuper = upload_provider_1.UploadProvider;
    var UploadProviderAws = _classThis = /** @class */ (function (_super) {
        __extends(UploadProviderAws_1, _super);
        function UploadProviderAws_1(loggerService, configurationService) {
            var _this = _super.call(this) || this;
            _this.loggerService = loggerService;
            _this.configurationService = configurationService;
            _this.logger = _this.loggerService.create({ name: 'UploadProviderAws' });
            return _this;
        }
        UploadProviderAws_1.prototype.initialise = function () {
            return __awaiter(this, void 0, void 0, function () {
                var accessKey, secretKey, error_1;
                return __generator(this, function (_a) {
                    switch (_a.label) {
                        case 0:
                            _a.trys.push([0, 2, , 3]);
                            accessKey = this.configurationService.get("SERVER_UPLOAD_AWS_ACCESS_KEY");
                            secretKey = this.configurationService.get("SERVER_UPLOAD_AWS_SECRET_KEY");
                            if (!accessKey && !secretKey) {
                                throw new Error('Set SERVER_UPLOAD_AWS_ACCESS_KEY && SERVER_UPLOAD_AWS_SECRET_KEY in your .env to activate');
                            }
                            if (!accessKey) {
                                throw new Error('Set SERVER_UPLOAD_AWS_ACCESS_KEY in your .env to activate');
                            }
                            if (!secretKey) {
                                throw new Error('Set SERVER_UPLOAD_AWS_SECRET_KEY in your .env to activate');
                            }
                            this.region = this.configurationService.get("SERVER_UPLOAD_AWS_REGION", 'us-east-1');
                            this.bucketPublicName = this.configurationService.get("SERVER_UPLOAD_AWS_BUCKET_PUBLIC_NAME");
                            if (!this.bucketPublicName) {
                                this.logger.warning("Set SERVER_UPLOAD_AWS_BUCKET_PUBLIC_NAME in your .env to activate a public bucket with infinite urls");
                            }
                            this.bucketPrivateName = this.configurationService.get("SERVER_UPLOAD_AWS_BUCKET_PRIVATE_NAME");
                            if (!this.bucketPrivateName) {
                                this.logger.warning("Set SERVER_UPLOAD_AWS_BUCKET_PRIVATE_NAME in your .env to activate a private bucket with signed urls");
                            }
                            this.client = new client_s3_1.S3Client({
                                region: this.region,
                                credentials: {
                                    accessKeyId: accessKey,
                                    secretAccessKey: secretKey,
                                },
                            });
                            return [4 /*yield*/, this.check()];
                        case 1:
                            _a.sent();
                            this.logger.success("AWS library active in region ".concat(this.region));
                            return [3 /*break*/, 3];
                        case 2:
                            error_1 = _a.sent();
                            this.logger.warning("AWS library failed to start");
                            throw new Error(error_1);
                        case 3: return [2 /*return*/];
                    }
                });
            });
        };
        UploadProviderAws_1.prototype.check = function () {
            return __awaiter(this, void 0, void 0, function () {
                var buckets, bucket, bucket;
                var _this = this;
                return __generator(this, function (_a) {
                    switch (_a.label) {
                        case 0: return [4 /*yield*/, this.listBuckets()];
                        case 1:
                            buckets = _a.sent();
                            if (this.bucketPrivateName) {
                                this.logger.log("Checking bucket \"".concat(this.bucketPrivateName, "\"..."));
                                bucket = buckets.find(function (bucket) { return bucket.name === _this.bucketPrivateName; });
                                if (bucket) {
                                    this.logger.success("Bucket \"".concat(this.bucketPrivateName, "\" is active"));
                                }
                                else {
                                    throw new Error("Bucket \"".concat(this.bucketPrivateName, "\" was not found"));
                                }
                            }
                            if (this.bucketPublicName) {
                                this.logger.log("Checking bucket \"".concat(this.bucketPublicName, "\"..."));
                                bucket = buckets.find(function (bucket) { return bucket.name === _this.bucketPublicName; });
                                if (bucket) {
                                    this.logger.success("Bucket \"".concat(this.bucketPublicName, "\" is active"));
                                }
                                else {
                                    throw new Error("Bucket \"".concat(this.bucketPublicName, "\" was not found"));
                                }
                            }
                            return [2 /*return*/];
                    }
                });
            });
        };
        UploadProviderAws_1.prototype.uploadPublic = function (options) {
            var _a;
            return __awaiter(this, void 0, void 0, function () {
                var file, key, command, url, error_2;
                return __generator(this, function (_b) {
                    switch (_b.label) {
                        case 0:
                            file = options.file;
                            key = this.ensureFilename(file.originalname);
                            command = new client_s3_1.PutObjectCommand({
                                Bucket: "".concat(this.bucketPublicName),
                                Key: this.ensureKey(key),
                                Body: file.buffer,
                                ContentType: (_a = file.mimetype) !== null && _a !== void 0 ? _a : 'image/png',
                            });
                            _b.label = 1;
                        case 1:
                            _b.trys.push([1, 3, , 4]);
                            return [4 /*yield*/, this.client.send(command)];
                        case 2:
                            _b.sent();
                            this.logger.success("File ".concat(file.originalname, " saved (public)"));
                            url = "".concat(this.getBaseUrlPublic(), "/").concat(key);
                            return [2 /*return*/, { url: url }];
                        case 3:
                            error_2 = _b.sent();
                            this.logger.error("".concat(error_2));
                            throw new Error("Could not upload public file with key \"".concat(key, "\""));
                        case 4: return [2 /*return*/];
                    }
                });
            });
        };
        UploadProviderAws_1.prototype.uploadPrivate = function (options) {
            var _a;
            return __awaiter(this, void 0, void 0, function () {
                var file, key, command, url, error_3;
                return __generator(this, function (_b) {
                    switch (_b.label) {
                        case 0:
                            file = options.file;
                            key = this.ensureFilename(file.originalname);
                            command = new client_s3_1.PutObjectCommand({
                                Bucket: "".concat(this.bucketPrivateName),
                                Key: this.ensureKey(key),
                                Body: file.buffer,
                                ContentType: (_a = file.mimetype) !== null && _a !== void 0 ? _a : 'image/png',
                            });
                            _b.label = 1;
                        case 1:
                            _b.trys.push([1, 3, , 4]);
                            return [4 /*yield*/, this.client.send(command)];
                        case 2:
                            _b.sent();
                            this.logger.success("File ".concat(file.originalname, " saved (private)"));
                            url = "".concat(this.getBaseUrlPrivate(), "/").concat(key);
                            return [2 /*return*/, { url: url }];
                        case 3:
                            error_3 = _b.sent();
                            this.logger.error("".concat(error_3));
                            throw new Error("Could not upload private file with key \"".concat(key, "\""));
                        case 4: return [2 /*return*/];
                    }
                });
            });
        };
        UploadProviderAws_1.prototype.fromPrivateToPublicUrl = function (_a) {
            var url = _a.url, _b = _a.expiresInSeconds, expiresInSeconds = _b === void 0 ? ONE_HOUR_IN_SECONDS : _b;
            return __awaiter(this, void 0, void 0, function () {
                var key, params, command, urlPublic;
                return __generator(this, function (_c) {
                    switch (_c.label) {
                        case 0:
                            if (!this.isUrlPrivate(url)) {
                                throw new Error("".concat(url, " must be a private url"));
                            }
                            key = this.extractKeyFromUrlPrivate(url);
                            params = {
                                Bucket: "".concat(this.bucketPrivateName),
                                Key: this.ensureKey(key),
                            };
                            command = new client_s3_1.GetObjectCommand(params);
                            return [4 /*yield*/, (0, s3_request_presigner_1.getSignedUrl)(this.client, command, {
                                    expiresIn: expiresInSeconds,
                                })];
                        case 1:
                            urlPublic = _c.sent();
                            return [2 /*return*/, { url: urlPublic }];
                    }
                });
            });
        };
        /* -------------------------------------------------------------------------- */
        /*                                   PRIVATE                                  */
        /* -------------------------------------------------------------------------- */
        UploadProviderAws_1.prototype.listBuckets = function () {
            return __awaiter(this, void 0, void 0, function () {
                var result, buckets;
                return __generator(this, function (_a) {
                    switch (_a.label) {
                        case 0: return [4 /*yield*/, this.client.send(new client_s3_1.ListBucketsCommand({}))];
                        case 1:
                            result = _a.sent();
                            buckets = result.Buckets.map(function (item) { return ({
                                name: item.Name,
                                dateCreation: item.CreationDate,
                            }); });
                            return [2 /*return*/, buckets];
                    }
                });
            });
        };
        UploadProviderAws_1.prototype.getBaseUrlPrivate = function () {
            return "https://".concat(this.bucketPrivateName, ".s3.").concat(this.region, ".amazonaws.com");
        };
        UploadProviderAws_1.prototype.getBaseUrlPublic = function () {
            return "https://".concat(this.bucketPublicName, ".s3.").concat(this.region, ".amazonaws.com");
        };
        UploadProviderAws_1.prototype.ensureKey = function (key) {
            var isPrefixed = key.startsWith('/');
            if (isPrefixed) {
                return key.slice(1);
            }
            return key;
        };
        UploadProviderAws_1.prototype.isUrlPrivate = function (url) {
            var baseUrlPrivate = this.getBaseUrlPrivate();
            var isPrivate = url.startsWith(baseUrlPrivate);
            return isPrivate;
        };
        UploadProviderAws_1.prototype.extractKeyFromUrlPrivate = function (url) {
            var baseUrlPrivate = this.getBaseUrlPrivate();
            return url.replace(baseUrlPrivate, '');
        };
        return UploadProviderAws_1;
    }(_classSuper));
    __setFunctionName(_classThis, "UploadProviderAws");
    (function () {
        var _a;
        var _metadata = typeof Symbol === "function" && Symbol.metadata ? Object.create((_a = _classSuper[Symbol.metadata]) !== null && _a !== void 0 ? _a : null) : void 0;
        __esDecorate(null, _classDescriptor = { value: _classThis }, _classDecorators, { kind: "class", name: _classThis.name, metadata: _metadata }, null, _classExtraInitializers);
        UploadProviderAws = _classThis = _classDescriptor.value;
        if (_metadata) Object.defineProperty(_classThis, Symbol.metadata, { enumerable: true, configurable: true, writable: true, value: _metadata });
        __runInitializers(_classThis, _classExtraInitializers);
    })();
    return UploadProviderAws = _classThis;
}();
exports.UploadProviderAws = UploadProviderAws;


// C:\grua-booking-system-25\server\dist\libraries\upload\internal\providers\local\upload.provider.local.js
"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __esDecorate = (this && this.__esDecorate) || function (ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {
    function accept(f) { if (f !== void 0 && typeof f !== "function") throw new TypeError("Function expected"); return f; }
    var kind = contextIn.kind, key = kind === "getter" ? "get" : kind === "setter" ? "set" : "value";
    var target = !descriptorIn && ctor ? contextIn["static"] ? ctor : ctor.prototype : null;
    var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});
    var _, done = false;
    for (var i = decorators.length - 1; i >= 0; i--) {
        var context = {};
        for (var p in contextIn) context[p] = p === "access" ? {} : contextIn[p];
        for (var p in contextIn.access) context.access[p] = contextIn.access[p];
        context.addInitializer = function (f) { if (done) throw new TypeError("Cannot add initializers after decoration has completed"); extraInitializers.push(accept(f || null)); };
        var result = (0, decorators[i])(kind === "accessor" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);
        if (kind === "accessor") {
            if (result === void 0) continue;
            if (result === null || typeof result !== "object") throw new TypeError("Object expected");
            if (_ = accept(result.get)) descriptor.get = _;
            if (_ = accept(result.set)) descriptor.set = _;
            if (_ = accept(result.init)) initializers.unshift(_);
        }
        else if (_ = accept(result)) {
            if (kind === "field") initializers.unshift(_);
            else descriptor[key] = _;
        }
    }
    if (target) Object.defineProperty(target, contextIn.name, descriptor);
    done = true;
};
var __runInitializers = (this && this.__runInitializers) || function (thisArg, initializers, value) {
    var useValue = arguments.length > 2;
    for (var i = 0; i < initializers.length; i++) {
        value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);
    }
    return useValue ? value : void 0;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (g && (g = 0, op[0] && (_ = 0)), _) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __setFunctionName = (this && this.__setFunctionName) || function (f, name, prefix) {
    if (typeof name === "symbol") name = name.description ? "[".concat(name.description, "]") : "";
    return Object.defineProperty(f, "name", { configurable: true, value: prefix ? "".concat(prefix, " ", name) : name });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.UploadProviderLocal = void 0;
var common_1 = require("@nestjs/common");
var serve_static_1 = require("@nestjs/serve-static");
var file_1 = require("@server/helpers/file");
var upload_provider_1 = require("@server/libraries/upload/upload.provider");
var path_1 = require("path");
var UploadProviderLocal = function () {
    var _classDecorators = [(0, common_1.Injectable)()];
    var _classDescriptor;
    var _classExtraInitializers = [];
    var _classThis;
    var _classSuper = upload_provider_1.UploadProvider;
    var UploadProviderLocal = _classThis = /** @class */ (function (_super) {
        __extends(UploadProviderLocal_1, _super);
        function UploadProviderLocal_1(loggerService, configurationService) {
            var _this = _super.call(this) || this;
            _this.loggerService = loggerService;
            _this.configurationService = configurationService;
            _this.pathPublic = ".".concat(UploadProviderLocal.path, "/public");
            _this.pathPrivate = ".".concat(UploadProviderLocal.path, "/private");
            _this.logger = _this.loggerService.create({ name: 'UploadProviderLocal' });
            return _this;
        }
        UploadProviderLocal_1.setup = function () {
            return serve_static_1.ServeStaticModule.forRoot({
                rootPath: (0, path_1.join)(file_1.FileHelper.getRoot(), ".".concat(this.path)),
                serveRoot: this.path,
            });
        };
        UploadProviderLocal_1.prototype.initialise = function () {
            try {
                file_1.FileHelper.writeFolder(this.pathPublic);
                this.staticServerUrl = "".concat(this.configurationService.getBaseUrl());
                this.logger.success("Upload Local is active");
            }
            catch (error) {
                this.logger.error("Upload Local failed to start: ".concat(error.message));
            }
            return;
        };
        UploadProviderLocal_1.prototype.uploadPublic = function (_a) {
            var file = _a.file;
            return __awaiter(this, void 0, void 0, function () {
                var content, filename, path, url;
                return __generator(this, function (_b) {
                    content = file.buffer;
                    filename = this.ensureFilename(file.originalname);
                    path = file_1.FileHelper.joinPaths(this.pathPublic, filename);
                    file_1.FileHelper.writeFile(path, content);
                    url = "".concat(this.staticServerUrl, "/").concat(path);
                    return [2 /*return*/, { url: url }];
                });
            });
        };
        UploadProviderLocal_1.prototype.uploadPrivate = function (_a) {
            var file = _a.file;
            return __awaiter(this, void 0, void 0, function () {
                var content, filename, path, url;
                return __generator(this, function (_b) {
                    content = file.buffer;
                    filename = this.ensureFilename(file.originalname);
                    path = file_1.FileHelper.joinPaths(this.pathPrivate, filename);
                    file_1.FileHelper.writeFile(path, content);
                    url = "".concat(this.staticServerUrl, "/").concat(path);
                    return [2 /*return*/, { url: url }];
                });
            });
        };
        UploadProviderLocal_1.prototype.fromPrivateToPublicUrl = function (_a) {
            var url = _a.url;
            return __awaiter(this, void 0, void 0, function () {
                return __generator(this, function (_b) {
                    return [2 /*return*/, { url: url }];
                });
            });
        };
        return UploadProviderLocal_1;
    }(_classSuper));
    __setFunctionName(_classThis, "UploadProviderLocal");
    (function () {
        var _a;
        var _metadata = typeof Symbol === "function" && Symbol.metadata ? Object.create((_a = _classSuper[Symbol.metadata]) !== null && _a !== void 0 ? _a : null) : void 0;
        __esDecorate(null, _classDescriptor = { value: _classThis }, _classDecorators, { kind: "class", name: _classThis.name, metadata: _metadata }, null, _classExtraInitializers);
        UploadProviderLocal = _classThis = _classDescriptor.value;
        if (_metadata) Object.defineProperty(_classThis, Symbol.metadata, { enumerable: true, configurable: true, writable: true, value: _metadata });
    })();
    _classThis.path = '/upload-local';
    (function () {
        __runInitializers(_classThis, _classExtraInitializers);
    })();
    return UploadProviderLocal = _classThis;
}();
exports.UploadProviderLocal = UploadProviderLocal;


// C:\grua-booking-system-25\server\dist\libraries\upload\internal\providers\aws\upload.provider.aws.js
"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __esDecorate = (this && this.__esDecorate) || function (ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {
    function accept(f) { if (f !== void 0 && typeof f !== "function") throw new TypeError("Function expected"); return f; }
    var kind = contextIn.kind, key = kind === "getter" ? "get" : kind === "setter" ? "set" : "value";
    var target = !descriptorIn && ctor ? contextIn["static"] ? ctor : ctor.prototype : null;
    var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});
    var _, done = false;
    for (var i = decorators.length - 1; i >= 0; i--) {
        var context = {};
        for (var p in contextIn) context[p] = p === "access" ? {} : contextIn[p];
        for (var p in contextIn.access) context.access[p] = contextIn.access[p];
        context.addInitializer = function (f) { if (done) throw new TypeError("Cannot add initializers after decoration has completed"); extraInitializers.push(accept(f || null)); };
        var result = (0, decorators[i])(kind === "accessor" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);
        if (kind === "accessor") {
            if (result === void 0) continue;
            if (result === null || typeof result !== "object") throw new TypeError("Object expected");
            if (_ = accept(result.get)) descriptor.get = _;
            if (_ = accept(result.set)) descriptor.set = _;
            if (_ = accept(result.init)) initializers.unshift(_);
        }
        else if (_ = accept(result)) {
            if (kind === "field") initializers.unshift(_);
            else descriptor[key] = _;
        }
    }
    if (target) Object.defineProperty(target, contextIn.name, descriptor);
    done = true;
};
var __runInitializers = (this && this.__runInitializers) || function (thisArg, initializers, value) {
    var useValue = arguments.length > 2;
    for (var i = 0; i < initializers.length; i++) {
        value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);
    }
    return useValue ? value : void 0;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (g && (g = 0, op[0] && (_ = 0)), _) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __setFunctionName = (this && this.__setFunctionName) || function (f, name, prefix) {
    if (typeof name === "symbol") name = name.description ? "[".concat(name.description, "]") : "";
    return Object.defineProperty(f, "name", { configurable: true, value: prefix ? "".concat(prefix, " ", name) : name });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.UploadProviderAws = void 0;
var client_s3_1 = require("@aws-sdk/client-s3");
var s3_request_presigner_1 = require("@aws-sdk/s3-request-presigner");
var common_1 = require("@nestjs/common");
var upload_provider_1 = require("@server/libraries/upload/upload.provider");
var ONE_HOUR_IN_SECONDS = 60 * 60;
var UploadProviderAws = function () {
    var _classDecorators = [(0, common_1.Injectable)()];
    var _classDescriptor;
    var _classExtraInitializers = [];
    var _classThis;
    var _classSuper = upload_provider_1.UploadProvider;
    var UploadProviderAws = _classThis = /** @class */ (function (_super) {
        __extends(UploadProviderAws_1, _super);
        function UploadProviderAws_1(loggerService, configurationService) {
            var _this = _super.call(this) || this;
            _this.loggerService = loggerService;
            _this.configurationService = configurationService;
            _this.logger = _this.loggerService.create({ name: 'UploadProviderAws' });
            return _this;
        }
        UploadProviderAws_1.prototype.initialise = function () {
            return __awaiter(this, void 0, void 0, function () {
                var accessKey, secretKey, error_1;
                return __generator(this, function (_a) {
                    switch (_a.label) {
                        case 0:
                            _a.trys.push([0, 2, , 3]);
                            accessKey = this.configurationService.get("SERVER_UPLOAD_AWS_ACCESS_KEY");
                            secretKey = this.configurationService.get("SERVER_UPLOAD_AWS_SECRET_KEY");
                            if (!accessKey && !secretKey) {
                                throw new Error('Set SERVER_UPLOAD_AWS_ACCESS_KEY && SERVER_UPLOAD_AWS_SECRET_KEY in your .env to activate');
                            }
                            if (!accessKey) {
                                throw new Error('Set SERVER_UPLOAD_AWS_ACCESS_KEY in your .env to activate');
                            }
                            if (!secretKey) {
                                throw new Error('Set SERVER_UPLOAD_AWS_SECRET_KEY in your .env to activate');
                            }
                            this.region = this.configurationService.get("SERVER_UPLOAD_AWS_REGION", 'us-east-1');
                            this.bucketPublicName = this.configurationService.get("SERVER_UPLOAD_AWS_BUCKET_PUBLIC_NAME");
                            if (!this.bucketPublicName) {
                                this.logger.warning("Set SERVER_UPLOAD_AWS_BUCKET_PUBLIC_NAME in your .env to activate a public bucket with infinite urls");
                            }
                            this.bucketPrivateName = this.configurationService.get("SERVER_UPLOAD_AWS_BUCKET_PRIVATE_NAME");
                            if (!this.bucketPrivateName) {
                                this.logger.warning("Set SERVER_UPLOAD_AWS_BUCKET_PRIVATE_NAME in your .env to activate a private bucket with signed urls");
                            }
                            this.client = new client_s3_1.S3Client({
                                region: this.region,
                                credentials: {
                                    accessKeyId: accessKey,
                                    secretAccessKey: secretKey,
                                },
                            });
                            return [4 /*yield*/, this.check()];
                        case 1:
                            _a.sent();
                            this.logger.success("AWS library active in region ".concat(this.region));
                            return [3 /*break*/, 3];
                        case 2:
                            error_1 = _a.sent();
                            this.logger.warning("AWS library failed to start");
                            throw new Error(error_1);
                        case 3: return [2 /*return*/];
                    }
                });
            });
        };
        UploadProviderAws_1.prototype.check = function () {
            return __awaiter(this, void 0, void 0, function () {
                var buckets, bucket, bucket;
                var _this = this;
                return __generator(this, function (_a) {
                    switch (_a.label) {
                        case 0: return [4 /*yield*/, this.listBuckets()];
                        case 1:
                            buckets = _a.sent();
                            if (this.bucketPrivateName) {
                                this.logger.log("Checking bucket \"".concat(this.bucketPrivateName, "\"..."));
                                bucket = buckets.find(function (bucket) { return bucket.name === _this.bucketPrivateName; });
                                if (bucket) {
                                    this.logger.success("Bucket \"".concat(this.bucketPrivateName, "\" is active"));
                                }
                                else {
                                    throw new Error("Bucket \"".concat(this.bucketPrivateName, "\" was not found"));
                                }
                            }
                            if (this.bucketPublicName) {
                                this.logger.log("Checking bucket \"".concat(this.bucketPublicName, "\"..."));
                                bucket = buckets.find(function (bucket) { return bucket.name === _this.bucketPublicName; });
                                if (bucket) {
                                    this.logger.success("Bucket \"".concat(this.bucketPublicName, "\" is active"));
                                }
                                else {
                                    throw new Error("Bucket \"".concat(this.bucketPublicName, "\" was not found"));
                                }
                            }
                            return [2 /*return*/];
                    }
                });
            });
        };
        UploadProviderAws_1.prototype.uploadPublic = function (options) {
            var _a;
            return __awaiter(this, void 0, void 0, function () {
                var file, key, command, url, error_2;
                return __generator(this, function (_b) {
                    switch (_b.label) {
                        case 0:
                            file = options.file;
                            key = this.ensureFilename(file.originalname);
                            command = new client_s3_1.PutObjectCommand({
                                Bucket: "".concat(this.bucketPublicName),
                                Key: this.ensureKey(key),
                                Body: file.buffer,
                                ContentType: (_a = file.mimetype) !== null && _a !== void 0 ? _a : 'image/png',
                            });
                            _b.label = 1;
                        case 1:
                            _b.trys.push([1, 3, , 4]);
                            return [4 /*yield*/, this.client.send(command)];
                        case 2:
                            _b.sent();
                            this.logger.success("File ".concat(file.originalname, " saved (public)"));
                            url = "".concat(this.getBaseUrlPublic(), "/").concat(key);
                            return [2 /*return*/, { url: url }];
                        case 3:
                            error_2 = _b.sent();
                            this.logger.error("".concat(error_2));
                            throw new Error("Could not upload public file with key \"".concat(key, "\""));
                        case 4: return [2 /*return*/];
                    }
                });
            });
        };
        UploadProviderAws_1.prototype.uploadPrivate = function (options) {
            var _a;
            return __awaiter(this, void 0, void 0, function () {
                var file, key, command, url, error_3;
                return __generator(this, function (_b) {
                    switch (_b.label) {
                        case 0:
                            file = options.file;
                            key = this.ensureFilename(file.originalname);
                            command = new client_s3_1.PutObjectCommand({
                                Bucket: "".concat(this.bucketPrivateName),
                                Key: this.ensureKey(key),
                                Body: file.buffer,
                                ContentType: (_a = file.mimetype) !== null && _a !== void 0 ? _a : 'image/png',
                            });
                            _b.label = 1;
                        case 1:
                            _b.trys.push([1, 3, , 4]);
                            return [4 /*yield*/, this.client.send(command)];
                        case 2:
                            _b.sent();
                            this.logger.success("File ".concat(file.originalname, " saved (private)"));
                            url = "".concat(this.getBaseUrlPrivate(), "/").concat(key);
                            return [2 /*return*/, { url: url }];
                        case 3:
                            error_3 = _b.sent();
                            this.logger.error("".concat(error_3));
                            throw new Error("Could not upload private file with key \"".concat(key, "\""));
                        case 4: return [2 /*return*/];
                    }
                });
            });
        };
        UploadProviderAws_1.prototype.fromPrivateToPublicUrl = function (_a) {
            var url = _a.url, _b = _a.expiresInSeconds, expiresInSeconds = _b === void 0 ? ONE_HOUR_IN_SECONDS : _b;
            return __awaiter(this, void 0, void 0, function () {
                var key, params, command, urlPublic;
                return __generator(this, function (_c) {
                    switch (_c.label) {
                        case 0:
                            if (!this.isUrlPrivate(url)) {
                                throw new Error("".concat(url, " must be a private url"));
                            }
                            key = this.extractKeyFromUrlPrivate(url);
                            params = {
                                Bucket: "".concat(this.bucketPrivateName),
                                Key: this.ensureKey(key),
                            };
                            command = new client_s3_1.GetObjectCommand(params);
                            return [4 /*yield*/, (0, s3_request_presigner_1.getSignedUrl)(this.client, command, {
                                    expiresIn: expiresInSeconds,
                                })];
                        case 1:
                            urlPublic = _c.sent();
                            return [2 /*return*/, { url: urlPublic }];
                    }
                });
            });
        };
        /* -------------------------------------------------------------------------- */
        /*                                   PRIVATE                                  */
        /* -------------------------------------------------------------------------- */
        UploadProviderAws_1.prototype.listBuckets = function () {
            return __awaiter(this, void 0, void 0, function () {
                var result, buckets;
                return __generator(this, function (_a) {
                    switch (_a.label) {
                        case 0: return [4 /*yield*/, this.client.send(new client_s3_1.ListBucketsCommand({}))];
                        case 1:
                            result = _a.sent();
                            buckets = result.Buckets.map(function (item) { return ({
                                name: item.Name,
                                dateCreation: item.CreationDate,
                            }); });
                            return [2 /*return*/, buckets];
                    }
                });
            });
        };
        UploadProviderAws_1.prototype.getBaseUrlPrivate = function () {
            return "https://".concat(this.bucketPrivateName, ".s3.").concat(this.region, ".amazonaws.com");
        };
        UploadProviderAws_1.prototype.getBaseUrlPublic = function () {
            return "https://".concat(this.bucketPublicName, ".s3.").concat(this.region, ".amazonaws.com");
        };
        UploadProviderAws_1.prototype.ensureKey = function (key) {
            var isPrefixed = key.startsWith('/');
            if (isPrefixed) {
                return key.slice(1);
            }
            return key;
        };
        UploadProviderAws_1.prototype.isUrlPrivate = function (url) {
            var baseUrlPrivate = this.getBaseUrlPrivate();
            var isPrivate = url.startsWith(baseUrlPrivate);
            return isPrivate;
        };
        UploadProviderAws_1.prototype.extractKeyFromUrlPrivate = function (url) {
            var baseUrlPrivate = this.getBaseUrlPrivate();
            return url.replace(baseUrlPrivate, '');
        };
        return UploadProviderAws_1;
    }(_classSuper));
    __setFunctionName(_classThis, "UploadProviderAws");
    (function () {
        var _a;
        var _metadata = typeof Symbol === "function" && Symbol.metadata ? Object.create((_a = _classSuper[Symbol.metadata]) !== null && _a !== void 0 ? _a : null) : void 0;
        __esDecorate(null, _classDescriptor = { value: _classThis }, _classDecorators, { kind: "class", name: _classThis.name, metadata: _metadata }, null, _classExtraInitializers);
        UploadProviderAws = _classThis = _classDescriptor.value;
        if (_metadata) Object.defineProperty(_classThis, Symbol.metadata, { enumerable: true, configurable: true, writable: true, value: _metadata });
        __runInitializers(_classThis, _classExtraInitializers);
    })();
    return UploadProviderAws = _classThis;
}();
exports.UploadProviderAws = UploadProviderAws;


// C:\grua-booking-system-25\server\dist\libraries\upload\internal\providers\local\upload.provider.local.js
"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __esDecorate = (this && this.__esDecorate) || function (ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {
    function accept(f) { if (f !== void 0 && typeof f !== "function") throw new TypeError("Function expected"); return f; }
    var kind = contextIn.kind, key = kind === "getter" ? "get" : kind === "setter" ? "set" : "value";
    var target = !descriptorIn && ctor ? contextIn["static"] ? ctor : ctor.prototype : null;
    var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});
    var _, done = false;
    for (var i = decorators.length - 1; i >= 0; i--) {
        var context = {};
        for (var p in contextIn) context[p] = p === "access" ? {} : contextIn[p];
        for (var p in contextIn.access) context.access[p] = contextIn.access[p];
        context.addInitializer = function (f) { if (done) throw new TypeError("Cannot add initializers after decoration has completed"); extraInitializers.push(accept(f || null)); };
        var result = (0, decorators[i])(kind === "accessor" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);
        if (kind === "accessor") {
            if (result === void 0) continue;
            if (result === null || typeof result !== "object") throw new TypeError("Object expected");
            if (_ = accept(result.get)) descriptor.get = _;
            if (_ = accept(result.set)) descriptor.set = _;
            if (_ = accept(result.init)) initializers.unshift(_);
        }
        else if (_ = accept(result)) {
            if (kind === "field") initializers.unshift(_);
            else descriptor[key] = _;
        }
    }
    if (target) Object.defineProperty(target, contextIn.name, descriptor);
    done = true;
};
var __runInitializers = (this && this.__runInitializers) || function (thisArg, initializers, value) {
    var useValue = arguments.length > 2;
    for (var i = 0; i < initializers.length; i++) {
        value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);
    }
    return useValue ? value : void 0;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (g && (g = 0, op[0] && (_ = 0)), _) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __setFunctionName = (this && this.__setFunctionName) || function (f, name, prefix) {
    if (typeof name === "symbol") name = name.description ? "[".concat(name.description, "]") : "";
    return Object.defineProperty(f, "name", { configurable: true, value: prefix ? "".concat(prefix, " ", name) : name });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.UploadProviderLocal = void 0;
var common_1 = require("@nestjs/common");
var serve_static_1 = require("@nestjs/serve-static");
var file_1 = require("@server/helpers/file");
var upload_provider_1 = require("@server/libraries/upload/upload.provider");
var path_1 = require("path");
var UploadProviderLocal = function () {
    var _classDecorators = [(0, common_1.Injectable)()];
    var _classDescriptor;
    var _classExtraInitializers = [];
    var _classThis;
    var _classSuper = upload_provider_1.UploadProvider;
    var UploadProviderLocal = _classThis = /** @class */ (function (_super) {
        __extends(UploadProviderLocal_1, _super);
        function UploadProviderLocal_1(loggerService, configurationService) {
            var _this = _super.call(this) || this;
            _this.loggerService = loggerService;
            _this.configurationService = configurationService;
            _this.pathPublic = ".".concat(UploadProviderLocal.path, "/public");
            _this.pathPrivate = ".".concat(UploadProviderLocal.path, "/private");
            _this.logger = _this.loggerService.create({ name: 'UploadProviderLocal' });
            return _this;
        }
        UploadProviderLocal_1.setup = function () {
            return serve_static_1.ServeStaticModule.forRoot({
                rootPath: (0, path_1.join)(file_1.FileHelper.getRoot(), ".".concat(this.path)),
                serveRoot: this.path,
            });
        };
        UploadProviderLocal_1.prototype.initialise = function () {
            try {
                file_1.FileHelper.writeFolder(this.pathPublic);
                this.staticServerUrl = "".concat(this.configurationService.getBaseUrl());
                this.logger.success("Upload Local is active");
            }
            catch (error) {
                this.logger.error("Upload Local failed to start: ".concat(error.message));
            }
            return;
        };
        UploadProviderLocal_1.prototype.uploadPublic = function (_a) {
            var file = _a.file;
            return __awaiter(this, void 0, void 0, function () {
                var content, filename, path, url;
                return __generator(this, function (_b) {
                    content = file.buffer;
                    filename = this.ensureFilename(file.originalname);
                    path = file_1.FileHelper.joinPaths(this.pathPublic, filename);
                    file_1.FileHelper.writeFile(path, content);
                    url = "".concat(this.staticServerUrl, "/").concat(path);
                    return [2 /*return*/, { url: url }];
                });
            });
        };
        UploadProviderLocal_1.prototype.uploadPrivate = function (_a) {
            var file = _a.file;
            return __awaiter(this, void 0, void 0, function () {
                var content, filename, path, url;
                return __generator(this, function (_b) {
                    content = file.buffer;
                    filename = this.ensureFilename(file.originalname);
                    path = file_1.FileHelper.joinPaths(this.pathPrivate, filename);
                    file_1.FileHelper.writeFile(path, content);
                    url = "".concat(this.staticServerUrl, "/").concat(path);
                    return [2 /*return*/, { url: url }];
                });
            });
        };
        UploadProviderLocal_1.prototype.fromPrivateToPublicUrl = function (_a) {
            var url = _a.url;
            return __awaiter(this, void 0, void 0, function () {
                return __generator(this, function (_b) {
                    return [2 /*return*/, { url: url }];
                });
            });
        };
        return UploadProviderLocal_1;
    }(_classSuper));
    __setFunctionName(_classThis, "UploadProviderLocal");
    (function () {
        var _a;
        var _metadata = typeof Symbol === "function" && Symbol.metadata ? Object.create((_a = _classSuper[Symbol.metadata]) !== null && _a !== void 0 ? _a : null) : void 0;
        __esDecorate(null, _classDescriptor = { value: _classThis }, _classDecorators, { kind: "class", name: _classThis.name, metadata: _metadata }, null, _classExtraInitializers);
        UploadProviderLocal = _classThis = _classDescriptor.value;
        if (_metadata) Object.defineProperty(_classThis, Symbol.metadata, { enumerable: true, configurable: true, writable: true, value: _metadata });
    })();
    _classThis.path = '/upload-local';
    (function () {
        __runInitializers(_classThis, _classExtraInitializers);
    })();
    return UploadProviderLocal = _classThis;
}();
exports.UploadProviderLocal = UploadProviderLocal;


// C:\grua-booking-system-25\server\dist\libraries\upload\internal\providers\aws\upload.provider.aws.js
"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __esDecorate = (this && this.__esDecorate) || function (ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {
    function accept(f) { if (f !== void 0 && typeof f !== "function") throw new TypeError("Function expected"); return f; }
    var kind = contextIn.kind, key = kind === "getter" ? "get" : kind === "setter" ? "set" : "value";
    var target = !descriptorIn && ctor ? contextIn["static"] ? ctor : ctor.prototype : null;
    var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});
    var _, done = false;
    for (var i = decorators.length - 1; i >= 0; i--) {
        var context = {};
        for (var p in contextIn) context[p] = p === "access" ? {} : contextIn[p];
        for (var p in contextIn.access) context.access[p] = contextIn.access[p];
        context.addInitializer = function (f) { if (done) throw new TypeError("Cannot add initializers after decoration has completed"); extraInitializers.push(accept(f || null)); };
        var result = (0, decorators[i])(kind === "accessor" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);
        if (kind === "accessor") {
            if (result === void 0) continue;
            if (result === null || typeof result !== "object") throw new TypeError("Object expected");
            if (_ = accept(result.get)) descriptor.get = _;
            if (_ = accept(result.set)) descriptor.set = _;
            if (_ = accept(result.init)) initializers.unshift(_);
        }
        else if (_ = accept(result)) {
            if (kind === "field") initializers.unshift(_);
            else descriptor[key] = _;
        }
    }
    if (target) Object.defineProperty(target, contextIn.name, descriptor);
    done = true;
};
var __runInitializers = (this && this.__runInitializers) || function (thisArg, initializers, value) {
    var useValue = arguments.length > 2;
    for (var i = 0; i < initializers.length; i++) {
        value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);
    }
    return useValue ? value : void 0;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (g && (g = 0, op[0] && (_ = 0)), _) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __setFunctionName = (this && this.__setFunctionName) || function (f, name, prefix) {
    if (typeof name === "symbol") name = name.description ? "[".concat(name.description, "]") : "";
    return Object.defineProperty(f, "name", { configurable: true, value: prefix ? "".concat(prefix, " ", name) : name });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.UploadProviderAws = void 0;
var client_s3_1 = require("@aws-sdk/client-s3");
var s3_request_presigner_1 = require("@aws-sdk/s3-request-presigner");
var common_1 = require("@nestjs/common");
var upload_provider_1 = require("@server/libraries/upload/upload.provider");
var ONE_HOUR_IN_SECONDS = 60 * 60;
var UploadProviderAws = function () {
    var _classDecorators = [(0, common_1.Injectable)()];
    var _classDescriptor;
    var _classExtraInitializers = [];
    var _classThis;
    var _classSuper = upload_provider_1.UploadProvider;
    var UploadProviderAws = _classThis = /** @class */ (function (_super) {
        __extends(UploadProviderAws_1, _super);
        function UploadProviderAws_1(loggerService, configurationService) {
            var _this = _super.call(this) || this;
            _this.loggerService = loggerService;
            _this.configurationService = configurationService;
            _this.logger = _this.loggerService.create({ name: 'UploadProviderAws' });
            return _this;
        }
        UploadProviderAws_1.prototype.initialise = function () {
            return __awaiter(this, void 0, void 0, function () {
                var accessKey, secretKey, error_1;
                return __generator(this, function (_a) {
                    switch (_a.label) {
                        case 0:
                            _a.trys.push([0, 2, , 3]);
                            accessKey = this.configurationService.get("SERVER_UPLOAD_AWS_ACCESS_KEY");
                            secretKey = this.configurationService.get("SERVER_UPLOAD_AWS_SECRET_KEY");
                            if (!accessKey && !secretKey) {
                                throw new Error('Set SERVER_UPLOAD_AWS_ACCESS_KEY && SERVER_UPLOAD_AWS_SECRET_KEY in your .env to activate');
                            }
                            if (!accessKey) {
                                throw new Error('Set SERVER_UPLOAD_AWS_ACCESS_KEY in your .env to activate');
                            }
                            if (!secretKey) {
                                throw new Error('Set SERVER_UPLOAD_AWS_SECRET_KEY in your .env to activate');
                            }
                            this.region = this.configurationService.get("SERVER_UPLOAD_AWS_REGION", 'us-east-1');
                            this.bucketPublicName = this.configurationService.get("SERVER_UPLOAD_AWS_BUCKET_PUBLIC_NAME");
                            if (!this.bucketPublicName) {
                                this.logger.warning("Set SERVER_UPLOAD_AWS_BUCKET_PUBLIC_NAME in your .env to activate a public bucket with infinite urls");
                            }
                            this.bucketPrivateName = this.configurationService.get("SERVER_UPLOAD_AWS_BUCKET_PRIVATE_NAME");
                            if (!this.bucketPrivateName) {
                                this.logger.warning("Set SERVER_UPLOAD_AWS_BUCKET_PRIVATE_NAME in your .env to activate a private bucket with signed urls");
                            }
                            this.client = new client_s3_1.S3Client({
                                region: this.region,
                                credentials: {
                                    accessKeyId: accessKey,
                                    secretAccessKey: secretKey,
                                },
                            });
                            return [4 /*yield*/, this.check()];
                        case 1:
                            _a.sent();
                            this.logger.success("AWS library active in region ".concat(this.region));
                            return [3 /*break*/, 3];
                        case 2:
                            error_1 = _a.sent();
                            this.logger.warning("AWS library failed to start");
                            throw new Error(error_1);
                        case 3: return [2 /*return*/];
                    }
                });
            });
        };
        UploadProviderAws_1.prototype.check = function () {
            return __awaiter(this, void 0, void 0, function () {
                var buckets, bucket, bucket;
                var _this = this;
                return __generator(this, function (_a) {
                    switch (_a.label) {
                        case 0: return [4 /*yield*/, this.listBuckets()];
                        case 1:
                            buckets = _a.sent();
                            if (this.bucketPrivateName) {
                                this.logger.log("Checking bucket \"".concat(this.bucketPrivateName, "\"..."));
                                bucket = buckets.find(function (bucket) { return bucket.name === _this.bucketPrivateName; });
                                if (bucket) {
                                    this.logger.success("Bucket \"".concat(this.bucketPrivateName, "\" is active"));
                                }
                                else {
                                    throw new Error("Bucket \"".concat(this.bucketPrivateName, "\" was not found"));
                                }
                            }
                            if (this.bucketPublicName) {
                                this.logger.log("Checking bucket \"".concat(this.bucketPublicName, "\"..."));
                                bucket = buckets.find(function (bucket) { return bucket.name === _this.bucketPublicName; });
                                if (bucket) {
                                    this.logger.success("Bucket \"".concat(this.bucketPublicName, "\" is active"));
                                }
                                else {
                                    throw new Error("Bucket \"".concat(this.bucketPublicName, "\" was not found"));
                                }
                            }
                            return [2 /*return*/];
                    }
                });
            });
        };
        UploadProviderAws_1.prototype.uploadPublic = function (options) {
            var _a;
            return __awaiter(this, void 0, void 0, function () {
                var file, key, command, url, error_2;
                return __generator(this, function (_b) {
                    switch (_b.label) {
                        case 0:
                            file = options.file;
                            key = this.ensureFilename(file.originalname);
                            command = new client_s3_1.PutObjectCommand({
                                Bucket: "".concat(this.bucketPublicName),
                                Key: this.ensureKey(key),
                                Body: file.buffer,
                                ContentType: (_a = file.mimetype) !== null && _a !== void 0 ? _a : 'image/png',
                            });
                            _b.label = 1;
                        case 1:
                            _b.trys.push([1, 3, , 4]);
                            return [4 /*yield*/, this.client.send(command)];
                        case 2:
                            _b.sent();
                            this.logger.success("File ".concat(file.originalname, " saved (public)"));
                            url = "".concat(this.getBaseUrlPublic(), "/").concat(key);
                            return [2 /*return*/, { url: url }];
                        case 3:
                            error_2 = _b.sent();
                            this.logger.error("".concat(error_2));
                            throw new Error("Could not upload public file with key \"".concat(key, "\""));
                        case 4: return [2 /*return*/];
                    }
                });
            });
        };
        UploadProviderAws_1.prototype.uploadPrivate = function (options) {
            var _a;
            return __awaiter(this, void 0, void 0, function () {
                var file, key, command, url, error_3;
                return __generator(this, function (_b) {
                    switch (_b.label) {
                        case 0:
                            file = options.file;
                            key = this.ensureFilename(file.originalname);
                            command = new client_s3_1.PutObjectCommand({
                                Bucket: "".concat(this.bucketPrivateName),
                                Key: this.ensureKey(key),
                                Body: file.buffer,
                                ContentType: (_a = file.mimetype) !== null && _a !== void 0 ? _a : 'image/png',
                            });
                            _b.label = 1;
                        case 1:
                            _b.trys.push([1, 3, , 4]);
                            return [4 /*yield*/, this.client.send(command)];
                        case 2:
                            _b.sent();
                            this.logger.success("File ".concat(file.originalname, " saved (private)"));
                            url = "".concat(this.getBaseUrlPrivate(), "/").concat(key);
                            return [2 /*return*/, { url: url }];
                        case 3:
                            error_3 = _b.sent();
                            this.logger.error("".concat(error_3));
                            throw new Error("Could not upload private file with key \"".concat(key, "\""));
                        case 4: return [2 /*return*/];
                    }
                });
            });
        };
        UploadProviderAws_1.prototype.fromPrivateToPublicUrl = function (_a) {
            var url = _a.url, _b = _a.expiresInSeconds, expiresInSeconds = _b === void 0 ? ONE_HOUR_IN_SECONDS : _b;
            return __awaiter(this, void 0, void 0, function () {
                var key, params, command, urlPublic;
                return __generator(this, function (_c) {
                    switch (_c.label) {
                        case 0:
                            if (!this.isUrlPrivate(url)) {
                                throw new Error("".concat(url, " must be a private url"));
                            }
                            key = this.extractKeyFromUrlPrivate(url);
                            params = {
                                Bucket: "".concat(this.bucketPrivateName),
                                Key: this.ensureKey(key),
                            };
                            command = new client_s3_1.GetObjectCommand(params);
                            return [4 /*yield*/, (0, s3_request_presigner_1.getSignedUrl)(this.client, command, {
                                    expiresIn: expiresInSeconds,
                                })];
                        case 1:
                            urlPublic = _c.sent();
                            return [2 /*return*/, { url: urlPublic }];
                    }
                });
            });
        };
        /* -------------------------------------------------------------------------- */
        /*                                   PRIVATE                                  */
        /* -------------------------------------------------------------------------- */
        UploadProviderAws_1.prototype.listBuckets = function () {
            return __awaiter(this, void 0, void 0, function () {
                var result, buckets;
                return __generator(this, function (_a) {
                    switch (_a.label) {
                        case 0: return [4 /*yield*/, this.client.send(new client_s3_1.ListBucketsCommand({}))];
                        case 1:
                            result = _a.sent();
                            buckets = result.Buckets.map(function (item) { return ({
                                name: item.Name,
                                dateCreation: item.CreationDate,
                            }); });
                            return [2 /*return*/, buckets];
                    }
                });
            });
        };
        UploadProviderAws_1.prototype.getBaseUrlPrivate = function () {
            return "https://".concat(this.bucketPrivateName, ".s3.").concat(this.region, ".amazonaws.com");
        };
        UploadProviderAws_1.prototype.getBaseUrlPublic = function () {
            return "https://".concat(this.bucketPublicName, ".s3.").concat(this.region, ".amazonaws.com");
        };
        UploadProviderAws_1.prototype.ensureKey = function (key) {
            var isPrefixed = key.startsWith('/');
            if (isPrefixed) {
                return key.slice(1);
            }
            return key;
        };
        UploadProviderAws_1.prototype.isUrlPrivate = function (url) {
            var baseUrlPrivate = this.getBaseUrlPrivate();
            var isPrivate = url.startsWith(baseUrlPrivate);
            return isPrivate;
        };
        UploadProviderAws_1.prototype.extractKeyFromUrlPrivate = function (url) {
            var baseUrlPrivate = this.getBaseUrlPrivate();
            return url.replace(baseUrlPrivate, '');
        };
        return UploadProviderAws_1;
    }(_classSuper));
    __setFunctionName(_classThis, "UploadProviderAws");
    (function () {
        var _a;
        var _metadata = typeof Symbol === "function" && Symbol.metadata ? Object.create((_a = _classSuper[Symbol.metadata]) !== null && _a !== void 0 ? _a : null) : void 0;
        __esDecorate(null, _classDescriptor = { value: _classThis }, _classDecorators, { kind: "class", name: _classThis.name, metadata: _metadata }, null, _classExtraInitializers);
        UploadProviderAws = _classThis = _classDescriptor.value;
        if (_metadata) Object.defineProperty(_classThis, Symbol.metadata, { enumerable: true, configurable: true, writable: true, value: _metadata });
        __runInitializers(_classThis, _classExtraInitializers);
    })();
    return UploadProviderAws = _classThis;
}();
exports.UploadProviderAws = UploadProviderAws;


// C:\grua-booking-system-25\server\dist\libraries\upload\internal\providers\local\upload.provider.local.js
"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __esDecorate = (this && this.__esDecorate) || function (ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {
    function accept(f) { if (f !== void 0 && typeof f !== "function") throw new TypeError("Function expected"); return f; }
    var kind = contextIn.kind, key = kind === "getter" ? "get" : kind === "setter" ? "set" : "value";
    var target = !descriptorIn && ctor ? contextIn["static"] ? ctor : ctor.prototype : null;
    var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});
    var _, done = false;
    for (var i = decorators.length - 1; i >= 0; i--) {
        var context = {};
        for (var p in contextIn) context[p] = p === "access" ? {} : contextIn[p];
        for (var p in contextIn.access) context.access[p] = contextIn.access[p];
        context.addInitializer = function (f) { if (done) throw new TypeError("Cannot add initializers after decoration has completed"); extraInitializers.push(accept(f || null)); };
        var result = (0, decorators[i])(kind === "accessor" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);
        if (kind === "accessor") {
            if (result === void 0) continue;
            if (result === null || typeof result !== "object") throw new TypeError("Object expected");
            if (_ = accept(result.get)) descriptor.get = _;
            if (_ = accept(result.set)) descriptor.set = _;
            if (_ = accept(result.init)) initializers.unshift(_);
        }
        else if (_ = accept(result)) {
            if (kind === "field") initializers.unshift(_);
            else descriptor[key] = _;
        }
    }
    if (target) Object.defineProperty(target, contextIn.name, descriptor);
    done = true;
};
var __runInitializers = (this && this.__runInitializers) || function (thisArg, initializers, value) {
    var useValue = arguments.length > 2;
    for (var i = 0; i < initializers.length; i++) {
        value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);
    }
    return useValue ? value : void 0;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (g && (g = 0, op[0] && (_ = 0)), _) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __setFunctionName = (this && this.__setFunctionName) || function (f, name, prefix) {
    if (typeof name === "symbol") name = name.description ? "[".concat(name.description, "]") : "";
    return Object.defineProperty(f, "name", { configurable: true, value: prefix ? "".concat(prefix, " ", name) : name });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.UploadProviderLocal = void 0;
var common_1 = require("@nestjs/common");
var serve_static_1 = require("@nestjs/serve-static");
var file_1 = require("@server/helpers/file");
var upload_provider_1 = require("@server/libraries/upload/upload.provider");
var path_1 = require("path");
var UploadProviderLocal = function () {
    var _classDecorators = [(0, common_1.Injectable)()];
    var _classDescriptor;
    var _classExtraInitializers = [];
    var _classThis;
    var _classSuper = upload_provider_1.UploadProvider;
    var UploadProviderLocal = _classThis = /** @class */ (function (_super) {
        __extends(UploadProviderLocal_1, _super);
        function UploadProviderLocal_1(loggerService, configurationService) {
            var _this = _super.call(this) || this;
            _this.loggerService = loggerService;
            _this.configurationService = configurationService;
            _this.pathPublic = ".".concat(UploadProviderLocal.path, "/public");
            _this.pathPrivate = ".".concat(UploadProviderLocal.path, "/private");
            _this.logger = _this.loggerService.create({ name: 'UploadProviderLocal' });
            return _this;
        }
        UploadProviderLocal_1.setup = function () {
            return serve_static_1.ServeStaticModule.forRoot({
                rootPath: (0, path_1.join)(file_1.FileHelper.getRoot(), ".".concat(this.path)),
                serveRoot: this.path,
            });
        };
        UploadProviderLocal_1.prototype.initialise = function () {
            try {
                file_1.FileHelper.writeFolder(this.pathPublic);
                this.staticServerUrl = "".concat(this.configurationService.getBaseUrl());
                this.logger.success("Upload Local is active");
            }
            catch (error) {
                this.logger.error("Upload Local failed to start: ".concat(error.message));
            }
            return;
        };
        UploadProviderLocal_1.prototype.uploadPublic = function (_a) {
            var file = _a.file;
            return __awaiter(this, void 0, void 0, function () {
                var content, filename, path, url;
                return __generator(this, function (_b) {
                    content = file.buffer;
                    filename = this.ensureFilename(file.originalname);
                    path = file_1.FileHelper.joinPaths(this.pathPublic, filename);
                    file_1.FileHelper.writeFile(path, content);
                    url = "".concat(this.staticServerUrl, "/").concat(path);
                    return [2 /*return*/, { url: url }];
                });
            });
        };
        UploadProviderLocal_1.prototype.uploadPrivate = function (_a) {
            var file = _a.file;
            return __awaiter(this, void 0, void 0, function () {
                var content, filename, path, url;
                return __generator(this, function (_b) {
                    content = file.buffer;
                    filename = this.ensureFilename(file.originalname);
                    path = file_1.FileHelper.joinPaths(this.pathPrivate, filename);
                    file_1.FileHelper.writeFile(path, content);
                    url = "".concat(this.staticServerUrl, "/").concat(path);
                    return [2 /*return*/, { url: url }];
                });
            });
        };
        UploadProviderLocal_1.prototype.fromPrivateToPublicUrl = function (_a) {
            var url = _a.url;
            return __awaiter(this, void 0, void 0, function () {
                return __generator(this, function (_b) {
                    return [2 /*return*/, { url: url }];
                });
            });
        };
        return UploadProviderLocal_1;
    }(_classSuper));
    __setFunctionName(_classThis, "UploadProviderLocal");
    (function () {
        var _a;
        var _metadata = typeof Symbol === "function" && Symbol.metadata ? Object.create((_a = _classSuper[Symbol.metadata]) !== null && _a !== void 0 ? _a : null) : void 0;
        __esDecorate(null, _classDescriptor = { value: _classThis }, _classDecorators, { kind: "class", name: _classThis.name, metadata: _metadata }, null, _classExtraInitializers);
        UploadProviderLocal = _classThis = _classDescriptor.value;
        if (_metadata) Object.defineProperty(_classThis, Symbol.metadata, { enumerable: true, configurable: true, writable: true, value: _metadata });
    })();
    _classThis.path = '/upload-local';
    (function () {
        __runInitializers(_classThis, _classExtraInitializers);
    })();
    return UploadProviderLocal = _classThis;
}();
exports.UploadProviderLocal = UploadProviderLocal;


// C:\grua-booking-system-25\server\dist\libraries\upload\internal\providers\aws\upload.provider.aws.js
"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __esDecorate = (this && this.__esDecorate) || function (ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {
    function accept(f) { if (f !== void 0 && typeof f !== "function") throw new TypeError("Function expected"); return f; }
    var kind = contextIn.kind, key = kind === "getter" ? "get" : kind === "setter" ? "set" : "value";
    var target = !descriptorIn && ctor ? contextIn["static"] ? ctor : ctor.prototype : null;
    var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});
    var _, done = false;
    for (var i = decorators.length - 1; i >= 0; i--) {
        var context = {};
        for (var p in contextIn) context[p] = p === "access" ? {} : contextIn[p];
        for (var p in contextIn.access) context.access[p] = contextIn.access[p];
        context.addInitializer = function (f) { if (done) throw new TypeError("Cannot add initializers after decoration has completed"); extraInitializers.push(accept(f || null)); };
        var result = (0, decorators[i])(kind === "accessor" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);
        if (kind === "accessor") {
            if (result === void 0) continue;
            if (result === null || typeof result !== "object") throw new TypeError("Object expected");
            if (_ = accept(result.get)) descriptor.get = _;
            if (_ = accept(result.set)) descriptor.set = _;
            if (_ = accept(result.init)) initializers.unshift(_);
        }
        else if (_ = accept(result)) {
            if (kind === "field") initializers.unshift(_);
            else descriptor[key] = _;
        }
    }
    if (target) Object.defineProperty(target, contextIn.name, descriptor);
    done = true;
};
var __runInitializers = (this && this.__runInitializers) || function (thisArg, initializers, value) {
    var useValue = arguments.length > 2;
    for (var i = 0; i < initializers.length; i++) {
        value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);
    }
    return useValue ? value : void 0;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (g && (g = 0, op[0] && (_ = 0)), _) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __setFunctionName = (this && this.__setFunctionName) || function (f, name, prefix) {
    if (typeof name === "symbol") name = name.description ? "[".concat(name.description, "]") : "";
    return Object.defineProperty(f, "name", { configurable: true, value: prefix ? "".concat(prefix, " ", name) : name });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.UploadProviderAws = void 0;
var client_s3_1 = require("@aws-sdk/client-s3");
var s3_request_presigner_1 = require("@aws-sdk/s3-request-presigner");
var common_1 = require("@nestjs/common");
var upload_provider_1 = require("@server/libraries/upload/upload.provider");
var ONE_HOUR_IN_SECONDS = 60 * 60;
var UploadProviderAws = function () {
    var _classDecorators = [(0, common_1.Injectable)()];
    var _classDescriptor;
    var _classExtraInitializers = [];
    var _classThis;
    var _classSuper = upload_provider_1.UploadProvider;
    var UploadProviderAws = _classThis = /** @class */ (function (_super) {
        __extends(UploadProviderAws_1, _super);
        function UploadProviderAws_1(loggerService, configurationService) {
            var _this = _super.call(this) || this;
            _this.loggerService = loggerService;
            _this.configurationService = configurationService;
            _this.logger = _this.loggerService.create({ name: 'UploadProviderAws' });
            return _this;
        }
        UploadProviderAws_1.prototype.initialise = function () {
            return __awaiter(this, void 0, void 0, function () {
                var accessKey, secretKey, error_1;
                return __generator(this, function (_a) {
                    switch (_a.label) {
                        case 0:
                            _a.trys.push([0, 2, , 3]);
                            accessKey = this.configurationService.get("SERVER_UPLOAD_AWS_ACCESS_KEY");
                            secretKey = this.configurationService.get("SERVER_UPLOAD_AWS_SECRET_KEY");
                            if (!accessKey && !secretKey) {
                                throw new Error('Set SERVER_UPLOAD_AWS_ACCESS_KEY && SERVER_UPLOAD_AWS_SECRET_KEY in your .env to activate');
                            }
                            if (!accessKey) {
                                throw new Error('Set SERVER_UPLOAD_AWS_ACCESS_KEY in your .env to activate');
                            }
                            if (!secretKey) {
                                throw new Error('Set SERVER_UPLOAD_AWS_SECRET_KEY in your .env to activate');
                            }
                            this.region = this.configurationService.get("SERVER_UPLOAD_AWS_REGION", 'us-east-1');
                            this.bucketPublicName = this.configurationService.get("SERVER_UPLOAD_AWS_BUCKET_PUBLIC_NAME");
                            if (!this.bucketPublicName) {
                                this.logger.warning("Set SERVER_UPLOAD_AWS_BUCKET_PUBLIC_NAME in your .env to activate a public bucket with infinite urls");
                            }
                            this.bucketPrivateName = this.configurationService.get("SERVER_UPLOAD_AWS_BUCKET_PRIVATE_NAME");
                            if (!this.bucketPrivateName) {
                                this.logger.warning("Set SERVER_UPLOAD_AWS_BUCKET_PRIVATE_NAME in your .env to activate a private bucket with signed urls");
                            }
                            this.client = new client_s3_1.S3Client({
                                region: this.region,
                                credentials: {
                                    accessKeyId: accessKey,
                                    secretAccessKey: secretKey,
                                },
                            });
                            return [4 /*yield*/, this.check()];
                        case 1:
                            _a.sent();
                            this.logger.success("AWS library active in region ".concat(this.region));
                            return [3 /*break*/, 3];
                        case 2:
                            error_1 = _a.sent();
                            this.logger.warning("AWS library failed to start");
                            throw new Error(error_1);
                        case 3: return [2 /*return*/];
                    }
                });
            });
        };
        UploadProviderAws_1.prototype.check = function () {
            return __awaiter(this, void 0, void 0, function () {
                var buckets, bucket, bucket;
                var _this = this;
                return __generator(this, function (_a) {
                    switch (_a.label) {
                        case 0: return [4 /*yield*/, this.listBuckets()];
                        case 1:
                            buckets = _a.sent();
                            if (this.bucketPrivateName) {
                                this.logger.log("Checking bucket \"".concat(this.bucketPrivateName, "\"..."));
                                bucket = buckets.find(function (bucket) { return bucket.name === _this.bucketPrivateName; });
                                if (bucket) {
                                    this.logger.success("Bucket \"".concat(this.bucketPrivateName, "\" is active"));
                                }
                                else {
                                    throw new Error("Bucket \"".concat(this.bucketPrivateName, "\" was not found"));
                                }
                            }
                            if (this.bucketPublicName) {
                                this.logger.log("Checking bucket \"".concat(this.bucketPublicName, "\"..."));
                                bucket = buckets.find(function (bucket) { return bucket.name === _this.bucketPublicName; });
                                if (bucket) {
                                    this.logger.success("Bucket \"".concat(this.bucketPublicName, "\" is active"));
                                }
                                else {
                                    throw new Error("Bucket \"".concat(this.bucketPublicName, "\" was not found"));
                                }
                            }
                            return [2 /*return*/];
                    }
                });
            });
        };
        UploadProviderAws_1.prototype.uploadPublic = function (options) {
            var _a;
            return __awaiter(this, void 0, void 0, function () {
                var file, key, command, url, error_2;
                return __generator(this, function (_b) {
                    switch (_b.label) {
                        case 0:
                            file = options.file;
                            key = this.ensureFilename(file.originalname);
                            command = new client_s3_1.PutObjectCommand({
                                Bucket: "".concat(this.bucketPublicName),
                                Key: this.ensureKey(key),
                                Body: file.buffer,
                                ContentType: (_a = file.mimetype) !== null && _a !== void 0 ? _a : 'image/png',
                            });
                            _b.label = 1;
                        case 1:
                            _b.trys.push([1, 3, , 4]);
                            return [4 /*yield*/, this.client.send(command)];
                        case 2:
                            _b.sent();
                            this.logger.success("File ".concat(file.originalname, " saved (public)"));
                            url = "".concat(this.getBaseUrlPublic(), "/").concat(key);
                            return [2 /*return*/, { url: url }];
                        case 3:
                            error_2 = _b.sent();
                            this.logger.error("".concat(error_2));
                            throw new Error("Could not upload public file with key \"".concat(key, "\""));
                        case 4: return [2 /*return*/];
                    }
                });
            });
        };
        UploadProviderAws_1.prototype.uploadPrivate = function (options) {
            var _a;
            return __awaiter(this, void 0, void 0, function () {
                var file, key, command, url, error_3;
                return __generator(this, function (_b) {
                    switch (_b.label) {
                        case 0:
                            file = options.file;
                            key = this.ensureFilename(file.originalname);
                            command = new client_s3_1.PutObjectCommand({
                                Bucket: "".concat(this.bucketPrivateName),
                                Key: this.ensureKey(key),
                                Body: file.buffer,
                                ContentType: (_a = file.mimetype) !== null && _a !== void 0 ? _a : 'image/png',
                            });
                            _b.label = 1;
                        case 1:
                            _b.trys.push([1, 3, , 4]);
                            return [4 /*yield*/, this.client.send(command)];
                        case 2:
                            _b.sent();
                            this.logger.success("File ".concat(file.originalname, " saved (private)"));
                            url = "".concat(this.getBaseUrlPrivate(), "/").concat(key);
                            return [2 /*return*/, { url: url }];
                        case 3:
                            error_3 = _b.sent();
                            this.logger.error("".concat(error_3));
                            throw new Error("Could not upload private file with key \"".concat(key, "\""));
                        case 4: return [2 /*return*/];
                    }
                });
            });
        };
        UploadProviderAws_1.prototype.fromPrivateToPublicUrl = function (_a) {
            var url = _a.url, _b = _a.expiresInSeconds, expiresInSeconds = _b === void 0 ? ONE_HOUR_IN_SECONDS : _b;
            return __awaiter(this, void 0, void 0, function () {
                var key, params, command, urlPublic;
                return __generator(this, function (_c) {
                    switch (_c.label) {
                        case 0:
                            if (!this.isUrlPrivate(url)) {
                                throw new Error("".concat(url, " must be a private url"));
                            }
                            key = this.extractKeyFromUrlPrivate(url);
                            params = {
                                Bucket: "".concat(this.bucketPrivateName),
                                Key: this.ensureKey(key),
                            };
                            command = new client_s3_1.GetObjectCommand(params);
                            return [4 /*yield*/, (0, s3_request_presigner_1.getSignedUrl)(this.client, command, {
                                    expiresIn: expiresInSeconds,
                                })];
                        case 1:
                            urlPublic = _c.sent();
                            return [2 /*return*/, { url: urlPublic }];
                    }
                });
            });
        };
        /* -------------------------------------------------------------------------- */
        /*                                   PRIVATE                                  */
        /* -------------------------------------------------------------------------- */
        UploadProviderAws_1.prototype.listBuckets = function () {
            return __awaiter(this, void 0, void 0, function () {
                var result, buckets;
                return __generator(this, function (_a) {
                    switch (_a.label) {
                        case 0: return [4 /*yield*/, this.client.send(new client_s3_1.ListBucketsCommand({}))];
                        case 1:
                            result = _a.sent();
                            buckets = result.Buckets.map(function (item) { return ({
                                name: item.Name,
                                dateCreation: item.CreationDate,
                            }); });
                            return [2 /*return*/, buckets];
                    }
                });
            });
        };
        UploadProviderAws_1.prototype.getBaseUrlPrivate = function () {
            return "https://".concat(this.bucketPrivateName, ".s3.").concat(this.region, ".amazonaws.com");
        };
        UploadProviderAws_1.prototype.getBaseUrlPublic = function () {
            return "https://".concat(this.bucketPublicName, ".s3.").concat(this.region, ".amazonaws.com");
        };
        UploadProviderAws_1.prototype.ensureKey = function (key) {
            var isPrefixed = key.startsWith('/');
            if (isPrefixed) {
                return key.slice(1);
            }
            return key;
        };
        UploadProviderAws_1.prototype.isUrlPrivate = function (url) {
            var baseUrlPrivate = this.getBaseUrlPrivate();
            var isPrivate = url.startsWith(baseUrlPrivate);
            return isPrivate;
        };
        UploadProviderAws_1.prototype.extractKeyFromUrlPrivate = function (url) {
            var baseUrlPrivate = this.getBaseUrlPrivate();
            return url.replace(baseUrlPrivate, '');
        };
        return UploadProviderAws_1;
    }(_classSuper));
    __setFunctionName(_classThis, "UploadProviderAws");
    (function () {
        var _a;
        var _metadata = typeof Symbol === "function" && Symbol.metadata ? Object.create((_a = _classSuper[Symbol.metadata]) !== null && _a !== void 0 ? _a : null) : void 0;
        __esDecorate(null, _classDescriptor = { value: _classThis }, _classDecorators, { kind: "class", name: _classThis.name, metadata: _metadata }, null, _classExtraInitializers);
        UploadProviderAws = _classThis = _classDescriptor.value;
        if (_metadata) Object.defineProperty(_classThis, Symbol.metadata, { enumerable: true, configurable: true, writable: true, value: _metadata });
        __runInitializers(_classThis, _classExtraInitializers);
    })();
    return UploadProviderAws = _classThis;
}();
exports.UploadProviderAws = UploadProviderAws;


// C:\grua-booking-system-25\server\dist\libraries\upload\internal\providers\local\upload.provider.local.js
"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __esDecorate = (this && this.__esDecorate) || function (ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {
    function accept(f) { if (f !== void 0 && typeof f !== "function") throw new TypeError("Function expected"); return f; }
    var kind = contextIn.kind, key = kind === "getter" ? "get" : kind === "setter" ? "set" : "value";
    var target = !descriptorIn && ctor ? contextIn["static"] ? ctor : ctor.prototype : null;
    var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});
    var _, done = false;
    for (var i = decorators.length - 1; i >= 0; i--) {
        var context = {};
        for (var p in contextIn) context[p] = p === "access" ? {} : contextIn[p];
        for (var p in contextIn.access) context.access[p] = contextIn.access[p];
        context.addInitializer = function (f) { if (done) throw new TypeError("Cannot add initializers after decoration has completed"); extraInitializers.push(accept(f || null)); };
        var result = (0, decorators[i])(kind === "accessor" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);
        if (kind === "accessor") {
            if (result === void 0) continue;
            if (result === null || typeof result !== "object") throw new TypeError("Object expected");
            if (_ = accept(result.get)) descriptor.get = _;
            if (_ = accept(result.set)) descriptor.set = _;
            if (_ = accept(result.init)) initializers.unshift(_);
        }
        else if (_ = accept(result)) {
            if (kind === "field") initializers.unshift(_);
            else descriptor[key] = _;
        }
    }
    if (target) Object.defineProperty(target, contextIn.name, descriptor);
    done = true;
};
var __runInitializers = (this && this.__runInitializers) || function (thisArg, initializers, value) {
    var useValue = arguments.length > 2;
    for (var i = 0; i < initializers.length; i++) {
        value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);
    }
    return useValue ? value : void 0;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (g && (g = 0, op[0] && (_ = 0)), _) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __setFunctionName = (this && this.__setFunctionName) || function (f, name, prefix) {
    if (typeof name === "symbol") name = name.description ? "[".concat(name.description, "]") : "";
    return Object.defineProperty(f, "name", { configurable: true, value: prefix ? "".concat(prefix, " ", name) : name });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.UploadProviderLocal = void 0;
var common_1 = require("@nestjs/common");
var serve_static_1 = require("@nestjs/serve-static");
var file_1 = require("@server/helpers/file");
var upload_provider_1 = require("@server/libraries/upload/upload.provider");
var path_1 = require("path");
var UploadProviderLocal = function () {
    var _classDecorators = [(0, common_1.Injectable)()];
    var _classDescriptor;
    var _classExtraInitializers = [];
    var _classThis;
    var _classSuper = upload_provider_1.UploadProvider;
    var UploadProviderLocal = _classThis = /** @class */ (function (_super) {
        __extends(UploadProviderLocal_1, _super);
        function UploadProviderLocal_1(loggerService, configurationService) {
            var _this = _super.call(this) || this;
            _this.loggerService = loggerService;
            _this.configurationService = configurationService;
            _this.pathPublic = ".".concat(UploadProviderLocal.path, "/public");
            _this.pathPrivate = ".".concat(UploadProviderLocal.path, "/private");
            _this.logger = _this.loggerService.create({ name: 'UploadProviderLocal' });
            return _this;
        }
        UploadProviderLocal_1.setup = function () {
            return serve_static_1.ServeStaticModule.forRoot({
                rootPath: (0, path_1.join)(file_1.FileHelper.getRoot(), ".".concat(this.path)),
                serveRoot: this.path,
            });
        };
        UploadProviderLocal_1.prototype.initialise = function () {
            try {
                file_1.FileHelper.writeFolder(this.pathPublic);
                this.staticServerUrl = "".concat(this.configurationService.getBaseUrl());
                this.logger.success("Upload Local is active");
            }
            catch (error) {
                this.logger.error("Upload Local failed to start: ".concat(error.message));
            }
            return;
        };
        UploadProviderLocal_1.prototype.uploadPublic = function (_a) {
            var file = _a.file;
            return __awaiter(this, void 0, void 0, function () {
                var content, filename, path, url;
                return __generator(this, function (_b) {
                    content = file.buffer;
                    filename = this.ensureFilename(file.originalname);
                    path = file_1.FileHelper.joinPaths(this.pathPublic, filename);
                    file_1.FileHelper.writeFile(path, content);
                    url = "".concat(this.staticServerUrl, "/").concat(path);
                    return [2 /*return*/, { url: url }];
                });
            });
        };
        UploadProviderLocal_1.prototype.uploadPrivate = function (_a) {
            var file = _a.file;
            return __awaiter(this, void 0, void 0, function () {
                var content, filename, path, url;
                return __generator(this, function (_b) {
                    content = file.buffer;
                    filename = this.ensureFilename(file.originalname);
                    path = file_1.FileHelper.joinPaths(this.pathPrivate, filename);
                    file_1.FileHelper.writeFile(path, content);
                    url = "".concat(this.staticServerUrl, "/").concat(path);
                    return [2 /*return*/, { url: url }];
                });
            });
        };
        UploadProviderLocal_1.prototype.fromPrivateToPublicUrl = function (_a) {
            var url = _a.url;
            return __awaiter(this, void 0, void 0, function () {
                return __generator(this, function (_b) {
                    return [2 /*return*/, { url: url }];
                });
            });
        };
        return UploadProviderLocal_1;
    }(_classSuper));
    __setFunctionName(_classThis, "UploadProviderLocal");
    (function () {
        var _a;
        var _metadata = typeof Symbol === "function" && Symbol.metadata ? Object.create((_a = _classSuper[Symbol.metadata]) !== null && _a !== void 0 ? _a : null) : void 0;
        __esDecorate(null, _classDescriptor = { value: _classThis }, _classDecorators, { kind: "class", name: _classThis.name, metadata: _metadata }, null, _classExtraInitializers);
        UploadProviderLocal = _classThis = _classDescriptor.value;
        if (_metadata) Object.defineProperty(_classThis, Symbol.metadata, { enumerable: true, configurable: true, writable: true, value: _metadata });
    })();
    _classThis.path = '/upload-local';
    (function () {
        __runInitializers(_classThis, _classExtraInitializers);
    })();
    return UploadProviderLocal = _classThis;
}();
exports.UploadProviderLocal = UploadProviderLocal;
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.UploadProvider = void 0;
var date_1 = require("@server/helpers/date");
var UploadProvider = /** @class */ (function () {
    function UploadProvider() {
    }
    UploadProvider.prototype.initialise = function () {
        return;
    };
    UploadProvider.prototype.ensureFilename = function (filenameBefore) {
        var filenameClean = filenameBefore.replace(/[^\w\.]/gi, '');
        var timestamp = date_1.DateHelper.getNow().getTime();
        return "".concat(timestamp, "-").concat(filenameClean);
    };
    return UploadProvider;
}());
exports.UploadProvider = UploadProvider;


// C:\grua-booking-system-25\server\dist\libraries\upload\upload.service.js
"use strict";
var __esDecorate = (this && this.__esDecorate) || function (ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {
    function accept(f) { if (f !== void 0 && typeof f !== "function") throw new TypeError("Function expected"); return f; }
    var kind = contextIn.kind, key = kind === "getter" ? "get" : kind === "setter" ? "set" : "value";
    var target = !descriptorIn && ctor ? contextIn["static"] ? ctor : ctor.prototype : null;
    var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});
    var _, done = false;
    for (var i = decorators.length - 1; i >= 0; i--) {
        var context = {};
        for (var p in contextIn) context[p] = p === "access" ? {} : contextIn[p];
        for (var p in contextIn.access) context.access[p] = contextIn.access[p];
        context.addInitializer = function (f) { if (done) throw new TypeError("Cannot add initializers after decoration has completed"); extraInitializers.push(accept(f || null)); };
        var result = (0, decorators[i])(kind === "accessor" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);
        if (kind === "accessor") {
            if (result === void 0) continue;
            if (result === null || typeof result !== "object") throw new TypeError("Object expected");
            if (_ = accept(result.get)) descriptor.get = _;
            if (_ = accept(result.set)) descriptor.set = _;
            if (_ = accept(result.init)) initializers.unshift(_);
        }
        else if (_ = accept(result)) {
            if (kind === "field") initializers.unshift(_);
            else descriptor[key] = _;
        }
    }
    if (target) Object.defineProperty(target, contextIn.name, descriptor);
    done = true;
};
var __runInitializers = (this && this.__runInitializers) || function (thisArg, initializers, value) {
    var useValue = arguments.length > 2;
    for (var i = 0; i < initializers.length; i++) {
        value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);
    }
    return useValue ? value : void 0;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (g && (g = 0, op[0] && (_ = 0)), _) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __setFunctionName = (this && this.__setFunctionName) || function (f, name, prefix) {
    if (typeof name === "symbol") name = name.description ? "[".concat(name.description, "]") : "";
    return Object.defineProperty(f, "name", { configurable: true, value: prefix ? "".concat(prefix, " ", name) : name });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.UploadService = void 0;
var common_1 = require("@nestjs/common");
var upload_provider_aws_1 = require("./internal/providers/aws/upload.provider.aws");
var upload_provider_local_1 = require("./internal/providers/local/upload.provider.local");
var UploadService = function () {
    var _classDecorators = [(0, common_1.Injectable)()];
    var _classDescriptor;
    var _classExtraInitializers = [];
    var _classThis;
    var UploadService = _classThis = /** @class */ (function () {
        function UploadService_1(configurationService, loggerService) {
            this.configurationService = configurationService;
            this.loggerService = loggerService;
            this.logger = loggerService.create({ name: 'UploadService' });
        }
        UploadService_1.prototype.onModuleInit = function () {
            return __awaiter(this, void 0, void 0, function () {
                var _a;
                return __generator(this, function (_b) {
                    switch (_b.label) {
                        case 0:
                            _a = this;
                            return [4 /*yield*/, this.createInstance()];
                        case 1:
                            _a.instance = _b.sent();
                            return [2 /*return*/];
                    }
                });
            });
        };
        UploadService_1.prototype.createInstance = function () {
            return __awaiter(this, void 0, void 0, function () {
                var instance, error_1, instance, error_2;
                return __generator(this, function (_a) {
                    switch (_a.label) {
                        case 0:
                            _a.trys.push([0, 2, , 3]);
                            this.logger.log("Trying using AWS...");
                            instance = new upload_provider_aws_1.UploadProviderAws(this.loggerService, this.configurationService);
                            return [4 /*yield*/, instance.initialise()];
                        case 1:
                            _a.sent();
                            return [2 /*return*/, instance];
                        case 2:
                            error_1 = _a.sent();
                            this.logger.warning("Could not use AWS: ".concat(error_1.message));
                            return [3 /*break*/, 3];
                        case 3:
                            this.logger.log("Falling back on local provider (not recommended for production)");
                            _a.label = 4;
                        case 4:
                            _a.trys.push([4, 6, , 7]);
                            instance = new upload_provider_local_1.UploadProviderLocal(this.loggerService, this.configurationService);
                            return [4 /*yield*/, instance.initialise()];
                        case 5:
                            _a.sent();
                            return [2 /*return*/, instance];
                        case 6:
                            error_2 = _a.sent();
                            this.logger.warning("Could not use local provider: ".concat(error_2.message));
                            return [3 /*break*/, 7];
                        case 7: return [2 /*return*/];
                    }
                });
            });
        };
        UploadService_1.prototype.uploadPublic = function () {
            var files = [];
            for (var _i = 0; _i < arguments.length; _i++) {
                files[_i] = arguments[_i];
            }
            return __awaiter(this, void 0, void 0, function () {
                var responses, _a, files_1, file, response;
                return __generator(this, function (_b) {
                    switch (_b.label) {
                        case 0:
                            responses = [];
                            _a = 0, files_1 = files;
                            _b.label = 1;
                        case 1:
                            if (!(_a < files_1.length)) return [3 /*break*/, 4];
                            file = files_1[_a];
                            return [4 /*yield*/, this.instance.uploadPublic({ file: file })];
                        case 2:
                            response = _b.sent();
                            responses.push(response);
                            _b.label = 3;
                        case 3:
                            _a++;
                            return [3 /*break*/, 1];
                        case 4: return [2 /*return*/, responses];
                    }
                });
            });
        };
        UploadService_1.prototype.uploadPrivate = function () {
            var files = [];
            for (var _i = 0; _i < arguments.length; _i++) {
                files[_i] = arguments[_i];
            }
            return __awaiter(this, void 0, void 0, function () {
                var responses, _a, files_2, file, response;
                return __generator(this, function (_b) {
                    switch (_b.label) {
                        case 0:
                            responses = [];
                            _a = 0, files_2 = files;
                            _b.label = 1;
                        case 1:
                            if (!(_a < files_2.length)) return [3 /*break*/, 4];
                            file = files_2[_a];
                            return [4 /*yield*/, this.instance.uploadPrivate({ file: file })];
                        case 2:
                            response = _b.sent();
                            responses.push(response);
                            _b.label = 3;
                        case 3:
                            _a++;
                            return [3 /*break*/, 1];
                        case 4: return [2 /*return*/, responses];
                    }
                });
            });
        };
        UploadService_1.prototype.fromPrivateToPublicUrl = function () {
            var items = [];
            for (var _i = 0; _i < arguments.length; _i++) {
                items[_i] = arguments[_i];
            }
            return __awaiter(this, void 0, void 0, function () {
                var responses, _a, items_1, item, response;
                return __generator(this, function (_b) {
                    switch (_b.label) {
                        case 0:
                            responses = [];
                            _a = 0, items_1 = items;
                            _b.label = 1;
                        case 1:
                            if (!(_a < items_1.length)) return [3 /*break*/, 4];
                            item = items_1[_a];
                            return [4 /*yield*/, this.instance.fromPrivateToPublicUrl(item)];
                        case 2:
                            response = _b.sent();
                            responses.push(response);
                            _b.label = 3;
                        case 3:
                            _a++;
                            return [3 /*break*/, 1];
                        case 4: return [2 /*return*/, responses];
                    }
                });
            });
        };
        return UploadService_1;
    }());
    __setFunctionName(_classThis, "UploadService");
    (function () {
        var _metadata = typeof Symbol === "function" && Symbol.metadata ? Object.create(null) : void 0;
        __esDecorate(null, _classDescriptor = { value: _classThis }, _classDecorators, { kind: "class", name: _classThis.name, metadata: _metadata }, null, _classExtraInitializers);
        UploadService = _classThis = _classDescriptor.value;
        if (_metadata) Object.defineProperty(_classThis, Symbol.metadata, { enumerable: true, configurable: true, writable: true, value: _metadata });
        __runInitializers(_classThis, _classExtraInitializers);
    })();
    return UploadService = _classThis;
}();
exports.UploadService = UploadService;


// C:\grua-booking-system-25\server\dist\libraries\upload\upload.type.js
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });


// C:\grua-booking-system-25\server\dist\libraries\upload\internal\providers\aws\upload.provider.aws.js
"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __esDecorate = (this && this.__esDecorate) || function (ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {
    function accept(f) { if (f !== void 0 && typeof f !== "function") throw new TypeError("Function expected"); return f; }
    var kind = contextIn.kind, key = kind === "getter" ? "get" : kind === "setter" ? "set" : "value";
    var target = !descriptorIn && ctor ? contextIn["static"] ? ctor : ctor.prototype : null;
    var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});
    var _, done = false;
    for (var i = decorators.length - 1; i >= 0; i--) {
        var context = {};
        for (var p in contextIn) context[p] = p === "access" ? {} : contextIn[p];
        for (var p in contextIn.access) context.access[p] = contextIn.access[p];
        context.addInitializer = function (f) { if (done) throw new TypeError("Cannot add initializers after decoration has completed"); extraInitializers.push(accept(f || null)); };
        var result = (0, decorators[i])(kind === "accessor" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);
        if (kind === "accessor") {
            if (result === void 0) continue;
            if (result === null || typeof result !== "object") throw new TypeError("Object expected");
            if (_ = accept(result.get)) descriptor.get = _;
            if (_ = accept(result.set)) descriptor.set = _;
            if (_ = accept(result.init)) initializers.unshift(_);
        }
        else if (_ = accept(result)) {
            if (kind === "field") initializers.unshift(_);
            else descriptor[key] = _;
        }
    }
    if (target) Object.defineProperty(target, contextIn.name, descriptor);
    done = true;
};
var __runInitializers = (this && this.__runInitializers) || function (thisArg, initializers, value) {
    var useValue = arguments.length > 2;
    for (var i = 0; i < initializers.length; i++) {
        value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);
    }
    return useValue ? value : void 0;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (g && (g = 0, op[0] && (_ = 0)), _) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __setFunctionName = (this && this.__setFunctionName) || function (f, name, prefix) {
    if (typeof name === "symbol") name = name.description ? "[".concat(name.description, "]") : "";
    return Object.defineProperty(f, "name", { configurable: true, value: prefix ? "".concat(prefix, " ", name) : name });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.UploadProviderAws = void 0;
var client_s3_1 = require("@aws-sdk/client-s3");
var s3_request_presigner_1 = require("@aws-sdk/s3-request-presigner");
var common_1 = require("@nestjs/common");
var upload_provider_1 = require("@server/libraries/upload/upload.provider");
var ONE_HOUR_IN_SECONDS = 60 * 60;
var UploadProviderAws = function () {
    var _classDecorators = [(0, common_1.Injectable)()];
    var _classDescriptor;
    var _classExtraInitializers = [];
    var _classThis;
    var _classSuper = upload_provider_1.UploadProvider;
    var UploadProviderAws = _classThis = /** @class */ (function (_super) {
        __extends(UploadProviderAws_1, _super);
        function UploadProviderAws_1(loggerService, configurationService) {
            var _this = _super.call(this) || this;
            _this.loggerService = loggerService;
            _this.configurationService = configurationService;
            _this.logger = _this.loggerService.create({ name: 'UploadProviderAws' });
            return _this;
        }
        UploadProviderAws_1.prototype.initialise = function () {
            return __awaiter(this, void 0, void 0, function () {
                var accessKey, secretKey, error_1;
                return __generator(this, function (_a) {
                    switch (_a.label) {
                        case 0:
                            _a.trys.push([0, 2, , 3]);
                            accessKey = this.configurationService.get("SERVER_UPLOAD_AWS_ACCESS_KEY");
                            secretKey = this.configurationService.get("SERVER_UPLOAD_AWS_SECRET_KEY");
                            if (!accessKey && !secretKey) {
                                throw new Error('Set SERVER_UPLOAD_AWS_ACCESS_KEY && SERVER_UPLOAD_AWS_SECRET_KEY in your .env to activate');
                            }
                            if (!accessKey) {
                                throw new Error('Set SERVER_UPLOAD_AWS_ACCESS_KEY in your .env to activate');
                            }
                            if (!secretKey) {
                                throw new Error('Set SERVER_UPLOAD_AWS_SECRET_KEY in your .env to activate');
                            }
                            this.region = this.configurationService.get("SERVER_UPLOAD_AWS_REGION", 'us-east-1');
                            this.bucketPublicName = this.configurationService.get("SERVER_UPLOAD_AWS_BUCKET_PUBLIC_NAME");
                            if (!this.bucketPublicName) {
                                this.logger.warning("Set SERVER_UPLOAD_AWS_BUCKET_PUBLIC_NAME in your .env to activate a public bucket with infinite urls");
                            }
                            this.bucketPrivateName = this.configurationService.get("SERVER_UPLOAD_AWS_BUCKET_PRIVATE_NAME");
                            if (!this.bucketPrivateName) {
                                this.logger.warning("Set SERVER_UPLOAD_AWS_BUCKET_PRIVATE_NAME in your .env to activate a private bucket with signed urls");
                            }
                            this.client = new client_s3_1.S3Client({
                                region: this.region,
                                credentials: {
                                    accessKeyId: accessKey,
                                    secretAccessKey: secretKey,
                                },
                            });
                            return [4 /*yield*/, this.check()];
                        case 1:
                            _a.sent();
                            this.logger.success("AWS library active in region ".concat(this.region));
                            return [3 /*break*/, 3];
                        case 2:
                            error_1 = _a.sent();
                            this.logger.warning("AWS library failed to start");
                            throw new Error(error_1);
                        case 3: return [2 /*return*/];
                    }
                });
            });
        };
        UploadProviderAws_1.prototype.check = function () {
            return __awaiter(this, void 0, void 0, function () {
                var buckets, bucket, bucket;
                var _this = this;
                return __generator(this, function (_a) {
                    switch (_a.label) {
                        case 0: return [4 /*yield*/, this.listBuckets()];
                        case 1:
                            buckets = _a.sent();
                            if (this.bucketPrivateName) {
                                this.logger.log("Checking bucket \"".concat(this.bucketPrivateName, "\"..."));
                                bucket = buckets.find(function (bucket) { return bucket.name === _this.bucketPrivateName; });
                                if (bucket) {
                                    this.logger.success("Bucket \"".concat(this.bucketPrivateName, "\" is active"));
                                }
                                else {
                                    throw new Error("Bucket \"".concat(this.bucketPrivateName, "\" was not found"));
                                }
                            }
                            if (this.bucketPublicName) {
                                this.logger.log("Checking bucket \"".concat(this.bucketPublicName, "\"..."));
                                bucket = buckets.find(function (bucket) { return bucket.name === _this.bucketPublicName; });
                                if (bucket) {
                                    this.logger.success("Bucket \"".concat(this.bucketPublicName, "\" is active"));
                                }
                                else {
                                    throw new Error("Bucket \"".concat(this.bucketPublicName, "\" was not found"));
                                }
                            }
                            return [2 /*return*/];
                    }
                });
            });
        };
        UploadProviderAws_1.prototype.uploadPublic = function (options) {
            var _a;
            return __awaiter(this, void 0, void 0, function () {
                var file, key, command, url, error_2;
                return __generator(this, function (_b) {
                    switch (_b.label) {
                        case 0:
                            file = options.file;
                            key = this.ensureFilename(file.originalname);
                            command = new client_s3_1.PutObjectCommand({
                                Bucket: "".concat(this.bucketPublicName),
                                Key: this.ensureKey(key),
                                Body: file.buffer,
                                ContentType: (_a = file.mimetype) !== null && _a !== void 0 ? _a : 'image/png',
                            });
                            _b.label = 1;
                        case 1:
                            _b.trys.push([1, 3, , 4]);
                            return [4 /*yield*/, this.client.send(command)];
                        case 2:
                            _b.sent();
                            this.logger.success("File ".concat(file.originalname, " saved (public)"));
                            url = "".concat(this.getBaseUrlPublic(), "/").concat(key);
                            return [2 /*return*/, { url: url }];
                        case 3:
                            error_2 = _b.sent();
                            this.logger.error("".concat(error_2));
                            throw new Error("Could not upload public file with key \"".concat(key, "\""));
                        case 4: return [2 /*return*/];
                    }
                });
            });
        };
        UploadProviderAws_1.prototype.uploadPrivate = function (options) {
            var _a;
            return __awaiter(this, void 0, void 0, function () {
                var file, key, command, url, error_3;
                return __generator(this, function (_b) {
                    switch (_b.label) {
                        case 0:
                            file = options.file;
                            key = this.ensureFilename(file.originalname);
                            command = new client_s3_1.PutObjectCommand({
                                Bucket: "".concat(this.bucketPrivateName),
                                Key: this.ensureKey(key),
                                Body: file.buffer,
                                ContentType: (_a = file.mimetype) !== null && _a !== void 0 ? _a : 'image/png',
                            });
                            _b.label = 1;
                        case 1:
                            _b.trys.push([1, 3, , 4]);
                            return [4 /*yield*/, this.client.send(command)];
                        case 2:
                            _b.sent();
                            this.logger.success("File ".concat(file.originalname, " saved (private)"));
                            url = "".concat(this.getBaseUrlPrivate(), "/").concat(key);
                            return [2 /*return*/, { url: url }];
                        case 3:
                            error_3 = _b.sent();
                            this.logger.error("".concat(error_3));
                            throw new Error("Could not upload private file with key \"".concat(key, "\""));
                        case 4: return [2 /*return*/];
                    }
                });
            });
        };
        UploadProviderAws_1.prototype.fromPrivateToPublicUrl = function (_a) {
            var url = _a.url, _b = _a.expiresInSeconds, expiresInSeconds = _b === void 0 ? ONE_HOUR_IN_SECONDS : _b;
            return __awaiter(this, void 0, void 0, function () {
                var key, params, command, urlPublic;
                return __generator(this, function (_c) {
                    switch (_c.label) {
                        case 0:
                            if (!this.isUrlPrivate(url)) {
                                throw new Error("".concat(url, " must be a private url"));
                            }
                            key = this.extractKeyFromUrlPrivate(url);
                            params = {
                                Bucket: "".concat(this.bucketPrivateName),
                                Key: this.ensureKey(key),
                            };
                            command = new client_s3_1.GetObjectCommand(params);
                            return [4 /*yield*/, (0, s3_request_presigner_1.getSignedUrl)(this.client, command, {
                                    expiresIn: expiresInSeconds,
                                })];
                        case 1:
                            urlPublic = _c.sent();
                            return [2 /*return*/, { url: urlPublic }];
                    }
                });
            });
        };
        /* -------------------------------------------------------------------------- */
        /*                                   PRIVATE                                  */
        /* -------------------------------------------------------------------------- */
        UploadProviderAws_1.prototype.listBuckets = function () {
            return __awaiter(this, void 0, void 0, function () {
                var result, buckets;
                return __generator(this, function (_a) {
                    switch (_a.label) {
                        case 0: return [4 /*yield*/, this.client.send(new client_s3_1.ListBucketsCommand({}))];
                        case 1:
                            result = _a.sent();
                            buckets = result.Buckets.map(function (item) { return ({
                                name: item.Name,
                                dateCreation: item.CreationDate,
                            }); });
                            return [2 /*return*/, buckets];
                    }
                });
            });
        };
        UploadProviderAws_1.prototype.getBaseUrlPrivate = function () {
            return "https://".concat(this.bucketPrivateName, ".s3.").concat(this.region, ".amazonaws.com");
        };
        UploadProviderAws_1.prototype.getBaseUrlPublic = function () {
            return "https://".concat(this.bucketPublicName, ".s3.").concat(this.region, ".amazonaws.com");
        };
        UploadProviderAws_1.prototype.ensureKey = function (key) {
            var isPrefixed = key.startsWith('/');
            if (isPrefixed) {
                return key.slice(1);
            }
            return key;
        };
        UploadProviderAws_1.prototype.isUrlPrivate = function (url) {
            var baseUrlPrivate = this.getBaseUrlPrivate();
            var isPrivate = url.startsWith(baseUrlPrivate);
            return isPrivate;
        };
        UploadProviderAws_1.prototype.extractKeyFromUrlPrivate = function (url) {
            var baseUrlPrivate = this.getBaseUrlPrivate();
            return url.replace(baseUrlPrivate, '');
        };
        return UploadProviderAws_1;
    }(_classSuper));
    __setFunctionName(_classThis, "UploadProviderAws");
    (function () {
        var _a;
        var _metadata = typeof Symbol === "function" && Symbol.metadata ? Object.create((_a = _classSuper[Symbol.metadata]) !== null && _a !== void 0 ? _a : null) : void 0;
        __esDecorate(null, _classDescriptor = { value: _classThis }, _classDecorators, { kind: "class", name: _classThis.name, metadata: _metadata }, null, _classExtraInitializers);
        UploadProviderAws = _classThis = _classDescriptor.value;
        if (_metadata) Object.defineProperty(_classThis, Symbol.metadata, { enumerable: true, configurable: true, writable: true, value: _metadata });
        __runInitializers(_classThis, _classExtraInitializers);
    })();
    return UploadProviderAws = _classThis;
}();
exports.UploadProviderAws = UploadProviderAws;
"use strict";
var __esDecorate = (this && this.__esDecorate) || function (ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {
    function accept(f) { if (f !== void 0 && typeof f !== "function") throw new TypeError("Function expected"); return f; }
    var kind = contextIn.kind, key = kind === "getter" ? "get" : kind === "setter" ? "set" : "value";
    var target = !descriptorIn && ctor ? contextIn["static"] ? ctor : ctor.prototype : null;
    var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});
    var _, done = false;
    for (var i = decorators.length - 1; i >= 0; i--) {
        var context = {};
        for (var p in contextIn) context[p] = p === "access" ? {} : contextIn[p];
        for (var p in contextIn.access) context.access[p] = contextIn.access[p];
        context.addInitializer = function (f) { if (done) throw new TypeError("Cannot add initializers after decoration has completed"); extraInitializers.push(accept(f || null)); };
        var result = (0, decorators[i])(kind === "accessor" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);
        if (kind === "accessor") {
            if (result === void 0) continue;
            if (result === null || typeof result !== "object") throw new TypeError("Object expected");
            if (_ = accept(result.get)) descriptor.get = _;
            if (_ = accept(result.set)) descriptor.set = _;
            if (_ = accept(result.init)) initializers.unshift(_);
        }
        else if (_ = accept(result)) {
            if (kind === "field") initializers.unshift(_);
            else descriptor[key] = _;
        }
    }
    if (target) Object.defineProperty(target, contextIn.name, descriptor);
    done = true;
};
var __runInitializers = (this && this.__runInitializers) || function (thisArg, initializers, value) {
    var useValue = arguments.length > 2;
    for (var i = 0; i < initializers.length; i++) {
        value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);
    }
    return useValue ? value : void 0;
};
var __setFunctionName = (this && this.__setFunctionName) || function (f, name, prefix) {
    if (typeof name === "symbol") name = name.description ? "[".concat(name.description, "]") : "";
    return Object.defineProperty(f, "name", { configurable: true, value: prefix ? "".concat(prefix, " ", name) : name });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.EmailTemplateService = void 0;
var common_1 = require("@nestjs/common");
var file_1 = require("@server/helpers/file");
var email_type_1 = require("../email.type");
var components_1 = require("./components");
var EmailTemplateService = function () {
    var _classDecorators = [(0, common_1.Injectable)()];
    var _classDescriptor;
    var _classExtraInitializers = [];
    var _classThis;
    var EmailTemplateService = _classThis = /** @class */ (function () {
        function EmailTemplateService_1() {
            var _a;
            this.pathTemplates = "".concat(file_1.FileHelper.getRoot(), "/src/libraries/email/internal/templates");
            this.mapping = (_a = {},
                _a[email_type_1.EmailType.AUTHORIZATION_VERIFICATION_CODE] = 'authorization-verification-code',
                _a[email_type_1.EmailType.AUTHENTICATION_WELCOME] = 'authentication-welcome',
                _a[email_type_1.EmailType.AUTHENTICATION_FORGOT_PASSWORD] = 'authentication-forgot-password',
                _a[email_type_1.EmailType.DEFAULT] = 'default',
                _a);
        }
        EmailTemplateService_1.prototype.get = function (options) {
            var _a;
            var values = (_a = options.variables) !== null && _a !== void 0 ? _a : { content: options.content };
            var pathBase = this.getPathBase();
            var pathCSS = this.getPathCSS();
            var pathTemplate = this.getPathTemplate(options.type);
            var contentBase = file_1.FileHelper.findFileContent(pathBase);
            var contentCSS = file_1.FileHelper.findFileContent(pathCSS);
            var contentTemplate = file_1.FileHelper.findFileContent(pathTemplate);
            var content = this.buildContent(contentTemplate, values);
            content = this.buildContent(contentBase, { style: contentCSS, content: content });
            content = this.buildComponents(content);
            return content;
        };
        EmailTemplateService_1.prototype.getPathTemplate = function (type) {
            var _a;
            var name = (_a = this.mapping[type]) !== null && _a !== void 0 ? _a : this.mapping[email_type_1.EmailType.DEFAULT];
            var path = "".concat(this.pathTemplates, "/").concat(name, ".template.html");
            return path;
        };
        EmailTemplateService_1.prototype.getPathBase = function () {
            var path = "".concat(this.pathTemplates, "/base.html");
            return path;
        };
        EmailTemplateService_1.prototype.getPathCSS = function () {
            var path = "".concat(this.pathTemplates, "/style.css");
            return path;
        };
        EmailTemplateService_1.prototype.buildContent = function (content, values) {
            var contentBuilt = content;
            for (var _i = 0, _a = Object.entries(values); _i < _a.length; _i++) {
                var _b = _a[_i], key = _b[0], value = _b[1];
                var token = new RegExp("{{ ".concat(key, " }}"), 'g');
                contentBuilt = contentBuilt.replace(token, value);
            }
            return contentBuilt;
        };
        EmailTemplateService_1.prototype.buildComponents = function (content) {
            var contentUpdated = content;
            for (var _i = 0, _a = Object.entries(components_1.Components); _i < _a.length; _i++) {
                var _b = _a[_i], key = _b[0], value = _b[1];
                var tag = new RegExp("".concat(key), 'g');
                contentUpdated = contentUpdated.replace(tag, value);
            }
            return contentUpdated;
        };
        return EmailTemplateService_1;
    }());
    __setFunctionName(_classThis, "EmailTemplateService");
    (function () {
        var _metadata = typeof Symbol === "function" && Symbol.metadata ? Object.create(null) : void 0;
        __esDecorate(null, _classDescriptor = { value: _classThis }, _classDecorators, { kind: "class", name: _classThis.name, metadata: _metadata }, null, _classExtraInitializers);
        EmailTemplateService = _classThis = _classDescriptor.value;
        if (_metadata) Object.defineProperty(_classThis, Symbol.metadata, { enumerable: true, configurable: true, writable: true, value: _metadata });
        __runInitializers(_classThis, _classExtraInitializers);
    })();
    return EmailTemplateService = _classThis;
}();
exports.EmailTemplateService = EmailTemplateService;


// C:\grua-booking-system-25\server\dist\libraries\email\internal\email.type.js
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.EmailSender = exports.EmailType = void 0;
var EmailType;
(function (EmailType) {
    EmailType["DEFAULT"] = "default";
    EmailType["AUTHENTICATION_WELCOME"] = "authentication.welcome.password";
    EmailType["AUTHENTICATION_FORGOT_PASSWORD"] = "authentication.forgot.password";
    EmailType["AUTHORIZATION_VERIFICATION_CODE"] = "authorization.verification.code";
})(EmailType || (exports.EmailType = EmailType = {}));
exports.EmailSender = {
    default: {
        email: 'no-reply@marblism.com',
        name: 'Marblism',
    },
};


// C:\grua-booking-system-25\server\dist\libraries\email\internal\providers\mailjet\mailjet.provider.js
"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __esDecorate = (this && this.__esDecorate) || function (ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {
    function accept(f) { if (f !== void 0 && typeof f !== "function") throw new TypeError("Function expected"); return f; }
    var kind = contextIn.kind, key = kind === "getter" ? "get" : kind === "setter" ? "set" : "value";
    var target = !descriptorIn && ctor ? contextIn["static"] ? ctor : ctor.prototype : null;
    var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});
    var _, done = false;
    for (var i = decorators.length - 1; i >= 0; i--) {
        var context = {};
        for (var p in contextIn) context[p] = p === "access" ? {} : contextIn[p];
        for (var p in contextIn.access) context.access[p] = contextIn.access[p];
        context.addInitializer = function (f) { if (done) throw new TypeError("Cannot add initializers after decoration has completed"); extraInitializers.push(accept(f || null)); };
        var result = (0, decorators[i])(kind === "accessor" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);
        if (kind === "accessor") {
            if (result === void 0) continue;
            if (result === null || typeof result !== "object") throw new TypeError("Object expected");
            if (_ = accept(result.get)) descriptor.get = _;
            if (_ = accept(result.set)) descriptor.set = _;
            if (_ = accept(result.init)) initializers.unshift(_);
        }
        else if (_ = accept(result)) {
            if (kind === "field") initializers.unshift(_);
            else descriptor[key] = _;
        }
    }
    if (target) Object.defineProperty(target, contextIn.name, descriptor);
    done = true;
};
var __runInitializers = (this && this.__runInitializers) || function (thisArg, initializers, value) {
    var useValue = arguments.length > 2;
    for (var i = 0; i < initializers.length; i++) {
        value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);
    }
    return useValue ? value : void 0;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (g && (g = 0, op[0] && (_ = 0)), _) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __setFunctionName = (this && this.__setFunctionName) || function (f, name, prefix) {
    if (typeof name === "symbol") name = name.description ? "[".concat(name.description, "]") : "";
    return Object.defineProperty(f, "name", { configurable: true, value: prefix ? "".concat(prefix, " ", name) : name });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.MailjetProvider = void 0;
var common_1 = require("@nestjs/common");
var node_mailjet_1 = require("node-mailjet");
var email_type_1 = require("../../email.type");
var MailjetProvider = function () {
    var _classDecorators = [(0, common_1.Injectable)()];
    var _classDescriptor;
    var _classExtraInitializers = [];
    var _classThis;
    var MailjetProvider = _classThis = /** @class */ (function () {
        function MailjetProvider_1(configurationService, loggerService, templateService) {
            var _a;
            this.configurationService = configurationService;
            this.loggerService = loggerService;
            this.templateService = templateService;
            this.templateIds = (_a = {},
                _a[email_type_1.EmailType.DEFAULT] = null,
                _a[email_type_1.EmailType.AUTHENTICATION_WELCOME] = null,
                _a[email_type_1.EmailType.AUTHENTICATION_FORGOT_PASSWORD] = null,
                _a[email_type_1.EmailType.AUTHORIZATION_VERIFICATION_CODE] = null,
                _a);
            this.logger = this.loggerService.create({ name: 'MailjetProvider' });
            this.initialise();
        }
        MailjetProvider_1.prototype.initialise = function () {
            var isProduction = this.configurationService.isEnvironmentProduction();
            if (!isProduction) {
                this.logger.warning("Mailjet is disabled in development");
                return;
            }
            try {
                var apiKey = this.configurationService.get('SERVER_EMAIL_MAILJET_API_KEY');
                var secretKey = this.configurationService.get('SERVER_EMAIL_MAILJET_SECRET_KEY');
                if (!apiKey || !secretKey) {
                    this.logger.warning("Set EMAIL_MAILJET_API_KEY and EMAIL_MAILJET_SECRET_KEY to activate Mailjet");
                    return;
                }
                this.client = new node_mailjet_1.default({ apiKey: apiKey, apiSecret: secretKey });
                this.logger.success("Mailjet service active");
            }
            catch (error) {
                this.logger.error("Could not start Mailjet service");
                this.logger.error(error);
            }
        };
        MailjetProvider_1.prototype.send = function (options) {
            return __awaiter(this, void 0, void 0, function () {
                var message;
                var _this = this;
                return __generator(this, function (_a) {
                    message = this.buildMessage(options);
                    return [2 /*return*/, this.client
                            .post('send', { version: 'v3.1' })
                            .request({
                            Messages: [
                                __assign({}, message),
                            ],
                        })
                            .then(function (result) {
                            _this.logger.log("Emails sent", result);
                        })
                            .catch(function (error) {
                            _this.logger.error("Could not send emails (".concat(error.statusCode, ")"));
                        })];
                });
            });
        };
        MailjetProvider_1.prototype.buildMessage = function (options) {
            var from = {
                Email: email_type_1.EmailSender.default.email,
                Name: email_type_1.EmailSender.default.name,
            };
            var to = options.to.map(function (item) { return ({ Email: item.email, Name: item.name }); });
            var message = {
                From: from,
                To: to,
                Subject: options.subject,
                HTMLPart: undefined,
                Variables: undefined,
                TemplateLanguage: undefined,
                templateId: undefined,
            };
            var templateId = this.templateIds[options.type];
            if (templateId) {
                message.TemplateLanguage = true;
                message.templateId = templateId;
                message.Variables = options.variables;
            }
            else {
                var content = this.templateService.get(options);
                message.HTMLPart = content;
            }
            return message;
        };
        return MailjetProvider_1;
    }());
    __setFunctionName(_classThis, "MailjetProvider");
    (function () {
        var _metadata = typeof Symbol === "function" && Symbol.metadata ? Object.create(null) : void 0;
        __esDecorate(null, _classDescriptor = { value: _classThis }, _classDecorators, { kind: "class", name: _classThis.name, metadata: _metadata }, null, _classExtraInitializers);
        MailjetProvider = _classThis = _classDescriptor.value;
        if (_metadata) Object.defineProperty(_classThis, Symbol.metadata, { enumerable: true, configurable: true, writable: true, value: _metadata });
        __runInitializers(_classThis, _classExtraInitializers);
    })();
    return MailjetProvider = _classThis;
}();
exports.MailjetProvider = MailjetProvider;


// C:\grua-booking-system-25\server\dist\libraries\email\internal\providers\nodemailer\nodemailer.provider.js
"use strict";
var __esDecorate = (this && this.__esDecorate) || function (ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {
    function accept(f) { if (f !== void 0 && typeof f !== "function") throw new TypeError("Function expected"); return f; }
    var kind = contextIn.kind, key = kind === "getter" ? "get" : kind === "setter" ? "set" : "value";
    var target = !descriptorIn && ctor ? contextIn["static"] ? ctor : ctor.prototype : null;
    var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});
    var _, done = false;
    for (var i = decorators.length - 1; i >= 0; i--) {
        var context = {};
        for (var p in contextIn) context[p] = p === "access" ? {} : contextIn[p];
        for (var p in contextIn.access) context.access[p] = contextIn.access[p];
        context.addInitializer = function (f) { if (done) throw new TypeError("Cannot add initializers after decoration has completed"); extraInitializers.push(accept(f || null)); };
        var result = (0, decorators[i])(kind === "accessor" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);
        if (kind === "accessor") {
            if (result === void 0) continue;
            if (result === null || typeof result !== "object") throw new TypeError("Object expected");
            if (_ = accept(result.get)) descriptor.get = _;
            if (_ = accept(result.set)) descriptor.set = _;
            if (_ = accept(result.init)) initializers.unshift(_);
        }
        else if (_ = accept(result)) {
            if (kind === "field") initializers.unshift(_);
            else descriptor[key] = _;
        }
    }
    if (target) Object.defineProperty(target, contextIn.name, descriptor);
    done = true;
};
var __runInitializers = (this && this.__runInitializers) || function (thisArg, initializers, value) {
    var useValue = arguments.length > 2;
    for (var i = 0; i < initializers.length; i++) {
        value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);
    }
    return useValue ? value : void 0;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (g && (g = 0, op[0] && (_ = 0)), _) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __setFunctionName = (this && this.__setFunctionName) || function (f, name, prefix) {
    if (typeof name === "symbol") name = name.description ? "[".concat(name.description, "]") : "";
    return Object.defineProperty(f, "name", { configurable: true, value: prefix ? "".concat(prefix, " ", name) : name });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.NodemailerProvider = void 0;
var common_1 = require("@nestjs/common");
var NodemailerSDK = require("nodemailer");
var email_type_1 = require("../../email.type");
var NodemailerProvider = function () {
    var _classDecorators = [(0, common_1.Injectable)()];
    var _classDescriptor;
    var _classExtraInitializers = [];
    var _classThis;
    var NodemailerProvider = _classThis = /** @class */ (function () {
        function NodemailerProvider_1(loggerService, configurationService, templateService) {
            this.loggerService = loggerService;
            this.configurationService = configurationService;
            this.templateService = templateService;
            this.logger = this.loggerService.create({ name: 'NodemailerProvider' });
            this.initialise();
        }
        NodemailerProvider_1.prototype.initialise = function () {
            var _a;
            try {
                var host = (_a = this.configurationService.get('SERVER_EMAIL_MAILPIT_HOST')) !== null && _a !== void 0 ? _a : 'localhost';
                var port = this.configurationService.getNumber('SERVER_EMAIL_MAILPIT_PORT', 1022);
                this.client = NodemailerSDK.createTransport({
                    host: host,
                    port: port,
                });
                this.logger.success("Nodemailer is active (".concat(host, ":").concat(port, ")"));
            }
            catch (error) {
                this.logger.error("Nodemailer failed to start: ".concat(error.message));
            }
        };
        NodemailerProvider_1.prototype.send = function (options) {
            return __awaiter(this, void 0, void 0, function () {
                var from, content, _i, _a, to;
                var _this = this;
                return __generator(this, function (_b) {
                    switch (_b.label) {
                        case 0:
                            from = email_type_1.EmailSender.default;
                            content = this.templateService.get(options);
                            _i = 0, _a = options.to;
                            _b.label = 1;
                        case 1:
                            if (!(_i < _a.length)) return [3 /*break*/, 4];
                            to = _a[_i];
                            return [4 /*yield*/, this.client
                                    .sendMail({
                                    from: "".concat(from.name, " <").concat(from.email, ">"),
                                    to: to.email,
                                    subject: options.subject,
                                    html: content,
                                })
                                    .then(function (result) {
                                    _this.logger.log("Emails sent");
                                })
                                    .catch(function (error) {
                                    _this.logger.error("Could not send emails (".concat(error.statusCode, ")"));
                                    _this.logger.error(error);
                                })];
                        case 2:
                            _b.sent();
                            _b.label = 3;
                        case 3:
                            _i++;
                            return [3 /*break*/, 1];
                        case 4: return [2 /*return*/];
                    }
                });
            });
        };
        return NodemailerProvider_1;
    }());
    __setFunctionName(_classThis, "NodemailerProvider");
    (function () {
        var _metadata = typeof Symbol === "function" && Symbol.metadata ? Object.create(null) : void 0;
        __esDecorate(null, _classDescriptor = { value: _classThis }, _classDecorators, { kind: "class", name: _classThis.name, metadata: _metadata }, null, _classExtraInitializers);
        NodemailerProvider = _classThis = _classDescriptor.value;
        if (_metadata) Object.defineProperty(_classThis, Symbol.metadata, { enumerable: true, configurable: true, writable: true, value: _metadata });
        __runInitializers(_classThis, _classExtraInitializers);
    })();
    return NodemailerProvider = _classThis;
}();
exports.NodemailerProvider = NodemailerProvider;


// C:\grua-booking-system-25\server\dist\libraries\email\internal\providers\provider.js
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });


// C:\grua-booking-system-25\server\dist\libraries\email\internal\providers\mailjet\mailjet.provider.js
"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __esDecorate = (this && this.__esDecorate) || function (ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {
    function accept(f) { if (f !== void 0 && typeof f !== "function") throw new TypeError("Function expected"); return f; }
    var kind = contextIn.kind, key = kind === "getter" ? "get" : kind === "setter" ? "set" : "value";
    var target = !descriptorIn && ctor ? contextIn["static"] ? ctor : ctor.prototype : null;
    var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});
    var _, done = false;
    for (var i = decorators.length - 1; i >= 0; i--) {
        var context = {};
        for (var p in contextIn) context[p] = p === "access" ? {} : contextIn[p];
        for (var p in contextIn.access) context.access[p] = contextIn.access[p];
        context.addInitializer = function (f) { if (done) throw new TypeError("Cannot add initializers after decoration has completed"); extraInitializers.push(accept(f || null)); };
        var result = (0, decorators[i])(kind === "accessor" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);
        if (kind === "accessor") {
            if (result === void 0) continue;
            if (result === null || typeof result !== "object") throw new TypeError("Object expected");
            if (_ = accept(result.get)) descriptor.get = _;
            if (_ = accept(result.set)) descriptor.set = _;
            if (_ = accept(result.init)) initializers.unshift(_);
        }
        else if (_ = accept(result)) {
            if (kind === "field") initializers.unshift(_);
            else descriptor[key] = _;
        }
    }
    if (target) Object.defineProperty(target, contextIn.name, descriptor);
    done = true;
};
var __runInitializers = (this && this.__runInitializers) || function (thisArg, initializers, value) {
    var useValue = arguments.length > 2;
    for (var i = 0; i < initializers.length; i++) {
        value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);
    }
    return useValue ? value : void 0;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (g && (g = 0, op[0] && (_ = 0)), _) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __setFunctionName = (this && this.__setFunctionName) || function (f, name, prefix) {
    if (typeof name === "symbol") name = name.description ? "[".concat(name.description, "]") : "";
    return Object.defineProperty(f, "name", { configurable: true, value: prefix ? "".concat(prefix, " ", name) : name });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.MailjetProvider = void 0;
var common_1 = require("@nestjs/common");
var node_mailjet_1 = require("node-mailjet");
var email_type_1 = require("../../email.type");
var MailjetProvider = function () {
    var _classDecorators = [(0, common_1.Injectable)()];
    var _classDescriptor;
    var _classExtraInitializers = [];
    var _classThis;
    var MailjetProvider = _classThis = /** @class */ (function () {
        function MailjetProvider_1(configurationService, loggerService, templateService) {
            var _a;
            this.configurationService = configurationService;
            this.loggerService = loggerService;
            this.templateService = templateService;
            this.templateIds = (_a = {},
                _a[email_type_1.EmailType.DEFAULT] = null,
                _a[email_type_1.EmailType.AUTHENTICATION_WELCOME] = null,
                _a[email_type_1.EmailType.AUTHENTICATION_FORGOT_PASSWORD] = null,
                _a[email_type_1.EmailType.AUTHORIZATION_VERIFICATION_CODE] = null,
                _a);
            this.logger = this.loggerService.create({ name: 'MailjetProvider' });
            this.initialise();
        }
        MailjetProvider_1.prototype.initialise = function () {
            var isProduction = this.configurationService.isEnvironmentProduction();
            if (!isProduction) {
                this.logger.warning("Mailjet is disabled in development");
                return;
            }
            try {
                var apiKey = this.configurationService.get('SERVER_EMAIL_MAILJET_API_KEY');
                var secretKey = this.configurationService.get('SERVER_EMAIL_MAILJET_SECRET_KEY');
                if (!apiKey || !secretKey) {
                    this.logger.warning("Set EMAIL_MAILJET_API_KEY and EMAIL_MAILJET_SECRET_KEY to activate Mailjet");
                    return;
                }
                this.client = new node_mailjet_1.default({ apiKey: apiKey, apiSecret: secretKey });
                this.logger.success("Mailjet service active");
            }
            catch (error) {
                this.logger.error("Could not start Mailjet service");
                this.logger.error(error);
            }
        };
        MailjetProvider_1.prototype.send = function (options) {
            return __awaiter(this, void 0, void 0, function () {
                var message;
                var _this = this;
                return __generator(this, function (_a) {
                    message = this.buildMessage(options);
                    return [2 /*return*/, this.client
                            .post('send', { version: 'v3.1' })
                            .request({
                            Messages: [
                                __assign({}, message),
                            ],
                        })
                            .then(function (result) {
                            _this.logger.log("Emails sent", result);
                        })
                            .catch(function (error) {
                            _this.logger.error("Could not send emails (".concat(error.statusCode, ")"));
                        })];
                });
            });
        };
        MailjetProvider_1.prototype.buildMessage = function (options) {
            var from = {
                Email: email_type_1.EmailSender.default.email,
                Name: email_type_1.EmailSender.default.name,
            };
            var to = options.to.map(function (item) { return ({ Email: item.email, Name: item.name }); });
            var message = {
                From: from,
                To: to,
                Subject: options.subject,
                HTMLPart: undefined,
                Variables: undefined,
                TemplateLanguage: undefined,
                templateId: undefined,
            };
            var templateId = this.templateIds[options.type];
            if (templateId) {
                message.TemplateLanguage = true;
                message.templateId = templateId;
                message.Variables = options.variables;
            }
            else {
                var content = this.templateService.get(options);
                message.HTMLPart = content;
            }
            return message;
        };
        return MailjetProvider_1;
    }());
    __setFunctionName(_classThis, "MailjetProvider");
    (function () {
        var _metadata = typeof Symbol === "function" && Symbol.metadata ? Object.create(null) : void 0;
        __esDecorate(null, _classDescriptor = { value: _classThis }, _classDecorators, { kind: "class", name: _classThis.name, metadata: _metadata }, null, _classExtraInitializers);
        MailjetProvider = _classThis = _classDescriptor.value;
        if (_metadata) Object.defineProperty(_classThis, Symbol.metadata, { enumerable: true, configurable: true, writable: true, value: _metadata });
        __runInitializers(_classThis, _classExtraInitializers);
    })();
    return MailjetProvider = _classThis;
}();
exports.MailjetProvider = MailjetProvider;


// C:\grua-booking-system-25\server\dist\libraries\email\internal\providers\nodemailer\nodemailer.provider.js
"use strict";
var __esDecorate = (this && this.__esDecorate) || function (ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {
    function accept(f) { if (f !== void 0 && typeof f !== "function") throw new TypeError("Function expected"); return f; }
    var kind = contextIn.kind, key = kind === "getter" ? "get" : kind === "setter" ? "set" : "value";
    var target = !descriptorIn && ctor ? contextIn["static"] ? ctor : ctor.prototype : null;
    var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});
    var _, done = false;
    for (var i = decorators.length - 1; i >= 0; i--) {
        var context = {};
        for (var p in contextIn) context[p] = p === "access" ? {} : contextIn[p];
        for (var p in contextIn.access) context.access[p] = contextIn.access[p];
        context.addInitializer = function (f) { if (done) throw new TypeError("Cannot add initializers after decoration has completed"); extraInitializers.push(accept(f || null)); };
        var result = (0, decorators[i])(kind === "accessor" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);
        if (kind === "accessor") {
            if (result === void 0) continue;
            if (result === null || typeof result !== "object") throw new TypeError("Object expected");
            if (_ = accept(result.get)) descriptor.get = _;
            if (_ = accept(result.set)) descriptor.set = _;
            if (_ = accept(result.init)) initializers.unshift(_);
        }
        else if (_ = accept(result)) {
            if (kind === "field") initializers.unshift(_);
            else descriptor[key] = _;
        }
    }
    if (target) Object.defineProperty(target, contextIn.name, descriptor);
    done = true;
};
var __runInitializers = (this && this.__runInitializers) || function (thisArg, initializers, value) {
    var useValue = arguments.length > 2;
    for (var i = 0; i < initializers.length; i++) {
        value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);
    }
    return useValue ? value : void 0;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (g && (g = 0, op[0] && (_ = 0)), _) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __setFunctionName = (this && this.__setFunctionName) || function (f, name, prefix) {
    if (typeof name === "symbol") name = name.description ? "[".concat(name.description, "]") : "";
    return Object.defineProperty(f, "name", { configurable: true, value: prefix ? "".concat(prefix, " ", name) : name });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.NodemailerProvider = void 0;
var common_1 = require("@nestjs/common");
var NodemailerSDK = require("nodemailer");
var email_type_1 = require("../../email.type");
var NodemailerProvider = function () {
    var _classDecorators = [(0, common_1.Injectable)()];
    var _classDescriptor;
    var _classExtraInitializers = [];
    var _classThis;
    var NodemailerProvider = _classThis = /** @class */ (function () {
        function NodemailerProvider_1(loggerService, configurationService, templateService) {
            this.loggerService = loggerService;
            this.configurationService = configurationService;
            this.templateService = templateService;
            this.logger = this.loggerService.create({ name: 'NodemailerProvider' });
            this.initialise();
        }
        NodemailerProvider_1.prototype.initialise = function () {
            var _a;
            try {
                var host = (_a = this.configurationService.get('SERVER_EMAIL_MAILPIT_HOST')) !== null && _a !== void 0 ? _a : 'localhost';
                var port = this.configurationService.getNumber('SERVER_EMAIL_MAILPIT_PORT', 1022);
                this.client = NodemailerSDK.createTransport({
                    host: host,
                    port: port,
                });
                this.logger.success("Nodemailer is active (".concat(host, ":").concat(port, ")"));
            }
            catch (error) {
                this.logger.error("Nodemailer failed to start: ".concat(error.message));
            }
        };
        NodemailerProvider_1.prototype.send = function (options) {
            return __awaiter(this, void 0, void 0, function () {
                var from, content, _i, _a, to;
                var _this = this;
                return __generator(this, function (_b) {
                    switch (_b.label) {
                        case 0:
                            from = email_type_1.EmailSender.default;
                            content = this.templateService.get(options);
                            _i = 0, _a = options.to;
                            _b.label = 1;
                        case 1:
                            if (!(_i < _a.length)) return [3 /*break*/, 4];
                            to = _a[_i];
                            return [4 /*yield*/, this.client
                                    .sendMail({
                                    from: "".concat(from.name, " <").concat(from.email, ">"),
                                    to: to.email,
                                    subject: options.subject,
                                    html: content,
                                })
                                    .then(function (result) {
                                    _this.logger.log("Emails sent");
                                })
                                    .catch(function (error) {
                                    _this.logger.error("Could not send emails (".concat(error.statusCode, ")"));
                                    _this.logger.error(error);
                                })];
                        case 2:
                            _b.sent();
                            _b.label = 3;
                        case 3:
                            _i++;
                            return [3 /*break*/, 1];
                        case 4: return [2 /*return*/];
                    }
                });
            });
        };
        return NodemailerProvider_1;
    }());
    __setFunctionName(_classThis, "NodemailerProvider");
    (function () {
        var _metadata = typeof Symbol === "function" && Symbol.metadata ? Object.create(null) : void 0;
        __esDecorate(null, _classDescriptor = { value: _classThis }, _classDecorators, { kind: "class", name: _classThis.name, metadata: _metadata }, null, _classExtraInitializers);
        NodemailerProvider = _classThis = _classDescriptor.value;
        if (_metadata) Object.defineProperty(_classThis, Symbol.metadata, { enumerable: true, configurable: true, writable: true, value: _metadata });
        __runInitializers(_classThis, _classExtraInitializers);
    })();
    return NodemailerProvider = _classThis;
}();
exports.NodemailerProvider = NodemailerProvider;


// C:\grua-booking-system-25\server\dist\libraries\email\internal\templates\components.js
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Components = void 0;
exports.Components = {
    '<Card>': "\n      <div class=\"card\">\n    ".trim(),
    '</Card>': '</div>',
    '<Card.Header>': "\n      <table \n        class=\"card-header\"\n        cellpadding=\"0\" \n        cellspacing=\"0\" \n        style=\"border-collapse:separate;border-spacing:0;table-layout:fixed;width:100%;text-align:center\"\n      >\n        <tbody>\n    ".trim(),
    '</Card.Header>': '</tbody></table>',
    '<Card.Body>': "\n      <table \n        class=\"card-body\"\n        cellpadding=\"0\" \n        cellspacing=\"0\" \n        style=\"border-collapse:separate;border-spacing:0;table-layout:fixed;width:100%\"\n      >\n        <tbody>\n    ".trim(),
    '</Card.Body>': '</tbody></table>',
    '<Card.Footer>': "\n      <table \n        class=\"card-footer\"\n        cellpadding=\"0\" \n        cellspacing=\"0\" \n        style=\"border-collapse:separate;border-spacing:0;table-layout:fixed;width:100%;text-align:center\"\n      >\n        <tbody>\n    ".trim(),
    '</Card.Footer>': '</tbody></table>',
    '<p>': '<tr><td><p>',
    '</p>': '</p></td></tr>',
    '<h2>': '<tr><td><h2>',
    '</h2>': '</h2></td></tr>',
    '<hr />': '<tr><td><hr /></td></tr>',
};


// C:\grua-booking-system-25\server\dist\libraries\email\internal\templates\email.template.service.js
"use strict";
var __esDecorate = (this && this.__esDecorate) || function (ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {
    function accept(f) { if (f !== void 0 && typeof f !== "function") throw new TypeError("Function expected"); return f; }
    var kind = contextIn.kind, key = kind === "getter" ? "get" : kind === "setter" ? "set" : "value";
    var target = !descriptorIn && ctor ? contextIn["static"] ? ctor : ctor.prototype : null;
    var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});
    var _, done = false;
    for (var i = decorators.length - 1; i >= 0; i--) {
        var context = {};
        for (var p in contextIn) context[p] = p === "access" ? {} : contextIn[p];
        for (var p in contextIn.access) context.access[p] = contextIn.access[p];
        context.addInitializer = function (f) { if (done) throw new TypeError("Cannot add initializers after decoration has completed"); extraInitializers.push(accept(f || null)); };
        var result = (0, decorators[i])(kind === "accessor" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);
        if (kind === "accessor") {
            if (result === void 0) continue;
            if (result === null || typeof result !== "object") throw new TypeError("Object expected");
            if (_ = accept(result.get)) descriptor.get = _;
            if (_ = accept(result.set)) descriptor.set = _;
            if (_ = accept(result.init)) initializers.unshift(_);
        }
        else if (_ = accept(result)) {
            if (kind === "field") initializers.unshift(_);
            else descriptor[key] = _;
        }
    }
    if (target) Object.defineProperty(target, contextIn.name, descriptor);
    done = true;
};
var __runInitializers = (this && this.__runInitializers) || function (thisArg, initializers, value) {
    var useValue = arguments.length > 2;
    for (var i = 0; i < initializers.length; i++) {
        value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);
    }
    return useValue ? value : void 0;
};
var __setFunctionName = (this && this.__setFunctionName) || function (f, name, prefix) {
    if (typeof name === "symbol") name = name.description ? "[".concat(name.description, "]") : "";
    return Object.defineProperty(f, "name", { configurable: true, value: prefix ? "".concat(prefix, " ", name) : name });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.EmailTemplateService = void 0;
var common_1 = require("@nestjs/common");
var file_1 = require("@server/helpers/file");
var email_type_1 = require("../email.type");
var components_1 = require("./components");
var EmailTemplateService = function () {
    var _classDecorators = [(0, common_1.Injectable)()];
    var _classDescriptor;
    var _classExtraInitializers = [];
    var _classThis;
    var EmailTemplateService = _classThis = /** @class */ (function () {
        function EmailTemplateService_1() {
            var _a;
            this.pathTemplates = "".concat(file_1.FileHelper.getRoot(), "/src/libraries/email/internal/templates");
            this.mapping = (_a = {},
                _a[email_type_1.EmailType.AUTHORIZATION_VERIFICATION_CODE] = 'authorization-verification-code',
                _a[email_type_1.EmailType.AUTHENTICATION_WELCOME] = 'authentication-welcome',
                _a[email_type_1.EmailType.AUTHENTICATION_FORGOT_PASSWORD] = 'authentication-forgot-password',
                _a[email_type_1.EmailType.DEFAULT] = 'default',
                _a);
        }
        EmailTemplateService_1.prototype.get = function (options) {
            var _a;
            var values = (_a = options.variables) !== null && _a !== void 0 ? _a : { content: options.content };
            var pathBase = this.getPathBase();
            var pathCSS = this.getPathCSS();
            var pathTemplate = this.getPathTemplate(options.type);
            var contentBase = file_1.FileHelper.findFileContent(pathBase);
            var contentCSS = file_1.FileHelper.findFileContent(pathCSS);
            var contentTemplate = file_1.FileHelper.findFileContent(pathTemplate);
            var content = this.buildContent(contentTemplate, values);
            content = this.buildContent(contentBase, { style: contentCSS, content: content });
            content = this.buildComponents(content);
            return content;
        };
        EmailTemplateService_1.prototype.getPathTemplate = function (type) {
            var _a;
            var name = (_a = this.mapping[type]) !== null && _a !== void 0 ? _a : this.mapping[email_type_1.EmailType.DEFAULT];
            var path = "".concat(this.pathTemplates, "/").concat(name, ".template.html");
            return path;
        };
        EmailTemplateService_1.prototype.getPathBase = function () {
            var path = "".concat(this.pathTemplates, "/base.html");
            return path;
        };
        EmailTemplateService_1.prototype.getPathCSS = function () {
            var path = "".concat(this.pathTemplates, "/style.css");
            return path;
        };
        EmailTemplateService_1.prototype.buildContent = function (content, values) {
            var contentBuilt = content;
            for (var _i = 0, _a = Object.entries(values); _i < _a.length; _i++) {
                var _b = _a[_i], key = _b[0], value = _b[1];
                var token = new RegExp("{{ ".concat(key, " }}"), 'g');
                contentBuilt = contentBuilt.replace(token, value);
            }
            return contentBuilt;
        };
        EmailTemplateService_1.prototype.buildComponents = function (content) {
            var contentUpdated = content;
            for (var _i = 0, _a = Object.entries(components_1.Components); _i < _a.length; _i++) {
                var _b = _a[_i], key = _b[0], value = _b[1];
                var tag = new RegExp("".concat(key), 'g');
                contentUpdated = contentUpdated.replace(tag, value);
            }
            return contentUpdated;
        };
        return EmailTemplateService_1;
    }());
    __setFunctionName(_classThis, "EmailTemplateService");
    (function () {
        var _metadata = typeof Symbol === "function" && Symbol.metadata ? Object.create(null) : void 0;
        __esDecorate(null, _classDescriptor = { value: _classThis }, _classDecorators, { kind: "class", name: _classThis.name, metadata: _metadata }, null, _classExtraInitializers);
        EmailTemplateService = _classThis = _classDescriptor.value;
        if (_metadata) Object.defineProperty(_classThis, Symbol.metadata, { enumerable: true, configurable: true, writable: true, value: _metadata });
        __runInitializers(_classThis, _classExtraInitializers);
    })();
    return EmailTemplateService = _classThis;
}();
exports.EmailTemplateService = EmailTemplateService;


// C:\grua-booking-system-25\server\dist\libraries\event\event.module.js
"use strict";
var __esDecorate = (this && this.__esDecorate) || function (ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {
    function accept(f) { if (f !== void 0 && typeof f !== "function") throw new TypeError("Function expected"); return f; }
    var kind = contextIn.kind, key = kind === "getter" ? "get" : kind === "setter" ? "set" : "value";
    var target = !descriptorIn && ctor ? contextIn["static"] ? ctor : ctor.prototype : null;
    var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});
    var _, done = false;
    for (var i = decorators.length - 1; i >= 0; i--) {
        var context = {};
        for (var p in contextIn) context[p] = p === "access" ? {} : contextIn[p];
        for (var p in contextIn.access) context.access[p] = contextIn.access[p];
        context.addInitializer = function (f) { if (done) throw new TypeError("Cannot add initializers after decoration has completed"); extraInitializers.push(accept(f || null)); };
        var result = (0, decorators[i])(kind === "accessor" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);
        if (kind === "accessor") {
            if (result === void 0) continue;
            if (result === null || typeof result !== "object") throw new TypeError("Object expected");
            if (_ = accept(result.get)) descriptor.get = _;
            if (_ = accept(result.set)) descriptor.set = _;
            if (_ = accept(result.init)) initializers.unshift(_);
        }
        else if (_ = accept(result)) {
            if (kind === "field") initializers.unshift(_);
            else descriptor[key] = _;
        }
    }
    if (target) Object.defineProperty(target, contextIn.name, descriptor);
    done = true;
};
var __runInitializers = (this && this.__runInitializers) || function (thisArg, initializers, value) {
    var useValue = arguments.length > 2;
    for (var i = 0; i < initializers.length; i++) {
        value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);
    }
    return useValue ? value : void 0;
};
var __setFunctionName = (this && this.__setFunctionName) || function (f, name, prefix) {
    if (typeof name === "symbol") name = name.description ? "[".concat(name.description, "]") : "";
    return Object.defineProperty(f, "name", { configurable: true, value: prefix ? "".concat(prefix, " ", name) : name });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.EventModule = void 0;
var common_1 = require("@nestjs/common");
var event_emitter_1 = require("@nestjs/event-emitter");
var event_service_1 = require("./event.service");
var EventModule = function () {
    var _classDecorators = [(0, common_1.Global)(), (0, common_1.Module)({
            imports: [event_emitter_1.EventEmitterModule.forRoot()],
            providers: [event_service_1.EventService],
            exports: [event_service_1.EventService],
        })];
    var _classDescriptor;
    var _classExtraInitializers = [];
    var _classThis;
    var EventModule = _classThis = /** @class */ (function () {
        function EventModule_1() {
        }
        return EventModule_1;
    }());
    __setFunctionName(_classThis, "EventModule");
    (function () {
        var _metadata = typeof Symbol === "function" && Symbol.metadata ? Object.create(null) : void 0;
        __esDecorate(null, _classDescriptor = { value: _classThis }, _classDecorators, { kind: "class", name: _classThis.name, metadata: _metadata }, null, _classExtraInitializers);
        EventModule = _classThis = _classDescriptor.value;
        if (_metadata) Object.defineProperty(_classThis, Symbol.metadata, { enumerable: true, configurable: true, writable: true, value: _metadata });
        __runInitializers(_classThis, _classExtraInitializers);
    })();
    return EventModule = _classThis;
}();
exports.EventModule = EventModule;


// C:\grua-booking-system-25\server\dist\libraries\event\event.service.js
"use strict";
var __esDecorate = (this && this.__esDecorate) || function (ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {
    function accept(f) { if (f !== void 0 && typeof f !== "function") throw new TypeError("Function expected"); return f; }
    var kind = contextIn.kind, key = kind === "getter" ? "get" : kind === "setter" ? "set" : "value";
    var target = !descriptorIn && ctor ? contextIn["static"] ? ctor : ctor.prototype : null;
    var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});
    var _, done = false;
    for (var i = decorators.length - 1; i >= 0; i--) {
        var context = {};
        for (var p in contextIn) context[p] = p === "access" ? {} : contextIn[p];
        for (var p in contextIn.access) context.access[p] = contextIn.access[p];
        context.addInitializer = function (f) { if (done) throw new TypeError("Cannot add initializers after decoration has completed"); extraInitializers.push(accept(f || null)); };
        var result = (0, decorators[i])(kind === "accessor" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);
        if (kind === "accessor") {
            if (result === void 0) continue;
            if (result === null || typeof result !== "object") throw new TypeError("Object expected");
            if (_ = accept(result.get)) descriptor.get = _;
            if (_ = accept(result.set)) descriptor.set = _;
            if (_ = accept(result.init)) initializers.unshift(_);
        }
        else if (_ = accept(result)) {
            if (kind === "field") initializers.unshift(_);
            else descriptor[key] = _;
        }
    }
    if (target) Object.defineProperty(target, contextIn.name, descriptor);
    done = true;
};
var __runInitializers = (this && this.__runInitializers) || function (thisArg, initializers, value) {
    var useValue = arguments.length > 2;
    for (var i = 0; i < initializers.length; i++) {
        value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);
    }
    return useValue ? value : void 0;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (g && (g = 0, op[0] && (_ = 0)), _) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __setFunctionName = (this && this.__setFunctionName) || function (f, name, prefix) {
    if (typeof name === "symbol") name = name.description ? "[".concat(name.description, "]") : "";
    return Object.defineProperty(f, "name", { configurable: true, value: prefix ? "".concat(prefix, " ", name) : name });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.EventService = void 0;
var common_1 = require("@nestjs/common");
var EventService = function () {
    var _classDecorators = [(0, common_1.Injectable)()];
    var _classDescriptor;
    var _classExtraInitializers = [];
    var _classThis;
    var EventService = _classThis = /** @class */ (function () {
        function EventService_1(eventEmitter) {
            this.eventEmitter = eventEmitter;
        }
        EventService_1.prototype.emit = function (key, payload) {
            return __awaiter(this, void 0, void 0, function () {
                return __generator(this, function (_a) {
                    this.eventEmitter.emit(key, payload);
                    return [2 /*return*/];
                });
            });
        };
        return EventService_1;
    }());
    __setFunctionName(_classThis, "EventService");
    (function () {
        var _metadata = typeof Symbol === "function" && Symbol.metadata ? Object.create(null) : void 0;
        __esDecorate(null, _classDescriptor = { value: _classThis }, _classDecorators, { kind: "class", name: _classThis.name, metadata: _metadata }, null, _classExtraInitializers);
        EventService = _classThis = _classDescriptor.value;
        if (_metadata) Object.defineProperty(_classThis, Symbol.metadata, { enumerable: true, configurable: true, writable: true, value: _metadata });
        __runInitializers(_classThis, _classExtraInitializers);
    })();
    return EventService = _classThis;
}();
exports.EventService = EventService;


// C:\grua-booking-system-25\server\dist\libraries\event\event.type.js
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });


// C:\grua-booking-system-25\server\dist\libraries\event\index.js
"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", { value: true });
__exportStar(require("./event.module"), exports);
__exportStar(require("./event.service"), exports);
__exportStar(require("./event.type"), exports);


// C:\grua-booking-system-25\server\dist\libraries\google\google.module.js
"use strict";
var __esDecorate = (this && this.__esDecorate) || function (ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {
    function accept(f) { if (f !== void 0 && typeof f !== "function") throw new TypeError("Function expected"); return f; }
    var kind = contextIn.kind, key = kind === "getter" ? "get" : kind === "setter" ? "set" : "value";
    var target = !descriptorIn && ctor ? contextIn["static"] ? ctor : ctor.prototype : null;
    var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});
    var _, done = false;
    for (var i = decorators.length - 1; i >= 0; i--) {
        var context = {};
        for (var p in contextIn) context[p] = p === "access" ? {} : contextIn[p];
        for (var p in contextIn.access) context.access[p] = contextIn.access[p];
        context.addInitializer = function (f) { if (done) throw new TypeError("Cannot add initializers after decoration has completed"); extraInitializers.push(accept(f || null)); };
        var result = (0, decorators[i])(kind === "accessor" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);
        if (kind === "accessor") {
            if (result === void 0) continue;
            if (result === null || typeof result !== "object") throw new TypeError("Object expected");
            if (_ = accept(result.get)) descriptor.get = _;
            if (_ = accept(result.set)) descriptor.set = _;
            if (_ = accept(result.init)) initializers.unshift(_);
        }
        else if (_ = accept(result)) {
            if (kind === "field") initializers.unshift(_);
            else descriptor[key] = _;
        }
    }
    if (target) Object.defineProperty(target, contextIn.name, descriptor);
    done = true;
};
var __runInitializers = (this && this.__runInitializers) || function (thisArg, initializers, value) {
    var useValue = arguments.length > 2;
    for (var i = 0; i < initializers.length; i++) {
        value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);
    }
    return useValue ? value : void 0;
};
var __setFunctionName = (this && this.__setFunctionName) || function (f, name, prefix) {
    if (typeof name === "symbol") name = name.description ? "[".concat(name.description, "]") : "";
    return Object.defineProperty(f, "name", { configurable: true, value: prefix ? "".concat(prefix, " ", name) : name });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.GoogleModule = void 0;
var common_1 = require("@nestjs/common");
var google_service_1 = require("./google.service");
var GoogleModule = function () {
    var _classDecorators = [(0, common_1.Module)({
            providers: [google_service_1.GoogleService],
            exports: [google_service_1.GoogleService],
        })];
    var _classDescriptor;
    var _classExtraInitializers = [];
    var _classThis;
    var GoogleModule = _classThis = /** @class */ (function () {
        function GoogleModule_1() {
        }
        return GoogleModule_1;
    }());
    __setFunctionName(_classThis, "GoogleModule");
    (function () {
        var _metadata = typeof Symbol === "function" && Symbol.metadata ? Object.create(null) : void 0;
        __esDecorate(null, _classDescriptor = { value: _classThis }, _classDecorators, { kind: "class", name: _classThis.name, metadata: _metadata }, null, _classExtraInitializers);
        GoogleModule = _classThis = _classDescriptor.value;
        if (_metadata) Object.defineProperty(_classThis, Symbol.metadata, { enumerable: true, configurable: true, writable: true, value: _metadata });
        __runInitializers(_classThis, _classExtraInitializers);
    })();
    return GoogleModule = _classThis;
}();
exports.GoogleModule = GoogleModule;


// C:\grua-booking-system-25\server\dist\libraries\google\google.service.js
"use strict";
var __esDecorate = (this && this.__esDecorate) || function (ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {
    function accept(f) { if (f !== void 0 && typeof f !== "function") throw new TypeError("Function expected"); return f; }
    var kind = contextIn.kind, key = kind === "getter" ? "get" : kind === "setter" ? "set" : "value";
    var target = !descriptorIn && ctor ? contextIn["static"] ? ctor : ctor.prototype : null;
    var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});
    var _, done = false;
    for (var i = decorators.length - 1; i >= 0; i--) {
        var context = {};
        for (var p in contextIn) context[p] = p === "access" ? {} : contextIn[p];
        for (var p in contextIn.access) context.access[p] = contextIn.access[p];
        context.addInitializer = function (f) { if (done) throw new TypeError("Cannot add initializers after decoration has completed"); extraInitializers.push(accept(f || null)); };
        var result = (0, decorators[i])(kind === "accessor" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);
        if (kind === "accessor") {
            if (result === void 0) continue;
            if (result === null || typeof result !== "object") throw new TypeError("Object expected");
            if (_ = accept(result.get)) descriptor.get = _;
            if (_ = accept(result.set)) descriptor.set = _;
            if (_ = accept(result.init)) initializers.unshift(_);
        }
        else if (_ = accept(result)) {
            if (kind === "field") initializers.unshift(_);
            else descriptor[key] = _;
        }
    }
    if (target) Object.defineProperty(target, contextIn.name, descriptor);
    done = true;
};
var __runInitializers = (this && this.__runInitializers) || function (thisArg, initializers, value) {
    var useValue = arguments.length > 2;
    for (var i = 0; i < initializers.length; i++) {
        value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);
    }
    return useValue ? value : void 0;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (g && (g = 0, op[0] && (_ = 0)), _) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __setFunctionName = (this && this.__setFunctionName) || function (f, name, prefix) {
    if (typeof name === "symbol") name = name.description ? "[".concat(name.description, "]") : "";
    return Object.defineProperty(f, "name", { configurable: true, value: prefix ? "".concat(prefix, " ", name) : name });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.GoogleService = void 0;
var common_1 = require("@nestjs/common");
var google_auth_library_1 = require("google-auth-library");
var GoogleService = function () {
    var _classDecorators = [(0, common_1.Injectable)()];
    var _classDescriptor;
    var _classExtraInitializers = [];
    var _classThis;
    var GoogleService = _classThis = /** @class */ (function () {
        function GoogleService_1(configurationService, loggerService) {
            this.configurationService = configurationService;
            this.loggerService = loggerService;
            this.logger = this.loggerService.create({ name: 'GoogleService' });
            try {
                this.clientId = this.configurationService.get('SERVER_GOOGLE_CLIENT_ID');
                if (!this.clientId) {
                    this.logger.warning("Set GOOGLE_CLIENT_ID in your .env to activate Google Auth");
                    return;
                }
                this.client = new google_auth_library_1.OAuth2Client(this.clientId);
                this.logger.success("Google Oauth active");
            }
            catch (error) {
                this.logger.error("Could not start Google Oauth");
                this.logger.error(error);
            }
        }
        GoogleService_1.prototype.verifyToken = function (token) {
            return __awaiter(this, void 0, void 0, function () {
                var ticket, _a, name, email;
                return __generator(this, function (_b) {
                    switch (_b.label) {
                        case 0: return [4 /*yield*/, this.client.verifyIdToken({
                                idToken: token,
                                audience: this.clientId,
                            })];
                        case 1:
                            ticket = _b.sent();
                            _a = ticket.getPayload(), name = _a.name, email = _a.email;
                            return [2 /*return*/, {
                                    name: name,
                                    email: email,
                                }];
                    }
                });
            });
        };
        return GoogleService_1;
    }());
    __setFunctionName(_classThis, "GoogleService");
    (function () {
        var _metadata = typeof Symbol === "function" && Symbol.metadata ? Object.create(null) : void 0;
        __esDecorate(null, _classDescriptor = { value: _classThis }, _classDecorators, { kind: "class", name: _classThis.name, metadata: _metadata }, null, _classExtraInitializers);
        GoogleService = _classThis = _classDescriptor.value;
        if (_metadata) Object.defineProperty(_classThis, Symbol.metadata, { enumerable: true, configurable: true, writable: true, value: _metadata });
        __runInitializers(_classThis, _classExtraInitializers);
    })();
    return GoogleService = _classThis;
}();
exports.GoogleService = GoogleService;


// C:\grua-booking-system-25\server\dist\libraries\google\index.js
"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", { value: true });
__exportStar(require("./google.module"), exports);
__exportStar(require("./google.service"), exports);


// C:\grua-booking-system-25\server\dist\libraries\http\http.module.js
"use strict";
var __esDecorate = (this && this.__esDecorate) || function (ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {
    function accept(f) { if (f !== void 0 && typeof f !== "function") throw new TypeError("Function expected"); return f; }
    var kind = contextIn.kind, key = kind === "getter" ? "get" : kind === "setter" ? "set" : "value";
    var target = !descriptorIn && ctor ? contextIn["static"] ? ctor : ctor.prototype : null;
    var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});
    var _, done = false;
    for (var i = decorators.length - 1; i >= 0; i--) {
        var context = {};
        for (var p in contextIn) context[p] = p === "access" ? {} : contextIn[p];
        for (var p in contextIn.access) context.access[p] = contextIn.access[p];
        context.addInitializer = function (f) { if (done) throw new TypeError("Cannot add initializers after decoration has completed"); extraInitializers.push(accept(f || null)); };
        var result = (0, decorators[i])(kind === "accessor" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);
        if (kind === "accessor") {
            if (result === void 0) continue;
            if (result === null || typeof result !== "object") throw new TypeError("Object expected");
            if (_ = accept(result.get)) descriptor.get = _;
            if (_ = accept(result.set)) descriptor.set = _;
            if (_ = accept(result.init)) initializers.unshift(_);
        }
        else if (_ = accept(result)) {
            if (kind === "field") initializers.unshift(_);
            else descriptor[key] = _;
        }
    }
    if (target) Object.defineProperty(target, contextIn.name, descriptor);
    done = true;
};
var __runInitializers = (this && this.__runInitializers) || function (thisArg, initializers, value) {
    var useValue = arguments.length > 2;
    for (var i = 0; i < initializers.length; i++) {
        value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);
    }
    return useValue ? value : void 0;
};
var __setFunctionName = (this && this.__setFunctionName) || function (f, name, prefix) {
    if (typeof name === "symbol") name = name.description ? "[".concat(name.description, "]") : "";
    return Object.defineProperty(f, "name", { configurable: true, value: prefix ? "".concat(prefix, " ", name) : name });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.HttpModule = void 0;
var axios_1 = require("@nestjs/axios");
var common_1 = require("@nestjs/common");
var http_service_1 = require("./http.service");
var HttpModule = function () {
    var _classDecorators = [(0, common_1.Module)({
            imports: [axios_1.HttpModule],
            providers: [http_service_1.HttpService],
            exports: [http_service_1.HttpService],
        })];
    var _classDescriptor;
    var _classExtraInitializers = [];
    var _classThis;
    var HttpModule = _classThis = /** @class */ (function () {
        function HttpModule_1() {
        }
        return HttpModule_1;
    }());
    __setFunctionName(_classThis, "HttpModule");
    (function () {
        var _metadata = typeof Symbol === "function" && Symbol.metadata ? Object.create(null) : void 0;
        __esDecorate(null, _classDescriptor = { value: _classThis }, _classDecorators, { kind: "class", name: _classThis.name, metadata: _metadata }, null, _classExtraInitializers);
        HttpModule = _classThis = _classDescriptor.value;
        if (_metadata) Object.defineProperty(_classThis, Symbol.metadata, { enumerable: true, configurable: true, writable: true, value: _metadata });
        __runInitializers(_classThis, _classExtraInitializers);
    })();
    return HttpModule = _classThis;
}();
exports.HttpModule = HttpModule;


// C:\grua-booking-system-25\server\dist\libraries\http\http.service.js
"use strict";
var __esDecorate = (this && this.__esDecorate) || function (ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {
    function accept(f) { if (f !== void 0 && typeof f !== "function") throw new TypeError("Function expected"); return f; }
    var kind = contextIn.kind, key = kind === "getter" ? "get" : kind === "setter" ? "set" : "value";
    var target = !descriptorIn && ctor ? contextIn["static"] ? ctor : ctor.prototype : null;
    var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});
    var _, done = false;
    for (var i = decorators.length - 1; i >= 0; i--) {
        var context = {};
        for (var p in contextIn) context[p] = p === "access" ? {} : contextIn[p];
        for (var p in contextIn.access) context.access[p] = contextIn.access[p];
        context.addInitializer = function (f) { if (done) throw new TypeError("Cannot add initializers after decoration has completed"); extraInitializers.push(accept(f || null)); };
        var result = (0, decorators[i])(kind === "accessor" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);
        if (kind === "accessor") {
            if (result === void 0) continue;
            if (result === null || typeof result !== "object") throw new TypeError("Object expected");
            if (_ = accept(result.get)) descriptor.get = _;
            if (_ = accept(result.set)) descriptor.set = _;
            if (_ = accept(result.init)) initializers.unshift(_);
        }
        else if (_ = accept(result)) {
            if (kind === "field") initializers.unshift(_);
            else descriptor[key] = _;
        }
    }
    if (target) Object.defineProperty(target, contextIn.name, descriptor);
    done = true;
};
var __runInitializers = (this && this.__runInitializers) || function (thisArg, initializers, value) {
    var useValue = arguments.length > 2;
    for (var i = 0; i < initializers.length; i++) {
        value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);
    }
    return useValue ? value : void 0;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (g && (g = 0, op[0] && (_ = 0)), _) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __setFunctionName = (this && this.__setFunctionName) || function (f, name, prefix) {
    if (typeof name === "symbol") name = name.description ? "[".concat(name.description, "]") : "";
    return Object.defineProperty(f, "name", { configurable: true, value: prefix ? "".concat(prefix, " ", name) : name });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.HttpService = void 0;
var common_1 = require("@nestjs/common");
var rxjs_1 = require("rxjs");
var HttpService = function () {
    var _classDecorators = [(0, common_1.Injectable)()];
    var _classDescriptor;
    var _classExtraInitializers = [];
    var _classThis;
    var HttpService = _classThis = /** @class */ (function () {
        function HttpService_1(httpService) {
            this.httpService = httpService;
            this.options = {
                headers: {
                    'Content-Type': 'application/json',
                    Accept: 'application/json',
                },
            };
        }
        HttpService_1.prototype.post = function (url, body) {
            return __awaiter(this, void 0, void 0, function () {
                var response;
                return __generator(this, function (_a) {
                    switch (_a.label) {
                        case 0: return [4 /*yield*/, (0, rxjs_1.firstValueFrom)(this.httpService.post(url, body, this.options).pipe((0, rxjs_1.catchError)(function (error) {
                                throw error;
                            })))];
                        case 1:
                            response = _a.sent();
                            return [2 /*return*/, response.data];
                    }
                });
            });
        };
        HttpService_1.prototype.download = function (url) {
            return __awaiter(this, void 0, void 0, function () {
                var response;
                return __generator(this, function (_a) {
                    switch (_a.label) {
                        case 0: return [4 /*yield*/, (0, rxjs_1.firstValueFrom)(this.httpService
                                .get(url, { responseType: 'arraybuffer' })
                                .pipe((0, rxjs_1.catchError)(function (error) {
                                throw error;
                            })))];
                        case 1:
                            response = _a.sent();
                            return [2 /*return*/, response.data];
                    }
                });
            });
        };
        return HttpService_1;
    }());
    __setFunctionName(_classThis, "HttpService");
    (function () {
        var _metadata = typeof Symbol === "function" && Symbol.metadata ? Object.create(null) : void 0;
        __esDecorate(null, _classDescriptor = { value: _classThis }, _classDecorators, { kind: "class", name: _classThis.name, metadata: _metadata }, null, _classExtraInitializers);
        HttpService = _classThis = _classDescriptor.value;
        if (_metadata) Object.defineProperty(_classThis, Symbol.metadata, { enumerable: true, configurable: true, writable: true, value: _metadata });
        __runInitializers(_classThis, _classExtraInitializers);
    })();
    return HttpService = _classThis;
}();
exports.HttpService = HttpService;


// C:\grua-booking-system-25\server\dist\libraries\http\index.js
"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", { value: true });
__exportStar(require("./http.module"), exports);
__exportStar(require("./http.service"), exports);


// C:\grua-booking-system-25\server\dist\libraries\logger\internal\datadog.service.js
"use strict";
var __esDecorate = (this && this.__esDecorate) || function (ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {
    function accept(f) { if (f !== void 0 && typeof f !== "function") throw new TypeError("Function expected"); return f; }
    var kind = contextIn.kind, key = kind === "getter" ? "get" : kind === "setter" ? "set" : "value";
    var target = !descriptorIn && ctor ? contextIn["static"] ? ctor : ctor.prototype : null;
    var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});
    var _, done = false;
    for (var i = decorators.length - 1; i >= 0; i--) {
        var context = {};
        for (var p in contextIn) context[p] = p === "access" ? {} : contextIn[p];
        for (var p in contextIn.access) context.access[p] = contextIn.access[p];
        context.addInitializer = function (f) { if (done) throw new TypeError("Cannot add initializers after decoration has completed"); extraInitializers.push(accept(f || null)); };
        var result = (0, decorators[i])(kind === "accessor" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);
        if (kind === "accessor") {
            if (result === void 0) continue;
            if (result === null || typeof result !== "object") throw new TypeError("Object expected");
            if (_ = accept(result.get)) descriptor.get = _;
            if (_ = accept(result.set)) descriptor.set = _;
            if (_ = accept(result.init)) initializers.unshift(_);
        }
        else if (_ = accept(result)) {
            if (kind === "field") initializers.unshift(_);
            else descriptor[key] = _;
        }
    }
    if (target) Object.defineProperty(target, contextIn.name, descriptor);
    done = true;
};
var __runInitializers = (this && this.__runInitializers) || function (thisArg, initializers, value) {
    var useValue = arguments.length > 2;
    for (var i = 0; i < initializers.length; i++) {
        value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);
    }
    return useValue ? value : void 0;
};
var __setFunctionName = (this && this.__setFunctionName) || function (f, name, prefix) {
    if (typeof name === "symbol") name = name.description ? "[".concat(name.description, "]") : "";
    return Object.defineProperty(f, "name", { configurable: true, value: prefix ? "".concat(prefix, " ", name) : name });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.DatadogService = void 0;
var common_1 = require("@nestjs/common");
var dd_trace_1 = require("dd-trace");
var DatadogService = function () {
    var _classDecorators = [(0, common_1.Injectable)()];
    var _classDescriptor;
    var _classExtraInitializers = [];
    var _classThis;
    var DatadogService = _classThis = /** @class */ (function () {
        function DatadogService_1() {
            dd_trace_1.default.init({
                logInjection: true,
            });
        }
        return DatadogService_1;
    }());
    __setFunctionName(_classThis, "DatadogService");
    (function () {
        var _metadata = typeof Symbol === "function" && Symbol.metadata ? Object.create(null) : void 0;
        __esDecorate(null, _classDescriptor = { value: _classThis }, _classDecorators, { kind: "class", name: _classThis.name, metadata: _metadata }, null, _classExtraInitializers);
        DatadogService = _classThis = _classDescriptor.value;
        if (_metadata) Object.defineProperty(_classThis, Symbol.metadata, { enumerable: true, configurable: true, writable: true, value: _metadata });
        __runInitializers(_classThis, _classExtraInitializers);
    })();
    return DatadogService = _classThis;
}();
exports.DatadogService = DatadogService;


// C:\grua-booking-system-25\server\dist\libraries\logger\internal\winston.service.js
"use strict";
var __esDecorate = (this && this.__esDecorate) || function (ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {
    function accept(f) { if (f !== void 0 && typeof f !== "function") throw new TypeError("Function expected"); return f; }
    var kind = contextIn.kind, key = kind === "getter" ? "get" : kind === "setter" ? "set" : "value";
    var target = !descriptorIn && ctor ? contextIn["static"] ? ctor : ctor.prototype : null;
    var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});
    var _, done = false;
    for (var i = decorators.length - 1; i >= 0; i--) {
        var context = {};
        for (var p in contextIn) context[p] = p === "access" ? {} : contextIn[p];
        for (var p in contextIn.access) context.access[p] = contextIn.access[p];
        context.addInitializer = function (f) { if (done) throw new TypeError("Cannot add initializers after decoration has completed"); extraInitializers.push(accept(f || null)); };
        var result = (0, decorators[i])(kind === "accessor" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);
        if (kind === "accessor") {
            if (result === void 0) continue;
            if (result === null || typeof result !== "object") throw new TypeError("Object expected");
            if (_ = accept(result.get)) descriptor.get = _;
            if (_ = accept(result.set)) descriptor.set = _;
            if (_ = accept(result.init)) initializers.unshift(_);
        }
        else if (_ = accept(result)) {
            if (kind === "field") initializers.unshift(_);
            else descriptor[key] = _;
        }
    }
    if (target) Object.defineProperty(target, contextIn.name, descriptor);
    done = true;
};
var __runInitializers = (this && this.__runInitializers) || function (thisArg, initializers, value) {
    var useValue = arguments.length > 2;
    for (var i = 0; i < initializers.length; i++) {
        value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);
    }
    return useValue ? value : void 0;
};
var __setFunctionName = (this && this.__setFunctionName) || function (f, name, prefix) {
    if (typeof name === "symbol") name = name.description ? "[".concat(name.description, "]") : "";
    return Object.defineProperty(f, "name", { configurable: true, value: prefix ? "".concat(prefix, " ", name) : name });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.WinstonService = void 0;
var common_1 = require("@nestjs/common");
var winston_1 = require("winston");
var WinstonService = function () {
    var _classDecorators = [(0, common_1.Injectable)()];
    var _classDescriptor;
    var _classExtraInitializers = [];
    var _classThis;
    var WinstonService = _classThis = /** @class */ (function () {
        function WinstonService_1(configurationService) {
            this.configurationService = configurationService;
        }
        WinstonService_1.prototype.create = function () {
            var isDevelopment = this.configurationService.isEnvironmentDevelopment();
            if (isDevelopment) {
                return this.createForDevelopment();
            }
            return this.createForProduction();
        };
        WinstonService_1.prototype.createForDevelopment = function () {
            return (0, winston_1.createLogger)({
                format: winston_1.format.combine(winston_1.format.colorize(), winston_1.format.timestamp(), winston_1.format.printf(function (_a) {
                    var timestamp = _a.timestamp, level = _a.level, message = _a.message;
                    return "[".concat(timestamp, "] [").concat(level, "] ").concat(message);
                })),
                transports: [new winston_1.transports.Console()],
            });
        };
        WinstonService_1.prototype.createForProduction = function () {
            return (0, winston_1.createLogger)({
                format: winston_1.format.json(),
                transports: [new winston_1.transports.Console()],
            });
        };
        return WinstonService_1;
    }());
    __setFunctionName(_classThis, "WinstonService");
    (function () {
        var _metadata = typeof Symbol === "function" && Symbol.metadata ? Object.create(null) : void 0;
        __esDecorate(null, _classDescriptor = { value: _classThis }, _classDecorators, { kind: "class", name: _classThis.name, metadata: _metadata }, null, _classExtraInitializers);
        WinstonService = _classThis = _classDescriptor.value;
        if (_metadata) Object.defineProperty(_classThis, Symbol.metadata, { enumerable: true, configurable: true, writable: true, value: _metadata });
        __runInitializers(_classThis, _classExtraInitializers);
    })();
    return WinstonService = _classThis;
}();
exports.WinstonService = WinstonService;


// C:\grua-booking-system-25\server\dist\libraries\logger\index.js
"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", { value: true });
__exportStar(require("./logger"), exports);
__exportStar(require("./logger.module"), exports);
__exportStar(require("./logger.service"), exports);


// C:\grua-booking-system-25\server\dist\libraries\logger\logger.js
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Logger = void 0;
var Logger = /** @class */ (function () {
    function Logger(options) {
        this.instance = options.instance;
        this.name = options.name;
    }
    Logger.prototype.log = function (message, data) {
        this.instance.info(this.buildMessage(message), { data: data });
    };
    Logger.prototype.warning = function (message) {
        this.instance.warn(this.buildMessage("[warning] ".concat(message)));
    };
    Logger.prototype.success = function (message) {
        this.instance.info(this.buildMessage("[SUCCESS] ".concat(message)));
    };
    Logger.prototype.error = function (error) {
        var isString = typeof error === 'string';
        var message = isString ? error : error.message;
        this.instance.error(this.buildMessage(message));
    };
    Logger.prototype.buildMessage = function (message) {
        if (this.name) {
            return "".concat(message, " (").concat(this.name, ")");
        }
        return message;
    };
    return Logger;
}());
exports.Logger = Logger;


// C:\grua-booking-system-25\server\dist\libraries\logger\logger.module.js
"use strict";
var __esDecorate = (this && this.__esDecorate) || function (ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {
    function accept(f) { if (f !== void 0 && typeof f !== "function") throw new TypeError("Function expected"); return f; }
    var kind = contextIn.kind, key = kind === "getter" ? "get" : kind === "setter" ? "set" : "value";
    var target = !descriptorIn && ctor ? contextIn["static"] ? ctor : ctor.prototype : null;
    var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});
    var _, done = false;
    for (var i = decorators.length - 1; i >= 0; i--) {
        var context = {};
        for (var p in contextIn) context[p] = p === "access" ? {} : contextIn[p];
        for (var p in contextIn.access) context.access[p] = contextIn.access[p];
        context.addInitializer = function (f) { if (done) throw new TypeError("Cannot add initializers after decoration has completed"); extraInitializers.push(accept(f || null)); };
        var result = (0, decorators[i])(kind === "accessor" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);
        if (kind === "accessor") {
            if (result === void 0) continue;
            if (result === null || typeof result !== "object") throw new TypeError("Object expected");
            if (_ = accept(result.get)) descriptor.get = _;
            if (_ = accept(result.set)) descriptor.set = _;
            if (_ = accept(result.init)) initializers.unshift(_);
        }
        else if (_ = accept(result)) {
            if (kind === "field") initializers.unshift(_);
            else descriptor[key] = _;
        }
    }
    if (target) Object.defineProperty(target, contextIn.name, descriptor);
    done = true;
};
var __runInitializers = (this && this.__runInitializers) || function (thisArg, initializers, value) {
    var useValue = arguments.length > 2;
    for (var i = 0; i < initializers.length; i++) {
        value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);
    }
    return useValue ? value : void 0;
};
var __setFunctionName = (this && this.__setFunctionName) || function (f, name, prefix) {
    if (typeof name === "symbol") name = name.description ? "[".concat(name.description, "]") : "";
    return Object.defineProperty(f, "name", { configurable: true, value: prefix ? "".concat(prefix, " ", name) : name });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.LoggerModule = void 0;
var common_1 = require("@nestjs/common");
var datadog_service_1 = require("./internal/datadog.service");
var winston_service_1 = require("./internal/winston.service");
var logger_service_1 = require("./logger.service");
var LoggerModule = function () {
    var _classDecorators = [(0, common_1.Global)(), (0, common_1.Module)({
            imports: [],
            providers: [winston_service_1.WinstonService, datadog_service_1.DatadogService, logger_service_1.LoggerService],
            exports: [logger_service_1.LoggerService],
        })];
    var _classDescriptor;
    var _classExtraInitializers = [];
    var _classThis;
    var LoggerModule = _classThis = /** @class */ (function () {
        function LoggerModule_1() {
        }
        return LoggerModule_1;
    }());
    __setFunctionName(_classThis, "LoggerModule");
    (function () {
        var _metadata = typeof Symbol === "function" && Symbol.metadata ? Object.create(null) : void 0;
        __esDecorate(null, _classDescriptor = { value: _classThis }, _classDecorators, { kind: "class", name: _classThis.name, metadata: _metadata }, null, _classExtraInitializers);
        LoggerModule = _classThis = _classDescriptor.value;
        if (_metadata) Object.defineProperty(_classThis, Symbol.metadata, { enumerable: true, configurable: true, writable: true, value: _metadata });
        __runInitializers(_classThis, _classExtraInitializers);
    })();
    return LoggerModule = _classThis;
}();
exports.LoggerModule = LoggerModule;


// C:\grua-booking-system-25\server\dist\libraries\logger\logger.service.js
"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __esDecorate = (this && this.__esDecorate) || function (ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {
    function accept(f) { if (f !== void 0 && typeof f !== "function") throw new TypeError("Function expected"); return f; }
    var kind = contextIn.kind, key = kind === "getter" ? "get" : kind === "setter" ? "set" : "value";
    var target = !descriptorIn && ctor ? contextIn["static"] ? ctor : ctor.prototype : null;
    var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});
    var _, done = false;
    for (var i = decorators.length - 1; i >= 0; i--) {
        var context = {};
        for (var p in contextIn) context[p] = p === "access" ? {} : contextIn[p];
        for (var p in contextIn.access) context.access[p] = contextIn.access[p];
        context.addInitializer = function (f) { if (done) throw new TypeError("Cannot add initializers after decoration has completed"); extraInitializers.push(accept(f || null)); };
        var result = (0, decorators[i])(kind === "accessor" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);
        if (kind === "accessor") {
            if (result === void 0) continue;
            if (result === null || typeof result !== "object") throw new TypeError("Object expected");
            if (_ = accept(result.get)) descriptor.get = _;
            if (_ = accept(result.set)) descriptor.set = _;
            if (_ = accept(result.init)) initializers.unshift(_);
        }
        else if (_ = accept(result)) {
            if (kind === "field") initializers.unshift(_);
            else descriptor[key] = _;
        }
    }
    if (target) Object.defineProperty(target, contextIn.name, descriptor);
    done = true;
};
var __runInitializers = (this && this.__runInitializers) || function (thisArg, initializers, value) {
    var useValue = arguments.length > 2;
    for (var i = 0; i < initializers.length; i++) {
        value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);
    }
    return useValue ? value : void 0;
};
var __setFunctionName = (this && this.__setFunctionName) || function (f, name, prefix) {
    if (typeof name === "symbol") name = name.description ? "[".concat(name.description, "]") : "";
    return Object.defineProperty(f, "name", { configurable: true, value: prefix ? "".concat(prefix, " ", name) : name });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.LoggerService = void 0;
var common_1 = require("@nestjs/common");
var logger_1 = require("./logger");
var LoggerService = function () {
    var _classDecorators = [(0, common_1.Injectable)()];
    var _classDescriptor;
    var _classExtraInitializers = [];
    var _classThis;
    var LoggerService = _classThis = /** @class */ (function () {
        function LoggerService_1(winstonService) {
            this.winstonService = winstonService;
            this.instance = this.winstonService.create();
        }
        LoggerService_1.prototype.create = function (options) {
            return new logger_1.Logger(__assign(__assign({}, options), { instance: this.instance }));
        };
        LoggerService_1.prototype.log = function (message, data) {
            this.instance.info(message, { data: data });
        };
        LoggerService_1.prototype.success = function (message) {
            this.instance.info("[SUCCESS] ".concat(message));
        };
        LoggerService_1.prototype.error = function (error) {
            if (typeof error === 'string') {
                this.instance.error(error);
            }
            else {
                this.instance.error(error.message);
            }
        };
        return LoggerService_1;
    }());
    __setFunctionName(_classThis, "LoggerService");
    (function () {
        var _metadata = typeof Symbol === "function" && Symbol.metadata ? Object.create(null) : void 0;
        __esDecorate(null, _classDescriptor = { value: _classThis }, _classDecorators, { kind: "class", name: _classThis.name, metadata: _metadata }, null, _classExtraInitializers);
        LoggerService = _classThis = _classDescriptor.value;
        if (_metadata) Object.defineProperty(_classThis, Symbol.metadata, { enumerable: true, configurable: true, writable: true, value: _metadata });
        __runInitializers(_classThis, _classExtraInitializers);
    })();
    return LoggerService = _classThis;
}();
exports.LoggerService = LoggerService;


// C:\grua-booking-system-25\server\dist\libraries\logger\internal\datadog.service.js
"use strict";
var __esDecorate = (this && this.__esDecorate) || function (ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {
    function accept(f) { if (f !== void 0 && typeof f !== "function") throw new TypeError("Function expected"); return f; }
    var kind = contextIn.kind, key = kind === "getter" ? "get" : kind === "setter" ? "set" : "value";
    var target = !descriptorIn && ctor ? contextIn["static"] ? ctor : ctor.prototype : null;
    var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});
    var _, done = false;
    for (var i = decorators.length - 1; i >= 0; i--) {
        var context = {};
        for (var p in contextIn) context[p] = p === "access" ? {} : contextIn[p];
        for (var p in contextIn.access) context.access[p] = contextIn.access[p];
        context.addInitializer = function (f) { if (done) throw new TypeError("Cannot add initializers after decoration has completed"); extraInitializers.push(accept(f || null)); };
        var result = (0, decorators[i])(kind === "accessor" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);
        if (kind === "accessor") {
            if (result === void 0) continue;
            if (result === null || typeof result !== "object") throw new TypeError("Object expected");
            if (_ = accept(result.get)) descriptor.get = _;
            if (_ = accept(result.set)) descriptor.set = _;
            if (_ = accept(result.init)) initializers.unshift(_);
        }
        else if (_ = accept(result)) {
            if (kind === "field") initializers.unshift(_);
            else descriptor[key] = _;
        }
    }
    if (target) Object.defineProperty(target, contextIn.name, descriptor);
    done = true;
};
var __runInitializers = (this && this.__runInitializers) || function (thisArg, initializers, value) {
    var useValue = arguments.length > 2;
    for (var i = 0; i < initializers.length; i++) {
        value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);
    }
    return useValue ? value : void 0;
};
var __setFunctionName = (this && this.__setFunctionName) || function (f, name, prefix) {
    if (typeof name === "symbol") name = name.description ? "[".concat(name.description, "]") : "";
    return Object.defineProperty(f, "name", { configurable: true, value: prefix ? "".concat(prefix, " ", name) : name });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.DatadogService = void 0;
var common_1 = require("@nestjs/common");
var dd_trace_1 = require("dd-trace");
var DatadogService = function () {
    var _classDecorators = [(0, common_1.Injectable)()];
    var _classDescriptor;
    var _classExtraInitializers = [];
    var _classThis;
    var DatadogService = _classThis = /** @class */ (function () {
        function DatadogService_1() {
            dd_trace_1.default.init({
                logInjection: true,
            });
        }
        return DatadogService_1;
    }());
    __setFunctionName(_classThis, "DatadogService");
    (function () {
        var _metadata = typeof Symbol === "function" && Symbol.metadata ? Object.create(null) : void 0;
        __esDecorate(null, _classDescriptor = { value: _classThis }, _classDecorators, { kind: "class", name: _classThis.name, metadata: _metadata }, null, _classExtraInitializers);
        DatadogService = _classThis = _classDescriptor.value;
        if (_metadata) Object.defineProperty(_classThis, Symbol.metadata, { enumerable: true, configurable: true, writable: true, value: _metadata });
        __runInitializers(_classThis, _classExtraInitializers);
    })();
    return DatadogService = _classThis;
}();
exports.DatadogService = DatadogService;


// C:\grua-booking-system-25\server\dist\libraries\logger\internal\winston.service.js
"use strict";
var __esDecorate = (this && this.__esDecorate) || function (ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {
    function accept(f) { if (f !== void 0 && typeof f !== "function") throw new TypeError("Function expected"); return f; }
    var kind = contextIn.kind, key = kind === "getter" ? "get" : kind === "setter" ? "set" : "value";
    var target = !descriptorIn && ctor ? contextIn["static"] ? ctor : ctor.prototype : null;
    var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});
    var _, done = false;
    for (var i = decorators.length - 1; i >= 0; i--) {
        var context = {};
        for (var p in contextIn) context[p] = p === "access" ? {} : contextIn[p];
        for (var p in contextIn.access) context.access[p] = contextIn.access[p];
        context.addInitializer = function (f) { if (done) throw new TypeError("Cannot add initializers after decoration has completed"); extraInitializers.push(accept(f || null)); };
        var result = (0, decorators[i])(kind === "accessor" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);
        if (kind === "accessor") {
            if (result === void 0) continue;
            if (result === null || typeof result !== "object") throw new TypeError("Object expected");
            if (_ = accept(result.get)) descriptor.get = _;
            if (_ = accept(result.set)) descriptor.set = _;
            if (_ = accept(result.init)) initializers.unshift(_);
        }
        else if (_ = accept(result)) {
            if (kind === "field") initializers.unshift(_);
            else descriptor[key] = _;
        }
    }
    if (target) Object.defineProperty(target, contextIn.name, descriptor);
    done = true;
};
var __runInitializers = (this && this.__runInitializers) || function (thisArg, initializers, value) {
    var useValue = arguments.length > 2;
    for (var i = 0; i < initializers.length; i++) {
        value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);
    }
    return useValue ? value : void 0;
};
var __setFunctionName = (this && this.__setFunctionName) || function (f, name, prefix) {
    if (typeof name === "symbol") name = name.description ? "[".concat(name.description, "]") : "";
    return Object.defineProperty(f, "name", { configurable: true, value: prefix ? "".concat(prefix, " ", name) : name });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.WinstonService = void 0;
var common_1 = require("@nestjs/common");
var winston_1 = require("winston");
var WinstonService = function () {
    var _classDecorators = [(0, common_1.Injectable)()];
    var _classDescriptor;
    var _classExtraInitializers = [];
    var _classThis;
    var WinstonService = _classThis = /** @class */ (function () {
        function WinstonService_1(configurationService) {
            this.configurationService = configurationService;
        }
        WinstonService_1.prototype.create = function () {
            var isDevelopment = this.configurationService.isEnvironmentDevelopment();
            if (isDevelopment) {
                return this.createForDevelopment();
            }
            return this.createForProduction();
        };
        WinstonService_1.prototype.createForDevelopment = function () {
            return (0, winston_1.createLogger)({
                format: winston_1.format.combine(winston_1.format.colorize(), winston_1.format.timestamp(), winston_1.format.printf(function (_a) {
                    var timestamp = _a.timestamp, level = _a.level, message = _a.message;
                    return "[".concat(timestamp, "] [").concat(level, "] ").concat(message);
                })),
                transports: [new winston_1.transports.Console()],
            });
        };
        WinstonService_1.prototype.createForProduction = function () {
            return (0, winston_1.createLogger)({
                format: winston_1.format.json(),
                transports: [new winston_1.transports.Console()],
            });
        };
        return WinstonService_1;
    }());
    __setFunctionName(_classThis, "WinstonService");
    (function () {
        var _metadata = typeof Symbol === "function" && Symbol.metadata ? Object.create(null) : void 0;
        __esDecorate(null, _classDescriptor = { value: _classThis }, _classDecorators, { kind: "class", name: _classThis.name, metadata: _metadata }, null, _classExtraInitializers);
        WinstonService = _classThis = _classDescriptor.value;
        if (_metadata) Object.defineProperty(_classThis, Symbol.metadata, { enumerable: true, configurable: true, writable: true, value: _metadata });
        __runInitializers(_classThis, _classExtraInitializers);
    })();
    return WinstonService = _classThis;
}();
exports.WinstonService = WinstonService;


// C:\grua-booking-system-25\server\dist\libraries\payment\internal\providers\stripe\stripe.provider.js
"use strict";
var __esDecorate = (this && this.__esDecorate) || function (ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {
    function accept(f) { if (f !== void 0 && typeof f !== "function") throw new TypeError("Function expected"); return f; }
    var kind = contextIn.kind, key = kind === "getter" ? "get" : kind === "setter" ? "set" : "value";
    var target = !descriptorIn && ctor ? contextIn["static"] ? ctor : ctor.prototype : null;
    var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});
    var _, done = false;
    for (var i = decorators.length - 1; i >= 0; i--) {
        var context = {};
        for (var p in contextIn) context[p] = p === "access" ? {} : contextIn[p];
        for (var p in contextIn.access) context.access[p] = contextIn.access[p];
        context.addInitializer = function (f) { if (done) throw new TypeError("Cannot add initializers after decoration has completed"); extraInitializers.push(accept(f || null)); };
        var result = (0, decorators[i])(kind === "accessor" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);
        if (kind === "accessor") {
            if (result === void 0) continue;
            if (result === null || typeof result !== "object") throw new TypeError("Object expected");
            if (_ = accept(result.get)) descriptor.get = _;
            if (_ = accept(result.set)) descriptor.set = _;
            if (_ = accept(result.init)) initializers.unshift(_);
        }
        else if (_ = accept(result)) {
            if (kind === "field") initializers.unshift(_);
            else descriptor[key] = _;
        }
    }
    if (target) Object.defineProperty(target, contextIn.name, descriptor);
    done = true;
};
var __runInitializers = (this && this.__runInitializers) || function (thisArg, initializers, value) {
    var useValue = arguments.length > 2;
    for (var i = 0; i < initializers.length; i++) {
        value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);
    }
    return useValue ? value : void 0;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (g && (g = 0, op[0] && (_ = 0)), _) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __setFunctionName = (this && this.__setFunctionName) || function (f, name, prefix) {
    if (typeof name === "symbol") name = name.description ? "[".concat(name.description, "]") : "";
    return Object.defineProperty(f, "name", { configurable: true, value: prefix ? "".concat(prefix, " ", name) : name });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.StripeProvider = void 0;
var common_1 = require("@nestjs/common");
var stripe_1 = require("stripe");
var payment_type_1 = require("../../payment.type");
var StripeProvider = function () {
    var _classDecorators = [(0, common_1.Injectable)()];
    var _classDescriptor;
    var _classExtraInitializers = [];
    var _classThis;
    var StripeProvider = _classThis = /** @class */ (function () {
        function StripeProvider_1(configurationService, loggerService) {
            this.configurationService = configurationService;
            this.loggerService = loggerService;
            this.logger = this.loggerService.create({ name: 'StripeProvider' });
            this.initialise();
        }
        StripeProvider_1.prototype.isActive = function () {
            if (this.client) {
                return true;
            }
            else {
                return false;
            }
        };
        StripeProvider_1.prototype.initialise = function () {
            this.logger.log('Initialization...');
            try {
                var secretKey = this.configurationService.get('SERVER_PAYMENT_STRIPE_SECRET_KEY');
                this.webhookSecret = this.configurationService.get('SERVER_PAYMENT_STRIPE_WEBHOOK_SECRET');
                if (!this.webhookSecret && !secretKey) {
                    throw new Error('Set SERVER_PAYMENT_STRIPE_SECRET_KEY && SERVER_PAYMENT_STRIPE_WEBHOOK_SECRET in your .env to activate');
                }
                if (!this.webhookSecret) {
                    throw new Error('Set SERVER_PAYMENT_STRIPE_WEBHOOK_SECRET in your .env to activate');
                }
                if (!secretKey) {
                    throw new Error('Set SERVER_PAYMENT_STRIPE_SECRET_KEY in your .env to activate');
                }
                this.client = new stripe_1.Stripe(secretKey, {
                    apiVersion: '2024-04-10',
                });
                this.logger.success("Stripe active");
            }
            catch (error) {
                this.logger.warning("Stripe failed to start");
                this.logger.warning(error);
            }
        };
        StripeProvider_1.prototype.findManySubscriptions = function (customerId) {
            var _a, _b, _c;
            return __awaiter(this, void 0, void 0, function () {
                var response, subscriptions, _i, _d, subscription;
                return __generator(this, function (_e) {
                    switch (_e.label) {
                        case 0: return [4 /*yield*/, this.client.subscriptions.list({
                                customer: customerId,
                            })];
                        case 1:
                            response = _e.sent();
                            subscriptions = [];
                            for (_i = 0, _d = response.data; _i < _d.length; _i++) {
                                subscription = _d[_i];
                                subscriptions.push({
                                    productId: (_c = (_b = (_a = subscription.items) === null || _a === void 0 ? void 0 : _a.data) === null || _b === void 0 ? void 0 : _b[0].price) === null || _c === void 0 ? void 0 : _c.product,
                                    dateExpired: new Date(subscription.current_period_end * 1000),
                                    status: subscription.status,
                                });
                            }
                            return [2 /*return*/, subscriptions];
                    }
                });
            });
        };
        StripeProvider_1.prototype.findManyPayments = function (customerId) {
            var _a;
            return __awaiter(this, void 0, void 0, function () {
                var response, checkoutSessions, payments, _i, checkoutSessions_1, session, _b, _c, lineItem;
                return __generator(this, function (_d) {
                    switch (_d.label) {
                        case 0: return [4 /*yield*/, this.client.checkout.sessions.list({
                                expand: ['data.line_items'],
                                customer: customerId,
                            })];
                        case 1:
                            response = _d.sent();
                            checkoutSessions = (_a = response.data) === null || _a === void 0 ? void 0 : _a.filter(function (session) { return session.payment_status === 'paid'; });
                            payments = [];
                            for (_i = 0, checkoutSessions_1 = checkoutSessions; _i < checkoutSessions_1.length; _i++) {
                                session = checkoutSessions_1[_i];
                                for (_b = 0, _c = session.line_items.data; _b < _c.length; _b++) {
                                    lineItem = _c[_b];
                                    payments.push({
                                        productId: lineItem.price.product,
                                        amount: lineItem.price.unit_amount / 100,
                                        currency: lineItem.price.currency,
                                        date: new Date(session.created * 1000),
                                    });
                                }
                            }
                            return [2 /*return*/, payments];
                    }
                });
            });
        };
        StripeProvider_1.prototype.findManyProducts = function () {
            var _a;
            return __awaiter(this, void 0, void 0, function () {
                var response, products, _i, _b, item, product, price;
                return __generator(this, function (_c) {
                    switch (_c.label) {
                        case 0: return [4 /*yield*/, this.client.products.list({
                                expand: ['data.default_price'],
                            })];
                        case 1:
                            response = _c.sent();
                            products = [];
                            for (_i = 0, _b = response.data; _i < _b.length; _i++) {
                                item = _b[_i];
                                product = {
                                    id: item.id,
                                    type: payment_type_1.ProductType.ONE_TIME,
                                    name: item.name,
                                    price: 0,
                                    description: item.description,
                                };
                                price = item.default_price;
                                if (price === null || price === void 0 ? void 0 : price.recurring) {
                                    product.type = payment_type_1.ProductType.SUBSCRIPTION;
                                }
                                product.price = (_a = (price === null || price === void 0 ? void 0 : price.unit_amount) / 100) !== null && _a !== void 0 ? _a : 0;
                                products.push(product);
                            }
                            return [2 /*return*/, products];
                    }
                });
            });
        };
        StripeProvider_1.prototype.onPayment = function (body, sig) {
            var _a, _b;
            return __awaiter(this, void 0, void 0, function () {
                var event_1, data;
                return __generator(this, function (_c) {
                    try {
                        event_1 = this.client.webhooks.constructEvent(body.toString(), sig, this.webhookSecret);
                        data = (_a = event_1.data) === null || _a === void 0 ? void 0 : _a.object;
                        if (event_1.type === 'checkout.session.completed') {
                            this.logger.success("Stripe event \"".concat(event_1.type, "\" received"));
                            return [2 /*return*/, {
                                    userId: data.client_reference_id,
                                    stripeCustomerId: data.customer,
                                    metadata: (_b = data.metadata) !== null && _b !== void 0 ? _b : {},
                                    customerDetails: data.customer_details,
                                }];
                        }
                        this.logger.log("Stripe event \"".concat(event_1.type, "\" is not handled."));
                        return [2 /*return*/, null];
                    }
                    catch (error) {
                        throw new Error("Could not check webhook: ".concat(error.message));
                    }
                    return [2 /*return*/];
                });
            });
        };
        StripeProvider_1.prototype.createPaymentLink = function (_a) {
            var customerId = _a.customerId, productId = _a.productId, urlRedirection = _a.urlRedirection, _b = _a.metadata, metadata = _b === void 0 ? {} : _b;
            return __awaiter(this, void 0, void 0, function () {
                var price, session;
                return __generator(this, function (_c) {
                    switch (_c.label) {
                        case 0: return [4 /*yield*/, this.findOnePriceByIdOrFail(productId)];
                        case 1:
                            price = _c.sent();
                            return [4 /*yield*/, this.client.checkout.sessions.create({
                                    line_items: [
                                        {
                                            price: price.id,
                                            quantity: 1,
                                        },
                                    ],
                                    mode: price.recurring ? 'subscription' : 'payment',
                                    customer: customerId,
                                    ui_mode: 'hosted',
                                    success_url: urlRedirection,
                                    metadata: metadata,
                                })];
                        case 2:
                            session = _c.sent();
                            return [2 /*return*/, session.url];
                    }
                });
            });
        };
        StripeProvider_1.prototype.createCustomer = function (customer) {
            return __awaiter(this, void 0, void 0, function () {
                var result;
                return __generator(this, function (_a) {
                    switch (_a.label) {
                        case 0: return [4 /*yield*/, this.client.customers.create({
                                name: customer.name,
                                email: customer.email,
                            })];
                        case 1:
                            result = _a.sent();
                            return [2 /*return*/, result.id];
                    }
                });
            });
        };
        StripeProvider_1.prototype.findOnePriceByIdOrFail = function (productId) {
            var _a;
            return __awaiter(this, void 0, void 0, function () {
                var prices, price;
                return __generator(this, function (_b) {
                    switch (_b.label) {
                        case 0: return [4 /*yield*/, this.client.prices.list({
                                product: productId,
                                limit: 1,
                            })];
                        case 1:
                            prices = _b.sent();
                            price = (_a = prices.data) === null || _a === void 0 ? void 0 : _a[0];
                            if (!price) {
                                throw new Error("Could not find price for product ".concat(productId));
                            }
                            return [2 /*return*/, price];
                    }
                });
            });
        };
        return StripeProvider_1;
    }());
    __setFunctionName(_classThis, "StripeProvider");
    (function () {
        var _metadata = typeof Symbol === "function" && Symbol.metadata ? Object.create(null) : void 0;
        __esDecorate(null, _classDescriptor = { value: _classThis }, _classDecorators, { kind: "class", name: _classThis.name, metadata: _metadata }, null, _classExtraInitializers);
        StripeProvider = _classThis = _classDescriptor.value;
        if (_metadata) Object.defineProperty(_classThis, Symbol.metadata, { enumerable: true, configurable: true, writable: true, value: _metadata });
        __runInitializers(_classThis, _classExtraInitializers);
    })();
    return StripeProvider = _classThis;
}();
exports.StripeProvider = StripeProvider;


// C:\grua-booking-system-25\server\dist\libraries\payment\internal\providers\provider.js
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });


// C:\grua-booking-system-25\server\dist\libraries\payment\internal\providers\stripe\stripe.provider.js
"use strict";
var __esDecorate = (this && this.__esDecorate) || function (ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {
    function accept(f) { if (f !== void 0 && typeof f !== "function") throw new TypeError("Function expected"); return f; }
    var kind = contextIn.kind, key = kind === "getter" ? "get" : kind === "setter" ? "set" : "value";
    var target = !descriptorIn && ctor ? contextIn["static"] ? ctor : ctor.prototype : null;
    var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});
    var _, done = false;
    for (var i = decorators.length - 1; i >= 0; i--) {
        var context = {};
        for (var p in contextIn) context[p] = p === "access" ? {} : contextIn[p];
        for (var p in contextIn.access) context.access[p] = contextIn.access[p];
        context.addInitializer = function (f) { if (done) throw new TypeError("Cannot add initializers after decoration has completed"); extraInitializers.push(accept(f || null)); };
        var result = (0, decorators[i])(kind === "accessor" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);
        if (kind === "accessor") {
            if (result === void 0) continue;
            if (result === null || typeof result !== "object") throw new TypeError("Object expected");
            if (_ = accept(result.get)) descriptor.get = _;
            if (_ = accept(result.set)) descriptor.set = _;
            if (_ = accept(result.init)) initializers.unshift(_);
        }
        else if (_ = accept(result)) {
            if (kind === "field") initializers.unshift(_);
            else descriptor[key] = _;
        }
    }
    if (target) Object.defineProperty(target, contextIn.name, descriptor);
    done = true;
};
var __runInitializers = (this && this.__runInitializers) || function (thisArg, initializers, value) {
    var useValue = arguments.length > 2;
    for (var i = 0; i < initializers.length; i++) {
        value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);
    }
    return useValue ? value : void 0;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (g && (g = 0, op[0] && (_ = 0)), _) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __setFunctionName = (this && this.__setFunctionName) || function (f, name, prefix) {
    if (typeof name === "symbol") name = name.description ? "[".concat(name.description, "]") : "";
    return Object.defineProperty(f, "name", { configurable: true, value: prefix ? "".concat(prefix, " ", name) : name });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.StripeProvider = void 0;
var common_1 = require("@nestjs/common");
var stripe_1 = require("stripe");
var payment_type_1 = require("../../payment.type");
var StripeProvider = function () {
    var _classDecorators = [(0, common_1.Injectable)()];
    var _classDescriptor;
    var _classExtraInitializers = [];
    var _classThis;
    var StripeProvider = _classThis = /** @class */ (function () {
        function StripeProvider_1(configurationService, loggerService) {
            this.configurationService = configurationService;
            this.loggerService = loggerService;
            this.logger = this.loggerService.create({ name: 'StripeProvider' });
            this.initialise();
        }
        StripeProvider_1.prototype.isActive = function () {
            if (this.client) {
                return true;
            }
            else {
                return false;
            }
        };
        StripeProvider_1.prototype.initialise = function () {
            this.logger.log('Initialization...');
            try {
                var secretKey = this.configurationService.get('SERVER_PAYMENT_STRIPE_SECRET_KEY');
                this.webhookSecret = this.configurationService.get('SERVER_PAYMENT_STRIPE_WEBHOOK_SECRET');
                if (!this.webhookSecret && !secretKey) {
                    throw new Error('Set SERVER_PAYMENT_STRIPE_SECRET_KEY && SERVER_PAYMENT_STRIPE_WEBHOOK_SECRET in your .env to activate');
                }
                if (!this.webhookSecret) {
                    throw new Error('Set SERVER_PAYMENT_STRIPE_WEBHOOK_SECRET in your .env to activate');
                }
                if (!secretKey) {
                    throw new Error('Set SERVER_PAYMENT_STRIPE_SECRET_KEY in your .env to activate');
                }
                this.client = new stripe_1.Stripe(secretKey, {
                    apiVersion: '2024-04-10',
                });
                this.logger.success("Stripe active");
            }
            catch (error) {
                this.logger.warning("Stripe failed to start");
                this.logger.warning(error);
            }
        };
        StripeProvider_1.prototype.findManySubscriptions = function (customerId) {
            var _a, _b, _c;
            return __awaiter(this, void 0, void 0, function () {
                var response, subscriptions, _i, _d, subscription;
                return __generator(this, function (_e) {
                    switch (_e.label) {
                        case 0: return [4 /*yield*/, this.client.subscriptions.list({
                                customer: customerId,
                            })];
                        case 1:
                            response = _e.sent();
                            subscriptions = [];
                            for (_i = 0, _d = response.data; _i < _d.length; _i++) {
                                subscription = _d[_i];
                                subscriptions.push({
                                    productId: (_c = (_b = (_a = subscription.items) === null || _a === void 0 ? void 0 : _a.data) === null || _b === void 0 ? void 0 : _b[0].price) === null || _c === void 0 ? void 0 : _c.product,
                                    dateExpired: new Date(subscription.current_period_end * 1000),
                                    status: subscription.status,
                                });
                            }
                            return [2 /*return*/, subscriptions];
                    }
                });
            });
        };
        StripeProvider_1.prototype.findManyPayments = function (customerId) {
            var _a;
            return __awaiter(this, void 0, void 0, function () {
                var response, checkoutSessions, payments, _i, checkoutSessions_1, session, _b, _c, lineItem;
                return __generator(this, function (_d) {
                    switch (_d.label) {
                        case 0: return [4 /*yield*/, this.client.checkout.sessions.list({
                                expand: ['data.line_items'],
                                customer: customerId,
                            })];
                        case 1:
                            response = _d.sent();
                            checkoutSessions = (_a = response.data) === null || _a === void 0 ? void 0 : _a.filter(function (session) { return session.payment_status === 'paid'; });
                            payments = [];
                            for (_i = 0, checkoutSessions_1 = checkoutSessions; _i < checkoutSessions_1.length; _i++) {
                                session = checkoutSessions_1[_i];
                                for (_b = 0, _c = session.line_items.data; _b < _c.length; _b++) {
                                    lineItem = _c[_b];
                                    payments.push({
                                        productId: lineItem.price.product,
                                        amount: lineItem.price.unit_amount / 100,
                                        currency: lineItem.price.currency,
                                        date: new Date(session.created * 1000),
                                    });
                                }
                            }
                            return [2 /*return*/, payments];
                    }
                });
            });
        };
        StripeProvider_1.prototype.findManyProducts = function () {
            var _a;
            return __awaiter(this, void 0, void 0, function () {
                var response, products, _i, _b, item, product, price;
                return __generator(this, function (_c) {
                    switch (_c.label) {
                        case 0: return [4 /*yield*/, this.client.products.list({
                                expand: ['data.default_price'],
                            })];
                        case 1:
                            response = _c.sent();
                            products = [];
                            for (_i = 0, _b = response.data; _i < _b.length; _i++) {
                                item = _b[_i];
                                product = {
                                    id: item.id,
                                    type: payment_type_1.ProductType.ONE_TIME,
                                    name: item.name,
                                    price: 0,
                                    description: item.description,
                                };
                                price = item.default_price;
                                if (price === null || price === void 0 ? void 0 : price.recurring) {
                                    product.type = payment_type_1.ProductType.SUBSCRIPTION;
                                }
                                product.price = (_a = (price === null || price === void 0 ? void 0 : price.unit_amount) / 100) !== null && _a !== void 0 ? _a : 0;
                                products.push(product);
                            }
                            return [2 /*return*/, products];
                    }
                });
            });
        };
        StripeProvider_1.prototype.onPayment = function (body, sig) {
            var _a, _b;
            return __awaiter(this, void 0, void 0, function () {
                var event_1, data;
                return __generator(this, function (_c) {
                    try {
                        event_1 = this.client.webhooks.constructEvent(body.toString(), sig, this.webhookSecret);
                        data = (_a = event_1.data) === null || _a === void 0 ? void 0 : _a.object;
                        if (event_1.type === 'checkout.session.completed') {
                            this.logger.success("Stripe event \"".concat(event_1.type, "\" received"));
                            return [2 /*return*/, {
                                    userId: data.client_reference_id,
                                    stripeCustomerId: data.customer,
                                    metadata: (_b = data.metadata) !== null && _b !== void 0 ? _b : {},
                                    customerDetails: data.customer_details,
                                }];
                        }
                        this.logger.log("Stripe event \"".concat(event_1.type, "\" is not handled."));
                        return [2 /*return*/, null];
                    }
                    catch (error) {
                        throw new Error("Could not check webhook: ".concat(error.message));
                    }
                    return [2 /*return*/];
                });
            });
        };
        StripeProvider_1.prototype.createPaymentLink = function (_a) {
            var customerId = _a.customerId, productId = _a.productId, urlRedirection = _a.urlRedirection, _b = _a.metadata, metadata = _b === void 0 ? {} : _b;
            return __awaiter(this, void 0, void 0, function () {
                var price, session;
                return __generator(this, function (_c) {
                    switch (_c.label) {
                        case 0: return [4 /*yield*/, this.findOnePriceByIdOrFail(productId)];
                        case 1:
                            price = _c.sent();
                            return [4 /*yield*/, this.client.checkout.sessions.create({
                                    line_items: [
                                        {
                                            price: price.id,
                                            quantity: 1,
                                        },
                                    ],
                                    mode: price.recurring ? 'subscription' : 'payment',
                                    customer: customerId,
                                    ui_mode: 'hosted',
                                    success_url: urlRedirection,
                                    metadata: metadata,
                                })];
                        case 2:
                            session = _c.sent();
                            return [2 /*return*/, session.url];
                    }
                });
            });
        };
        StripeProvider_1.prototype.createCustomer = function (customer) {
            return __awaiter(this, void 0, void 0, function () {
                var result;
                return __generator(this, function (_a) {
                    switch (_a.label) {
                        case 0: return [4 /*yield*/, this.client.customers.create({
                                name: customer.name,
                                email: customer.email,
                            })];
                        case 1:
                            result = _a.sent();
                            return [2 /*return*/, result.id];
                    }
                });
            });
        };
        StripeProvider_1.prototype.findOnePriceByIdOrFail = function (productId) {
            var _a;
            return __awaiter(this, void 0, void 0, function () {
                var prices, price;
                return __generator(this, function (_b) {
                    switch (_b.label) {
                        case 0: return [4 /*yield*/, this.client.prices.list({
                                product: productId,
                                limit: 1,
                            })];
                        case 1:
                            prices = _b.sent();
                            price = (_a = prices.data) === null || _a === void 0 ? void 0 : _a[0];
                            if (!price) {
                                throw new Error("Could not find price for product ".concat(productId));
                            }
                            return [2 /*return*/, price];
                    }
                });
            });
        };
        return StripeProvider_1;
    }());
    __setFunctionName(_classThis, "StripeProvider");
    (function () {
        var _metadata = typeof Symbol === "function" && Symbol.metadata ? Object.create(null) : void 0;
        __esDecorate(null, _classDescriptor = { value: _classThis }, _classDecorators, { kind: "class", name: _classThis.name, metadata: _metadata }, null, _classExtraInitializers);
        StripeProvider = _classThis = _classDescriptor.value;
        if (_metadata) Object.defineProperty(_classThis, Symbol.metadata, { enumerable: true, configurable: true, writable: true, value: _metadata });
        __runInitializers(_classThis, _classExtraInitializers);
    })();
    return StripeProvider = _classThis;
}();
exports.StripeProvider = StripeProvider;


// C:\grua-booking-system-25\server\dist\libraries\payment\internal\payment.type.js
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ProductType = void 0;
var ProductType;
(function (ProductType) {
    ProductType["SUBSCRIPTION"] = "SUBSCRIPTION";
    ProductType["ONE_TIME"] = "ONE_TIME";
})(ProductType || (exports.ProductType = ProductType = {}));


// C:\grua-booking-system-25\server\dist\libraries\payment\internal\providers\stripe\stripe.provider.js
"use strict";
var __esDecorate = (this && this.__esDecorate) || function (ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {
    function accept(f) { if (f !== void 0 && typeof f !== "function") throw new TypeError("Function expected"); return f; }
    var kind = contextIn.kind, key = kind === "getter" ? "get" : kind === "setter" ? "set" : "value";
    var target = !descriptorIn && ctor ? contextIn["static"] ? ctor : ctor.prototype : null;
    var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});
    var _, done = false;
    for (var i = decorators.length - 1; i >= 0; i--) {
        var context = {};
        for (var p in contextIn) context[p] = p === "access" ? {} : contextIn[p];
        for (var p in contextIn.access) context.access[p] = contextIn.access[p];
        context.addInitializer = function (f) { if (done) throw new TypeError("Cannot add initializers after decoration has completed"); extraInitializers.push(accept(f || null)); };
        var result = (0, decorators[i])(kind === "accessor" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);
        if (kind === "accessor") {
            if (result === void 0) continue;
            if (result === null || typeof result !== "object") throw new TypeError("Object expected");
            if (_ = accept(result.get)) descriptor.get = _;
            if (_ = accept(result.set)) descriptor.set = _;
            if (_ = accept(result.init)) initializers.unshift(_);
        }
        else if (_ = accept(result)) {
            if (kind === "field") initializers.unshift(_);
            else descriptor[key] = _;
        }
    }
    if (target) Object.defineProperty(target, contextIn.name, descriptor);
    done = true;
};
var __runInitializers = (this && this.__runInitializers) || function (thisArg, initializers, value) {
    var useValue = arguments.length > 2;
    for (var i = 0; i < initializers.length; i++) {
        value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);
    }
    return useValue ? value : void 0;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (g && (g = 0, op[0] && (_ = 0)), _) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __setFunctionName = (this && this.__setFunctionName) || function (f, name, prefix) {
    if (typeof name === "symbol") name = name.description ? "[".concat(name.description, "]") : "";
    return Object.defineProperty(f, "name", { configurable: true, value: prefix ? "".concat(prefix, " ", name) : name });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.StripeProvider = void 0;
var common_1 = require("@nestjs/common");
var stripe_1 = require("stripe");
var payment_type_1 = require("../../payment.type");
var StripeProvider = function () {
    var _classDecorators = [(0, common_1.Injectable)()];
    var _classDescriptor;
    var _classExtraInitializers = [];
    var _classThis;
    var StripeProvider = _classThis = /** @class */ (function () {
        function StripeProvider_1(configurationService, loggerService) {
            this.configurationService = configurationService;
            this.loggerService = loggerService;
            this.logger = this.loggerService.create({ name: 'StripeProvider' });
            this.initialise();
        }
        StripeProvider_1.prototype.isActive = function () {
            if (this.client) {
                return true;
            }
            else {
                return false;
            }
        };
        StripeProvider_1.prototype.initialise = function () {
            this.logger.log('Initialization...');
            try {
                var secretKey = this.configurationService.get('SERVER_PAYMENT_STRIPE_SECRET_KEY');
                this.webhookSecret = this.configurationService.get('SERVER_PAYMENT_STRIPE_WEBHOOK_SECRET');
                if (!this.webhookSecret && !secretKey) {
                    throw new Error('Set SERVER_PAYMENT_STRIPE_SECRET_KEY && SERVER_PAYMENT_STRIPE_WEBHOOK_SECRET in your .env to activate');
                }
                if (!this.webhookSecret) {
                    throw new Error('Set SERVER_PAYMENT_STRIPE_WEBHOOK_SECRET in your .env to activate');
                }
                if (!secretKey) {
                    throw new Error('Set SERVER_PAYMENT_STRIPE_SECRET_KEY in your .env to activate');
                }
                this.client = new stripe_1.Stripe(secretKey, {
                    apiVersion: '2024-04-10',
                });
                this.logger.success("Stripe active");
            }
            catch (error) {
                this.logger.warning("Stripe failed to start");
                this.logger.warning(error);
            }
        };
        StripeProvider_1.prototype.findManySubscriptions = function (customerId) {
            var _a, _b, _c;
            return __awaiter(this, void 0, void 0, function () {
                var response, subscriptions, _i, _d, subscription;
                return __generator(this, function (_e) {
                    switch (_e.label) {
                        case 0: return [4 /*yield*/, this.client.subscriptions.list({
                                customer: customerId,
                            })];
                        case 1:
                            response = _e.sent();
                            subscriptions = [];
                            for (_i = 0, _d = response.data; _i < _d.length; _i++) {
                                subscription = _d[_i];
                                subscriptions.push({
                                    productId: (_c = (_b = (_a = subscription.items) === null || _a === void 0 ? void 0 : _a.data) === null || _b === void 0 ? void 0 : _b[0].price) === null || _c === void 0 ? void 0 : _c.product,
                                    dateExpired: new Date(subscription.current_period_end * 1000),
                                    status: subscription.status,
                                });
                            }
                            return [2 /*return*/, subscriptions];
                    }
                });
            });
        };
        StripeProvider_1.prototype.findManyPayments = function (customerId) {
            var _a;
            return __awaiter(this, void 0, void 0, function () {
                var response, checkoutSessions, payments, _i, checkoutSessions_1, session, _b, _c, lineItem;
                return __generator(this, function (_d) {
                    switch (_d.label) {
                        case 0: return [4 /*yield*/, this.client.checkout.sessions.list({
                                expand: ['data.line_items'],
                                customer: customerId,
                            })];
                        case 1:
                            response = _d.sent();
                            checkoutSessions = (_a = response.data) === null || _a === void 0 ? void 0 : _a.filter(function (session) { return session.payment_status === 'paid'; });
                            payments = [];
                            for (_i = 0, checkoutSessions_1 = checkoutSessions; _i < checkoutSessions_1.length; _i++) {
                                session = checkoutSessions_1[_i];
                                for (_b = 0, _c = session.line_items.data; _b < _c.length; _b++) {
                                    lineItem = _c[_b];
                                    payments.push({
                                        productId: lineItem.price.product,
                                        amount: lineItem.price.unit_amount / 100,
                                        currency: lineItem.price.currency,
                                        date: new Date(session.created * 1000),
                                    });
                                }
                            }
                            return [2 /*return*/, payments];
                    }
                });
            });
        };
        StripeProvider_1.prototype.findManyProducts = function () {
            var _a;
            return __awaiter(this, void 0, void 0, function () {
                var response, products, _i, _b, item, product, price;
                return __generator(this, function (_c) {
                    switch (_c.label) {
                        case 0: return [4 /*yield*/, this.client.products.list({
                                expand: ['data.default_price'],
                            })];
                        case 1:
                            response = _c.sent();
                            products = [];
                            for (_i = 0, _b = response.data; _i < _b.length; _i++) {
                                item = _b[_i];
                                product = {
                                    id: item.id,
                                    type: payment_type_1.ProductType.ONE_TIME,
                                    name: item.name,
                                    price: 0,
                                    description: item.description,
                                };
                                price = item.default_price;
                                if (price === null || price === void 0 ? void 0 : price.recurring) {
                                    product.type = payment_type_1.ProductType.SUBSCRIPTION;
                                }
                                product.price = (_a = (price === null || price === void 0 ? void 0 : price.unit_amount) / 100) !== null && _a !== void 0 ? _a : 0;
                                products.push(product);
                            }
                            return [2 /*return*/, products];
                    }
                });
            });
        };
        StripeProvider_1.prototype.onPayment = function (body, sig) {
            var _a, _b;
            return __awaiter(this, void 0, void 0, function () {
                var event_1, data;
                return __generator(this, function (_c) {
                    try {
                        event_1 = this.client.webhooks.constructEvent(body.toString(), sig, this.webhookSecret);
                        data = (_a = event_1.data) === null || _a === void 0 ? void 0 : _a.object;
                        if (event_1.type === 'checkout.session.completed') {
                            this.logger.success("Stripe event \"".concat(event_1.type, "\" received"));
                            return [2 /*return*/, {
                                    userId: data.client_reference_id,
                                    stripeCustomerId: data.customer,
                                    metadata: (_b = data.metadata) !== null && _b !== void 0 ? _b : {},
                                    customerDetails: data.customer_details,
                                }];
                        }
                        this.logger.log("Stripe event \"".concat(event_1.type, "\" is not handled."));
                        return [2 /*return*/, null];
                    }
                    catch (error) {
                        throw new Error("Could not check webhook: ".concat(error.message));
                    }
                    return [2 /*return*/];
                });
            });
        };
        StripeProvider_1.prototype.createPaymentLink = function (_a) {
            var customerId = _a.customerId, productId = _a.productId, urlRedirection = _a.urlRedirection, _b = _a.metadata, metadata = _b === void 0 ? {} : _b;
            return __awaiter(this, void 0, void 0, function () {
                var price, session;
                return __generator(this, function (_c) {
                    switch (_c.label) {
                        case 0: return [4 /*yield*/, this.findOnePriceByIdOrFail(productId)];
                        case 1:
                            price = _c.sent();
                            return [4 /*yield*/, this.client.checkout.sessions.create({
                                    line_items: [
                                        {
                                            price: price.id,
                                            quantity: 1,
                                        },
                                    ],
                                    mode: price.recurring ? 'subscription' : 'payment',
                                    customer: customerId,
                                    ui_mode: 'hosted',
                                    success_url: urlRedirection,
                                    metadata: metadata,
                                })];
                        case 2:
                            session = _c.sent();
                            return [2 /*return*/, session.url];
                    }
                });
            });
        };
        StripeProvider_1.prototype.createCustomer = function (customer) {
            return __awaiter(this, void 0, void 0, function () {
                var result;
                return __generator(this, function (_a) {
                    switch (_a.label) {
                        case 0: return [4 /*yield*/, this.client.customers.create({
                                name: customer.name,
                                email: customer.email,
                            })];
                        case 1:
                            result = _a.sent();
                            return [2 /*return*/, result.id];
                    }
                });
            });
        };
        StripeProvider_1.prototype.findOnePriceByIdOrFail = function (productId) {
            var _a;
            return __awaiter(this, void 0, void 0, function () {
                var prices, price;
                return __generator(this, function (_b) {
                    switch (_b.label) {
                        case 0: return [4 /*yield*/, this.client.prices.list({
                                product: productId,
                                limit: 1,
                            })];
                        case 1:
                            prices = _b.sent();
                            price = (_a = prices.data) === null || _a === void 0 ? void 0 : _a[0];
                            if (!price) {
                                throw new Error("Could not find price for product ".concat(productId));
                            }
                            return [2 /*return*/, price];
                    }
                });
            });
        };
        return StripeProvider_1;
    }());
    __setFunctionName(_classThis, "StripeProvider");
    (function () {
        var _metadata = typeof Symbol === "function" && Symbol.metadata ? Object.create(null) : void 0;
        __esDecorate(null, _classDescriptor = { value: _classThis }, _classDecorators, { kind: "class", name: _classThis.name, metadata: _metadata }, null, _classExtraInitializers);
        StripeProvider = _classThis = _classDescriptor.value;
        if (_metadata) Object.defineProperty(_classThis, Symbol.metadata, { enumerable: true, configurable: true, writable: true, value: _metadata });
        __runInitializers(_classThis, _classExtraInitializers);
    })();
    return StripeProvider = _classThis;
}();
exports.StripeProvider = StripeProvider;


// C:\grua-booking-system-25\server\dist\libraries\payment\internal\providers\provider.js
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });


// C:\grua-booking-system-25\server\dist\libraries\payment\internal\providers\stripe\stripe.provider.js
"use strict";
var __esDecorate = (this && this.__esDecorate) || function (ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {
    function accept(f) { if (f !== void 0 && typeof f !== "function") throw new TypeError("Function expected"); return f; }
    var kind = contextIn.kind, key = kind === "getter" ? "get" : kind === "setter" ? "set" : "value";
    var target = !descriptorIn && ctor ? contextIn["static"] ? ctor : ctor.prototype : null;
    var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});
    var _, done = false;
    for (var i = decorators.length - 1; i >= 0; i--) {
        var context = {};
        for (var p in contextIn) context[p] = p === "access" ? {} : contextIn[p];
        for (var p in contextIn.access) context.access[p] = contextIn.access[p];
        context.addInitializer = function (f) { if (done) throw new TypeError("Cannot add initializers after decoration has completed"); extraInitializers.push(accept(f || null)); };
        var result = (0, decorators[i])(kind === "accessor" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);
        if (kind === "accessor") {
            if (result === void 0) continue;
            if (result === null || typeof result !== "object") throw new TypeError("Object expected");
            if (_ = accept(result.get)) descriptor.get = _;
            if (_ = accept(result.set)) descriptor.set = _;
            if (_ = accept(result.init)) initializers.unshift(_);
        }
        else if (_ = accept(result)) {
            if (kind === "field") initializers.unshift(_);
            else descriptor[key] = _;
        }
    }
    if (target) Object.defineProperty(target, contextIn.name, descriptor);
    done = true;
};
var __runInitializers = (this && this.__runInitializers) || function (thisArg, initializers, value) {
    var useValue = arguments.length > 2;
    for (var i = 0; i < initializers.length; i++) {
        value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);
    }
    return useValue ? value : void 0;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (g && (g = 0, op[0] && (_ = 0)), _) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __setFunctionName = (this && this.__setFunctionName) || function (f, name, prefix) {
    if (typeof name === "symbol") name = name.description ? "[".concat(name.description, "]") : "";
    return Object.defineProperty(f, "name", { configurable: true, value: prefix ? "".concat(prefix, " ", name) : name });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.StripeProvider = void 0;
var common_1 = require("@nestjs/common");
var stripe_1 = require("stripe");
var payment_type_1 = require("../../payment.type");
var StripeProvider = function () {
    var _classDecorators = [(0, common_1.Injectable)()];
    var _classDescriptor;
    var _classExtraInitializers = [];
    var _classThis;
    var StripeProvider = _classThis = /** @class */ (function () {
        function StripeProvider_1(configurationService, loggerService) {
            this.configurationService = configurationService;
            this.loggerService = loggerService;
            this.logger = this.loggerService.create({ name: 'StripeProvider' });
            this.initialise();
        }
        StripeProvider_1.prototype.isActive = function () {
            if (this.client) {
                return true;
            }
            else {
                return false;
            }
        };
        StripeProvider_1.prototype.initialise = function () {
            this.logger.log('Initialization...');
            try {
                var secretKey = this.configurationService.get('SERVER_PAYMENT_STRIPE_SECRET_KEY');
                this.webhookSecret = this.configurationService.get('SERVER_PAYMENT_STRIPE_WEBHOOK_SECRET');
                if (!this.webhookSecret && !secretKey) {
                    throw new Error('Set SERVER_PAYMENT_STRIPE_SECRET_KEY && SERVER_PAYMENT_STRIPE_WEBHOOK_SECRET in your .env to activate');
                }
                if (!this.webhookSecret) {
                    throw new Error('Set SERVER_PAYMENT_STRIPE_WEBHOOK_SECRET in your .env to activate');
                }
                if (!secretKey) {
                    throw new Error('Set SERVER_PAYMENT_STRIPE_SECRET_KEY in your .env to activate');
                }
                this.client = new stripe_1.Stripe(secretKey, {
                    apiVersion: '2024-04-10',
                });
                this.logger.success("Stripe active");
            }
            catch (error) {
                this.logger.warning("Stripe failed to start");
                this.logger.warning(error);
            }
        };
        StripeProvider_1.prototype.findManySubscriptions = function (customerId) {
            var _a, _b, _c;
            return __awaiter(this, void 0, void 0, function () {
                var response, subscriptions, _i, _d, subscription;
                return __generator(this, function (_e) {
                    switch (_e.label) {
                        case 0: return [4 /*yield*/, this.client.subscriptions.list({
                                customer: customerId,
                            })];
                        case 1:
                            response = _e.sent();
                            subscriptions = [];
                            for (_i = 0, _d = response.data; _i < _d.length; _i++) {
                                subscription = _d[_i];
                                subscriptions.push({
                                    productId: (_c = (_b = (_a = subscription.items) === null || _a === void 0 ? void 0 : _a.data) === null || _b === void 0 ? void 0 : _b[0].price) === null || _c === void 0 ? void 0 : _c.product,
                                    dateExpired: new Date(subscription.current_period_end * 1000),
                                    status: subscription.status,
                                });
                            }
                            return [2 /*return*/, subscriptions];
                    }
                });
            });
        };
        StripeProvider_1.prototype.findManyPayments = function (customerId) {
            var _a;
            return __awaiter(this, void 0, void 0, function () {
                var response, checkoutSessions, payments, _i, checkoutSessions_1, session, _b, _c, lineItem;
                return __generator(this, function (_d) {
                    switch (_d.label) {
                        case 0: return [4 /*yield*/, this.client.checkout.sessions.list({
                                expand: ['data.line_items'],
                                customer: customerId,
                            })];
                        case 1:
                            response = _d.sent();
                            checkoutSessions = (_a = response.data) === null || _a === void 0 ? void 0 : _a.filter(function (session) { return session.payment_status === 'paid'; });
                            payments = [];
                            for (_i = 0, checkoutSessions_1 = checkoutSessions; _i < checkoutSessions_1.length; _i++) {
                                session = checkoutSessions_1[_i];
                                for (_b = 0, _c = session.line_items.data; _b < _c.length; _b++) {
                                    lineItem = _c[_b];
                                    payments.push({
                                        productId: lineItem.price.product,
                                        amount: lineItem.price.unit_amount / 100,
                                        currency: lineItem.price.currency,
                                        date: new Date(session.created * 1000),
                                    });
                                }
                            }
                            return [2 /*return*/, payments];
                    }
                });
            });
        };
        StripeProvider_1.prototype.findManyProducts = function () {
            var _a;
            return __awaiter(this, void 0, void 0, function () {
                var response, products, _i, _b, item, product, price;
                return __generator(this, function (_c) {
                    switch (_c.label) {
                        case 0: return [4 /*yield*/, this.client.products.list({
                                expand: ['data.default_price'],
                            })];
                        case 1:
                            response = _c.sent();
                            products = [];
                            for (_i = 0, _b = response.data; _i < _b.length; _i++) {
                                item = _b[_i];
                                product = {
                                    id: item.id,
                                    type: payment_type_1.ProductType.ONE_TIME,
                                    name: item.name,
                                    price: 0,
                                    description: item.description,
                                };
                                price = item.default_price;
                                if (price === null || price === void 0 ? void 0 : price.recurring) {
                                    product.type = payment_type_1.ProductType.SUBSCRIPTION;
                                }
                                product.price = (_a = (price === null || price === void 0 ? void 0 : price.unit_amount) / 100) !== null && _a !== void 0 ? _a : 0;
                                products.push(product);
                            }
                            return [2 /*return*/, products];
                    }
                });
            });
        };
        StripeProvider_1.prototype.onPayment = function (body, sig) {
            var _a, _b;
            return __awaiter(this, void 0, void 0, function () {
                var event_1, data;
                return __generator(this, function (_c) {
                    try {
                        event_1 = this.client.webhooks.constructEvent(body.toString(), sig, this.webhookSecret);
                        data = (_a = event_1.data) === null || _a === void 0 ? void 0 : _a.object;
                        if (event_1.type === 'checkout.session.completed') {
                            this.logger.success("Stripe event \"".concat(event_1.type, "\" received"));
                            return [2 /*return*/, {
                                    userId: data.client_reference_id,
                                    stripeCustomerId: data.customer,
                                    metadata: (_b = data.metadata) !== null && _b !== void 0 ? _b : {},
                                    customerDetails: data.customer_details,
                                }];
                        }
                        this.logger.log("Stripe event \"".concat(event_1.type, "\" is not handled."));
                        return [2 /*return*/, null];
                    }
                    catch (error) {
                        throw new Error("Could not check webhook: ".concat(error.message));
                    }
                    return [2 /*return*/];
                });
            });
        };
        StripeProvider_1.prototype.createPaymentLink = function (_a) {
            var customerId = _a.customerId, productId = _a.productId, urlRedirection = _a.urlRedirection, _b = _a.metadata, metadata = _b === void 0 ? {} : _b;
            return __awaiter(this, void 0, void 0, function () {
                var price, session;
                return __generator(this, function (_c) {
                    switch (_c.label) {
                        case 0: return [4 /*yield*/, this.findOnePriceByIdOrFail(productId)];
                        case 1:
                            price = _c.sent();
                            return [4 /*yield*/, this.client.checkout.sessions.create({
                                    line_items: [
                                        {
                                            price: price.id,
                                            quantity: 1,
                                        },
                                    ],
                                    mode: price.recurring ? 'subscription' : 'payment',
                                    customer: customerId,
                                    ui_mode: 'hosted',
                                    success_url: urlRedirection,
                                    metadata: metadata,
                                })];
                        case 2:
                            session = _c.sent();
                            return [2 /*return*/, session.url];
                    }
                });
            });
        };
        StripeProvider_1.prototype.createCustomer = function (customer) {
            return __awaiter(this, void 0, void 0, function () {
                var result;
                return __generator(this, function (_a) {
                    switch (_a.label) {
                        case 0: return [4 /*yield*/, this.client.customers.create({
                                name: customer.name,
                                email: customer.email,
                            })];
                        case 1:
                            result = _a.sent();
                            return [2 /*return*/, result.id];
                    }
                });
            });
        };
        StripeProvider_1.prototype.findOnePriceByIdOrFail = function (productId) {
            var _a;
            return __awaiter(this, void 0, void 0, function () {
                var prices, price;
                return __generator(this, function (_b) {
                    switch (_b.label) {
                        case 0: return [4 /*yield*/, this.client.prices.list({
                                product: productId,
                                limit: 1,
                            })];
                        case 1:
                            prices = _b.sent();
                            price = (_a = prices.data) === null || _a === void 0 ? void 0 : _a[0];
                            if (!price) {
                                throw new Error("Could not find price for product ".concat(productId));
                            }
                            return [2 /*return*/, price];
                    }
                });
            });
        };
        return StripeProvider_1;
    }());
    __setFunctionName(_classThis, "StripeProvider");
    (function () {
        var _metadata = typeof Symbol === "function" && Symbol.metadata ? Object.create(null) : void 0;
        __esDecorate(null, _classDescriptor = { value: _classThis }, _classDecorators, { kind: "class", name: _classThis.name, metadata: _metadata }, null, _classExtraInitializers);
        StripeProvider = _classThis = _classDescriptor.value;
        if (_metadata) Object.defineProperty(_classThis, Symbol.metadata, { enumerable: true, configurable: true, writable: true, value: _metadata });
        __runInitializers(_classThis, _classExtraInitializers);
    })();
    return StripeProvider = _classThis;
}();
exports.StripeProvider = StripeProvider;


// C:\grua-booking-system-25\server\dist\libraries\payment\index.js
"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", { value: true });
__exportStar(require("./payment.service"), exports);


// C:\grua-booking-system-25\server\dist\libraries\payment\payment.module.js
"use strict";
var __esDecorate = (this && this.__esDecorate) || function (ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {
    function accept(f) { if (f !== void 0 && typeof f !== "function") throw new TypeError("Function expected"); return f; }
    var kind = contextIn.kind, key = kind === "getter" ? "get" : kind === "setter" ? "set" : "value";
    var target = !descriptorIn && ctor ? contextIn["static"] ? ctor : ctor.prototype : null;
    var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});
    var _, done = false;
    for (var i = decorators.length - 1; i >= 0; i--) {
        var context = {};
        for (var p in contextIn) context[p] = p === "access" ? {} : contextIn[p];
        for (var p in contextIn.access) context.access[p] = contextIn.access[p];
        context.addInitializer = function (f) { if (done) throw new TypeError("Cannot add initializers after decoration has completed"); extraInitializers.push(accept(f || null)); };
        var result = (0, decorators[i])(kind === "accessor" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);
        if (kind === "accessor") {
            if (result === void 0) continue;
            if (result === null || typeof result !== "object") throw new TypeError("Object expected");
            if (_ = accept(result.get)) descriptor.get = _;
            if (_ = accept(result.set)) descriptor.set = _;
            if (_ = accept(result.init)) initializers.unshift(_);
        }
        else if (_ = accept(result)) {
            if (kind === "field") initializers.unshift(_);
            else descriptor[key] = _;
        }
    }
    if (target) Object.defineProperty(target, contextIn.name, descriptor);
    done = true;
};
var __runInitializers = (this && this.__runInitializers) || function (thisArg, initializers, value) {
    var useValue = arguments.length > 2;
    for (var i = 0; i < initializers.length; i++) {
        value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);
    }
    return useValue ? value : void 0;
};
var __setFunctionName = (this && this.__setFunctionName) || function (f, name, prefix) {
    if (typeof name === "symbol") name = name.description ? "[".concat(name.description, "]") : "";
    return Object.defineProperty(f, "name", { configurable: true, value: prefix ? "".concat(prefix, " ", name) : name });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.PaymentModule = void 0;
var common_1 = require("@nestjs/common");
var stripe_provider_1 = require("./internal/providers/stripe/stripe.provider");
var payment_service_1 = require("./payment.service");
var PaymentModule = function () {
    var _classDecorators = [(0, common_1.Module)({
            imports: [],
            providers: [payment_service_1.PaymentService, stripe_provider_1.StripeProvider],
            exports: [payment_service_1.PaymentService],
        })];
    var _classDescriptor;
    var _classExtraInitializers = [];
    var _classThis;
    var PaymentModule = _classThis = /** @class */ (function () {
        function PaymentModule_1() {
        }
        return PaymentModule_1;
    }());
    __setFunctionName(_classThis, "PaymentModule");
    (function () {
        var _metadata = typeof Symbol === "function" && Symbol.metadata ? Object.create(null) : void 0;
        __esDecorate(null, _classDescriptor = { value: _classThis }, _classDecorators, { kind: "class", name: _classThis.name, metadata: _metadata }, null, _classExtraInitializers);
        PaymentModule = _classThis = _classDescriptor.value;
        if (_metadata) Object.defineProperty(_classThis, Symbol.metadata, { enumerable: true, configurable: true, writable: true, value: _metadata });
        __runInitializers(_classThis, _classExtraInitializers);
    })();
    return PaymentModule = _classThis;
}();
exports.PaymentModule = PaymentModule;


// C:\grua-booking-system-25\server\dist\libraries\payment\payment.service.js
"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __esDecorate = (this && this.__esDecorate) || function (ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {
    function accept(f) { if (f !== void 0 && typeof f !== "function") throw new TypeError("Function expected"); return f; }
    var kind = contextIn.kind, key = kind === "getter" ? "get" : kind === "setter" ? "set" : "value";
    var target = !descriptorIn && ctor ? contextIn["static"] ? ctor : ctor.prototype : null;
    var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});
    var _, done = false;
    for (var i = decorators.length - 1; i >= 0; i--) {
        var context = {};
        for (var p in contextIn) context[p] = p === "access" ? {} : contextIn[p];
        for (var p in contextIn.access) context.access[p] = contextIn.access[p];
        context.addInitializer = function (f) { if (done) throw new TypeError("Cannot add initializers after decoration has completed"); extraInitializers.push(accept(f || null)); };
        var result = (0, decorators[i])(kind === "accessor" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);
        if (kind === "accessor") {
            if (result === void 0) continue;
            if (result === null || typeof result !== "object") throw new TypeError("Object expected");
            if (_ = accept(result.get)) descriptor.get = _;
            if (_ = accept(result.set)) descriptor.set = _;
            if (_ = accept(result.init)) initializers.unshift(_);
        }
        else if (_ = accept(result)) {
            if (kind === "field") initializers.unshift(_);
            else descriptor[key] = _;
        }
    }
    if (target) Object.defineProperty(target, contextIn.name, descriptor);
    done = true;
};
var __runInitializers = (this && this.__runInitializers) || function (thisArg, initializers, value) {
    var useValue = arguments.length > 2;
    for (var i = 0; i < initializers.length; i++) {
        value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);
    }
    return useValue ? value : void 0;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (g && (g = 0, op[0] && (_ = 0)), _) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __setFunctionName = (this && this.__setFunctionName) || function (f, name, prefix) {
    if (typeof name === "symbol") name = name.description ? "[".concat(name.description, "]") : "";
    return Object.defineProperty(f, "name", { configurable: true, value: prefix ? "".concat(prefix, " ", name) : name });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.PaymentService = void 0;
var common_1 = require("@nestjs/common");
var PaymentService = function () {
    var _classDecorators = [(0, common_1.Injectable)()];
    var _classDescriptor;
    var _classExtraInitializers = [];
    var _classThis;
    var PaymentService = _classThis = /** @class */ (function () {
        function PaymentService_1(stripeProvider) {
            this.stripeProvider = stripeProvider;
        }
        PaymentService_1.prototype.onModuleInit = function () {
            return __awaiter(this, void 0, void 0, function () {
                return __generator(this, function (_a) {
                    if (this.stripeProvider.isActive()) {
                        this.provider = this.stripeProvider;
                    }
                    return [2 /*return*/];
                });
            });
        };
        PaymentService_1.prototype.isActive = function () {
            var _a;
            if (this.provider) {
                return (_a = this.provider) === null || _a === void 0 ? void 0 : _a.isActive();
            }
            return false;
        };
        PaymentService_1.prototype.getCustomerId = function (user) {
            return user.stripeCustomerId;
        };
        PaymentService_1.prototype.findManyProducts = function () {
            return __awaiter(this, void 0, void 0, function () {
                return __generator(this, function (_a) {
                    return [2 /*return*/, this.provider.findManyProducts()];
                });
            });
        };
        PaymentService_1.prototype.findManySubscriptions = function (user) {
            return __awaiter(this, void 0, void 0, function () {
                return __generator(this, function (_a) {
                    return [2 /*return*/, this.provider.findManySubscriptions(this.getCustomerId(user))];
                });
            });
        };
        PaymentService_1.prototype.findManyPayments = function (user) {
            return __awaiter(this, void 0, void 0, function () {
                return __generator(this, function (_a) {
                    return [2 /*return*/, this.provider.findManyPayments(this.getCustomerId(user))];
                });
            });
        };
        PaymentService_1.prototype.createPaymentLink = function (options) {
            return __awaiter(this, void 0, void 0, function () {
                var optionsPayment;
                return __generator(this, function (_a) {
                    optionsPayment = __assign(__assign({}, options), { customerId: this.getCustomerId(options.user) });
                    return [2 /*return*/, this.provider.createPaymentLink(optionsPayment)];
                });
            });
        };
        PaymentService_1.prototype.onPayment = function (body, sig) {
            return __awaiter(this, void 0, void 0, function () {
                return __generator(this, function (_a) {
                    return [2 /*return*/, this.provider.onPayment(body, sig)];
                });
            });
        };
        PaymentService_1.prototype.createCustomer = function (user) {
            var _a;
            return __awaiter(this, void 0, void 0, function () {
                return __generator(this, function (_b) {
                    return [2 /*return*/, this.provider.createCustomer({
                            name: (_a = user.name) !== null && _a !== void 0 ? _a : user.email,
                            email: user.email,
                        })];
                });
            });
        };
        return PaymentService_1;
    }());
    __setFunctionName(_classThis, "PaymentService");
    (function () {
        var _metadata = typeof Symbol === "function" && Symbol.metadata ? Object.create(null) : void 0;
        __esDecorate(null, _classDescriptor = { value: _classThis }, _classDecorators, { kind: "class", name: _classThis.name, metadata: _metadata }, null, _classExtraInitializers);
        PaymentService = _classThis = _classDescriptor.value;
        if (_metadata) Object.defineProperty(_classThis, Symbol.metadata, { enumerable: true, configurable: true, writable: true, value: _metadata });
        __runInitializers(_classThis, _classExtraInitializers);
    })();
    return PaymentService = _classThis;
}();
exports.PaymentService = PaymentService;


// C:\grua-booking-system-25\server\dist\libraries\payment\internal\providers\stripe\stripe.provider.js
"use strict";
var __esDecorate = (this && this.__esDecorate) || function (ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {
    function accept(f) { if (f !== void 0 && typeof f !== "function") throw new TypeError("Function expected"); return f; }
    var kind = contextIn.kind, key = kind === "getter" ? "get" : kind === "setter" ? "set" : "value";
    var target = !descriptorIn && ctor ? contextIn["static"] ? ctor : ctor.prototype : null;
    var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});
    var _, done = false;
    for (var i = decorators.length - 1; i >= 0; i--) {
        var context = {};
        for (var p in contextIn) context[p] = p === "access" ? {} : contextIn[p];
        for (var p in contextIn.access) context.access[p] = contextIn.access[p];
        context.addInitializer = function (f) { if (done) throw new TypeError("Cannot add initializers after decoration has completed"); extraInitializers.push(accept(f || null)); };
        var result = (0, decorators[i])(kind === "accessor" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);
        if (kind === "accessor") {
            if (result === void 0) continue;
            if (result === null || typeof result !== "object") throw new TypeError("Object expected");
            if (_ = accept(result.get)) descriptor.get = _;
            if (_ = accept(result.set)) descriptor.set = _;
            if (_ = accept(result.init)) initializers.unshift(_);
        }
        else if (_ = accept(result)) {
            if (kind === "field") initializers.unshift(_);
            else descriptor[key] = _;
        }
    }
    if (target) Object.defineProperty(target, contextIn.name, descriptor);
    done = true;
};
var __runInitializers = (this && this.__runInitializers) || function (thisArg, initializers, value) {
    var useValue = arguments.length > 2;
    for (var i = 0; i < initializers.length; i++) {
        value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);
    }
    return useValue ? value : void 0;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (g && (g = 0, op[0] && (_ = 0)), _) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __setFunctionName = (this && this.__setFunctionName) || function (f, name, prefix) {
    if (typeof name === "symbol") name = name.description ? "[".concat(name.description, "]") : "";
    return Object.defineProperty(f, "name", { configurable: true, value: prefix ? "".concat(prefix, " ", name) : name });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.StripeProvider = void 0;
var common_1 = require("@nestjs/common");
var stripe_1 = require("stripe");
var payment_type_1 = require("../../payment.type");
var StripeProvider = function () {
    var _classDecorators = [(0, common_1.Injectable)()];
    var _classDescriptor;
    var _classExtraInitializers = [];
    var _classThis;
    var StripeProvider = _classThis = /** @class */ (function () {
        function StripeProvider_1(configurationService, loggerService) {
            this.configurationService = configurationService;
            this.loggerService = loggerService;
            this.logger = this.loggerService.create({ name: 'StripeProvider' });
            this.initialise();
        }
        StripeProvider_1.prototype.isActive = function () {
            if (this.client) {
                return true;
            }
            else {
                return false;
            }
        };
        StripeProvider_1.prototype.initialise = function () {
            this.logger.log('Initialization...');
            try {
                var secretKey = this.configurationService.get('SERVER_PAYMENT_STRIPE_SECRET_KEY');
                this.webhookSecret = this.configurationService.get('SERVER_PAYMENT_STRIPE_WEBHOOK_SECRET');
                if (!this.webhookSecret && !secretKey) {
                    throw new Error('Set SERVER_PAYMENT_STRIPE_SECRET_KEY && SERVER_PAYMENT_STRIPE_WEBHOOK_SECRET in your .env to activate');
                }
                if (!this.webhookSecret) {
                    throw new Error('Set SERVER_PAYMENT_STRIPE_WEBHOOK_SECRET in your .env to activate');
                }
                if (!secretKey) {
                    throw new Error('Set SERVER_PAYMENT_STRIPE_SECRET_KEY in your .env to activate');
                }
                this.client = new stripe_1.Stripe(secretKey, {
                    apiVersion: '2024-04-10',
                });
                this.logger.success("Stripe active");
            }
            catch (error) {
                this.logger.warning("Stripe failed to start");
                this.logger.warning(error);
            }
        };
        StripeProvider_1.prototype.findManySubscriptions = function (customerId) {
            var _a, _b, _c;
            return __awaiter(this, void 0, void 0, function () {
                var response, subscriptions, _i, _d, subscription;
                return __generator(this, function (_e) {
                    switch (_e.label) {
                        case 0: return [4 /*yield*/, this.client.subscriptions.list({
                                customer: customerId,
                            })];
                        case 1:
                            response = _e.sent();
                            subscriptions = [];
                            for (_i = 0, _d = response.data; _i < _d.length; _i++) {
                                subscription = _d[_i];
                                subscriptions.push({
                                    productId: (_c = (_b = (_a = subscription.items) === null || _a === void 0 ? void 0 : _a.data) === null || _b === void 0 ? void 0 : _b[0].price) === null || _c === void 0 ? void 0 : _c.product,
                                    dateExpired: new Date(subscription.current_period_end * 1000),
                                    status: subscription.status,
                                });
                            }
                            return [2 /*return*/, subscriptions];
                    }
                });
            });
        };
        StripeProvider_1.prototype.findManyPayments = function (customerId) {
            var _a;
            return __awaiter(this, void 0, void 0, function () {
                var response, checkoutSessions, payments, _i, checkoutSessions_1, session, _b, _c, lineItem;
                return __generator(this, function (_d) {
                    switch (_d.label) {
                        case 0: return [4 /*yield*/, this.client.checkout.sessions.list({
                                expand: ['data.line_items'],
                                customer: customerId,
                            })];
                        case 1:
                            response = _d.sent();
                            checkoutSessions = (_a = response.data) === null || _a === void 0 ? void 0 : _a.filter(function (session) { return session.payment_status === 'paid'; });
                            payments = [];
                            for (_i = 0, checkoutSessions_1 = checkoutSessions; _i < checkoutSessions_1.length; _i++) {
                                session = checkoutSessions_1[_i];
                                for (_b = 0, _c = session.line_items.data; _b < _c.length; _b++) {
                                    lineItem = _c[_b];
                                    payments.push({
                                        productId: lineItem.price.product,
                                        amount: lineItem.price.unit_amount / 100,
                                        currency: lineItem.price.currency,
                                        date: new Date(session.created * 1000),
                                    });
                                }
                            }
                            return [2 /*return*/, payments];
                    }
                });
            });
        };
        StripeProvider_1.prototype.findManyProducts = function () {
            var _a;
            return __awaiter(this, void 0, void 0, function () {
                var response, products, _i, _b, item, product, price;
                return __generator(this, function (_c) {
                    switch (_c.label) {
                        case 0: return [4 /*yield*/, this.client.products.list({
                                expand: ['data.default_price'],
                            })];
                        case 1:
                            response = _c.sent();
                            products = [];
                            for (_i = 0, _b = response.data; _i < _b.length; _i++) {
                                item = _b[_i];
                                product = {
                                    id: item.id,
                                    type: payment_type_1.ProductType.ONE_TIME,
                                    name: item.name,
                                    price: 0,
                                    description: item.description,
                                };
                                price = item.default_price;
                                if (price === null || price === void 0 ? void 0 : price.recurring) {
                                    product.type = payment_type_1.ProductType.SUBSCRIPTION;
                                }
                                product.price = (_a = (price === null || price === void 0 ? void 0 : price.unit_amount) / 100) !== null && _a !== void 0 ? _a : 0;
                                products.push(product);
                            }
                            return [2 /*return*/, products];
                    }
                });
            });
        };
        StripeProvider_1.prototype.onPayment = function (body, sig) {
            var _a, _b;
            return __awaiter(this, void 0, void 0, function () {
                var event_1, data;
                return __generator(this, function (_c) {
                    try {
                        event_1 = this.client.webhooks.constructEvent(body.toString(), sig, this.webhookSecret);
                        data = (_a = event_1.data) === null || _a === void 0 ? void 0 : _a.object;
                        if (event_1.type === 'checkout.session.completed') {
                            this.logger.success("Stripe event \"".concat(event_1.type, "\" received"));
                            return [2 /*return*/, {
                                    userId: data.client_reference_id,
                                    stripeCustomerId: data.customer,
                                    metadata: (_b = data.metadata) !== null && _b !== void 0 ? _b : {},
                                    customerDetails: data.customer_details,
                                }];
                        }
                        this.logger.log("Stripe event \"".concat(event_1.type, "\" is not handled."));
                        return [2 /*return*/, null];
                    }
                    catch (error) {
                        throw new Error("Could not check webhook: ".concat(error.message));
                    }
                    return [2 /*return*/];
                });
            });
        };
        StripeProvider_1.prototype.createPaymentLink = function (_a) {
            var customerId = _a.customerId, productId = _a.productId, urlRedirection = _a.urlRedirection, _b = _a.metadata, metadata = _b === void 0 ? {} : _b;
            return __awaiter(this, void 0, void 0, function () {
                var price, session;
                return __generator(this, function (_c) {
                    switch (_c.label) {
                        case 0: return [4 /*yield*/, this.findOnePriceByIdOrFail(productId)];
                        case 1:
                            price = _c.sent();
                            return [4 /*yield*/, this.client.checkout.sessions.create({
                                    line_items: [
                                        {
                                            price: price.id,
                                            quantity: 1,
                                        },
                                    ],
                                    mode: price.recurring ? 'subscription' : 'payment',
                                    customer: customerId,
                                    ui_mode: 'hosted',
                                    success_url: urlRedirection,
                                    metadata: metadata,
                                })];
                        case 2:
                            session = _c.sent();
                            return [2 /*return*/, session.url];
                    }
                });
            });
        };
        StripeProvider_1.prototype.createCustomer = function (customer) {
            return __awaiter(this, void 0, void 0, function () {
                var result;
                return __generator(this, function (_a) {
                    switch (_a.label) {
                        case 0: return [4 /*yield*/, this.client.customers.create({
                                name: customer.name,
                                email: customer.email,
                            })];
                        case 1:
                            result = _a.sent();
                            return [2 /*return*/, result.id];
                    }
                });
            });
        };
        StripeProvider_1.prototype.findOnePriceByIdOrFail = function (productId) {
            var _a;
            return __awaiter(this, void 0, void 0, function () {
                var prices, price;
                return __generator(this, function (_b) {
                    switch (_b.label) {
                        case 0: return [4 /*yield*/, this.client.prices.list({
                                product: productId,
                                limit: 1,
                            })];
                        case 1:
                            prices = _b.sent();
                            price = (_a = prices.data) === null || _a === void 0 ? void 0 : _a[0];
                            if (!price) {
                                throw new Error("Could not find price for product ".concat(productId));
                            }
                            return [2 /*return*/, price];
                    }
                });
            });
        };
        return StripeProvider_1;
    }());
    __setFunctionName(_classThis, "StripeProvider");
    (function () {
        var _metadata = typeof Symbol === "function" && Symbol.metadata ? Object.create(null) : void 0;
        __esDecorate(null, _classDescriptor = { value: _classThis }, _classDecorators, { kind: "class", name: _classThis.name, metadata: _metadata }, null, _classExtraInitializers);
        StripeProvider = _classThis = _classDescriptor.value;
        if (_metadata) Object.defineProperty(_classThis, Symbol.metadata, { enumerable: true, configurable: true, writable: true, value: _metadata });
        __runInitializers(_classThis, _classExtraInitializers);
    })();
    return StripeProvider = _classThis;
}();
exports.StripeProvider = StripeProvider;


// C:\grua-booking-system-25\server\dist\libraries\payment\internal\providers\provider.js
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });


// C:\grua-booking-system-25\server\dist\libraries\payment\internal\providers\stripe\stripe.provider.js
"use strict";
var __esDecorate = (this && this.__esDecorate) || function (ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {
    function accept(f) { if (f !== void 0 && typeof f !== "function") throw new TypeError("Function expected"); return f; }
    var kind = contextIn.kind, key = kind === "getter" ? "get" : kind === "setter" ? "set" : "value";
    var target = !descriptorIn && ctor ? contextIn["static"] ? ctor : ctor.prototype : null;
    var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});
    var _, done = false;
    for (var i = decorators.length - 1; i >= 0; i--) {
        var context = {};
        for (var p in contextIn) context[p] = p === "access" ? {} : contextIn[p];
        for (var p in contextIn.access) context.access[p] = contextIn.access[p];
        context.addInitializer = function (f) { if (done) throw new TypeError("Cannot add initializers after decoration has completed"); extraInitializers.push(accept(f || null)); };
        var result = (0, decorators[i])(kind === "accessor" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);
        if (kind === "accessor") {
            if (result === void 0) continue;
            if (result === null || typeof result !== "object") throw new TypeError("Object expected");
            if (_ = accept(result.get)) descriptor.get = _;
            if (_ = accept(result.set)) descriptor.set = _;
            if (_ = accept(result.init)) initializers.unshift(_);
        }
        else if (_ = accept(result)) {
            if (kind === "field") initializers.unshift(_);
            else descriptor[key] = _;
        }
    }
    if (target) Object.defineProperty(target, contextIn.name, descriptor);
    done = true;
};
var __runInitializers = (this && this.__runInitializers) || function (thisArg, initializers, value) {
    var useValue = arguments.length > 2;
    for (var i = 0; i < initializers.length; i++) {
        value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);
    }
    return useValue ? value : void 0;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (g && (g = 0, op[0] && (_ = 0)), _) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __setFunctionName = (this && this.__setFunctionName) || function (f, name, prefix) {
    if (typeof name === "symbol") name = name.description ? "[".concat(name.description, "]") : "";
    return Object.defineProperty(f, "name", { configurable: true, value: prefix ? "".concat(prefix, " ", name) : name });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.StripeProvider = void 0;
var common_1 = require("@nestjs/common");
var stripe_1 = require("stripe");
var payment_type_1 = require("../../payment.type");
var StripeProvider = function () {
    var _classDecorators = [(0, common_1.Injectable)()];
    var _classDescriptor;
    var _classExtraInitializers = [];
    var _classThis;
    var StripeProvider = _classThis = /** @class */ (function () {
        function StripeProvider_1(configurationService, loggerService) {
            this.configurationService = configurationService;
            this.loggerService = loggerService;
            this.logger = this.loggerService.create({ name: 'StripeProvider' });
            this.initialise();
        }
        StripeProvider_1.prototype.isActive = function () {
            if (this.client) {
                return true;
            }
            else {
                return false;
            }
        };
        StripeProvider_1.prototype.initialise = function () {
            this.logger.log('Initialization...');
            try {
                var secretKey = this.configurationService.get('SERVER_PAYMENT_STRIPE_SECRET_KEY');
                this.webhookSecret = this.configurationService.get('SERVER_PAYMENT_STRIPE_WEBHOOK_SECRET');
                if (!this.webhookSecret && !secretKey) {
                    throw new Error('Set SERVER_PAYMENT_STRIPE_SECRET_KEY && SERVER_PAYMENT_STRIPE_WEBHOOK_SECRET in your .env to activate');
                }
                if (!this.webhookSecret) {
                    throw new Error('Set SERVER_PAYMENT_STRIPE_WEBHOOK_SECRET in your .env to activate');
                }
                if (!secretKey) {
                    throw new Error('Set SERVER_PAYMENT_STRIPE_SECRET_KEY in your .env to activate');
                }
                this.client = new stripe_1.Stripe(secretKey, {
                    apiVersion: '2024-04-10',
                });
                this.logger.success("Stripe active");
            }
            catch (error) {
                this.logger.warning("Stripe failed to start");
                this.logger.warning(error);
            }
        };
        StripeProvider_1.prototype.findManySubscriptions = function (customerId) {
            var _a, _b, _c;
            return __awaiter(this, void 0, void 0, function () {
                var response, subscriptions, _i, _d, subscription;
                return __generator(this, function (_e) {
                    switch (_e.label) {
                        case 0: return [4 /*yield*/, this.client.subscriptions.list({
                                customer: customerId,
                            })];
                        case 1:
                            response = _e.sent();
                            subscriptions = [];
                            for (_i = 0, _d = response.data; _i < _d.length; _i++) {
                                subscription = _d[_i];
                                subscriptions.push({
                                    productId: (_c = (_b = (_a = subscription.items) === null || _a === void 0 ? void 0 : _a.data) === null || _b === void 0 ? void 0 : _b[0].price) === null || _c === void 0 ? void 0 : _c.product,
                                    dateExpired: new Date(subscription.current_period_end * 1000),
                                    status: subscription.status,
                                });
                            }
                            return [2 /*return*/, subscriptions];
                    }
                });
            });
        };
        StripeProvider_1.prototype.findManyPayments = function (customerId) {
            var _a;
            return __awaiter(this, void 0, void 0, function () {
                var response, checkoutSessions, payments, _i, checkoutSessions_1, session, _b, _c, lineItem;
                return __generator(this, function (_d) {
                    switch (_d.label) {
                        case 0: return [4 /*yield*/, this.client.checkout.sessions.list({
                                expand: ['data.line_items'],
                                customer: customerId,
                            })];
                        case 1:
                            response = _d.sent();
                            checkoutSessions = (_a = response.data) === null || _a === void 0 ? void 0 : _a.filter(function (session) { return session.payment_status === 'paid'; });
                            payments = [];
                            for (_i = 0, checkoutSessions_1 = checkoutSessions; _i < checkoutSessions_1.length; _i++) {
                                session = checkoutSessions_1[_i];
                                for (_b = 0, _c = session.line_items.data; _b < _c.length; _b++) {
                                    lineItem = _c[_b];
                                    payments.push({
                                        productId: lineItem.price.product,
                                        amount: lineItem.price.unit_amount / 100,
                                        currency: lineItem.price.currency,
                                        date: new Date(session.created * 1000),
                                    });
                                }
                            }
                            return [2 /*return*/, payments];
                    }
                });
            });
        };
        StripeProvider_1.prototype.findManyProducts = function () {
            var _a;
            return __awaiter(this, void 0, void 0, function () {
                var response, products, _i, _b, item, product, price;
                return __generator(this, function (_c) {
                    switch (_c.label) {
                        case 0: return [4 /*yield*/, this.client.products.list({
                                expand: ['data.default_price'],
                            })];
                        case 1:
                            response = _c.sent();
                            products = [];
                            for (_i = 0, _b = response.data; _i < _b.length; _i++) {
                                item = _b[_i];
                                product = {
                                    id: item.id,
                                    type: payment_type_1.ProductType.ONE_TIME,
                                    name: item.name,
                                    price: 0,
                                    description: item.description,
                                };
                                price = item.default_price;
                                if (price === null || price === void 0 ? void 0 : price.recurring) {
                                    product.type = payment_type_1.ProductType.SUBSCRIPTION;
                                }
                                product.price = (_a = (price === null || price === void 0 ? void 0 : price.unit_amount) / 100) !== null && _a !== void 0 ? _a : 0;
                                products.push(product);
                            }
                            return [2 /*return*/, products];
                    }
                });
            });
        };
        StripeProvider_1.prototype.onPayment = function (body, sig) {
            var _a, _b;
            return __awaiter(this, void 0, void 0, function () {
                var event_1, data;
                return __generator(this, function (_c) {
                    try {
                        event_1 = this.client.webhooks.constructEvent(body.toString(), sig, this.webhookSecret);
                        data = (_a = event_1.data) === null || _a === void 0 ? void 0 : _a.object;
                        if (event_1.type === 'checkout.session.completed') {
                            this.logger.success("Stripe event \"".concat(event_1.type, "\" received"));
                            return [2 /*return*/, {
                                    userId: data.client_reference_id,
                                    stripeCustomerId: data.customer,
                                    metadata: (_b = data.metadata) !== null && _b !== void 0 ? _b : {},
                                    customerDetails: data.customer_details,
                                }];
                        }
                        this.logger.log("Stripe event \"".concat(event_1.type, "\" is not handled."));
                        return [2 /*return*/, null];
                    }
                    catch (error) {
                        throw new Error("Could not check webhook: ".concat(error.message));
                    }
                    return [2 /*return*/];
                });
            });
        };
        StripeProvider_1.prototype.createPaymentLink = function (_a) {
            var customerId = _a.customerId, productId = _a.productId, urlRedirection = _a.urlRedirection, _b = _a.metadata, metadata = _b === void 0 ? {} : _b;
            return __awaiter(this, void 0, void 0, function () {
                var price, session;
                return __generator(this, function (_c) {
                    switch (_c.label) {
                        case 0: return [4 /*yield*/, this.findOnePriceByIdOrFail(productId)];
                        case 1:
                            price = _c.sent();
                            return [4 /*yield*/, this.client.checkout.sessions.create({
                                    line_items: [
                                        {
                                            price: price.id,
                                            quantity: 1,
                                        },
                                    ],
                                    mode: price.recurring ? 'subscription' : 'payment',
                                    customer: customerId,
                                    ui_mode: 'hosted',
                                    success_url: urlRedirection,
                                    metadata: metadata,
                                })];
                        case 2:
                            session = _c.sent();
                            return [2 /*return*/, session.url];
                    }
                });
            });
        };
        StripeProvider_1.prototype.createCustomer = function (customer) {
            return __awaiter(this, void 0, void 0, function () {
                var result;
                return __generator(this, function (_a) {
                    switch (_a.label) {
                        case 0: return [4 /*yield*/, this.client.customers.create({
                                name: customer.name,
                                email: customer.email,
                            })];
                        case 1:
                            result = _a.sent();
                            return [2 /*return*/, result.id];
                    }
                });
            });
        };
        StripeProvider_1.prototype.findOnePriceByIdOrFail = function (productId) {
            var _a;
            return __awaiter(this, void 0, void 0, function () {
                var prices, price;
                return __generator(this, function (_b) {
                    switch (_b.label) {
                        case 0: return [4 /*yield*/, this.client.prices.list({
                                product: productId,
                                limit: 1,
                            })];
                        case 1:
                            prices = _b.sent();
                            price = (_a = prices.data) === null || _a === void 0 ? void 0 : _a[0];
                            if (!price) {
                                throw new Error("Could not find price for product ".concat(productId));
                            }
                            return [2 /*return*/, price];
                    }
                });
            });
        };
        return StripeProvider_1;
    }());
    __setFunctionName(_classThis, "StripeProvider");
    (function () {
        var _metadata = typeof Symbol === "function" && Symbol.metadata ? Object.create(null) : void 0;
        __esDecorate(null, _classDescriptor = { value: _classThis }, _classDecorators, { kind: "class", name: _classThis.name, metadata: _metadata }, null, _classExtraInitializers);
        StripeProvider = _classThis = _classDescriptor.value;
        if (_metadata) Object.defineProperty(_classThis, Symbol.metadata, { enumerable: true, configurable: true, writable: true, value: _metadata });
        __runInitializers(_classThis, _classExtraInitializers);
    })();
    return StripeProvider = _classThis;
}();
exports.StripeProvider = StripeProvider;


// C:\grua-booking-system-25\server\dist\libraries\payment\internal\payment.type.js
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ProductType = void 0;
var ProductType;
(function (ProductType) {
    ProductType["SUBSCRIPTION"] = "SUBSCRIPTION";
    ProductType["ONE_TIME"] = "ONE_TIME";
})(ProductType || (exports.ProductType = ProductType = {}));


// C:\grua-booking-system-25\server\dist\libraries\payment\internal\providers\stripe\stripe.provider.js
"use strict";
var __esDecorate = (this && this.__esDecorate) || function (ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {
    function accept(f) { if (f !== void 0 && typeof f !== "function") throw new TypeError("Function expected"); return f; }
    var kind = contextIn.kind, key = kind === "getter" ? "get" : kind === "setter" ? "set" : "value";
    var target = !descriptorIn && ctor ? contextIn["static"] ? ctor : ctor.prototype : null;
    var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});
    var _, done = false;
    for (var i = decorators.length - 1; i >= 0; i--) {
        var context = {};
        for (var p in contextIn) context[p] = p === "access" ? {} : contextIn[p];
        for (var p in contextIn.access) context.access[p] = contextIn.access[p];
        context.addInitializer = function (f) { if (done) throw new TypeError("Cannot add initializers after decoration has completed"); extraInitializers.push(accept(f || null)); };
        var result = (0, decorators[i])(kind === "accessor" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);
        if (kind === "accessor") {
            if (result === void 0) continue;
            if (result === null || typeof result !== "object") throw new TypeError("Object expected");
            if (_ = accept(result.get)) descriptor.get = _;
            if (_ = accept(result.set)) descriptor.set = _;
            if (_ = accept(result.init)) initializers.unshift(_);
        }
        else if (_ = accept(result)) {
            if (kind === "field") initializers.unshift(_);
            else descriptor[key] = _;
        }
    }
    if (target) Object.defineProperty(target, contextIn.name, descriptor);
    done = true;
};
var __runInitializers = (this && this.__runInitializers) || function (thisArg, initializers, value) {
    var useValue = arguments.length > 2;
    for (var i = 0; i < initializers.length; i++) {
        value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);
    }
    return useValue ? value : void 0;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (g && (g = 0, op[0] && (_ = 0)), _) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __setFunctionName = (this && this.__setFunctionName) || function (f, name, prefix) {
    if (typeof name === "symbol") name = name.description ? "[".concat(name.description, "]") : "";
    return Object.defineProperty(f, "name", { configurable: true, value: prefix ? "".concat(prefix, " ", name) : name });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.StripeProvider = void 0;
var common_1 = require("@nestjs/common");
var stripe_1 = require("stripe");
var payment_type_1 = require("../../payment.type");
var StripeProvider = function () {
    var _classDecorators = [(0, common_1.Injectable)()];
    var _classDescriptor;
    var _classExtraInitializers = [];
    var _classThis;
    var StripeProvider = _classThis = /** @class */ (function () {
        function StripeProvider_1(configurationService, loggerService) {
            this.configurationService = configurationService;
            this.loggerService = loggerService;
            this.logger = this.loggerService.create({ name: 'StripeProvider' });
            this.initialise();
        }
        StripeProvider_1.prototype.isActive = function () {
            if (this.client) {
                return true;
            }
            else {
                return false;
            }
        };
        StripeProvider_1.prototype.initialise = function () {
            this.logger.log('Initialization...');
            try {
                var secretKey = this.configurationService.get('SERVER_PAYMENT_STRIPE_SECRET_KEY');
                this.webhookSecret = this.configurationService.get('SERVER_PAYMENT_STRIPE_WEBHOOK_SECRET');
                if (!this.webhookSecret && !secretKey) {
                    throw new Error('Set SERVER_PAYMENT_STRIPE_SECRET_KEY && SERVER_PAYMENT_STRIPE_WEBHOOK_SECRET in your .env to activate');
                }
                if (!this.webhookSecret) {
                    throw new Error('Set SERVER_PAYMENT_STRIPE_WEBHOOK_SECRET in your .env to activate');
                }
                if (!secretKey) {
                    throw new Error('Set SERVER_PAYMENT_STRIPE_SECRET_KEY in your .env to activate');
                }
                this.client = new stripe_1.Stripe(secretKey, {
                    apiVersion: '2024-04-10',
                });
                this.logger.success("Stripe active");
            }
            catch (error) {
                this.logger.warning("Stripe failed to start");
                this.logger.warning(error);
            }
        };
        StripeProvider_1.prototype.findManySubscriptions = function (customerId) {
            var _a, _b, _c;
            return __awaiter(this, void 0, void 0, function () {
                var response, subscriptions, _i, _d, subscription;
                return __generator(this, function (_e) {
                    switch (_e.label) {
                        case 0: return [4 /*yield*/, this.client.subscriptions.list({
                                customer: customerId,
                            })];
                        case 1:
                            response = _e.sent();
                            subscriptions = [];
                            for (_i = 0, _d = response.data; _i < _d.length; _i++) {
                                subscription = _d[_i];
                                subscriptions.push({
                                    productId: (_c = (_b = (_a = subscription.items) === null || _a === void 0 ? void 0 : _a.data) === null || _b === void 0 ? void 0 : _b[0].price) === null || _c === void 0 ? void 0 : _c.product,
                                    dateExpired: new Date(subscription.current_period_end * 1000),
                                    status: subscription.status,
                                });
                            }
                            return [2 /*return*/, subscriptions];
                    }
                });
            });
        };
        StripeProvider_1.prototype.findManyPayments = function (customerId) {
            var _a;
            return __awaiter(this, void 0, void 0, function () {
                var response, checkoutSessions, payments, _i, checkoutSessions_1, session, _b, _c, lineItem;
                return __generator(this, function (_d) {
                    switch (_d.label) {
                        case 0: return [4 /*yield*/, this.client.checkout.sessions.list({
                                expand: ['data.line_items'],
                                customer: customerId,
                            })];
                        case 1:
                            response = _d.sent();
                            checkoutSessions = (_a = response.data) === null || _a === void 0 ? void 0 : _a.filter(function (session) { return session.payment_status === 'paid'; });
                            payments = [];
                            for (_i = 0, checkoutSessions_1 = checkoutSessions; _i < checkoutSessions_1.length; _i++) {
                                session = checkoutSessions_1[_i];
                                for (_b = 0, _c = session.line_items.data; _b < _c.length; _b++) {
                                    lineItem = _c[_b];
                                    payments.push({
                                        productId: lineItem.price.product,
                                        amount: lineItem.price.unit_amount / 100,
                                        currency: lineItem.price.currency,
                                        date: new Date(session.created * 1000),
                                    });
                                }
                            }
                            return [2 /*return*/, payments];
                    }
                });
            });
        };
        StripeProvider_1.prototype.findManyProducts = function () {
            var _a;
            return __awaiter(this, void 0, void 0, function () {
                var response, products, _i, _b, item, product, price;
                return __generator(this, function (_c) {
                    switch (_c.label) {
                        case 0: return [4 /*yield*/, this.client.products.list({
                                expand: ['data.default_price'],
                            })];
                        case 1:
                            response = _c.sent();
                            products = [];
                            for (_i = 0, _b = response.data; _i < _b.length; _i++) {
                                item = _b[_i];
                                product = {
                                    id: item.id,
                                    type: payment_type_1.ProductType.ONE_TIME,
                                    name: item.name,
                                    price: 0,
                                    description: item.description,
                                };
                                price = item.default_price;
                                if (price === null || price === void 0 ? void 0 : price.recurring) {
                                    product.type = payment_type_1.ProductType.SUBSCRIPTION;
                                }
                                product.price = (_a = (price === null || price === void 0 ? void 0 : price.unit_amount) / 100) !== null && _a !== void 0 ? _a : 0;
                                products.push(product);
                            }
                            return [2 /*return*/, products];
                    }
                });
            });
        };
        StripeProvider_1.prototype.onPayment = function (body, sig) {
            var _a, _b;
            return __awaiter(this, void 0, void 0, function () {
                var event_1, data;
                return __generator(this, function (_c) {
                    try {
                        event_1 = this.client.webhooks.constructEvent(body.toString(), sig, this.webhookSecret);
                        data = (_a = event_1.data) === null || _a === void 0 ? void 0 : _a.object;
                        if (event_1.type === 'checkout.session.completed') {
                            this.logger.success("Stripe event \"".concat(event_1.type, "\" received"));
                            return [2 /*return*/, {
                                    userId: data.client_reference_id,
                                    stripeCustomerId: data.customer,
                                    metadata: (_b = data.metadata) !== null && _b !== void 0 ? _b : {},
                                    customerDetails: data.customer_details,
                                }];
                        }
                        this.logger.log("Stripe event \"".concat(event_1.type, "\" is not handled."));
                        return [2 /*return*/, null];
                    }
                    catch (error) {
                        throw new Error("Could not check webhook: ".concat(error.message));
                    }
                    return [2 /*return*/];
                });
            });
        };
        StripeProvider_1.prototype.createPaymentLink = function (_a) {
            var customerId = _a.customerId, productId = _a.productId, urlRedirection = _a.urlRedirection, _b = _a.metadata, metadata = _b === void 0 ? {} : _b;
            return __awaiter(this, void 0, void 0, function () {
                var price, session;
                return __generator(this, function (_c) {
                    switch (_c.label) {
                        case 0: return [4 /*yield*/, this.findOnePriceByIdOrFail(productId)];
                        case 1:
                            price = _c.sent();
                            return [4 /*yield*/, this.client.checkout.sessions.create({
                                    line_items: [
                                        {
                                            price: price.id,
                                            quantity: 1,
                                        },
                                    ],
                                    mode: price.recurring ? 'subscription' : 'payment',
                                    customer: customerId,
                                    ui_mode: 'hosted',
                                    success_url: urlRedirection,
                                    metadata: metadata,
                                })];
                        case 2:
                            session = _c.sent();
                            return [2 /*return*/, session.url];
                    }
                });
            });
        };
        StripeProvider_1.prototype.createCustomer = function (customer) {
            return __awaiter(this, void 0, void 0, function () {
                var result;
                return __generator(this, function (_a) {
                    switch (_a.label) {
                        case 0: return [4 /*yield*/, this.client.customers.create({
                                name: customer.name,
                                email: customer.email,
                            })];
                        case 1:
                            result = _a.sent();
                            return [2 /*return*/, result.id];
                    }
                });
            });
        };
        StripeProvider_1.prototype.findOnePriceByIdOrFail = function (productId) {
            var _a;
            return __awaiter(this, void 0, void 0, function () {
                var prices, price;
                return __generator(this, function (_b) {
                    switch (_b.label) {
                        case 0: return [4 /*yield*/, this.client.prices.list({
                                product: productId,
                                limit: 1,
                            })];
                        case 1:
                            prices = _b.sent();
                            price = (_a = prices.data) === null || _a === void 0 ? void 0 : _a[0];
                            if (!price) {
                                throw new Error("Could not find price for product ".concat(productId));
                            }
                            return [2 /*return*/, price];
                    }
                });
            });
        };
        return StripeProvider_1;
    }());
    __setFunctionName(_classThis, "StripeProvider");
    (function () {
        var _metadata = typeof Symbol === "function" && Symbol.metadata ? Object.create(null) : void 0;
        __esDecorate(null, _classDescriptor = { value: _classThis }, _classDecorators, { kind: "class", name: _classThis.name, metadata: _metadata }, null, _classExtraInitializers);
        StripeProvider = _classThis = _classDescriptor.value;
        if (_metadata) Object.defineProperty(_classThis, Symbol.metadata, { enumerable: true, configurable: true, writable: true, value: _metadata });
        __runInitializers(_classThis, _classExtraInitializers);
    })();
    return StripeProvider = _classThis;
}();
exports.StripeProvider = StripeProvider;


// C:\grua-booking-system-25\server\dist\libraries\payment\internal\providers\provider.js
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });


// C:\grua-booking-system-25\server\dist\libraries\payment\internal\providers\stripe\stripe.provider.js
"use strict";
var __esDecorate = (this && this.__esDecorate) || function (ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {
    function accept(f) { if (f !== void 0 && typeof f !== "function") throw new TypeError("Function expected"); return f; }
    var kind = contextIn.kind, key = kind === "getter" ? "get" : kind === "setter" ? "set" : "value";
    var target = !descriptorIn && ctor ? contextIn["static"] ? ctor : ctor.prototype : null;
    var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});
    var _, done = false;
    for (var i = decorators.length - 1; i >= 0; i--) {
        var context = {};
        for (var p in contextIn) context[p] = p === "access" ? {} : contextIn[p];
        for (var p in contextIn.access) context.access[p] = contextIn.access[p];
        context.addInitializer = function (f) { if (done) throw new TypeError("Cannot add initializers after decoration has completed"); extraInitializers.push(accept(f || null)); };
        var result = (0, decorators[i])(kind === "accessor" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);
        if (kind === "accessor") {
            if (result === void 0) continue;
            if (result === null || typeof result !== "object") throw new TypeError("Object expected");
            if (_ = accept(result.get)) descriptor.get = _;
            if (_ = accept(result.set)) descriptor.set = _;
            if (_ = accept(result.init)) initializers.unshift(_);
        }
        else if (_ = accept(result)) {
            if (kind === "field") initializers.unshift(_);
            else descriptor[key] = _;
        }
    }
    if (target) Object.defineProperty(target, contextIn.name, descriptor);
    done = true;
};
var __runInitializers = (this && this.__runInitializers) || function (thisArg, initializers, value) {
    var useValue = arguments.length > 2;
    for (var i = 0; i < initializers.length; i++) {
        value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);
    }
    return useValue ? value : void 0;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (g && (g = 0, op[0] && (_ = 0)), _) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __setFunctionName = (this && this.__setFunctionName) || function (f, name, prefix) {
    if (typeof name === "symbol") name = name.description ? "[".concat(name.description, "]") : "";
    return Object.defineProperty(f, "name", { configurable: true, value: prefix ? "".concat(prefix, " ", name) : name });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.StripeProvider = void 0;
var common_1 = require("@nestjs/common");
var stripe_1 = require("stripe");
var payment_type_1 = require("../../payment.type");
var StripeProvider = function () {
    var _classDecorators = [(0, common_1.Injectable)()];
    var _classDescriptor;
    var _classExtraInitializers = [];
    var _classThis;
    var StripeProvider = _classThis = /** @class */ (function () {
        function StripeProvider_1(configurationService, loggerService) {
            this.configurationService = configurationService;
            this.loggerService = loggerService;
            this.logger = this.loggerService.create({ name: 'StripeProvider' });
            this.initialise();
        }
        StripeProvider_1.prototype.isActive = function () {
            if (this.client) {
                return true;
            }
            else {
                return false;
            }
        };
        StripeProvider_1.prototype.initialise = function () {
            this.logger.log('Initialization...');
            try {
                var secretKey = this.configurationService.get('SERVER_PAYMENT_STRIPE_SECRET_KEY');
                this.webhookSecret = this.configurationService.get('SERVER_PAYMENT_STRIPE_WEBHOOK_SECRET');
                if (!this.webhookSecret && !secretKey) {
                    throw new Error('Set SERVER_PAYMENT_STRIPE_SECRET_KEY && SERVER_PAYMENT_STRIPE_WEBHOOK_SECRET in your .env to activate');
                }
                if (!this.webhookSecret) {
                    throw new Error('Set SERVER_PAYMENT_STRIPE_WEBHOOK_SECRET in your .env to activate');
                }
                if (!secretKey) {
                    throw new Error('Set SERVER_PAYMENT_STRIPE_SECRET_KEY in your .env to activate');
                }
                this.client = new stripe_1.Stripe(secretKey, {
                    apiVersion: '2024-04-10',
                });
                this.logger.success("Stripe active");
            }
            catch (error) {
                this.logger.warning("Stripe failed to start");
                this.logger.warning(error);
            }
        };
        StripeProvider_1.prototype.findManySubscriptions = function (customerId) {
            var _a, _b, _c;
            return __awaiter(this, void 0, void 0, function () {
                var response, subscriptions, _i, _d, subscription;
                return __generator(this, function (_e) {
                    switch (_e.label) {
                        case 0: return [4 /*yield*/, this.client.subscriptions.list({
                                customer: customerId,
                            })];
                        case 1:
                            response = _e.sent();
                            subscriptions = [];
                            for (_i = 0, _d = response.data; _i < _d.length; _i++) {
                                subscription = _d[_i];
                                subscriptions.push({
                                    productId: (_c = (_b = (_a = subscription.items) === null || _a === void 0 ? void 0 : _a.data) === null || _b === void 0 ? void 0 : _b[0].price) === null || _c === void 0 ? void 0 : _c.product,
                                    dateExpired: new Date(subscription.current_period_end * 1000),
                                    status: subscription.status,
                                });
                            }
                            return [2 /*return*/, subscriptions];
                    }
                });
            });
        };
        StripeProvider_1.prototype.findManyPayments = function (customerId) {
            var _a;
            return __awaiter(this, void 0, void 0, function () {
                var response, checkoutSessions, payments, _i, checkoutSessions_1, session, _b, _c, lineItem;
                return __generator(this, function (_d) {
                    switch (_d.label) {
                        case 0: return [4 /*yield*/, this.client.checkout.sessions.list({
                                expand: ['data.line_items'],
                                customer: customerId,
                            })];
                        case 1:
                            response = _d.sent();
                            checkoutSessions = (_a = response.data) === null || _a === void 0 ? void 0 : _a.filter(function (session) { return session.payment_status === 'paid'; });
                            payments = [];
                            for (_i = 0, checkoutSessions_1 = checkoutSessions; _i < checkoutSessions_1.length; _i++) {
                                session = checkoutSessions_1[_i];
                                for (_b = 0, _c = session.line_items.data; _b < _c.length; _b++) {
                                    lineItem = _c[_b];
                                    payments.push({
                                        productId: lineItem.price.product,
                                        amount: lineItem.price.unit_amount / 100,
                                        currency: lineItem.price.currency,
                                        date: new Date(session.created * 1000),
                                    });
                                }
                            }
                            return [2 /*return*/, payments];
                    }
                });
            });
        };
        StripeProvider_1.prototype.findManyProducts = function () {
            var _a;
            return __awaiter(this, void 0, void 0, function () {
                var response, products, _i, _b, item, product, price;
                return __generator(this, function (_c) {
                    switch (_c.label) {
                        case 0: return [4 /*yield*/, this.client.products.list({
                                expand: ['data.default_price'],
                            })];
                        case 1:
                            response = _c.sent();
                            products = [];
                            for (_i = 0, _b = response.data; _i < _b.length; _i++) {
                                item = _b[_i];
                                product = {
                                    id: item.id,
                                    type: payment_type_1.ProductType.ONE_TIME,
                                    name: item.name,
                                    price: 0,
                                    description: item.description,
                                };
                                price = item.default_price;
                                if (price === null || price === void 0 ? void 0 : price.recurring) {
                                    product.type = payment_type_1.ProductType.SUBSCRIPTION;
                                }
                                product.price = (_a = (price === null || price === void 0 ? void 0 : price.unit_amount) / 100) !== null && _a !== void 0 ? _a : 0;
                                products.push(product);
                            }
                            return [2 /*return*/, products];
                    }
                });
            });
        };
        StripeProvider_1.prototype.onPayment = function (body, sig) {
            var _a, _b;
            return __awaiter(this, void 0, void 0, function () {
                var event_1, data;
                return __generator(this, function (_c) {
                    try {
                        event_1 = this.client.webhooks.constructEvent(body.toString(), sig, this.webhookSecret);
                        data = (_a = event_1.data) === null || _a === void 0 ? void 0 : _a.object;
                        if (event_1.type === 'checkout.session.completed') {
                            this.logger.success("Stripe event \"".concat(event_1.type, "\" received"));
                            return [2 /*return*/, {
                                    userId: data.client_reference_id,
                                    stripeCustomerId: data.customer,
                                    metadata: (_b = data.metadata) !== null && _b !== void 0 ? _b : {},
                                    customerDetails: data.customer_details,
                                }];
                        }
                        this.logger.log("Stripe event \"".concat(event_1.type, "\" is not handled."));
                        return [2 /*return*/, null];
                    }
                    catch (error) {
                        throw new Error("Could not check webhook: ".concat(error.message));
                    }
                    return [2 /*return*/];
                });
            });
        };
        StripeProvider_1.prototype.createPaymentLink = function (_a) {
            var customerId = _a.customerId, productId = _a.productId, urlRedirection = _a.urlRedirection, _b = _a.metadata, metadata = _b === void 0 ? {} : _b;
            return __awaiter(this, void 0, void 0, function () {
                var price, session;
                return __generator(this, function (_c) {
                    switch (_c.label) {
                        case 0: return [4 /*yield*/, this.findOnePriceByIdOrFail(productId)];
                        case 1:
                            price = _c.sent();
                            return [4 /*yield*/, this.client.checkout.sessions.create({
                                    line_items: [
                                        {
                                            price: price.id,
                                            quantity: 1,
                                        },
                                    ],
                                    mode: price.recurring ? 'subscription' : 'payment',
                                    customer: customerId,
                                    ui_mode: 'hosted',
                                    success_url: urlRedirection,
                                    metadata: metadata,
                                })];
                        case 2:
                            session = _c.sent();
                            return [2 /*return*/, session.url];
                    }
                });
            });
        };
        StripeProvider_1.prototype.createCustomer = function (customer) {
            return __awaiter(this, void 0, void 0, function () {
                var result;
                return __generator(this, function (_a) {
                    switch (_a.label) {
                        case 0: return [4 /*yield*/, this.client.customers.create({
                                name: customer.name,
                                email: customer.email,
                            })];
                        case 1:
                            result = _a.sent();
                            return [2 /*return*/, result.id];
                    }
                });
            });
        };
        StripeProvider_1.prototype.findOnePriceByIdOrFail = function (productId) {
            var _a;
            return __awaiter(this, void 0, void 0, function () {
                var prices, price;
                return __generator(this, function (_b) {
                    switch (_b.label) {
                        case 0: return [4 /*yield*/, this.client.prices.list({
                                product: productId,
                                limit: 1,
                            })];
                        case 1:
                            prices = _b.sent();
                            price = (_a = prices.data) === null || _a === void 0 ? void 0 : _a[0];
                            if (!price) {
                                throw new Error("Could not find price for product ".concat(productId));
                            }
                            return [2 /*return*/, price];
                    }
                });
            });
        };
        return StripeProvider_1;
    }());
    __setFunctionName(_classThis, "StripeProvider");
    (function () {
        var _metadata = typeof Symbol === "function" && Symbol.metadata ? Object.create(null) : void 0;
        __esDecorate(null, _classDescriptor = { value: _classThis }, _classDecorators, { kind: "class", name: _classThis.name, metadata: _metadata }, null, _classExtraInitializers);
        StripeProvider = _classThis = _classDescriptor.value;
        if (_metadata) Object.defineProperty(_classThis, Symbol.metadata, { enumerable: true, configurable: true, writable: true, value: _metadata });
        __runInitializers(_classThis, _classExtraInitializers);
    })();
    return StripeProvider = _classThis;
}();
exports.StripeProvider = StripeProvider;


// C:\grua-booking-system-25\server\dist\libraries\socket\index.js
"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", { value: true });
__exportStar(require("./socket.module"), exports);
__exportStar(require("./socket.service"), exports);


// C:\grua-booking-system-25\server\dist\libraries\socket\socket.module.js
"use strict";
var __esDecorate = (this && this.__esDecorate) || function (ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {
    function accept(f) { if (f !== void 0 && typeof f !== "function") throw new TypeError("Function expected"); return f; }
    var kind = contextIn.kind, key = kind === "getter" ? "get" : kind === "setter" ? "set" : "value";
    var target = !descriptorIn && ctor ? contextIn["static"] ? ctor : ctor.prototype : null;
    var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});
    var _, done = false;
    for (var i = decorators.length - 1; i >= 0; i--) {
        var context = {};
        for (var p in contextIn) context[p] = p === "access" ? {} : contextIn[p];
        for (var p in contextIn.access) context.access[p] = contextIn.access[p];
        context.addInitializer = function (f) { if (done) throw new TypeError("Cannot add initializers after decoration has completed"); extraInitializers.push(accept(f || null)); };
        var result = (0, decorators[i])(kind === "accessor" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);
        if (kind === "accessor") {
            if (result === void 0) continue;
            if (result === null || typeof result !== "object") throw new TypeError("Object expected");
            if (_ = accept(result.get)) descriptor.get = _;
            if (_ = accept(result.set)) descriptor.set = _;
            if (_ = accept(result.init)) initializers.unshift(_);
        }
        else if (_ = accept(result)) {
            if (kind === "field") initializers.unshift(_);
            else descriptor[key] = _;
        }
    }
    if (target) Object.defineProperty(target, contextIn.name, descriptor);
    done = true;
};
var __runInitializers = (this && this.__runInitializers) || function (thisArg, initializers, value) {
    var useValue = arguments.length > 2;
    for (var i = 0; i < initializers.length; i++) {
        value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);
    }
    return useValue ? value : void 0;
};
var __setFunctionName = (this && this.__setFunctionName) || function (f, name, prefix) {
    if (typeof name === "symbol") name = name.description ? "[".concat(name.description, "]") : "";
    return Object.defineProperty(f, "name", { configurable: true, value: prefix ? "".concat(prefix, " ", name) : name });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.SocketModule = void 0;
var common_1 = require("@nestjs/common");
var socket_server_1 = require("./socket.server");
var socket_service_1 = require("./socket.service");
var SocketModule = function () {
    var _classDecorators = [(0, common_1.Module)({
            imports: [],
            providers: [socket_service_1.SocketService, socket_server_1.SocketServer],
            exports: [socket_service_1.SocketService],
        })];
    var _classDescriptor;
    var _classExtraInitializers = [];
    var _classThis;
    var SocketModule = _classThis = /** @class */ (function () {
        function SocketModule_1() {
        }
        return SocketModule_1;
    }());
    __setFunctionName(_classThis, "SocketModule");
    (function () {
        var _metadata = typeof Symbol === "function" && Symbol.metadata ? Object.create(null) : void 0;
        __esDecorate(null, _classDescriptor = { value: _classThis }, _classDecorators, { kind: "class", name: _classThis.name, metadata: _metadata }, null, _classExtraInitializers);
        SocketModule = _classThis = _classDescriptor.value;
        if (_metadata) Object.defineProperty(_classThis, Symbol.metadata, { enumerable: true, configurable: true, writable: true, value: _metadata });
        __runInitializers(_classThis, _classExtraInitializers);
    })();
    return SocketModule = _classThis;
}();
exports.SocketModule = SocketModule;


// C:\grua-booking-system-25\server\dist\libraries\socket\socket.server.js
"use strict";
var __esDecorate = (this && this.__esDecorate) || function (ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {
    function accept(f) { if (f !== void 0 && typeof f !== "function") throw new TypeError("Function expected"); return f; }
    var kind = contextIn.kind, key = kind === "getter" ? "get" : kind === "setter" ? "set" : "value";
    var target = !descriptorIn && ctor ? contextIn["static"] ? ctor : ctor.prototype : null;
    var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});
    var _, done = false;
    for (var i = decorators.length - 1; i >= 0; i--) {
        var context = {};
        for (var p in contextIn) context[p] = p === "access" ? {} : contextIn[p];
        for (var p in contextIn.access) context.access[p] = contextIn.access[p];
        context.addInitializer = function (f) { if (done) throw new TypeError("Cannot add initializers after decoration has completed"); extraInitializers.push(accept(f || null)); };
        var result = (0, decorators[i])(kind === "accessor" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);
        if (kind === "accessor") {
            if (result === void 0) continue;
            if (result === null || typeof result !== "object") throw new TypeError("Object expected");
            if (_ = accept(result.get)) descriptor.get = _;
            if (_ = accept(result.set)) descriptor.set = _;
            if (_ = accept(result.init)) initializers.unshift(_);
        }
        else if (_ = accept(result)) {
            if (kind === "field") initializers.unshift(_);
            else descriptor[key] = _;
        }
    }
    if (target) Object.defineProperty(target, contextIn.name, descriptor);
    done = true;
};
var __runInitializers = (this && this.__runInitializers) || function (thisArg, initializers, value) {
    var useValue = arguments.length > 2;
    for (var i = 0; i < initializers.length; i++) {
        value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);
    }
    return useValue ? value : void 0;
};
var __setFunctionName = (this && this.__setFunctionName) || function (f, name, prefix) {
    if (typeof name === "symbol") name = name.description ? "[".concat(name.description, "]") : "";
    return Object.defineProperty(f, "name", { configurable: true, value: prefix ? "".concat(prefix, " ", name) : name });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.SocketServer = void 0;
var websockets_1 = require("@nestjs/websockets");
var utility_1 = require("@server/helpers/utility");
var SocketServer = function () {
    var _classDecorators = [(0, websockets_1.WebSocketGateway)({ cors: true })];
    var _classDescriptor;
    var _classExtraInitializers = [];
    var _classThis;
    var _instanceExtraInitializers = [];
    var _server_decorators;
    var _server_initializers = [];
    var SocketServer = _classThis = /** @class */ (function () {
        function SocketServer_1() {
            this.server = (__runInitializers(this, _instanceExtraInitializers), __runInitializers(this, _server_initializers, void 0));
            this.clients = {};
        }
        SocketServer_1.prototype.handleConnection = function (client) {
            var args = [];
            for (var _i = 1; _i < arguments.length; _i++) {
                args[_i - 1] = arguments[_i];
            }
            var token = this.getClientToken(client);
            try {
                var userId = this.verifyTokenOrFail(token).userId;
                this.registerClient(userId, client);
            }
            catch (_) {
                // ignore
            }
        };
        SocketServer_1.prototype.handleDisconnect = function (client) {
            for (var _i = 0, _a = Object.entries(this.clients); _i < _a.length; _i++) {
                var _b = _a[_i], key = _b[0], value = _b[1];
                if (value.id === client.id) {
                    delete this.clients[key];
                    break;
                }
            }
        };
        SocketServer_1.prototype.sendToUser = function (userId, key, payload) {
            var client = this.getClient(userId);
            if (client) {
                client.emit(key, payload);
            }
        };
        SocketServer_1.prototype.getClientToken = function (client) {
            return client.handshake.query.token;
        };
        SocketServer_1.prototype.verifyTokenOrFail = function (token) {
            var isUndefined = token === 'undefined' || !utility_1.Utility.isDefined(token);
            if (isUndefined) {
                throw new Error("Token is undefined");
            }
            return { userId: token };
        };
        SocketServer_1.prototype.registerClient = function (userId, client) {
            if (!this.clients[userId]) {
                this.clients[userId] = client;
            }
        };
        SocketServer_1.prototype.getClient = function (userId) {
            return this.clients[userId];
        };
        return SocketServer_1;
    }());
    __setFunctionName(_classThis, "SocketServer");
    (function () {
        var _metadata = typeof Symbol === "function" && Symbol.metadata ? Object.create(null) : void 0;
        _server_decorators = [(0, websockets_1.WebSocketServer)()];
        __esDecorate(null, null, _server_decorators, { kind: "field", name: "server", static: false, private: false, access: { has: function (obj) { return "server" in obj; }, get: function (obj) { return obj.server; }, set: function (obj, value) { obj.server = value; } }, metadata: _metadata }, _server_initializers, _instanceExtraInitializers);
        __esDecorate(null, _classDescriptor = { value: _classThis }, _classDecorators, { kind: "class", name: _classThis.name, metadata: _metadata }, null, _classExtraInitializers);
        SocketServer = _classThis = _classDescriptor.value;
        if (_metadata) Object.defineProperty(_classThis, Symbol.metadata, { enumerable: true, configurable: true, writable: true, value: _metadata });
        __runInitializers(_classThis, _classExtraInitializers);
    })();
    return SocketServer = _classThis;
}();
exports.SocketServer = SocketServer;


// C:\grua-booking-system-25\server\dist\libraries\socket\socket.service.js
"use strict";
var __esDecorate = (this && this.__esDecorate) || function (ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {
    function accept(f) { if (f !== void 0 && typeof f !== "function") throw new TypeError("Function expected"); return f; }
    var kind = contextIn.kind, key = kind === "getter" ? "get" : kind === "setter" ? "set" : "value";
    var target = !descriptorIn && ctor ? contextIn["static"] ? ctor : ctor.prototype : null;
    var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});
    var _, done = false;
    for (var i = decorators.length - 1; i >= 0; i--) {
        var context = {};
        for (var p in contextIn) context[p] = p === "access" ? {} : contextIn[p];
        for (var p in contextIn.access) context.access[p] = contextIn.access[p];
        context.addInitializer = function (f) { if (done) throw new TypeError("Cannot add initializers after decoration has completed"); extraInitializers.push(accept(f || null)); };
        var result = (0, decorators[i])(kind === "accessor" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);
        if (kind === "accessor") {
            if (result === void 0) continue;
            if (result === null || typeof result !== "object") throw new TypeError("Object expected");
            if (_ = accept(result.get)) descriptor.get = _;
            if (_ = accept(result.set)) descriptor.set = _;
            if (_ = accept(result.init)) initializers.unshift(_);
        }
        else if (_ = accept(result)) {
            if (kind === "field") initializers.unshift(_);
            else descriptor[key] = _;
        }
    }
    if (target) Object.defineProperty(target, contextIn.name, descriptor);
    done = true;
};
var __runInitializers = (this && this.__runInitializers) || function (thisArg, initializers, value) {
    var useValue = arguments.length > 2;
    for (var i = 0; i < initializers.length; i++) {
        value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);
    }
    return useValue ? value : void 0;
};
var __setFunctionName = (this && this.__setFunctionName) || function (f, name, prefix) {
    if (typeof name === "symbol") name = name.description ? "[".concat(name.description, "]") : "";
    return Object.defineProperty(f, "name", { configurable: true, value: prefix ? "".concat(prefix, " ", name) : name });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.SocketService = void 0;
var common_1 = require("@nestjs/common");
var SocketService = function () {
    var _classDecorators = [(0, common_1.Injectable)()];
    var _classDescriptor;
    var _classExtraInitializers = [];
    var _classThis;
    var SocketService = _classThis = /** @class */ (function () {
        function SocketService_1(socketServer) {
            this.socketServer = socketServer;
        }
        SocketService_1.prototype.send = function (userId, key, payload) {
            this.socketServer.sendToUser(userId, key, payload);
        };
        return SocketService_1;
    }());
    __setFunctionName(_classThis, "SocketService");
    (function () {
        var _metadata = typeof Symbol === "function" && Symbol.metadata ? Object.create(null) : void 0;
        __esDecorate(null, _classDescriptor = { value: _classThis }, _classDecorators, { kind: "class", name: _classThis.name, metadata: _metadata }, null, _classExtraInitializers);
        SocketService = _classThis = _classDescriptor.value;
        if (_metadata) Object.defineProperty(_classThis, Symbol.metadata, { enumerable: true, configurable: true, writable: true, value: _metadata });
        __runInitializers(_classThis, _classExtraInitializers);
    })();
    return SocketService = _classThis;
}();
exports.SocketService = SocketService;


// C:\grua-booking-system-25\server\dist\libraries\upload\internal\providers\aws\upload.provider.aws.js
"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __esDecorate = (this && this.__esDecorate) || function (ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {
    function accept(f) { if (f !== void 0 && typeof f !== "function") throw new TypeError("Function expected"); return f; }
    var kind = contextIn.kind, key = kind === "getter" ? "get" : kind === "setter" ? "set" : "value";
    var target = !descriptorIn && ctor ? contextIn["static"] ? ctor : ctor.prototype : null;
    var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});
    var _, done = false;
    for (var i = decorators.length - 1; i >= 0; i--) {
        var context = {};
        for (var p in contextIn) context[p] = p === "access" ? {} : contextIn[p];
        for (var p in contextIn.access) context.access[p] = contextIn.access[p];
        context.addInitializer = function (f) { if (done) throw new TypeError("Cannot add initializers after decoration has completed"); extraInitializers.push(accept(f || null)); };
        var result = (0, decorators[i])(kind === "accessor" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);
        if (kind === "accessor") {
            if (result === void 0) continue;
            if (result === null || typeof result !== "object") throw new TypeError("Object expected");
            if (_ = accept(result.get)) descriptor.get = _;
            if (_ = accept(result.set)) descriptor.set = _;
            if (_ = accept(result.init)) initializers.unshift(_);
        }
        else if (_ = accept(result)) {
            if (kind === "field") initializers.unshift(_);
            else descriptor[key] = _;
        }
    }
    if (target) Object.defineProperty(target, contextIn.name, descriptor);
    done = true;
};
var __runInitializers = (this && this.__runInitializers) || function (thisArg, initializers, value) {
    var useValue = arguments.length > 2;
    for (var i = 0; i < initializers.length; i++) {
        value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);
    }
    return useValue ? value : void 0;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (g && (g = 0, op[0] && (_ = 0)), _) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __setFunctionName = (this && this.__setFunctionName) || function (f, name, prefix) {
    if (typeof name === "symbol") name = name.description ? "[".concat(name.description, "]") : "";
    return Object.defineProperty(f, "name", { configurable: true, value: prefix ? "".concat(prefix, " ", name) : name });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.UploadProviderAws = void 0;
var client_s3_1 = require("@aws-sdk/client-s3");
var s3_request_presigner_1 = require("@aws-sdk/s3-request-presigner");
var common_1 = require("@nestjs/common");
var upload_provider_1 = require("@server/libraries/upload/upload.provider");
var ONE_HOUR_IN_SECONDS = 60 * 60;
var UploadProviderAws = function () {
    var _classDecorators = [(0, common_1.Injectable)()];
    var _classDescriptor;
    var _classExtraInitializers = [];
    var _classThis;
    var _classSuper = upload_provider_1.UploadProvider;
    var UploadProviderAws = _classThis = /** @class */ (function (_super) {
        __extends(UploadProviderAws_1, _super);
        function UploadProviderAws_1(loggerService, configurationService) {
            var _this = _super.call(this) || this;
            _this.loggerService = loggerService;
            _this.configurationService = configurationService;
            _this.logger = _this.loggerService.create({ name: 'UploadProviderAws' });
            return _this;
        }
        UploadProviderAws_1.prototype.initialise = function () {
            return __awaiter(this, void 0, void 0, function () {
                var accessKey, secretKey, error_1;
                return __generator(this, function (_a) {
                    switch (_a.label) {
                        case 0:
                            _a.trys.push([0, 2, , 3]);
                            accessKey = this.configurationService.get("SERVER_UPLOAD_AWS_ACCESS_KEY");
                            secretKey = this.configurationService.get("SERVER_UPLOAD_AWS_SECRET_KEY");
                            if (!accessKey && !secretKey) {
                                throw new Error('Set SERVER_UPLOAD_AWS_ACCESS_KEY && SERVER_UPLOAD_AWS_SECRET_KEY in your .env to activate');
                            }
                            if (!accessKey) {
                                throw new Error('Set SERVER_UPLOAD_AWS_ACCESS_KEY in your .env to activate');
                            }
                            if (!secretKey) {
                                throw new Error('Set SERVER_UPLOAD_AWS_SECRET_KEY in your .env to activate');
                            }
                            this.region = this.configurationService.get("SERVER_UPLOAD_AWS_REGION", 'us-east-1');
                            this.bucketPublicName = this.configurationService.get("SERVER_UPLOAD_AWS_BUCKET_PUBLIC_NAME");
                            if (!this.bucketPublicName) {
                                this.logger.warning("Set SERVER_UPLOAD_AWS_BUCKET_PUBLIC_NAME in your .env to activate a public bucket with infinite urls");
                            }
                            this.bucketPrivateName = this.configurationService.get("SERVER_UPLOAD_AWS_BUCKET_PRIVATE_NAME");
                            if (!this.bucketPrivateName) {
                                this.logger.warning("Set SERVER_UPLOAD_AWS_BUCKET_PRIVATE_NAME in your .env to activate a private bucket with signed urls");
                            }
                            this.client = new client_s3_1.S3Client({
                                region: this.region,
                                credentials: {
                                    accessKeyId: accessKey,
                                    secretAccessKey: secretKey,
                                },
                            });
                            return [4 /*yield*/, this.check()];
                        case 1:
                            _a.sent();
                            this.logger.success("AWS library active in region ".concat(this.region));
                            return [3 /*break*/, 3];
                        case 2:
                            error_1 = _a.sent();
                            this.logger.warning("AWS library failed to start");
                            throw new Error(error_1);
                        case 3: return [2 /*return*/];
                    }
                });
            });
        };
        UploadProviderAws_1.prototype.check = function () {
            return __awaiter(this, void 0, void 0, function () {
                var buckets, bucket, bucket;
                var _this = this;
                return __generator(this, function (_a) {
                    switch (_a.label) {
                        case 0: return [4 /*yield*/, this.listBuckets()];
                        case 1:
                            buckets = _a.sent();
                            if (this.bucketPrivateName) {
                                this.logger.log("Checking bucket \"".concat(this.bucketPrivateName, "\"..."));
                                bucket = buckets.find(function (bucket) { return bucket.name === _this.bucketPrivateName; });
                                if (bucket) {
                                    this.logger.success("Bucket \"".concat(this.bucketPrivateName, "\" is active"));
                                }
                                else {
                                    throw new Error("Bucket \"".concat(this.bucketPrivateName, "\" was not found"));
                                }
                            }
                            if (this.bucketPublicName) {
                                this.logger.log("Checking bucket \"".concat(this.bucketPublicName, "\"..."));
                                bucket = buckets.find(function (bucket) { return bucket.name === _this.bucketPublicName; });
                                if (bucket) {
                                    this.logger.success("Bucket \"".concat(this.bucketPublicName, "\" is active"));
                                }
                                else {
                                    throw new Error("Bucket \"".concat(this.bucketPublicName, "\" was not found"));
                                }
                            }
                            return [2 /*return*/];
                    }
                });
            });
        };
        UploadProviderAws_1.prototype.uploadPublic = function (options) {
            var _a;
            return __awaiter(this, void 0, void 0, function () {
                var file, key, command, url, error_2;
                return __generator(this, function (_b) {
                    switch (_b.label) {
                        case 0:
                            file = options.file;
                            key = this.ensureFilename(file.originalname);
                            command = new client_s3_1.PutObjectCommand({
                                Bucket: "".concat(this.bucketPublicName),
                                Key: this.ensureKey(key),
                                Body: file.buffer,
                                ContentType: (_a = file.mimetype) !== null && _a !== void 0 ? _a : 'image/png',
                            });
                            _b.label = 1;
                        case 1:
                            _b.trys.push([1, 3, , 4]);
                            return [4 /*yield*/, this.client.send(command)];
                        case 2:
                            _b.sent();
                            this.logger.success("File ".concat(file.originalname, " saved (public)"));
                            url = "".concat(this.getBaseUrlPublic(), "/").concat(key);
                            return [2 /*return*/, { url: url }];
                        case 3:
                            error_2 = _b.sent();
                            this.logger.error("".concat(error_2));
                            throw new Error("Could not upload public file with key \"".concat(key, "\""));
                        case 4: return [2 /*return*/];
                    }
                });
            });
        };
        UploadProviderAws_1.prototype.uploadPrivate = function (options) {
            var _a;
            return __awaiter(this, void 0, void 0, function () {
                var file, key, command, url, error_3;
                return __generator(this, function (_b) {
                    switch (_b.label) {
                        case 0:
                            file = options.file;
                            key = this.ensureFilename(file.originalname);
                            command = new client_s3_1.PutObjectCommand({
                                Bucket: "".concat(this.bucketPrivateName),
                                Key: this.ensureKey(key),
                                Body: file.buffer,
                                ContentType: (_a = file.mimetype) !== null && _a !== void 0 ? _a : 'image/png',
                            });
                            _b.label = 1;
                        case 1:
                            _b.trys.push([1, 3, , 4]);
                            return [4 /*yield*/, this.client.send(command)];
                        case 2:
                            _b.sent();
                            this.logger.success("File ".concat(file.originalname, " saved (private)"));
                            url = "".concat(this.getBaseUrlPrivate(), "/").concat(key);
                            return [2 /*return*/, { url: url }];
                        case 3:
                            error_3 = _b.sent();
                            this.logger.error("".concat(error_3));
                            throw new Error("Could not upload private file with key \"".concat(key, "\""));
                        case 4: return [2 /*return*/];
                    }
                });
            });
        };
        UploadProviderAws_1.prototype.fromPrivateToPublicUrl = function (_a) {
            var url = _a.url, _b = _a.expiresInSeconds, expiresInSeconds = _b === void 0 ? ONE_HOUR_IN_SECONDS : _b;
            return __awaiter(this, void 0, void 0, function () {
                var key, params, command, urlPublic;
                return __generator(this, function (_c) {
                    switch (_c.label) {
                        case 0:
                            if (!this.isUrlPrivate(url)) {
                                throw new Error("".concat(url, " must be a private url"));
                            }
                            key = this.extractKeyFromUrlPrivate(url);
                            params = {
                                Bucket: "".concat(this.bucketPrivateName),
                                Key: this.ensureKey(key),
                            };
                            command = new client_s3_1.GetObjectCommand(params);
                            return [4 /*yield*/, (0, s3_request_presigner_1.getSignedUrl)(this.client, command, {
                                    expiresIn: expiresInSeconds,
                                })];
                        case 1:
                            urlPublic = _c.sent();
                            return [2 /*return*/, { url: urlPublic }];
                    }
                });
            });
        };
        /* -------------------------------------------------------------------------- */
        /*                                   PRIVATE                                  */
        /* -------------------------------------------------------------------------- */
        UploadProviderAws_1.prototype.listBuckets = function () {
            return __awaiter(this, void 0, void 0, function () {
                var result, buckets;
                return __generator(this, function (_a) {
                    switch (_a.label) {
                        case 0: return [4 /*yield*/, this.client.send(new client_s3_1.ListBucketsCommand({}))];
                        case 1:
                            result = _a.sent();
                            buckets = result.Buckets.map(function (item) { return ({
                                name: item.Name,
                                dateCreation: item.CreationDate,
                            }); });
                            return [2 /*return*/, buckets];
                    }
                });
            });
        };
        UploadProviderAws_1.prototype.getBaseUrlPrivate = function () {
            return "https://".concat(this.bucketPrivateName, ".s3.").concat(this.region, ".amazonaws.com");
        };
        UploadProviderAws_1.prototype.getBaseUrlPublic = function () {
            return "https://".concat(this.bucketPublicName, ".s3.").concat(this.region, ".amazonaws.com");
        };
        UploadProviderAws_1.prototype.ensureKey = function (key) {
            var isPrefixed = key.startsWith('/');
            if (isPrefixed) {
                return key.slice(1);
            }
            return key;
        };
        UploadProviderAws_1.prototype.isUrlPrivate = function (url) {
            var baseUrlPrivate = this.getBaseUrlPrivate();
            var isPrivate = url.startsWith(baseUrlPrivate);
            return isPrivate;
        };
        UploadProviderAws_1.prototype.extractKeyFromUrlPrivate = function (url) {
            var baseUrlPrivate = this.getBaseUrlPrivate();
            return url.replace(baseUrlPrivate, '');
        };
        return UploadProviderAws_1;
    }(_classSuper));
    __setFunctionName(_classThis, "UploadProviderAws");
    (function () {
        var _a;
        var _metadata = typeof Symbol === "function" && Symbol.metadata ? Object.create((_a = _classSuper[Symbol.metadata]) !== null && _a !== void 0 ? _a : null) : void 0;
        __esDecorate(null, _classDescriptor = { value: _classThis }, _classDecorators, { kind: "class", name: _classThis.name, metadata: _metadata }, null, _classExtraInitializers);
        UploadProviderAws = _classThis = _classDescriptor.value;
        if (_metadata) Object.defineProperty(_classThis, Symbol.metadata, { enumerable: true, configurable: true, writable: true, value: _metadata });
        __runInitializers(_classThis, _classExtraInitializers);
    })();
    return UploadProviderAws = _classThis;
}();
exports.UploadProviderAws = UploadProviderAws;


// C:\grua-booking-system-25\server\dist\libraries\upload\internal\providers\local\upload.provider.local.js
"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __esDecorate = (this && this.__esDecorate) || function (ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {
    function accept(f) { if (f !== void 0 && typeof f !== "function") throw new TypeError("Function expected"); return f; }
    var kind = contextIn.kind, key = kind === "getter" ? "get" : kind === "setter" ? "set" : "value";
    var target = !descriptorIn && ctor ? contextIn["static"] ? ctor : ctor.prototype : null;
    var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});
    var _, done = false;
    for (var i = decorators.length - 1; i >= 0; i--) {
        var context = {};
        for (var p in contextIn) context[p] = p === "access" ? {} : contextIn[p];
        for (var p in contextIn.access) context.access[p] = contextIn.access[p];
        context.addInitializer = function (f) { if (done) throw new TypeError("Cannot add initializers after decoration has completed"); extraInitializers.push(accept(f || null)); };
        var result = (0, decorators[i])(kind === "accessor" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);
        if (kind === "accessor") {
            if (result === void 0) continue;
            if (result === null || typeof result !== "object") throw new TypeError("Object expected");
            if (_ = accept(result.get)) descriptor.get = _;
            if (_ = accept(result.set)) descriptor.set = _;
            if (_ = accept(result.init)) initializers.unshift(_);
        }
        else if (_ = accept(result)) {
            if (kind === "field") initializers.unshift(_);
            else descriptor[key] = _;
        }
    }
    if (target) Object.defineProperty(target, contextIn.name, descriptor);
    done = true;
};
var __runInitializers = (this && this.__runInitializers) || function (thisArg, initializers, value) {
    var useValue = arguments.length > 2;
    for (var i = 0; i < initializers.length; i++) {
        value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);
    }
    return useValue ? value : void 0;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (g && (g = 0, op[0] && (_ = 0)), _) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __setFunctionName = (this && this.__setFunctionName) || function (f, name, prefix) {
    if (typeof name === "symbol") name = name.description ? "[".concat(name.description, "]") : "";
    return Object.defineProperty(f, "name", { configurable: true, value: prefix ? "".concat(prefix, " ", name) : name });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.UploadProviderLocal = void 0;
var common_1 = require("@nestjs/common");
var serve_static_1 = require("@nestjs/serve-static");
var file_1 = require("@server/helpers/file");
var upload_provider_1 = require("@server/libraries/upload/upload.provider");
var path_1 = require("path");
var UploadProviderLocal = function () {
    var _classDecorators = [(0, common_1.Injectable)()];
    var _classDescriptor;
    var _classExtraInitializers = [];
    var _classThis;
    var _classSuper = upload_provider_1.UploadProvider;
    var UploadProviderLocal = _classThis = /** @class */ (function (_super) {
        __extends(UploadProviderLocal_1, _super);
        function UploadProviderLocal_1(loggerService, configurationService) {
            var _this = _super.call(this) || this;
            _this.loggerService = loggerService;
            _this.configurationService = configurationService;
            _this.pathPublic = ".".concat(UploadProviderLocal.path, "/public");
            _this.pathPrivate = ".".concat(UploadProviderLocal.path, "/private");
            _this.logger = _this.loggerService.create({ name: 'UploadProviderLocal' });
            return _this;
        }
        UploadProviderLocal_1.setup = function () {
            return serve_static_1.ServeStaticModule.forRoot({
                rootPath: (0, path_1.join)(file_1.FileHelper.getRoot(), ".".concat(this.path)),
                serveRoot: this.path,
            });
        };
        UploadProviderLocal_1.prototype.initialise = function () {
            try {
                file_1.FileHelper.writeFolder(this.pathPublic);
                this.staticServerUrl = "".concat(this.configurationService.getBaseUrl());
                this.logger.success("Upload Local is active");
            }
            catch (error) {
                this.logger.error("Upload Local failed to start: ".concat(error.message));
            }
            return;
        };
        UploadProviderLocal_1.prototype.uploadPublic = function (_a) {
            var file = _a.file;
            return __awaiter(this, void 0, void 0, function () {
                var content, filename, path, url;
                return __generator(this, function (_b) {
                    content = file.buffer;
                    filename = this.ensureFilename(file.originalname);
                    path = file_1.FileHelper.joinPaths(this.pathPublic, filename);
                    file_1.FileHelper.writeFile(path, content);
                    url = "".concat(this.staticServerUrl, "/").concat(path);
                    return [2 /*return*/, { url: url }];
                });
            });
        };
        UploadProviderLocal_1.prototype.uploadPrivate = function (_a) {
            var file = _a.file;
            return __awaiter(this, void 0, void 0, function () {
                var content, filename, path, url;
                return __generator(this, function (_b) {
                    content = file.buffer;
                    filename = this.ensureFilename(file.originalname);
                    path = file_1.FileHelper.joinPaths(this.pathPrivate, filename);
                    file_1.FileHelper.writeFile(path, content);
                    url = "".concat(this.staticServerUrl, "/").concat(path);
                    return [2 /*return*/, { url: url }];
                });
            });
        };
        UploadProviderLocal_1.prototype.fromPrivateToPublicUrl = function (_a) {
            var url = _a.url;
            return __awaiter(this, void 0, void 0, function () {
                return __generator(this, function (_b) {
                    return [2 /*return*/, { url: url }];
                });
            });
        };
        return UploadProviderLocal_1;
    }(_classSuper));
    __setFunctionName(_classThis, "UploadProviderLocal");
    (function () {
        var _a;
        var _metadata = typeof Symbol === "function" && Symbol.metadata ? Object.create((_a = _classSuper[Symbol.metadata]) !== null && _a !== void 0 ? _a : null) : void 0;
        __esDecorate(null, _classDescriptor = { value: _classThis }, _classDecorators, { kind: "class", name: _classThis.name, metadata: _metadata }, null, _classExtraInitializers);
        UploadProviderLocal = _classThis = _classDescriptor.value;
        if (_metadata) Object.defineProperty(_classThis, Symbol.metadata, { enumerable: true, configurable: true, writable: true, value: _metadata });
    })();
    _classThis.path = '/upload-local';
    (function () {
        __runInitializers(_classThis, _classExtraInitializers);
    })();
    return UploadProviderLocal = _classThis;
}();
exports.UploadProviderLocal = UploadProviderLocal;


// C:\grua-booking-system-25\server\dist\libraries\upload\internal\providers\aws\upload.provider.aws.js
"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __esDecorate = (this && this.__esDecorate) || function (ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {
    function accept(f) { if (f !== void 0 && typeof f !== "function") throw new TypeError("Function expected"); return f; }
    var kind = contextIn.kind, key = kind === "getter" ? "get" : kind === "setter" ? "set" : "value";
    var target = !descriptorIn && ctor ? contextIn["static"] ? ctor : ctor.prototype : null;
    var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});
    var _, done = false;
    for (var i = decorators.length - 1; i >= 0; i--) {
        var context = {};
        for (var p in contextIn) context[p] = p === "access" ? {} : contextIn[p];
        for (var p in contextIn.access) context.access[p] = contextIn.access[p];
        context.addInitializer = function (f) { if (done) throw new TypeError("Cannot add initializers after decoration has completed"); extraInitializers.push(accept(f || null)); };
        var result = (0, decorators[i])(kind === "accessor" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);
        if (kind === "accessor") {
            if (result === void 0) continue;
            if (result === null || typeof result !== "object") throw new TypeError("Object expected");
            if (_ = accept(result.get)) descriptor.get = _;
            if (_ = accept(result.set)) descriptor.set = _;
            if (_ = accept(result.init)) initializers.unshift(_);
        }
        else if (_ = accept(result)) {
            if (kind === "field") initializers.unshift(_);
            else descriptor[key] = _;
        }
    }
    if (target) Object.defineProperty(target, contextIn.name, descriptor);
    done = true;
};
var __runInitializers = (this && this.__runInitializers) || function (thisArg, initializers, value) {
    var useValue = arguments.length > 2;
    for (var i = 0; i < initializers.length; i++) {
        value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);
    }
    return useValue ? value : void 0;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (g && (g = 0, op[0] && (_ = 0)), _) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __setFunctionName = (this && this.__setFunctionName) || function (f, name, prefix) {
    if (typeof name === "symbol") name = name.description ? "[".concat(name.description, "]") : "";
    return Object.defineProperty(f, "name", { configurable: true, value: prefix ? "".concat(prefix, " ", name) : name });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.UploadProviderAws = void 0;
var client_s3_1 = require("@aws-sdk/client-s3");
var s3_request_presigner_1 = require("@aws-sdk/s3-request-presigner");
var common_1 = require("@nestjs/common");
var upload_provider_1 = require("@server/libraries/upload/upload.provider");
var ONE_HOUR_IN_SECONDS = 60 * 60;
var UploadProviderAws = function () {
    var _classDecorators = [(0, common_1.Injectable)()];
    var _classDescriptor;
    var _classExtraInitializers = [];
    var _classThis;
    var _classSuper = upload_provider_1.UploadProvider;
    var UploadProviderAws = _classThis = /** @class */ (function (_super) {
        __extends(UploadProviderAws_1, _super);
        function UploadProviderAws_1(loggerService, configurationService) {
            var _this = _super.call(this) || this;
            _this.loggerService = loggerService;
            _this.configurationService = configurationService;
            _this.logger = _this.loggerService.create({ name: 'UploadProviderAws' });
            return _this;
        }
        UploadProviderAws_1.prototype.initialise = function () {
            return __awaiter(this, void 0, void 0, function () {
                var accessKey, secretKey, error_1;
                return __generator(this, function (_a) {
                    switch (_a.label) {
                        case 0:
                            _a.trys.push([0, 2, , 3]);
                            accessKey = this.configurationService.get("SERVER_UPLOAD_AWS_ACCESS_KEY");
                            secretKey = this.configurationService.get("SERVER_UPLOAD_AWS_SECRET_KEY");
                            if (!accessKey && !secretKey) {
                                throw new Error('Set SERVER_UPLOAD_AWS_ACCESS_KEY && SERVER_UPLOAD_AWS_SECRET_KEY in your .env to activate');
                            }
                            if (!accessKey) {
                                throw new Error('Set SERVER_UPLOAD_AWS_ACCESS_KEY in your .env to activate');
                            }
                            if (!secretKey) {
                                throw new Error('Set SERVER_UPLOAD_AWS_SECRET_KEY in your .env to activate');
                            }
                            this.region = this.configurationService.get("SERVER_UPLOAD_AWS_REGION", 'us-east-1');
                            this.bucketPublicName = this.configurationService.get("SERVER_UPLOAD_AWS_BUCKET_PUBLIC_NAME");
                            if (!this.bucketPublicName) {
                                this.logger.warning("Set SERVER_UPLOAD_AWS_BUCKET_PUBLIC_NAME in your .env to activate a public bucket with infinite urls");
                            }
                            this.bucketPrivateName = this.configurationService.get("SERVER_UPLOAD_AWS_BUCKET_PRIVATE_NAME");
                            if (!this.bucketPrivateName) {
                                this.logger.warning("Set SERVER_UPLOAD_AWS_BUCKET_PRIVATE_NAME in your .env to activate a private bucket with signed urls");
                            }
                            this.client = new client_s3_1.S3Client({
                                region: this.region,
                                credentials: {
                                    accessKeyId: accessKey,
                                    secretAccessKey: secretKey,
                                },
                            });
                            return [4 /*yield*/, this.check()];
                        case 1:
                            _a.sent();
                            this.logger.success("AWS library active in region ".concat(this.region));
                            return [3 /*break*/, 3];
                        case 2:
                            error_1 = _a.sent();
                            this.logger.warning("AWS library failed to start");
                            throw new Error(error_1);
                        case 3: return [2 /*return*/];
                    }
                });
            });
        };
        UploadProviderAws_1.prototype.check = function () {
            return __awaiter(this, void 0, void 0, function () {
                var buckets, bucket, bucket;
                var _this = this;
                return __generator(this, function (_a) {
                    switch (_a.label) {
                        case 0: return [4 /*yield*/, this.listBuckets()];
                        case 1:
                            buckets = _a.sent();
                            if (this.bucketPrivateName) {
                                this.logger.log("Checking bucket \"".concat(this.bucketPrivateName, "\"..."));
                                bucket = buckets.find(function (bucket) { return bucket.name === _this.bucketPrivateName; });
                                if (bucket) {
                                    this.logger.success("Bucket \"".concat(this.bucketPrivateName, "\" is active"));
                                }
                                else {
                                    throw new Error("Bucket \"".concat(this.bucketPrivateName, "\" was not found"));
                                }
                            }
                            if (this.bucketPublicName) {
                                this.logger.log("Checking bucket \"".concat(this.bucketPublicName, "\"..."));
                                bucket = buckets.find(function (bucket) { return bucket.name === _this.bucketPublicName; });
                                if (bucket) {
                                    this.logger.success("Bucket \"".concat(this.bucketPublicName, "\" is active"));
                                }
                                else {
                                    throw new Error("Bucket \"".concat(this.bucketPublicName, "\" was not found"));
                                }
                            }
                            return [2 /*return*/];
                    }
                });
            });
        };
        UploadProviderAws_1.prototype.uploadPublic = function (options) {
            var _a;
            return __awaiter(this, void 0, void 0, function () {
                var file, key, command, url, error_2;
                return __generator(this, function (_b) {
                    switch (_b.label) {
                        case 0:
                            file = options.file;
                            key = this.ensureFilename(file.originalname);
                            command = new client_s3_1.PutObjectCommand({
                                Bucket: "".concat(this.bucketPublicName),
                                Key: this.ensureKey(key),
                                Body: file.buffer,
                                ContentType: (_a = file.mimetype) !== null && _a !== void 0 ? _a : 'image/png',
                            });
                            _b.label = 1;
                        case 1:
                            _b.trys.push([1, 3, , 4]);
                            return [4 /*yield*/, this.client.send(command)];
                        case 2:
                            _b.sent();
                            this.logger.success("File ".concat(file.originalname, " saved (public)"));
                            url = "".concat(this.getBaseUrlPublic(), "/").concat(key);
                            return [2 /*return*/, { url: url }];
                        case 3:
                            error_2 = _b.sent();
                            this.logger.error("".concat(error_2));
                            throw new Error("Could not upload public file with key \"".concat(key, "\""));
                        case 4: return [2 /*return*/];
                    }
                });
            });
        };
        UploadProviderAws_1.prototype.uploadPrivate = function (options) {
            var _a;
            return __awaiter(this, void 0, void 0, function () {
                var file, key, command, url, error_3;
                return __generator(this, function (_b) {
                    switch (_b.label) {
                        case 0:
                            file = options.file;
                            key = this.ensureFilename(file.originalname);
                            command = new client_s3_1.PutObjectCommand({
                                Bucket: "".concat(this.bucketPrivateName),
                                Key: this.ensureKey(key),
                                Body: file.buffer,
                                ContentType: (_a = file.mimetype) !== null && _a !== void 0 ? _a : 'image/png',
                            });
                            _b.label = 1;
                        case 1:
                            _b.trys.push([1, 3, , 4]);
                            return [4 /*yield*/, this.client.send(command)];
                        case 2:
                            _b.sent();
                            this.logger.success("File ".concat(file.originalname, " saved (private)"));
                            url = "".concat(this.getBaseUrlPrivate(), "/").concat(key);
                            return [2 /*return*/, { url: url }];
                        case 3:
                            error_3 = _b.sent();
                            this.logger.error("".concat(error_3));
                            throw new Error("Could not upload private file with key \"".concat(key, "\""));
                        case 4: return [2 /*return*/];
                    }
                });
            });
        };
        UploadProviderAws_1.prototype.fromPrivateToPublicUrl = function (_a) {
            var url = _a.url, _b = _a.expiresInSeconds, expiresInSeconds = _b === void 0 ? ONE_HOUR_IN_SECONDS : _b;
            return __awaiter(this, void 0, void 0, function () {
                var key, params, command, urlPublic;
                return __generator(this, function (_c) {
                    switch (_c.label) {
                        case 0:
                            if (!this.isUrlPrivate(url)) {
                                throw new Error("".concat(url, " must be a private url"));
                            }
                            key = this.extractKeyFromUrlPrivate(url);
                            params = {
                                Bucket: "".concat(this.bucketPrivateName),
                                Key: this.ensureKey(key),
                            };
                            command = new client_s3_1.GetObjectCommand(params);
                            return [4 /*yield*/, (0, s3_request_presigner_1.getSignedUrl)(this.client, command, {
                                    expiresIn: expiresInSeconds,
                                })];
                        case 1:
                            urlPublic = _c.sent();
                            return [2 /*return*/, { url: urlPublic }];
                    }
                });
            });
        };
        /* -------------------------------------------------------------------------- */
        /*                                   PRIVATE                                  */
        /* -------------------------------------------------------------------------- */
        UploadProviderAws_1.prototype.listBuckets = function () {
            return __awaiter(this, void 0, void 0, function () {
                var result, buckets;
                return __generator(this, function (_a) {
                    switch (_a.label) {
                        case 0: return [4 /*yield*/, this.client.send(new client_s3_1.ListBucketsCommand({}))];
                        case 1:
                            result = _a.sent();
                            buckets = result.Buckets.map(function (item) { return ({
                                name: item.Name,
                                dateCreation: item.CreationDate,
                            }); });
                            return [2 /*return*/, buckets];
                    }
                });
            });
        };
        UploadProviderAws_1.prototype.getBaseUrlPrivate = function () {
            return "https://".concat(this.bucketPrivateName, ".s3.").concat(this.region, ".amazonaws.com");
        };
        UploadProviderAws_1.prototype.getBaseUrlPublic = function () {
            return "https://".concat(this.bucketPublicName, ".s3.").concat(this.region, ".amazonaws.com");
        };
        UploadProviderAws_1.prototype.ensureKey = function (key) {
            var isPrefixed = key.startsWith('/');
            if (isPrefixed) {
                return key.slice(1);
            }
            return key;
        };
        UploadProviderAws_1.prototype.isUrlPrivate = function (url) {
            var baseUrlPrivate = this.getBaseUrlPrivate();
            var isPrivate = url.startsWith(baseUrlPrivate);
            return isPrivate;
        };
        UploadProviderAws_1.prototype.extractKeyFromUrlPrivate = function (url) {
            var baseUrlPrivate = this.getBaseUrlPrivate();
            return url.replace(baseUrlPrivate, '');
        };
        return UploadProviderAws_1;
    }(_classSuper));
    __setFunctionName(_classThis, "UploadProviderAws");
    (function () {
        var _a;
        var _metadata = typeof Symbol === "function" && Symbol.metadata ? Object.create((_a = _classSuper[Symbol.metadata]) !== null && _a !== void 0 ? _a : null) : void 0;
        __esDecorate(null, _classDescriptor = { value: _classThis }, _classDecorators, { kind: "class", name: _classThis.name, metadata: _metadata }, null, _classExtraInitializers);
        UploadProviderAws = _classThis = _classDescriptor.value;
        if (_metadata) Object.defineProperty(_classThis, Symbol.metadata, { enumerable: true, configurable: true, writable: true, value: _metadata });
        __runInitializers(_classThis, _classExtraInitializers);
    })();
    return UploadProviderAws = _classThis;
}();
exports.UploadProviderAws = UploadProviderAws;


// C:\grua-booking-system-25\server\dist\libraries\upload\internal\providers\local\upload.provider.local.js
"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __esDecorate = (this && this.__esDecorate) || function (ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {
    function accept(f) { if (f !== void 0 && typeof f !== "function") throw new TypeError("Function expected"); return f; }
    var kind = contextIn.kind, key = kind === "getter" ? "get" : kind === "setter" ? "set" : "value";
    var target = !descriptorIn && ctor ? contextIn["static"] ? ctor : ctor.prototype : null;
    var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});
    var _, done = false;
    for (var i = decorators.length - 1; i >= 0; i--) {
        var context = {};
        for (var p in contextIn) context[p] = p === "access" ? {} : contextIn[p];
        for (var p in contextIn.access) context.access[p] = contextIn.access[p];
        context.addInitializer = function (f) { if (done) throw new TypeError("Cannot add initializers after decoration has completed"); extraInitializers.push(accept(f || null)); };
        var result = (0, decorators[i])(kind === "accessor" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);
        if (kind === "accessor") {
            if (result === void 0) continue;
            if (result === null || typeof result !== "object") throw new TypeError("Object expected");
            if (_ = accept(result.get)) descriptor.get = _;
            if (_ = accept(result.set)) descriptor.set = _;
            if (_ = accept(result.init)) initializers.unshift(_);
        }
        else if (_ = accept(result)) {
            if (kind === "field") initializers.unshift(_);
            else descriptor[key] = _;
        }
    }
    if (target) Object.defineProperty(target, contextIn.name, descriptor);
    done = true;
};
var __runInitializers = (this && this.__runInitializers) || function (thisArg, initializers, value) {
    var useValue = arguments.length > 2;
    for (var i = 0; i < initializers.length; i++) {
        value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);
    }
    return useValue ? value : void 0;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (g && (g = 0, op[0] && (_ = 0)), _) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __setFunctionName = (this && this.__setFunctionName) || function (f, name, prefix) {
    if (typeof name === "symbol") name = name.description ? "[".concat(name.description, "]") : "";
    return Object.defineProperty(f, "name", { configurable: true, value: prefix ? "".concat(prefix, " ", name) : name });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.UploadProviderLocal = void 0;
var common_1 = require("@nestjs/common");
var serve_static_1 = require("@nestjs/serve-static");
var file_1 = require("@server/helpers/file");
var upload_provider_1 = require("@server/libraries/upload/upload.provider");
var path_1 = require("path");
var UploadProviderLocal = function () {
    var _classDecorators = [(0, common_1.Injectable)()];
    var _classDescriptor;
    var _classExtraInitializers = [];
    var _classThis;
    var _classSuper = upload_provider_1.UploadProvider;
    var UploadProviderLocal = _classThis = /** @class */ (function (_super) {
        __extends(UploadProviderLocal_1, _super);
        function UploadProviderLocal_1(loggerService, configurationService) {
            var _this = _super.call(this) || this;
            _this.loggerService = loggerService;
            _this.configurationService = configurationService;
            _this.pathPublic = ".".concat(UploadProviderLocal.path, "/public");
            _this.pathPrivate = ".".concat(UploadProviderLocal.path, "/private");
            _this.logger = _this.loggerService.create({ name: 'UploadProviderLocal' });
            return _this;
        }
        UploadProviderLocal_1.setup = function () {
            return serve_static_1.ServeStaticModule.forRoot({
                rootPath: (0, path_1.join)(file_1.FileHelper.getRoot(), ".".concat(this.path)),
                serveRoot: this.path,
            });
        };
        UploadProviderLocal_1.prototype.initialise = function () {
            try {
                file_1.FileHelper.writeFolder(this.pathPublic);
                this.staticServerUrl = "".concat(this.configurationService.getBaseUrl());
                this.logger.success("Upload Local is active");
            }
            catch (error) {
                this.logger.error("Upload Local failed to start: ".concat(error.message));
            }
            return;
        };
        UploadProviderLocal_1.prototype.uploadPublic = function (_a) {
            var file = _a.file;
            return __awaiter(this, void 0, void 0, function () {
                var content, filename, path, url;
                return __generator(this, function (_b) {
                    content = file.buffer;
                    filename = this.ensureFilename(file.originalname);
                    path = file_1.FileHelper.joinPaths(this.pathPublic, filename);
                    file_1.FileHelper.writeFile(path, content);
                    url = "".concat(this.staticServerUrl, "/").concat(path);
                    return [2 /*return*/, { url: url }];
                });
            });
        };
        UploadProviderLocal_1.prototype.uploadPrivate = function (_a) {
            var file = _a.file;
            return __awaiter(this, void 0, void 0, function () {
                var content, filename, path, url;
                return __generator(this, function (_b) {
                    content = file.buffer;
                    filename = this.ensureFilename(file.originalname);
                    path = file_1.FileHelper.joinPaths(this.pathPrivate, filename);
                    file_1.FileHelper.writeFile(path, content);
                    url = "".concat(this.staticServerUrl, "/").concat(path);
                    return [2 /*return*/, { url: url }];
                });
            });
        };
        UploadProviderLocal_1.prototype.fromPrivateToPublicUrl = function (_a) {
            var url = _a.url;
            return __awaiter(this, void 0, void 0, function () {
                return __generator(this, function (_b) {
                    return [2 /*return*/, { url: url }];
                });
            });
        };
        return UploadProviderLocal_1;
    }(_classSuper));
    __setFunctionName(_classThis, "UploadProviderLocal");
    (function () {
        var _a;
        var _metadata = typeof Symbol === "function" && Symbol.metadata ? Object.create((_a = _classSuper[Symbol.metadata]) !== null && _a !== void 0 ? _a : null) : void 0;
        __esDecorate(null, _classDescriptor = { value: _classThis }, _classDecorators, { kind: "class", name: _classThis.name, metadata: _metadata }, null, _classExtraInitializers);
        UploadProviderLocal = _classThis = _classDescriptor.value;
        if (_metadata) Object.defineProperty(_classThis, Symbol.metadata, { enumerable: true, configurable: true, writable: true, value: _metadata });
    })();
    _classThis.path = '/upload-local';
    (function () {
        __runInitializers(_classThis, _classExtraInitializers);
    })();
    return UploadProviderLocal = _classThis;
}();
exports.UploadProviderLocal = UploadProviderLocal;


// C:\grua-booking-system-25\server\dist\libraries\upload\internal\providers\aws\upload.provider.aws.js
"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __esDecorate = (this && this.__esDecorate) || function (ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {
    function accept(f) { if (f !== void 0 && typeof f !== "function") throw new TypeError("Function expected"); return f; }
    var kind = contextIn.kind, key = kind === "getter" ? "get" : kind === "setter" ? "set" : "value";
    var target = !descriptorIn && ctor ? contextIn["static"] ? ctor : ctor.prototype : null;
    var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});
    var _, done = false;
    for (var i = decorators.length - 1; i >= 0; i--) {
        var context = {};
        for (var p in contextIn) context[p] = p === "access" ? {} : contextIn[p];
        for (var p in contextIn.access) context.access[p] = contextIn.access[p];
        context.addInitializer = function (f) { if (done) throw new TypeError("Cannot add initializers after decoration has completed"); extraInitializers.push(accept(f || null)); };
        var result = (0, decorators[i])(kind === "accessor" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);
        if (kind === "accessor") {
            if (result === void 0) continue;
            if (result === null || typeof result !== "object") throw new TypeError("Object expected");
            if (_ = accept(result.get)) descriptor.get = _;
            if (_ = accept(result.set)) descriptor.set = _;
            if (_ = accept(result.init)) initializers.unshift(_);
        }
        else if (_ = accept(result)) {
            if (kind === "field") initializers.unshift(_);
            else descriptor[key] = _;
        }
    }
    if (target) Object.defineProperty(target, contextIn.name, descriptor);
    done = true;
};
var __runInitializers = (this && this.__runInitializers) || function (thisArg, initializers, value) {
    var useValue = arguments.length > 2;
    for (var i = 0; i < initializers.length; i++) {
        value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);
    }
    return useValue ? value : void 0;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (g && (g = 0, op[0] && (_ = 0)), _) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __setFunctionName = (this && this.__setFunctionName) || function (f, name, prefix) {
    if (typeof name === "symbol") name = name.description ? "[".concat(name.description, "]") : "";
    return Object.defineProperty(f, "name", { configurable: true, value: prefix ? "".concat(prefix, " ", name) : name });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.UploadProviderAws = void 0;
var client_s3_1 = require("@aws-sdk/client-s3");
var s3_request_presigner_1 = require("@aws-sdk/s3-request-presigner");
var common_1 = require("@nestjs/common");
var upload_provider_1 = require("@server/libraries/upload/upload.provider");
var ONE_HOUR_IN_SECONDS = 60 * 60;
var UploadProviderAws = function () {
    var _classDecorators = [(0, common_1.Injectable)()];
    var _classDescriptor;
    var _classExtraInitializers = [];
    var _classThis;
    var _classSuper = upload_provider_1.UploadProvider;
    var UploadProviderAws = _classThis = /** @class */ (function (_super) {
        __extends(UploadProviderAws_1, _super);
        function UploadProviderAws_1(loggerService, configurationService) {
            var _this = _super.call(this) || this;
            _this.loggerService = loggerService;
            _this.configurationService = configurationService;
            _this.logger = _this.loggerService.create({ name: 'UploadProviderAws' });
            return _this;
        }
        UploadProviderAws_1.prototype.initialise = function () {
            return __awaiter(this, void 0, void 0, function () {
                var accessKey, secretKey, error_1;
                return __generator(this, function (_a) {
                    switch (_a.label) {
                        case 0:
                            _a.trys.push([0, 2, , 3]);
                            accessKey = this.configurationService.get("SERVER_UPLOAD_AWS_ACCESS_KEY");
                            secretKey = this.configurationService.get("SERVER_UPLOAD_AWS_SECRET_KEY");
                            if (!accessKey && !secretKey) {
                                throw new Error('Set SERVER_UPLOAD_AWS_ACCESS_KEY && SERVER_UPLOAD_AWS_SECRET_KEY in your .env to activate');
                            }
                            if (!accessKey) {
                                throw new Error('Set SERVER_UPLOAD_AWS_ACCESS_KEY in your .env to activate');
                            }
                            if (!secretKey) {
                                throw new Error('Set SERVER_UPLOAD_AWS_SECRET_KEY in your .env to activate');
                            }
                            this.region = this.configurationService.get("SERVER_UPLOAD_AWS_REGION", 'us-east-1');
                            this.bucketPublicName = this.configurationService.get("SERVER_UPLOAD_AWS_BUCKET_PUBLIC_NAME");
                            if (!this.bucketPublicName) {
                                this.logger.warning("Set SERVER_UPLOAD_AWS_BUCKET_PUBLIC_NAME in your .env to activate a public bucket with infinite urls");
                            }
                            this.bucketPrivateName = this.configurationService.get("SERVER_UPLOAD_AWS_BUCKET_PRIVATE_NAME");
                            if (!this.bucketPrivateName) {
                                this.logger.warning("Set SERVER_UPLOAD_AWS_BUCKET_PRIVATE_NAME in your .env to activate a private bucket with signed urls");
                            }
                            this.client = new client_s3_1.S3Client({
                                region: this.region,
                                credentials: {
                                    accessKeyId: accessKey,
                                    secretAccessKey: secretKey,
                                },
                            });
                            return [4 /*yield*/, this.check()];
                        case 1:
                            _a.sent();
                            this.logger.success("AWS library active in region ".concat(this.region));
                            return [3 /*break*/, 3];
                        case 2:
                            error_1 = _a.sent();
                            this.logger.warning("AWS library failed to start");
                            throw new Error(error_1);
                        case 3: return [2 /*return*/];
                    }
                });
            });
        };
        UploadProviderAws_1.prototype.check = function () {
            return __awaiter(this, void 0, void 0, function () {
                var buckets, bucket, bucket;
                var _this = this;
                return __generator(this, function (_a) {
                    switch (_a.label) {
                        case 0: return [4 /*yield*/, this.listBuckets()];
                        case 1:
                            buckets = _a.sent();
                            if (this.bucketPrivateName) {
                                this.logger.log("Checking bucket \"".concat(this.bucketPrivateName, "\"..."));
                                bucket = buckets.find(function (bucket) { return bucket.name === _this.bucketPrivateName; });
                                if (bucket) {
                                    this.logger.success("Bucket \"".concat(this.bucketPrivateName, "\" is active"));
                                }
                                else {
                                    throw new Error("Bucket \"".concat(this.bucketPrivateName, "\" was not found"));
                                }
                            }
                            if (this.bucketPublicName) {
                                this.logger.log("Checking bucket \"".concat(this.bucketPublicName, "\"..."));
                                bucket = buckets.find(function (bucket) { return bucket.name === _this.bucketPublicName; });
                                if (bucket) {
                                    this.logger.success("Bucket \"".concat(this.bucketPublicName, "\" is active"));
                                }
                                else {
                                    throw new Error("Bucket \"".concat(this.bucketPublicName, "\" was not found"));
                                }
                            }
                            return [2 /*return*/];
                    }
                });
            });
        };
        UploadProviderAws_1.prototype.uploadPublic = function (options) {
            var _a;
            return __awaiter(this, void 0, void 0, function () {
                var file, key, command, url, error_2;
                return __generator(this, function (_b) {
                    switch (_b.label) {
                        case 0:
                            file = options.file;
                            key = this.ensureFilename(file.originalname);
                            command = new client_s3_1.PutObjectCommand({
                                Bucket: "".concat(this.bucketPublicName),
                                Key: this.ensureKey(key),
                                Body: file.buffer,
                                ContentType: (_a = file.mimetype) !== null && _a !== void 0 ? _a : 'image/png',
                            });
                            _b.label = 1;
                        case 1:
                            _b.trys.push([1, 3, , 4]);
                            return [4 /*yield*/, this.client.send(command)];
                        case 2:
                            _b.sent();
                            this.logger.success("File ".concat(file.originalname, " saved (public)"));
                            url = "".concat(this.getBaseUrlPublic(), "/").concat(key);
                            return [2 /*return*/, { url: url }];
                        case 3:
                            error_2 = _b.sent();
                            this.logger.error("".concat(error_2));
                            throw new Error("Could not upload public file with key \"".concat(key, "\""));
                        case 4: return [2 /*return*/];
                    }
                });
            });
        };
        UploadProviderAws_1.prototype.uploadPrivate = function (options) {
            var _a;
            return __awaiter(this, void 0, void 0, function () {
                var file, key, command, url, error_3;
                return __generator(this, function (_b) {
                    switch (_b.label) {
                        case 0:
                            file = options.file;
                            key = this.ensureFilename(file.originalname);
                            command = new client_s3_1.PutObjectCommand({
                                Bucket: "".concat(this.bucketPrivateName),
                                Key: this.ensureKey(key),
                                Body: file.buffer,
                                ContentType: (_a = file.mimetype) !== null && _a !== void 0 ? _a : 'image/png',
                            });
                            _b.label = 1;
                        case 1:
                            _b.trys.push([1, 3, , 4]);
                            return [4 /*yield*/, this.client.send(command)];
                        case 2:
                            _b.sent();
                            this.logger.success("File ".concat(file.originalname, " saved (private)"));
                            url = "".concat(this.getBaseUrlPrivate(), "/").concat(key);
                            return [2 /*return*/, { url: url }];
                        case 3:
                            error_3 = _b.sent();
                            this.logger.error("".concat(error_3));
                            throw new Error("Could not upload private file with key \"".concat(key, "\""));
                        case 4: return [2 /*return*/];
                    }
                });
            });
        };
        UploadProviderAws_1.prototype.fromPrivateToPublicUrl = function (_a) {
            var url = _a.url, _b = _a.expiresInSeconds, expiresInSeconds = _b === void 0 ? ONE_HOUR_IN_SECONDS : _b;
            return __awaiter(this, void 0, void 0, function () {
                var key, params, command, urlPublic;
                return __generator(this, function (_c) {
                    switch (_c.label) {
                        case 0:
                            if (!this.isUrlPrivate(url)) {
                                throw new Error("".concat(url, " must be a private url"));
                            }
                            key = this.extractKeyFromUrlPrivate(url);
                            params = {
                                Bucket: "".concat(this.bucketPrivateName),
                                Key: this.ensureKey(key),
                            };
                            command = new client_s3_1.GetObjectCommand(params);
                            return [4 /*yield*/, (0, s3_request_presigner_1.getSignedUrl)(this.client, command, {
                                    expiresIn: expiresInSeconds,
                                })];
                        case 1:
                            urlPublic = _c.sent();
                            return [2 /*return*/, { url: urlPublic }];
                    }
                });
            });
        };
        /* -------------------------------------------------------------------------- */
        /*                                   PRIVATE                                  */
        /* -------------------------------------------------------------------------- */
        UploadProviderAws_1.prototype.listBuckets = function () {
            return __awaiter(this, void 0, void 0, function () {
                var result, buckets;
                return __generator(this, function (_a) {
                    switch (_a.label) {
                        case 0: return [4 /*yield*/, this.client.send(new client_s3_1.ListBucketsCommand({}))];
                        case 1:
                            result = _a.sent();
                            buckets = result.Buckets.map(function (item) { return ({
                                name: item.Name,
                                dateCreation: item.CreationDate,
                            }); });
                            return [2 /*return*/, buckets];
                    }
                });
            });
        };
        UploadProviderAws_1.prototype.getBaseUrlPrivate = function () {
            return "https://".concat(this.bucketPrivateName, ".s3.").concat(this.region, ".amazonaws.com");
        };
        UploadProviderAws_1.prototype.getBaseUrlPublic = function () {
            return "https://".concat(this.bucketPublicName, ".s3.").concat(this.region, ".amazonaws.com");
        };
        UploadProviderAws_1.prototype.ensureKey = function (key) {
            var isPrefixed = key.startsWith('/');
            if (isPrefixed) {
                return key.slice(1);
            }
            return key;
        };
        UploadProviderAws_1.prototype.isUrlPrivate = function (url) {
            var baseUrlPrivate = this.getBaseUrlPrivate();
            var isPrivate = url.startsWith(baseUrlPrivate);
            return isPrivate;
        };
        UploadProviderAws_1.prototype.extractKeyFromUrlPrivate = function (url) {
            var baseUrlPrivate = this.getBaseUrlPrivate();
            return url.replace(baseUrlPrivate, '');
        };
        return UploadProviderAws_1;
    }(_classSuper));
    __setFunctionName(_classThis, "UploadProviderAws");
    (function () {
        var _a;
        var _metadata = typeof Symbol === "function" && Symbol.metadata ? Object.create((_a = _classSuper[Symbol.metadata]) !== null && _a !== void 0 ? _a : null) : void 0;
        __esDecorate(null, _classDescriptor = { value: _classThis }, _classDecorators, { kind: "class", name: _classThis.name, metadata: _metadata }, null, _classExtraInitializers);
        UploadProviderAws = _classThis = _classDescriptor.value;
        if (_metadata) Object.defineProperty(_classThis, Symbol.metadata, { enumerable: true, configurable: true, writable: true, value: _metadata });
        __runInitializers(_classThis, _classExtraInitializers);
    })();
    return UploadProviderAws = _classThis;
}();
exports.UploadProviderAws = UploadProviderAws;


// C:\grua-booking-system-25\server\dist\libraries\upload\internal\providers\local\upload.provider.local.js
"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __esDecorate = (this && this.__esDecorate) || function (ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {
    function accept(f) { if (f !== void 0 && typeof f !== "function") throw new TypeError("Function expected"); return f; }
    var kind = contextIn.kind, key = kind === "getter" ? "get" : kind === "setter" ? "set" : "value";
    var target = !descriptorIn && ctor ? contextIn["static"] ? ctor : ctor.prototype : null;
    var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});
    var _, done = false;
    for (var i = decorators.length - 1; i >= 0; i--) {
        var context = {};
        for (var p in contextIn) context[p] = p === "access" ? {} : contextIn[p];
        for (var p in contextIn.access) context.access[p] = contextIn.access[p];
        context.addInitializer = function (f) { if (done) throw new TypeError("Cannot add initializers after decoration has completed"); extraInitializers.push(accept(f || null)); };
        var result = (0, decorators[i])(kind === "accessor" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);
        if (kind === "accessor") {
            if (result === void 0) continue;
            if (result === null || typeof result !== "object") throw new TypeError("Object expected");
            if (_ = accept(result.get)) descriptor.get = _;
            if (_ = accept(result.set)) descriptor.set = _;
            if (_ = accept(result.init)) initializers.unshift(_);
        }
        else if (_ = accept(result)) {
            if (kind === "field") initializers.unshift(_);
            else descriptor[key] = _;
        }
    }
    if (target) Object.defineProperty(target, contextIn.name, descriptor);
    done = true;
};
var __runInitializers = (this && this.__runInitializers) || function (thisArg, initializers, value) {
    var useValue = arguments.length > 2;
    for (var i = 0; i < initializers.length; i++) {
        value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);
    }
    return useValue ? value : void 0;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (g && (g = 0, op[0] && (_ = 0)), _) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __setFunctionName = (this && this.__setFunctionName) || function (f, name, prefix) {
    if (typeof name === "symbol") name = name.description ? "[".concat(name.description, "]") : "";
    return Object.defineProperty(f, "name", { configurable: true, value: prefix ? "".concat(prefix, " ", name) : name });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.UploadProviderLocal = void 0;
var common_1 = require("@nestjs/common");
var serve_static_1 = require("@nestjs/serve-static");
var file_1 = require("@server/helpers/file");
var upload_provider_1 = require("@server/libraries/upload/upload.provider");
var path_1 = require("path");
var UploadProviderLocal = function () {
    var _classDecorators = [(0, common_1.Injectable)()];
    var _classDescriptor;
    var _classExtraInitializers = [];
    var _classThis;
    var _classSuper = upload_provider_1.UploadProvider;
    var UploadProviderLocal = _classThis = /** @class */ (function (_super) {
        __extends(UploadProviderLocal_1, _super);
        function UploadProviderLocal_1(loggerService, configurationService) {
            var _this = _super.call(this) || this;
            _this.loggerService = loggerService;
            _this.configurationService = configurationService;
            _this.pathPublic = ".".concat(UploadProviderLocal.path, "/public");
            _this.pathPrivate = ".".concat(UploadProviderLocal.path, "/private");
            _this.logger = _this.loggerService.create({ name: 'UploadProviderLocal' });
            return _this;
        }
        UploadProviderLocal_1.setup = function () {
            return serve_static_1.ServeStaticModule.forRoot({
                rootPath: (0, path_1.join)(file_1.FileHelper.getRoot(), ".".concat(this.path)),
                serveRoot: this.path,
            });
        };
        UploadProviderLocal_1.prototype.initialise = function () {
            try {
                file_1.FileHelper.writeFolder(this.pathPublic);
                this.staticServerUrl = "".concat(this.configurationService.getBaseUrl());
                this.logger.success("Upload Local is active");
            }
            catch (error) {
                this.logger.error("Upload Local failed to start: ".concat(error.message));
            }
            return;
        };
        UploadProviderLocal_1.prototype.uploadPublic = function (_a) {
            var file = _a.file;
            return __awaiter(this, void 0, void 0, function () {
                var content, filename, path, url;
                return __generator(this, function (_b) {
                    content = file.buffer;
                    filename = this.ensureFilename(file.originalname);
                    path = file_1.FileHelper.joinPaths(this.pathPublic, filename);
                    file_1.FileHelper.writeFile(path, content);
                    url = "".concat(this.staticServerUrl, "/").concat(path);
                    return [2 /*return*/, { url: url }];
                });
            });
        };
        UploadProviderLocal_1.prototype.uploadPrivate = function (_a) {
            var file = _a.file;
            return __awaiter(this, void 0, void 0, function () {
                var content, filename, path, url;
                return __generator(this, function (_b) {
                    content = file.buffer;
                    filename = this.ensureFilename(file.originalname);
                    path = file_1.FileHelper.joinPaths(this.pathPrivate, filename);
                    file_1.FileHelper.writeFile(path, content);
                    url = "".concat(this.staticServerUrl, "/").concat(path);
                    return [2 /*return*/, { url: url }];
                });
            });
        };
        UploadProviderLocal_1.prototype.fromPrivateToPublicUrl = function (_a) {
            var url = _a.url;
            return __awaiter(this, void 0, void 0, function () {
                return __generator(this, function (_b) {
                    return [2 /*return*/, { url: url }];
                });
            });
        };
        return UploadProviderLocal_1;
    }(_classSuper));
    __setFunctionName(_classThis, "UploadProviderLocal");
    (function () {
        var _a;
        var _metadata = typeof Symbol === "function" && Symbol.metadata ? Object.create((_a = _classSuper[Symbol.metadata]) !== null && _a !== void 0 ? _a : null) : void 0;
        __esDecorate(null, _classDescriptor = { value: _classThis }, _classDecorators, { kind: "class", name: _classThis.name, metadata: _metadata }, null, _classExtraInitializers);
        UploadProviderLocal = _classThis = _classDescriptor.value;
        if (_metadata) Object.defineProperty(_classThis, Symbol.metadata, { enumerable: true, configurable: true, writable: true, value: _metadata });
    })();
    _classThis.path = '/upload-local';
    (function () {
        __runInitializers(_classThis, _classExtraInitializers);
    })();
    return UploadProviderLocal = _classThis;
}();
exports.UploadProviderLocal = UploadProviderLocal;


// C:\grua-booking-system-25\server\dist\libraries\upload\internal\providers\aws\upload.provider.aws.js
"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __esDecorate = (this && this.__esDecorate) || function (ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {
    function accept(f) { if (f !== void 0 && typeof f !== "function") throw new TypeError("Function expected"); return f; }
    var kind = contextIn.kind, key = kind === "getter" ? "get" : kind === "setter" ? "set" : "value";
    var target = !descriptorIn && ctor ? contextIn["static"] ? ctor : ctor.prototype : null;
    var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});
    var _, done = false;
    for (var i = decorators.length - 1; i >= 0; i--) {
        var context = {};
        for (var p in contextIn) context[p] = p === "access" ? {} : contextIn[p];
        for (var p in contextIn.access) context.access[p] = contextIn.access[p];
        context.addInitializer = function (f) { if (done) throw new TypeError("Cannot add initializers after decoration has completed"); extraInitializers.push(accept(f || null)); };
        var result = (0, decorators[i])(kind === "accessor" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);
        if (kind === "accessor") {
            if (result === void 0) continue;
            if (result === null || typeof result !== "object") throw new TypeError("Object expected");
            if (_ = accept(result.get)) descriptor.get = _;
            if (_ = accept(result.set)) descriptor.set = _;
            if (_ = accept(result.init)) initializers.unshift(_);
        }
        else if (_ = accept(result)) {
            if (kind === "field") initializers.unshift(_);
            else descriptor[key] = _;
        }
    }
    if (target) Object.defineProperty(target, contextIn.name, descriptor);
    done = true;
};
var __runInitializers = (this && this.__runInitializers) || function (thisArg, initializers, value) {
    var useValue = arguments.length > 2;
    for (var i = 0; i < initializers.length; i++) {
        value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);
    }
    return useValue ? value : void 0;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (g && (g = 0, op[0] && (_ = 0)), _) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __setFunctionName = (this && this.__setFunctionName) || function (f, name, prefix) {
    if (typeof name === "symbol") name = name.description ? "[".concat(name.description, "]") : "";
    return Object.defineProperty(f, "name", { configurable: true, value: prefix ? "".concat(prefix, " ", name) : name });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.UploadProviderAws = void 0;
var client_s3_1 = require("@aws-sdk/client-s3");
var s3_request_presigner_1 = require("@aws-sdk/s3-request-presigner");
var common_1 = require("@nestjs/common");
var upload_provider_1 = require("@server/libraries/upload/upload.provider");
var ONE_HOUR_IN_SECONDS = 60 * 60;
var UploadProviderAws = function () {
    var _classDecorators = [(0, common_1.Injectable)()];
    var _classDescriptor;
    var _classExtraInitializers = [];
    var _classThis;
    var _classSuper = upload_provider_1.UploadProvider;
    var UploadProviderAws = _classThis = /** @class */ (function (_super) {
        __extends(UploadProviderAws_1, _super);
        function UploadProviderAws_1(loggerService, configurationService) {
            var _this = _super.call(this) || this;
            _this.loggerService = loggerService;
            _this.configurationService = configurationService;
            _this.logger = _this.loggerService.create({ name: 'UploadProviderAws' });
            return _this;
        }
        UploadProviderAws_1.prototype.initialise = function () {
            return __awaiter(this, void 0, void 0, function () {
                var accessKey, secretKey, error_1;
                return __generator(this, function (_a) {
                    switch (_a.label) {
                        case 0:
                            _a.trys.push([0, 2, , 3]);
                            accessKey = this.configurationService.get("SERVER_UPLOAD_AWS_ACCESS_KEY");
                            secretKey = this.configurationService.get("SERVER_UPLOAD_AWS_SECRET_KEY");
                            if (!accessKey && !secretKey) {
                                throw new Error('Set SERVER_UPLOAD_AWS_ACCESS_KEY && SERVER_UPLOAD_AWS_SECRET_KEY in your .env to activate');
                            }
                            if (!accessKey) {
                                throw new Error('Set SERVER_UPLOAD_AWS_ACCESS_KEY in your .env to activate');
                            }
                            if (!secretKey) {
                                throw new Error('Set SERVER_UPLOAD_AWS_SECRET_KEY in your .env to activate');
                            }
                            this.region = this.configurationService.get("SERVER_UPLOAD_AWS_REGION", 'us-east-1');
                            this.bucketPublicName = this.configurationService.get("SERVER_UPLOAD_AWS_BUCKET_PUBLIC_NAME");
                            if (!this.bucketPublicName) {
                                this.logger.warning("Set SERVER_UPLOAD_AWS_BUCKET_PUBLIC_NAME in your .env to activate a public bucket with infinite urls");
                            }
                            this.bucketPrivateName = this.configurationService.get("SERVER_UPLOAD_AWS_BUCKET_PRIVATE_NAME");
                            if (!this.bucketPrivateName) {
                                this.logger.warning("Set SERVER_UPLOAD_AWS_BUCKET_PRIVATE_NAME in your .env to activate a private bucket with signed urls");
                            }
                            this.client = new client_s3_1.S3Client({
                                region: this.region,
                                credentials: {
                                    accessKeyId: accessKey,
                                    secretAccessKey: secretKey,
                                },
                            });
                            return [4 /*yield*/, this.check()];
                        case 1:
                            _a.sent();
                            this.logger.success("AWS library active in region ".concat(this.region));
                            return [3 /*break*/, 3];
                        case 2:
                            error_1 = _a.sent();
                            this.logger.warning("AWS library failed to start");
                            throw new Error(error_1);
                        case 3: return [2 /*return*/];
                    }
                });
            });
        };
        UploadProviderAws_1.prototype.check = function () {
            return __awaiter(this, void 0, void 0, function () {
                var buckets, bucket, bucket;
                var _this = this;
                return __generator(this, function (_a) {
                    switch (_a.label) {
                        case 0: return [4 /*yield*/, this.listBuckets()];
                        case 1:
                            buckets = _a.sent();
                            if (this.bucketPrivateName) {
                                this.logger.log("Checking bucket \"".concat(this.bucketPrivateName, "\"..."));
                                bucket = buckets.find(function (bucket) { return bucket.name === _this.bucketPrivateName; });
                                if (bucket) {
                                    this.logger.success("Bucket \"".concat(this.bucketPrivateName, "\" is active"));
                                }
                                else {
                                    throw new Error("Bucket \"".concat(this.bucketPrivateName, "\" was not found"));
                                }
                            }
                            if (this.bucketPublicName) {
                                this.logger.log("Checking bucket \"".concat(this.bucketPublicName, "\"..."));
                                bucket = buckets.find(function (bucket) { return bucket.name === _this.bucketPublicName; });
                                if (bucket) {
                                    this.logger.success("Bucket \"".concat(this.bucketPublicName, "\" is active"));
                                }
                                else {
                                    throw new Error("Bucket \"".concat(this.bucketPublicName, "\" was not found"));
                                }
                            }
                            return [2 /*return*/];
                    }
                });
            });
        };
        UploadProviderAws_1.prototype.uploadPublic = function (options) {
            var _a;
            return __awaiter(this, void 0, void 0, function () {
                var file, key, command, url, error_2;
                return __generator(this, function (_b) {
                    switch (_b.label) {
                        case 0:
                            file = options.file;
                            key = this.ensureFilename(file.originalname);
                            command = new client_s3_1.PutObjectCommand({
                                Bucket: "".concat(this.bucketPublicName),
                                Key: this.ensureKey(key),
                                Body: file.buffer,
                                ContentType: (_a = file.mimetype) !== null && _a !== void 0 ? _a : 'image/png',
                            });
                            _b.label = 1;
                        case 1:
                            _b.trys.push([1, 3, , 4]);
                            return [4 /*yield*/, this.client.send(command)];
                        case 2:
                            _b.sent();
                            this.logger.success("File ".concat(file.originalname, " saved (public)"));
                            url = "".concat(this.getBaseUrlPublic(), "/").concat(key);
                            return [2 /*return*/, { url: url }];
                        case 3:
                            error_2 = _b.sent();
                            this.logger.error("".concat(error_2));
                            throw new Error("Could not upload public file with key \"".concat(key, "\""));
                        case 4: return [2 /*return*/];
                    }
                });
            });
        };
        UploadProviderAws_1.prototype.uploadPrivate = function (options) {
            var _a;
            return __awaiter(this, void 0, void 0, function () {
                var file, key, command, url, error_3;
                return __generator(this, function (_b) {
                    switch (_b.label) {
                        case 0:
                            file = options.file;
                            key = this.ensureFilename(file.originalname);
                            command = new client_s3_1.PutObjectCommand({
                                Bucket: "".concat(this.bucketPrivateName),
                                Key: this.ensureKey(key),
                                Body: file.buffer,
                                ContentType: (_a = file.mimetype) !== null && _a !== void 0 ? _a : 'image/png',
                            });
                            _b.label = 1;
                        case 1:
                            _b.trys.push([1, 3, , 4]);
                            return [4 /*yield*/, this.client.send(command)];
                        case 2:
                            _b.sent();
                            this.logger.success("File ".concat(file.originalname, " saved (private)"));
                            url = "".concat(this.getBaseUrlPrivate(), "/").concat(key);
                            return [2 /*return*/, { url: url }];
                        case 3:
                            error_3 = _b.sent();
                            this.logger.error("".concat(error_3));
                            throw new Error("Could not upload private file with key \"".concat(key, "\""));
                        case 4: return [2 /*return*/];
                    }
                });
            });
        };
        UploadProviderAws_1.prototype.fromPrivateToPublicUrl = function (_a) {
            var url = _a.url, _b = _a.expiresInSeconds, expiresInSeconds = _b === void 0 ? ONE_HOUR_IN_SECONDS : _b;
            return __awaiter(this, void 0, void 0, function () {
                var key, params, command, urlPublic;
                return __generator(this, function (_c) {
                    switch (_c.label) {
                        case 0:
                            if (!this.isUrlPrivate(url)) {
                                throw new Error("".concat(url, " must be a private url"));
                            }
                            key = this.extractKeyFromUrlPrivate(url);
                            params = {
                                Bucket: "".concat(this.bucketPrivateName),
                                Key: this.ensureKey(key),
                            };
                            command = new client_s3_1.GetObjectCommand(params);
                            return [4 /*yield*/, (0, s3_request_presigner_1.getSignedUrl)(this.client, command, {
                                    expiresIn: expiresInSeconds,
                                })];
                        case 1:
                            urlPublic = _c.sent();
                            return [2 /*return*/, { url: urlPublic }];
                    }
                });
            });
        };
        /* -------------------------------------------------------------------------- */
        /*                                   PRIVATE                                  */
        /* -------------------------------------------------------------------------- */
        UploadProviderAws_1.prototype.listBuckets = function () {
            return __awaiter(this, void 0, void 0, function () {
                var result, buckets;
                return __generator(this, function (_a) {
                    switch (_a.label) {
                        case 0: return [4 /*yield*/, this.client.send(new client_s3_1.ListBucketsCommand({}))];
                        case 1:
                            result = _a.sent();
                            buckets = result.Buckets.map(function (item) { return ({
                                name: item.Name,
                                dateCreation: item.CreationDate,
                            }); });
                            return [2 /*return*/, buckets];
                    }
                });
            });
        };
        UploadProviderAws_1.prototype.getBaseUrlPrivate = function () {
            return "https://".concat(this.bucketPrivateName, ".s3.").concat(this.region, ".amazonaws.com");
        };
        UploadProviderAws_1.prototype.getBaseUrlPublic = function () {
            return "https://".concat(this.bucketPublicName, ".s3.").concat(this.region, ".amazonaws.com");
        };
        UploadProviderAws_1.prototype.ensureKey = function (key) {
            var isPrefixed = key.startsWith('/');
            if (isPrefixed) {
                return key.slice(1);
            }
            return key;
        };
        UploadProviderAws_1.prototype.isUrlPrivate = function (url) {
            var baseUrlPrivate = this.getBaseUrlPrivate();
            var isPrivate = url.startsWith(baseUrlPrivate);
            return isPrivate;
        };
        UploadProviderAws_1.prototype.extractKeyFromUrlPrivate = function (url) {
            var baseUrlPrivate = this.getBaseUrlPrivate();
            return url.replace(baseUrlPrivate, '');
        };
        return UploadProviderAws_1;
    }(_classSuper));
    __setFunctionName(_classThis, "UploadProviderAws");
    (function () {
        var _a;
        var _metadata = typeof Symbol === "function" && Symbol.metadata ? Object.create((_a = _classSuper[Symbol.metadata]) !== null && _a !== void 0 ? _a : null) : void 0;
        __esDecorate(null, _classDescriptor = { value: _classThis }, _classDecorators, { kind: "class", name: _classThis.name, metadata: _metadata }, null, _classExtraInitializers);
        UploadProviderAws = _classThis = _classDescriptor.value;
        if (_metadata) Object.defineProperty(_classThis, Symbol.metadata, { enumerable: true, configurable: true, writable: true, value: _metadata });
        __runInitializers(_classThis, _classExtraInitializers);
    })();
    return UploadProviderAws = _classThis;
}();
exports.UploadProviderAws = UploadProviderAws;


// C:\grua-booking-system-25\server\dist\libraries\upload\internal\providers\local\upload.provider.local.js
"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __esDecorate = (this && this.__esDecorate) || function (ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {
    function accept(f) { if (f !== void 0 && typeof f !== "function") throw new TypeError("Function expected"); return f; }
    var kind = contextIn.kind, key = kind === "getter" ? "get" : kind === "setter" ? "set" : "value";
    var target = !descriptorIn && ctor ? contextIn["static"] ? ctor : ctor.prototype : null;
    var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});
    var _, done = false;
    for (var i = decorators.length - 1; i >= 0; i--) {
        var context = {};
        for (var p in contextIn) context[p] = p === "access" ? {} : contextIn[p];
        for (var p in contextIn.access) context.access[p] = contextIn.access[p];
        context.addInitializer = function (f) { if (done) throw new TypeError("Cannot add initializers after decoration has completed"); extraInitializers.push(accept(f || null)); };
        var result = (0, decorators[i])(kind === "accessor" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);
        if (kind === "accessor") {
            if (result === void 0) continue;
            if (result === null || typeof result !== "object") throw new TypeError("Object expected");
            if (_ = accept(result.get)) descriptor.get = _;
            if (_ = accept(result.set)) descriptor.set = _;
            if (_ = accept(result.init)) initializers.unshift(_);
        }
        else if (_ = accept(result)) {
            if (kind === "field") initializers.unshift(_);
            else descriptor[key] = _;
        }
    }
    if (target) Object.defineProperty(target, contextIn.name, descriptor);
    done = true;
};
var __runInitializers = (this && this.__runInitializers) || function (thisArg, initializers, value) {
    var useValue = arguments.length > 2;
    for (var i = 0; i < initializers.length; i++) {
        value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);
    }
    return useValue ? value : void 0;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (g && (g = 0, op[0] && (_ = 0)), _) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __setFunctionName = (this && this.__setFunctionName) || function (f, name, prefix) {
    if (typeof name === "symbol") name = name.description ? "[".concat(name.description, "]") : "";
    return Object.defineProperty(f, "name", { configurable: true, value: prefix ? "".concat(prefix, " ", name) : name });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.UploadProviderLocal = void 0;
var common_1 = require("@nestjs/common");
var serve_static_1 = require("@nestjs/serve-static");
var file_1 = require("@server/helpers/file");
var upload_provider_1 = require("@server/libraries/upload/upload.provider");
var path_1 = require("path");
var UploadProviderLocal = function () {
    var _classDecorators = [(0, common_1.Injectable)()];
    var _classDescriptor;
    var _classExtraInitializers = [];
    var _classThis;
    var _classSuper = upload_provider_1.UploadProvider;
    var UploadProviderLocal = _classThis = /** @class */ (function (_super) {
        __extends(UploadProviderLocal_1, _super);
        function UploadProviderLocal_1(loggerService, configurationService) {
            var _this = _super.call(this) || this;
            _this.loggerService = loggerService;
            _this.configurationService = configurationService;
            _this.pathPublic = ".".concat(UploadProviderLocal.path, "/public");
            _this.pathPrivate = ".".concat(UploadProviderLocal.path, "/private");
            _this.logger = _this.loggerService.create({ name: 'UploadProviderLocal' });
            return _this;
        }
        UploadProviderLocal_1.setup = function () {
            return serve_static_1.ServeStaticModule.forRoot({
                rootPath: (0, path_1.join)(file_1.FileHelper.getRoot(), ".".concat(this.path)),
                serveRoot: this.path,
            });
        };
        UploadProviderLocal_1.prototype.initialise = function () {
            try {
                file_1.FileHelper.writeFolder(this.pathPublic);
                this.staticServerUrl = "".concat(this.configurationService.getBaseUrl());
                this.logger.success("Upload Local is active");
            }
            catch (error) {
                this.logger.error("Upload Local failed to start: ".concat(error.message));
            }
            return;
        };
        UploadProviderLocal_1.prototype.uploadPublic = function (_a) {
            var file = _a.file;
            return __awaiter(this, void 0, void 0, function () {
                var content, filename, path, url;
                return __generator(this, function (_b) {
                    content = file.buffer;
                    filename = this.ensureFilename(file.originalname);
                    path = file_1.FileHelper.joinPaths(this.pathPublic, filename);
                    file_1.FileHelper.writeFile(path, content);
                    url = "".concat(this.staticServerUrl, "/").concat(path);
                    return [2 /*return*/, { url: url }];
                });
            });
        };
        UploadProviderLocal_1.prototype.uploadPrivate = function (_a) {
            var file = _a.file;
            return __awaiter(this, void 0, void 0, function () {
                var content, filename, path, url;
                return __generator(this, function (_b) {
                    content = file.buffer;
                    filename = this.ensureFilename(file.originalname);
                    path = file_1.FileHelper.joinPaths(this.pathPrivate, filename);
                    file_1.FileHelper.writeFile(path, content);
                    url = "".concat(this.staticServerUrl, "/").concat(path);
                    return [2 /*return*/, { url: url }];
                });
            });
        };
        UploadProviderLocal_1.prototype.fromPrivateToPublicUrl = function (_a) {
            var url = _a.url;
            return __awaiter(this, void 0, void 0, function () {
                return __generator(this, function (_b) {
                    return [2 /*return*/, { url: url }];
                });
            });
        };
        return UploadProviderLocal_1;
    }(_classSuper));
    __setFunctionName(_classThis, "UploadProviderLocal");
    (function () {
        var _a;
        var _metadata = typeof Symbol === "function" && Symbol.metadata ? Object.create((_a = _classSuper[Symbol.metadata]) !== null && _a !== void 0 ? _a : null) : void 0;
        __esDecorate(null, _classDescriptor = { value: _classThis }, _classDecorators, { kind: "class", name: _classThis.name, metadata: _metadata }, null, _classExtraInitializers);
        UploadProviderLocal = _classThis = _classDescriptor.value;
        if (_metadata) Object.defineProperty(_classThis, Symbol.metadata, { enumerable: true, configurable: true, writable: true, value: _metadata });
    })();
    _classThis.path = '/upload-local';
    (function () {
        __runInitializers(_classThis, _classExtraInitializers);
    })();
    return UploadProviderLocal = _classThis;
}();
exports.UploadProviderLocal = UploadProviderLocal;


// C:\grua-booking-system-25\server\dist\libraries\upload\index.js
"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", { value: true });
__exportStar(require("./upload.module"), exports);
__exportStar(require("./upload.service"), exports);
__exportStar(require("./upload.type"), exports);


// C:\grua-booking-system-25\server\dist\libraries\upload\upload.module.js
"use strict";
var __esDecorate = (this && this.__esDecorate) || function (ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {
    function accept(f) { if (f !== void 0 && typeof f !== "function") throw new TypeError("Function expected"); return f; }
    var kind = contextIn.kind, key = kind === "getter" ? "get" : kind === "setter" ? "set" : "value";
    var target = !descriptorIn && ctor ? contextIn["static"] ? ctor : ctor.prototype : null;
    var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});
    var _, done = false;
    for (var i = decorators.length - 1; i >= 0; i--) {
        var context = {};
        for (var p in contextIn) context[p] = p === "access" ? {} : contextIn[p];
        for (var p in contextIn.access) context.access[p] = contextIn.access[p];
        context.addInitializer = function (f) { if (done) throw new TypeError("Cannot add initializers after decoration has completed"); extraInitializers.push(accept(f || null)); };
        var result = (0, decorators[i])(kind === "accessor" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);
        if (kind === "accessor") {
            if (result === void 0) continue;
            if (result === null || typeof result !== "object") throw new TypeError("Object expected");
            if (_ = accept(result.get)) descriptor.get = _;
            if (_ = accept(result.set)) descriptor.set = _;
            if (_ = accept(result.init)) initializers.unshift(_);
        }
        else if (_ = accept(result)) {
            if (kind === "field") initializers.unshift(_);
            else descriptor[key] = _;
        }
    }
    if (target) Object.defineProperty(target, contextIn.name, descriptor);
    done = true;
};
var __runInitializers = (this && this.__runInitializers) || function (thisArg, initializers, value) {
    var useValue = arguments.length > 2;
    for (var i = 0; i < initializers.length; i++) {
        value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);
    }
    return useValue ? value : void 0;
};
var __setFunctionName = (this && this.__setFunctionName) || function (f, name, prefix) {
    if (typeof name === "symbol") name = name.description ? "[".concat(name.description, "]") : "";
    return Object.defineProperty(f, "name", { configurable: true, value: prefix ? "".concat(prefix, " ", name) : name });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.UploadModule = void 0;
var common_1 = require("@nestjs/common");
var upload_provider_local_1 = require("./internal/providers/local/upload.provider.local");
var upload_service_1 = require("./upload.service");
var UploadModule = function () {
    var _classDecorators = [(0, common_1.Module)({
            imports: [upload_provider_local_1.UploadProviderLocal.setup()],
            providers: [upload_service_1.UploadService],
            exports: [upload_service_1.UploadService],
        })];
    var _classDescriptor;
    var _classExtraInitializers = [];
    var _classThis;
    var UploadModule = _classThis = /** @class */ (function () {
        function UploadModule_1() {
        }
        return UploadModule_1;
    }());
    __setFunctionName(_classThis, "UploadModule");
    (function () {
        var _metadata = typeof Symbol === "function" && Symbol.metadata ? Object.create(null) : void 0;
        __esDecorate(null, _classDescriptor = { value: _classThis }, _classDecorators, { kind: "class", name: _classThis.name, metadata: _metadata }, null, _classExtraInitializers);
        UploadModule = _classThis = _classDescriptor.value;
        if (_metadata) Object.defineProperty(_classThis, Symbol.metadata, { enumerable: true, configurable: true, writable: true, value: _metadata });
        __runInitializers(_classThis, _classExtraInitializers);
    })();
    return UploadModule = _classThis;
}();
exports.UploadModule = UploadModule;


// C:\grua-booking-system-25\server\dist\libraries\upload\upload.provider.js
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.UploadProvider = void 0;
var date_1 = require("@server/helpers/date");
var UploadProvider = /** @class */ (function () {
    function UploadProvider() {
    }
    UploadProvider.prototype.initialise = function () {
        return;
    };
    UploadProvider.prototype.ensureFilename = function (filenameBefore) {
        var filenameClean = filenameBefore.replace(/[^\w\.]/gi, '');
        var timestamp = date_1.DateHelper.getNow().getTime();
        return "".concat(timestamp, "-").concat(filenameClean);
    };
    return UploadProvider;
}());
exports.UploadProvider = UploadProvider;


// C:\grua-booking-system-25\server\dist\libraries\upload\upload.service.js
"use strict";
var __esDecorate = (this && this.__esDecorate) || function (ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {
    function accept(f) { if (f !== void 0 && typeof f !== "function") throw new TypeError("Function expected"); return f; }
    var kind = contextIn.kind, key = kind === "getter" ? "get" : kind === "setter" ? "set" : "value";
    var target = !descriptorIn && ctor ? contextIn["static"] ? ctor : ctor.prototype : null;
    var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});
    var _, done = false;
    for (var i = decorators.length - 1; i >= 0; i--) {
        var context = {};
        for (var p in contextIn) context[p] = p === "access" ? {} : contextIn[p];
        for (var p in contextIn.access) context.access[p] = contextIn.access[p];
        context.addInitializer = function (f) { if (done) throw new TypeError("Cannot add initializers after decoration has completed"); extraInitializers.push(accept(f || null)); };
        var result = (0, decorators[i])(kind === "accessor" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);
        if (kind === "accessor") {
            if (result === void 0) continue;
            if (result === null || typeof result !== "object") throw new TypeError("Object expected");
            if (_ = accept(result.get)) descriptor.get = _;
            if (_ = accept(result.set)) descriptor.set = _;
            if (_ = accept(result.init)) initializers.unshift(_);
        }
        else if (_ = accept(result)) {
            if (kind === "field") initializers.unshift(_);
            else descriptor[key] = _;
        }
    }
    if (target) Object.defineProperty(target, contextIn.name, descriptor);
    done = true;
};
var __runInitializers = (this && this.__runInitializers) || function (thisArg, initializers, value) {
    var useValue = arguments.length > 2;
    for (var i = 0; i < initializers.length; i++) {
        value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);
    }
    return useValue ? value : void 0;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (g && (g = 0, op[0] && (_ = 0)), _) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __setFunctionName = (this && this.__setFunctionName) || function (f, name, prefix) {
    if (typeof name === "symbol") name = name.description ? "[".concat(name.description, "]") : "";
    return Object.defineProperty(f, "name", { configurable: true, value: prefix ? "".concat(prefix, " ", name) : name });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.UploadService = void 0;
var common_1 = require("@nestjs/common");
var upload_provider_aws_1 = require("./internal/providers/aws/upload.provider.aws");
var upload_provider_local_1 = require("./internal/providers/local/upload.provider.local");
var UploadService = function () {
    var _classDecorators = [(0, common_1.Injectable)()];
    var _classDescriptor;
    var _classExtraInitializers = [];
    var _classThis;
    var UploadService = _classThis = /** @class */ (function () {
        function UploadService_1(configurationService, loggerService) {
            this.configurationService = configurationService;
            this.loggerService = loggerService;
            this.logger = loggerService.create({ name: 'UploadService' });
        }
        UploadService_1.prototype.onModuleInit = function () {
            return __awaiter(this, void 0, void 0, function () {
                var _a;
                return __generator(this, function (_b) {
                    switch (_b.label) {
                        case 0:
                            _a = this;
                            return [4 /*yield*/, this.createInstance()];
                        case 1:
                            _a.instance = _b.sent();
                            return [2 /*return*/];
                    }
                });
            });
        };
        UploadService_1.prototype.createInstance = function () {
            return __awaiter(this, void 0, void 0, function () {
                var instance, error_1, instance, error_2;
                return __generator(this, function (_a) {
                    switch (_a.label) {
                        case 0:
                            _a.trys.push([0, 2, , 3]);
                            this.logger.log("Trying using AWS...");
                            instance = new upload_provider_aws_1.UploadProviderAws(this.loggerService, this.configurationService);
                            return [4 /*yield*/, instance.initialise()];
                        case 1:
                            _a.sent();
                            return [2 /*return*/, instance];
                        case 2:
                            error_1 = _a.sent();
                            this.logger.warning("Could not use AWS: ".concat(error_1.message));
                            return [3 /*break*/, 3];
                        case 3:
                            this.logger.log("Falling back on local provider (not recommended for production)");
                            _a.label = 4;
                        case 4:
                            _a.trys.push([4, 6, , 7]);
                            instance = new upload_provider_local_1.UploadProviderLocal(this.loggerService, this.configurationService);
                            return [4 /*yield*/, instance.initialise()];
                        case 5:
                            _a.sent();
                            return [2 /*return*/, instance];
                        case 6:
                            error_2 = _a.sent();
                            this.logger.warning("Could not use local provider: ".concat(error_2.message));
                            return [3 /*break*/, 7];
                        case 7: return [2 /*return*/];
                    }
                });
            });
        };
        UploadService_1.prototype.uploadPublic = function () {
            var files = [];
            for (var _i = 0; _i < arguments.length; _i++) {
                files[_i] = arguments[_i];
            }
            return __awaiter(this, void 0, void 0, function () {
                var responses, _a, files_1, file, response;
                return __generator(this, function (_b) {
                    switch (_b.label) {
                        case 0:
                            responses = [];
                            _a = 0, files_1 = files;
                            _b.label = 1;
                        case 1:
                            if (!(_a < files_1.length)) return [3 /*break*/, 4];
                            file = files_1[_a];
                            return [4 /*yield*/, this.instance.uploadPublic({ file: file })];
                        case 2:
                            response = _b.sent();
                            responses.push(response);
                            _b.label = 3;
                        case 3:
                            _a++;
                            return [3 /*break*/, 1];
                        case 4: return [2 /*return*/, responses];
                    }
                });
            });
        };
        UploadService_1.prototype.uploadPrivate = function () {
            var files = [];
            for (var _i = 0; _i < arguments.length; _i++) {
                files[_i] = arguments[_i];
            }
            return __awaiter(this, void 0, void 0, function () {
                var responses, _a, files_2, file, response;
                return __generator(this, function (_b) {
                    switch (_b.label) {
                        case 0:
                            responses = [];
                            _a = 0, files_2 = files;
                            _b.label = 1;
                        case 1:
                            if (!(_a < files_2.length)) return [3 /*break*/, 4];
                            file = files_2[_a];
                            return [4 /*yield*/, this.instance.uploadPrivate({ file: file })];
                        case 2:
                            response = _b.sent();
                            responses.push(response);
                            _b.label = 3;
                        case 3:
                            _a++;
                            return [3 /*break*/, 1];
                        case 4: return [2 /*return*/, responses];
                    }
                });
            });
        };
        UploadService_1.prototype.fromPrivateToPublicUrl = function () {
            var items = [];
            for (var _i = 0; _i < arguments.length; _i++) {
                items[_i] = arguments[_i];
            }
            return __awaiter(this, void 0, void 0, function () {
                var responses, _a, items_1, item, response;
                return __generator(this, function (_b) {
                    switch (_b.label) {
                        case 0:
                            responses = [];
                            _a = 0, items_1 = items;
                            _b.label = 1;
                        case 1:
                            if (!(_a < items_1.length)) return [3 /*break*/, 4];
                            item = items_1[_a];
                            return [4 /*yield*/, this.instance.fromPrivateToPublicUrl(item)];
                        case 2:
                            response = _b.sent();
                            responses.push(response);
                            _b.label = 3;
                        case 3:
                            _a++;
                            return [3 /*break*/, 1];
                        case 4: return [2 /*return*/, responses];
                    }
                });
            });
        };
        return UploadService_1;
    }());
    __setFunctionName(_classThis, "UploadService");
    (function () {
        var _metadata = typeof Symbol === "function" && Symbol.metadata ? Object.create(null) : void 0;
        __esDecorate(null, _classDescriptor = { value: _classThis }, _classDecorators, { kind: "class", name: _classThis.name, metadata: _metadata }, null, _classExtraInitializers);
        UploadService = _classThis = _classDescriptor.value;
        if (_metadata) Object.defineProperty(_classThis, Symbol.metadata, { enumerable: true, configurable: true, writable: true, value: _metadata });
        __runInitializers(_classThis, _classExtraInitializers);
    })();
    return UploadService = _classThis;
}();
exports.UploadService = UploadService;


// C:\grua-booking-system-25\server\dist\libraries\upload\upload.type.js
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });


// C:\grua-booking-system-25\server\dist\libraries\upload\internal\providers\aws\upload.provider.aws.js
"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __esDecorate = (this && this.__esDecorate) || function (ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {
    function accept(f) { if (f !== void 0 && typeof f !== "function") throw new TypeError("Function expected"); return f; }
    var kind = contextIn.kind, key = kind === "getter" ? "get" : kind === "setter" ? "set" : "value";
    var target = !descriptorIn && ctor ? contextIn["static"] ? ctor : ctor.prototype : null;
    var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});
    var _, done = false;
    for (var i = decorators.length - 1; i >= 0; i--) {
        var context = {};
        for (var p in contextIn) context[p] = p === "access" ? {} : contextIn[p];
        for (var p in contextIn.access) context.access[p] = contextIn.access[p];
        context.addInitializer = function (f) { if (done) throw new TypeError("Cannot add initializers after decoration has completed"); extraInitializers.push(accept(f || null)); };
        var result = (0, decorators[i])(kind === "accessor" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);
        if (kind === "accessor") {
            if (result === void 0) continue;
            if (result === null || typeof result !== "object") throw new TypeError("Object expected");
            if (_ = accept(result.get)) descriptor.get = _;
            if (_ = accept(result.set)) descriptor.set = _;
            if (_ = accept(result.init)) initializers.unshift(_);
        }
        else if (_ = accept(result)) {
            if (kind === "field") initializers.unshift(_);
            else descriptor[key] = _;
        }
    }
    if (target) Object.defineProperty(target, contextIn.name, descriptor);
    done = true;
};
var __runInitializers = (this && this.__runInitializers) || function (thisArg, initializers, value) {
    var useValue = arguments.length > 2;
    for (var i = 0; i < initializers.length; i++) {
        value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);
    }
    return useValue ? value : void 0;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (g && (g = 0, op[0] && (_ = 0)), _) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __setFunctionName = (this && this.__setFunctionName) || function (f, name, prefix) {
    if (typeof name === "symbol") name = name.description ? "[".concat(name.description, "]") : "";
    return Object.defineProperty(f, "name", { configurable: true, value: prefix ? "".concat(prefix, " ", name) : name });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.UploadProviderAws = void 0;
var client_s3_1 = require("@aws-sdk/client-s3");
var s3_request_presigner_1 = require("@aws-sdk/s3-request-presigner");
var common_1 = require("@nestjs/common");
var upload_provider_1 = require("@server/libraries/upload/upload.provider");
var ONE_HOUR_IN_SECONDS = 60 * 60;
var UploadProviderAws = function () {
    var _classDecorators = [(0, common_1.Injectable)()];
    var _classDescriptor;
    var _classExtraInitializers = [];
    var _classThis;
    var _classSuper = upload_provider_1.UploadProvider;
    var UploadProviderAws = _classThis = /** @class */ (function (_super) {
        __extends(UploadProviderAws_1, _super);
        function UploadProviderAws_1(loggerService, configurationService) {
            var _this = _super.call(this) || this;
            _this.loggerService = loggerService;
            _this.configurationService = configurationService;
            _this.logger = _this.loggerService.create({ name: 'UploadProviderAws' });
            return _this;
        }
        UploadProviderAws_1.prototype.initialise = function () {
            return __awaiter(this, void 0, void 0, function () {
                var accessKey, secretKey, error_1;
                return __generator(this, function (_a) {
                    switch (_a.label) {
                        case 0:
                            _a.trys.push([0, 2, , 3]);
                            accessKey = this.configurationService.get("SERVER_UPLOAD_AWS_ACCESS_KEY");
                            secretKey = this.configurationService.get("SERVER_UPLOAD_AWS_SECRET_KEY");
                            if (!accessKey && !secretKey) {
                                throw new Error('Set SERVER_UPLOAD_AWS_ACCESS_KEY && SERVER_UPLOAD_AWS_SECRET_KEY in your .env to activate');
                            }
                            if (!accessKey) {
                                throw new Error('Set SERVER_UPLOAD_AWS_ACCESS_KEY in your .env to activate');
                            }
                            if (!secretKey) {
                                throw new Error('Set SERVER_UPLOAD_AWS_SECRET_KEY in your .env to activate');
                            }
                            this.region = this.configurationService.get("SERVER_UPLOAD_AWS_REGION", 'us-east-1');
                            this.bucketPublicName = this.configurationService.get("SERVER_UPLOAD_AWS_BUCKET_PUBLIC_NAME");
                            if (!this.bucketPublicName) {
                                this.logger.warning("Set SERVER_UPLOAD_AWS_BUCKET_PUBLIC_NAME in your .env to activate a public bucket with infinite urls");
                            }
                            this.bucketPrivateName = this.configurationService.get("SERVER_UPLOAD_AWS_BUCKET_PRIVATE_NAME");
                            if (!this.bucketPrivateName) {
                                this.logger.warning("Set SERVER_UPLOAD_AWS_BUCKET_PRIVATE_NAME in your .env to activate a private bucket with signed urls");
                            }
                            this.client = new client_s3_1.S3Client({
                                region: this.region,
                                credentials: {
                                    accessKeyId: accessKey,
                                    secretAccessKey: secretKey,
                                },
                            });
                            return [4 /*yield*/, this.check()];
                        case 1:
                            _a.sent();
                            this.logger.success("AWS library active in region ".concat(this.region));
                            return [3 /*break*/, 3];
                        case 2:
                            error_1 = _a.sent();
                            this.logger.warning("AWS library failed to start");
                            throw new Error(error_1);
                        case 3: return [2 /*return*/];
                    }
                });
            });
        };
        UploadProviderAws_1.prototype.check = function () {
            return __awaiter(this, void 0, void 0, function () {
                var buckets, bucket, bucket;
                var _this = this;
                return __generator(this, function (_a) {
                    switch (_a.label) {
                        case 0: return [4 /*yield*/, this.listBuckets()];
                        case 1:
                            buckets = _a.sent();
                            if (this.bucketPrivateName) {
                                this.logger.log("Checking bucket \"".concat(this.bucketPrivateName, "\"..."));
                                bucket = buckets.find(function (bucket) { return bucket.name === _this.bucketPrivateName; });
                                if (bucket) {
                                    this.logger.success("Bucket \"".concat(this.bucketPrivateName, "\" is active"));
                                }
                                else {
                                    throw new Error("Bucket \"".concat(this.bucketPrivateName, "\" was not found"));
                                }
                            }
                            if (this.bucketPublicName) {
                                this.logger.log("Checking bucket \"".concat(this.bucketPublicName, "\"..."));
                                bucket = buckets.find(function (bucket) { return bucket.name === _this.bucketPublicName; });
                                if (bucket) {
                                    this.logger.success("Bucket \"".concat(this.bucketPublicName, "\" is active"));
                                }
                                else {
                                    throw new Error("Bucket \"".concat(this.bucketPublicName, "\" was not found"));
                                }
                            }
                            return [2 /*return*/];
                    }
                });
            });
        };
        UploadProviderAws_1.prototype.uploadPublic = function (options) {
            var _a;
            return __awaiter(this, void 0, void 0, function () {
                var file, key, command, url, error_2;
                return __generator(this, function (_b) {
                    switch (_b.label) {
                        case 0:
                            file = options.file;
                            key = this.ensureFilename(file.originalname);
                            command = new client_s3_1.PutObjectCommand({
                                Bucket: "".concat(this.bucketPublicName),
                                Key: this.ensureKey(key),
                                Body: file.buffer,
                                ContentType: (_a = file.mimetype) !== null && _a !== void 0 ? _a : 'image/png',
                            });
                            _b.label = 1;
                        case 1:
                            _b.trys.push([1, 3, , 4]);
                            return [4 /*yield*/, this.client.send(command)];
                        case 2:
                            _b.sent();
                            this.logger.success("File ".concat(file.originalname, " saved (public)"));
                            url = "".concat(this.getBaseUrlPublic(), "/").concat(key);
                            return [2 /*return*/, { url: url }];
                        case 3:
                            error_2 = _b.sent();
                            this.logger.error("".concat(error_2));
                            throw new Error("Could not upload public file with key \"".concat(key, "\""));
                        case 4: return [2 /*return*/];
                    }
                });
            });
        };
        UploadProviderAws_1.prototype.uploadPrivate = function (options) {
            var _a;
            return __awaiter(this, void 0, void 0, function () {
                var file, key, command, url, error_3;
                return __generator(this, function (_b) {
                    switch (_b.label) {
                        case 0:
                            file = options.file;
                            key = this.ensureFilename(file.originalname);
                            command = new client_s3_1.PutObjectCommand({
                                Bucket: "".concat(this.bucketPrivateName),
                                Key: this.ensureKey(key),
                                Body: file.buffer,
                                ContentType: (_a = file.mimetype) !== null && _a !== void 0 ? _a : 'image/png',
                            });
                            _b.label = 1;
                        case 1:
                            _b.trys.push([1, 3, , 4]);
                            return [4 /*yield*/, this.client.send(command)];
                        case 2:
                            _b.sent();
                            this.logger.success("File ".concat(file.originalname, " saved (private)"));
                            url = "".concat(this.getBaseUrlPrivate(), "/").concat(key);
                            return [2 /*return*/, { url: url }];
                        case 3:
                            error_3 = _b.sent();
                            this.logger.error("".concat(error_3));
                            throw new Error("Could not upload private file with key \"".concat(key, "\""));
                        case 4: return [2 /*return*/];
                    }
                });
            });
        };
        UploadProviderAws_1.prototype.fromPrivateToPublicUrl = function (_a) {
            var url = _a.url, _b = _a.expiresInSeconds, expiresInSeconds = _b === void 0 ? ONE_HOUR_IN_SECONDS : _b;
            return __awaiter(this, void 0, void 0, function () {
                var key, params, command, urlPublic;
                return __generator(this, function (_c) {
                    switch (_c.label) {
                        case 0:
                            if (!this.isUrlPrivate(url)) {
                                throw new Error("".concat(url, " must be a private url"));
                            }
                            key = this.extractKeyFromUrlPrivate(url);
                            params = {
                                Bucket: "".concat(this.bucketPrivateName),
                                Key: this.ensureKey(key),
                            };
                            command = new client_s3_1.GetObjectCommand(params);
                            return [4 /*yield*/, (0, s3_request_presigner_1.getSignedUrl)(this.client, command, {
                                    expiresIn: expiresInSeconds,
                                })];
                        case 1:
                            urlPublic = _c.sent();
                            return [2 /*return*/, { url: urlPublic }];
                    }
                });
            });
        };
        /* -------------------------------------------------------------------------- */
        /*                                   PRIVATE                                  */
        /* -------------------------------------------------------------------------- */
        UploadProviderAws_1.prototype.listBuckets = function () {
            return __awaiter(this, void 0, void 0, function () {
                var result, buckets;
                return __generator(this, function (_a) {
                    switch (_a.label) {
                        case 0: return [4 /*yield*/, this.client.send(new client_s3_1.ListBucketsCommand({}))];
                        case 1:
                            result = _a.sent();
                            buckets = result.Buckets.map(function (item) { return ({
                                name: item.Name,
                                dateCreation: item.CreationDate,
                            }); });
                            return [2 /*return*/, buckets];
                    }
                });
            });
        };
        UploadProviderAws_1.prototype.getBaseUrlPrivate = function () {
            return "https://".concat(this.bucketPrivateName, ".s3.").concat(this.region, ".amazonaws.com");
        };
        UploadProviderAws_1.prototype.getBaseUrlPublic = function () {
            return "https://".concat(this.bucketPublicName, ".s3.").concat(this.region, ".amazonaws.com");
        };
        UploadProviderAws_1.prototype.ensureKey = function (key) {
            var isPrefixed = key.startsWith('/');
            if (isPrefixed) {
                return key.slice(1);
            }
            return key;
        };
        UploadProviderAws_1.prototype.isUrlPrivate = function (url) {
            var baseUrlPrivate = this.getBaseUrlPrivate();
            var isPrivate = url.startsWith(baseUrlPrivate);
            return isPrivate;
        };
        UploadProviderAws_1.prototype.extractKeyFromUrlPrivate = function (url) {
            var baseUrlPrivate = this.getBaseUrlPrivate();
            return url.replace(baseUrlPrivate, '');
        };
        return UploadProviderAws_1;
    }(_classSuper));
    __setFunctionName(_classThis, "UploadProviderAws");
    (function () {
        var _a;
        var _metadata = typeof Symbol === "function" && Symbol.metadata ? Object.create((_a = _classSuper[Symbol.metadata]) !== null && _a !== void 0 ? _a : null) : void 0;
        __esDecorate(null, _classDescriptor = { value: _classThis }, _classDecorators, { kind: "class", name: _classThis.name, metadata: _metadata }, null, _classExtraInitializers);
        UploadProviderAws = _classThis = _classDescriptor.value;
        if (_metadata) Object.defineProperty(_classThis, Symbol.metadata, { enumerable: true, configurable: true, writable: true, value: _metadata });
        __runInitializers(_classThis, _classExtraInitializers);
    })();
    return UploadProviderAws = _classThis;
}();
exports.UploadProviderAws = UploadProviderAws;


// C:\grua-booking-system-25\server\dist\libraries\upload\internal\providers\local\upload.provider.local.js
"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __esDecorate = (this && this.__esDecorate) || function (ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {
    function accept(f) { if (f !== void 0 && typeof f !== "function") throw new TypeError("Function expected"); return f; }
    var kind = contextIn.kind, key = kind === "getter" ? "get" : kind === "setter" ? "set" : "value";
    var target = !descriptorIn && ctor ? contextIn["static"] ? ctor : ctor.prototype : null;
    var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});
    var _, done = false;
    for (var i = decorators.length - 1; i >= 0; i--) {
        var context = {};
        for (var p in contextIn) context[p] = p === "access" ? {} : contextIn[p];
        for (var p in contextIn.access) context.access[p] = contextIn.access[p];
        context.addInitializer = function (f) { if (done) throw new TypeError("Cannot add initializers after decoration has completed"); extraInitializers.push(accept(f || null)); };
        var result = (0, decorators[i])(kind === "accessor" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);
        if (kind === "accessor") {
            if (result === void 0) continue;
            if (result === null || typeof result !== "object") throw new TypeError("Object expected");
            if (_ = accept(result.get)) descriptor.get = _;
            if (_ = accept(result.set)) descriptor.set = _;
            if (_ = accept(result.init)) initializers.unshift(_);
        }
        else if (_ = accept(result)) {
            if (kind === "field") initializers.unshift(_);
            else descriptor[key] = _;
        }
    }
    if (target) Object.defineProperty(target, contextIn.name, descriptor);
    done = true;
};
var __runInitializers = (this && this.__runInitializers) || function (thisArg, initializers, value) {
    var useValue = arguments.length > 2;
    for (var i = 0; i < initializers.length; i++) {
        value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);
    }
    return useValue ? value : void 0;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (g && (g = 0, op[0] && (_ = 0)), _) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __setFunctionName = (this && this.__setFunctionName) || function (f, name, prefix) {
    if (typeof name === "symbol") name = name.description ? "[".concat(name.description, "]") : "";
    return Object.defineProperty(f, "name", { configurable: true, value: prefix ? "".concat(prefix, " ", name) : name });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.UploadProviderLocal = void 0;
var common_1 = require("@nestjs/common");
var serve_static_1 = require("@nestjs/serve-static");
var file_1 = require("@server/helpers/file");
var upload_provider_1 = require("@server/libraries/upload/upload.provider");
var path_1 = require("path");
var UploadProviderLocal = function () {
    var _classDecorators = [(0, common_1.Injectable)()];
    var _classDescriptor;
    var _classExtraInitializers = [];
    var _classThis;
    var _classSuper = upload_provider_1.UploadProvider;
    var UploadProviderLocal = _classThis = /** @class */ (function (_super) {
        __extends(UploadProviderLocal_1, _super);
        function UploadProviderLocal_1(loggerService, configurationService) {
            var _this = _super.call(this) || this;
            _this.loggerService = loggerService;
            _this.configurationService = configurationService;
            _this.pathPublic = ".".concat(UploadProviderLocal.path, "/public");
            _this.pathPrivate = ".".concat(UploadProviderLocal.path, "/private");
            _this.logger = _this.loggerService.create({ name: 'UploadProviderLocal' });
            return _this;
        }
        UploadProviderLocal_1.setup = function () {
            return serve_static_1.ServeStaticModule.forRoot({
                rootPath: (0, path_1.join)(file_1.FileHelper.getRoot(), ".".concat(this.path)),
                serveRoot: this.path,
            });
        };
        UploadProviderLocal_1.prototype.initialise = function () {
            try {
                file_1.FileHelper.writeFolder(this.pathPublic);
                this.staticServerUrl = "".concat(this.configurationService.getBaseUrl());
                this.logger.success("Upload Local is active");
            }
            catch (error) {
                this.logger.error("Upload Local failed to start: ".concat(error.message));
            }
            return;
        };
        UploadProviderLocal_1.prototype.uploadPublic = function (_a) {
            var file = _a.file;
            return __awaiter(this, void 0, void 0, function () {
                var content, filename, path, url;
                return __generator(this, function (_b) {
                    content = file.buffer;
                    filename = this.ensureFilename(file.originalname);
                    path = file_1.FileHelper.joinPaths(this.pathPublic, filename);
                    file_1.FileHelper.writeFile(path, content);
                    url = "".concat(this.staticServerUrl, "/").concat(path);
                    return [2 /*return*/, { url: url }];
                });
            });
        };
        UploadProviderLocal_1.prototype.uploadPrivate = function (_a) {
            var file = _a.file;
            return __awaiter(this, void 0, void 0, function () {
                var content, filename, path, url;
                return __generator(this, function (_b) {
                    content = file.buffer;
                    filename = this.ensureFilename(file.originalname);
                    path = file_1.FileHelper.joinPaths(this.pathPrivate, filename);
                    file_1.FileHelper.writeFile(path, content);
                    url = "".concat(this.staticServerUrl, "/").concat(path);
                    return [2 /*return*/, { url: url }];
                });
            });
        };
        UploadProviderLocal_1.prototype.fromPrivateToPublicUrl = function (_a) {
            var url = _a.url;
            return __awaiter(this, void 0, void 0, function () {
                return __generator(this, function (_b) {
                    return [2 /*return*/, { url: url }];
                });
            });
        };
        return UploadProviderLocal_1;
    }(_classSuper));
    __setFunctionName(_classThis, "UploadProviderLocal");
    (function () {
        var _a;
        var _metadata = typeof Symbol === "function" && Symbol.metadata ? Object.create((_a = _classSuper[Symbol.metadata]) !== null && _a !== void 0 ? _a : null) : void 0;
        __esDecorate(null, _classDescriptor = { value: _classThis }, _classDecorators, { kind: "class", name: _classThis.name, metadata: _metadata }, null, _classExtraInitializers);
        UploadProviderLocal = _classThis = _classDescriptor.value;
        if (_metadata) Object.defineProperty(_classThis, Symbol.metadata, { enumerable: true, configurable: true, writable: true, value: _metadata });
    })();
    _classThis.path = '/upload-local';
    (function () {
        __runInitializers(_classThis, _classExtraInitializers);
    })();
    return UploadProviderLocal = _classThis;
}();
exports.UploadProviderLocal = UploadProviderLocal;


// C:\grua-booking-system-25\server\dist\libraries\upload\internal\providers\aws\upload.provider.aws.js
"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __esDecorate = (this && this.__esDecorate) || function (ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {
    function accept(f) { if (f !== void 0 && typeof f !== "function") throw new TypeError("Function expected"); return f; }
    var kind = contextIn.kind, key = kind === "getter" ? "get" : kind === "setter" ? "set" : "value";
    var target = !descriptorIn && ctor ? contextIn["static"] ? ctor : ctor.prototype : null;
    var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});
    var _, done = false;
    for (var i = decorators.length - 1; i >= 0; i--) {
        var context = {};
        for (var p in contextIn) context[p] = p === "access" ? {} : contextIn[p];
        for (var p in contextIn.access) context.access[p] = contextIn.access[p];
        context.addInitializer = function (f) { if (done) throw new TypeError("Cannot add initializers after decoration has completed"); extraInitializers.push(accept(f || null)); };
        var result = (0, decorators[i])(kind === "accessor" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);
        if (kind === "accessor") {
            if (result === void 0) continue;
            if (result === null || typeof result !== "object") throw new TypeError("Object expected");
            if (_ = accept(result.get)) descriptor.get = _;
            if (_ = accept(result.set)) descriptor.set = _;
            if (_ = accept(result.init)) initializers.unshift(_);
        }
        else if (_ = accept(result)) {
            if (kind === "field") initializers.unshift(_);
            else descriptor[key] = _;
        }
    }
    if (target) Object.defineProperty(target, contextIn.name, descriptor);
    done = true;
};
var __runInitializers = (this && this.__runInitializers) || function (thisArg, initializers, value) {
    var useValue = arguments.length > 2;
    for (var i = 0; i < initializers.length; i++) {
        value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);
    }
    return useValue ? value : void 0;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (g && (g = 0, op[0] && (_ = 0)), _) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __setFunctionName = (this && this.__setFunctionName) || function (f, name, prefix) {
    if (typeof name === "symbol") name = name.description ? "[".concat(name.description, "]") : "";
    return Object.defineProperty(f, "name", { configurable: true, value: prefix ? "".concat(prefix, " ", name) : name });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.UploadProviderAws = void 0;
var client_s3_1 = require("@aws-sdk/client-s3");
var s3_request_presigner_1 = require("@aws-sdk/s3-request-presigner");
var common_1 = require("@nestjs/common");
var upload_provider_1 = require("@server/libraries/upload/upload.provider");
var ONE_HOUR_IN_SECONDS = 60 * 60;
var UploadProviderAws = function () {
    var _classDecorators = [(0, common_1.Injectable)()];
    var _classDescriptor;
    var _classExtraInitializers = [];
    var _classThis;
    var _classSuper = upload_provider_1.UploadProvider;
    var UploadProviderAws = _classThis = /** @class */ (function (_super) {
        __extends(UploadProviderAws_1, _super);
        function UploadProviderAws_1(loggerService, configurationService) {
            var _this = _super.call(this) || this;
            _this.loggerService = loggerService;
            _this.configurationService = configurationService;
            _this.logger = _this.loggerService.create({ name: 'UploadProviderAws' });
            return _this;
        }
        UploadProviderAws_1.prototype.initialise = function () {
            return __awaiter(this, void 0, void 0, function () {
                var accessKey, secretKey, error_1;
                return __generator(this, function (_a) {
                    switch (_a.label) {
                        case 0:
                            _a.trys.push([0, 2, , 3]);
                            accessKey = this.configurationService.get("SERVER_UPLOAD_AWS_ACCESS_KEY");
                            secretKey = this.configurationService.get("SERVER_UPLOAD_AWS_SECRET_KEY");
                            if (!accessKey && !secretKey) {
                                throw new Error('Set SERVER_UPLOAD_AWS_ACCESS_KEY && SERVER_UPLOAD_AWS_SECRET_KEY in your .env to activate');
                            }
                            if (!accessKey) {
                                throw new Error('Set SERVER_UPLOAD_AWS_ACCESS_KEY in your .env to activate');
                            }
                            if (!secretKey) {
                                throw new Error('Set SERVER_UPLOAD_AWS_SECRET_KEY in your .env to activate');
                            }
                            this.region = this.configurationService.get("SERVER_UPLOAD_AWS_REGION", 'us-east-1');
                            this.bucketPublicName = this.configurationService.get("SERVER_UPLOAD_AWS_BUCKET_PUBLIC_NAME");
                            if (!this.bucketPublicName) {
                                this.logger.warning("Set SERVER_UPLOAD_AWS_BUCKET_PUBLIC_NAME in your .env to activate a public bucket with infinite urls");
                            }
                            this.bucketPrivateName = this.configurationService.get("SERVER_UPLOAD_AWS_BUCKET_PRIVATE_NAME");
                            if (!this.bucketPrivateName) {
                                this.logger.warning("Set SERVER_UPLOAD_AWS_BUCKET_PRIVATE_NAME in your .env to activate a private bucket with signed urls");
                            }
                            this.client = new client_s3_1.S3Client({
                                region: this.region,
                                credentials: {
                                    accessKeyId: accessKey,
                                    secretAccessKey: secretKey,
                                },
                            });
                            return [4 /*yield*/, this.check()];
                        case 1:
                            _a.sent();
                            this.logger.success("AWS library active in region ".concat(this.region));
                            return [3 /*break*/, 3];
                        case 2:
                            error_1 = _a.sent();
                            this.logger.warning("AWS library failed to start");
                            throw new Error(error_1);
                        case 3: return [2 /*return*/];
                    }
                });
            });
        };
        UploadProviderAws_1.prototype.check = function () {
            return __awaiter(this, void 0, void 0, function () {
                var buckets, bucket, bucket;
                var _this = this;
                return __generator(this, function (_a) {
                    switch (_a.label) {
                        case 0: return [4 /*yield*/, this.listBuckets()];
                        case 1:
                            buckets = _a.sent();
                            if (this.bucketPrivateName) {
                                this.logger.log("Checking bucket \"".concat(this.bucketPrivateName, "\"..."));
                                bucket = buckets.find(function (bucket) { return bucket.name === _this.bucketPrivateName; });
                                if (bucket) {
                                    this.logger.success("Bucket \"".concat(this.bucketPrivateName, "\" is active"));
                                }
                                else {
                                    throw new Error("Bucket \"".concat(this.bucketPrivateName, "\" was not found"));
                                }
                            }
                            if (this.bucketPublicName) {
                                this.logger.log("Checking bucket \"".concat(this.bucketPublicName, "\"..."));
                                bucket = buckets.find(function (bucket) { return bucket.name === _this.bucketPublicName; });
                                if (bucket) {
                                    this.logger.success("Bucket \"".concat(this.bucketPublicName, "\" is active"));
                                }
                                else {
                                    throw new Error("Bucket \"".concat(this.bucketPublicName, "\" was not found"));
                                }
                            }
                            return [2 /*return*/];
                    }
                });
            });
        };
        UploadProviderAws_1.prototype.uploadPublic = function (options) {
            var _a;
            return __awaiter(this, void 0, void 0, function () {
                var file, key, command, url, error_2;
                return __generator(this, function (_b) {
                    switch (_b.label) {
                        case 0:
                            file = options.file;
                            key = this.ensureFilename(file.originalname);
                            command = new client_s3_1.PutObjectCommand({
                                Bucket: "".concat(this.bucketPublicName),
                                Key: this.ensureKey(key),
                                Body: file.buffer,
                                ContentType: (_a = file.mimetype) !== null && _a !== void 0 ? _a : 'image/png',
                            });
                            _b.label = 1;
                        case 1:
                            _b.trys.push([1, 3, , 4]);
                            return [4 /*yield*/, this.client.send(command)];
                        case 2:
                            _b.sent();
                            this.logger.success("File ".concat(file.originalname, " saved (public)"));
                            url = "".concat(this.getBaseUrlPublic(), "/").concat(key);
                            return [2 /*return*/, { url: url }];
                        case 3:
                            error_2 = _b.sent();
                            this.logger.error("".concat(error_2));
                            throw new Error("Could not upload public file with key \"".concat(key, "\""));
                        case 4: return [2 /*return*/];
                    }
                });
            });
        };
        UploadProviderAws_1.prototype.uploadPrivate = function (options) {
            var _a;
            return __awaiter(this, void 0, void 0, function () {
                var file, key, command, url, error_3;
                return __generator(this, function (_b) {
                    switch (_b.label) {
                        case 0:
                            file = options.file;
                            key = this.ensureFilename(file.originalname);
                            command = new client_s3_1.PutObjectCommand({
                                Bucket: "".concat(this.bucketPrivateName),
                                Key: this.ensureKey(key),
                                Body: file.buffer,
                                ContentType: (_a = file.mimetype) !== null && _a !== void 0 ? _a : 'image/png',
                            });
                            _b.label = 1;
                        case 1:
                            _b.trys.push([1, 3, , 4]);
                            return [4 /*yield*/, this.client.send(command)];
                        case 2:
                            _b.sent();
                            this.logger.success("File ".concat(file.originalname, " saved (private)"));
                            url = "".concat(this.getBaseUrlPrivate(), "/").concat(key);
                            return [2 /*return*/, { url: url }];
                        case 3:
                            error_3 = _b.sent();
                            this.logger.error("".concat(error_3));
                            throw new Error("Could not upload private file with key \"".concat(key, "\""));
                        case 4: return [2 /*return*/];
                    }
                });
            });
        };
        UploadProviderAws_1.prototype.fromPrivateToPublicUrl = function (_a) {
            var url = _a.url, _b = _a.expiresInSeconds, expiresInSeconds = _b === void 0 ? ONE_HOUR_IN_SECONDS : _b;
            return __awaiter(this, void 0, void 0, function () {
                var key, params, command, urlPublic;
                return __generator(this, function (_c) {
                    switch (_c.label) {
                        case 0:
                            if (!this.isUrlPrivate(url)) {
                                throw new Error("".concat(url, " must be a private url"));
                            }
                            key = this.extractKeyFromUrlPrivate(url);
                            params = {
                                Bucket: "".concat(this.bucketPrivateName),
                                Key: this.ensureKey(key),
                            };
                            command = new client_s3_1.GetObjectCommand(params);
                            return [4 /*yield*/, (0, s3_request_presigner_1.getSignedUrl)(this.client, command, {
                                    expiresIn: expiresInSeconds,
                                })];
                        case 1:
                            urlPublic = _c.sent();
                            return [2 /*return*/, { url: urlPublic }];
                    }
                });
            });
        };
        /* -------------------------------------------------------------------------- */
        /*                                   PRIVATE                                  */
        /* -------------------------------------------------------------------------- */
        UploadProviderAws_1.prototype.listBuckets = function () {
            return __awaiter(this, void 0, void 0, function () {
                var result, buckets;
                return __generator(this, function (_a) {
                    switch (_a.label) {
                        case 0: return [4 /*yield*/, this.client.send(new client_s3_1.ListBucketsCommand({}))];
                        case 1:
                            result = _a.sent();
                            buckets = result.Buckets.map(function (item) { return ({
                                name: item.Name,
                                dateCreation: item.CreationDate,
                            }); });
                            return [2 /*return*/, buckets];
                    }
                });
            });
        };
        UploadProviderAws_1.prototype.getBaseUrlPrivate = function () {
            return "https://".concat(this.bucketPrivateName, ".s3.").concat(this.region, ".amazonaws.com");
        };
        UploadProviderAws_1.prototype.getBaseUrlPublic = function () {
            return "https://".concat(this.bucketPublicName, ".s3.").concat(this.region, ".amazonaws.com");
        };
        UploadProviderAws_1.prototype.ensureKey = function (key) {
            var isPrefixed = key.startsWith('/');
            if (isPrefixed) {
                return key.slice(1);
            }
            return key;
        };
        UploadProviderAws_1.prototype.isUrlPrivate = function (url) {
            var baseUrlPrivate = this.getBaseUrlPrivate();
            var isPrivate = url.startsWith(baseUrlPrivate);
            return isPrivate;
        };
        UploadProviderAws_1.prototype.extractKeyFromUrlPrivate = function (url) {
            var baseUrlPrivate = this.getBaseUrlPrivate();
            return url.replace(baseUrlPrivate, '');
        };
        return UploadProviderAws_1;
    }(_classSuper));
    __setFunctionName(_classThis, "UploadProviderAws");
    (function () {
        var _a;
        var _metadata = typeof Symbol === "function" && Symbol.metadata ? Object.create((_a = _classSuper[Symbol.metadata]) !== null && _a !== void 0 ? _a : null) : void 0;
        __esDecorate(null, _classDescriptor = { value: _classThis }, _classDecorators, { kind: "class", name: _classThis.name, metadata: _metadata }, null, _classExtraInitializers);
        UploadProviderAws = _classThis = _classDescriptor.value;
        if (_metadata) Object.defineProperty(_classThis, Symbol.metadata, { enumerable: true, configurable: true, writable: true, value: _metadata });
        __runInitializers(_classThis, _classExtraInitializers);
    })();
    return UploadProviderAws = _classThis;
}();
exports.UploadProviderAws = UploadProviderAws;


// C:\grua-booking-system-25\server\dist\libraries\upload\internal\providers\local\upload.provider.local.js
"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __esDecorate = (this && this.__esDecorate) || function (ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {
    function accept(f) { if (f !== void 0 && typeof f !== "function") throw new TypeError("Function expected"); return f; }
    var kind = contextIn.kind, key = kind === "getter" ? "get" : kind === "setter" ? "set" : "value";
    var target = !descriptorIn && ctor ? contextIn["static"] ? ctor : ctor.prototype : null;
    var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});
    var _, done = false;
    for (var i = decorators.length - 1; i >= 0; i--) {
        var context = {};
        for (var p in contextIn) context[p] = p === "access" ? {} : contextIn[p];
        for (var p in contextIn.access) context.access[p] = contextIn.access[p];
        context.addInitializer = function (f) { if (done) throw new TypeError("Cannot add initializers after decoration has completed"); extraInitializers.push(accept(f || null)); };
        var result = (0, decorators[i])(kind === "accessor" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);
        if (kind === "accessor") {
            if (result === void 0) continue;
            if (result === null || typeof result !== "object") throw new TypeError("Object expected");
            if (_ = accept(result.get)) descriptor.get = _;
            if (_ = accept(result.set)) descriptor.set = _;
            if (_ = accept(result.init)) initializers.unshift(_);
        }
        else if (_ = accept(result)) {
            if (kind === "field") initializers.unshift(_);
            else descriptor[key] = _;
        }
    }
    if (target) Object.defineProperty(target, contextIn.name, descriptor);
    done = true;
};
var __runInitializers = (this && this.__runInitializers) || function (thisArg, initializers, value) {
    var useValue = arguments.length > 2;
    for (var i = 0; i < initializers.length; i++) {
        value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);
    }
    return useValue ? value : void 0;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (g && (g = 0, op[0] && (_ = 0)), _) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __setFunctionName = (this && this.__setFunctionName) || function (f, name, prefix) {
    if (typeof name === "symbol") name = name.description ? "[".concat(name.description, "]") : "";
    return Object.defineProperty(f, "name", { configurable: true, value: prefix ? "".concat(prefix, " ", name) : name });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.UploadProviderLocal = void 0;
var common_1 = require("@nestjs/common");
var serve_static_1 = require("@nestjs/serve-static");
var file_1 = require("@server/helpers/file");
var upload_provider_1 = require("@server/libraries/upload/upload.provider");
var path_1 = require("path");
var UploadProviderLocal = function () {
    var _classDecorators = [(0, common_1.Injectable)()];
    var _classDescriptor;
    var _classExtraInitializers = [];
    var _classThis;
    var _classSuper = upload_provider_1.UploadProvider;
    var UploadProviderLocal = _classThis = /** @class */ (function (_super) {
        __extends(UploadProviderLocal_1, _super);
        function UploadProviderLocal_1(loggerService, configurationService) {
            var _this = _super.call(this) || this;
            _this.loggerService = loggerService;
            _this.configurationService = configurationService;
            _this.pathPublic = ".".concat(UploadProviderLocal.path, "/public");
            _this.pathPrivate = ".".concat(UploadProviderLocal.path, "/private");
            _this.logger = _this.loggerService.create({ name: 'UploadProviderLocal' });
            return _this;
        }
        UploadProviderLocal_1.setup = function () {
            return serve_static_1.ServeStaticModule.forRoot({
                rootPath: (0, path_1.join)(file_1.FileHelper.getRoot(), ".".concat(this.path)),
                serveRoot: this.path,
            });
        };
        UploadProviderLocal_1.prototype.initialise = function () {
            try {
                file_1.FileHelper.writeFolder(this.pathPublic);
                this.staticServerUrl = "".concat(this.configurationService.getBaseUrl());
                this.logger.success("Upload Local is active");
            }
            catch (error) {
                this.logger.error("Upload Local failed to start: ".concat(error.message));
            }
            return;
        };
        UploadProviderLocal_1.prototype.uploadPublic = function (_a) {
            var file = _a.file;
            return __awaiter(this, void 0, void 0, function () {
                var content, filename, path, url;
                return __generator(this, function (_b) {
                    content = file.buffer;
                    filename = this.ensureFilename(file.originalname);
                    path = file_1.FileHelper.joinPaths(this.pathPublic, filename);
                    file_1.FileHelper.writeFile(path, content);
                    url = "".concat(this.staticServerUrl, "/").concat(path);
                    return [2 /*return*/, { url: url }];
                });
            });
        };
        UploadProviderLocal_1.prototype.uploadPrivate = function (_a) {
            var file = _a.file;
            return __awaiter(this, void 0, void 0, function () {
                var content, filename, path, url;
                return __generator(this, function (_b) {
                    content = file.buffer;
                    filename = this.ensureFilename(file.originalname);
                    path = file_1.FileHelper.joinPaths(this.pathPrivate, filename);
                    file_1.FileHelper.writeFile(path, content);
                    url = "".concat(this.staticServerUrl, "/").concat(path);
                    return [2 /*return*/, { url: url }];
                });
            });
        };
        UploadProviderLocal_1.prototype.fromPrivateToPublicUrl = function (_a) {
            var url = _a.url;
            return __awaiter(this, void 0, void 0, function () {
                return __generator(this, function (_b) {
                    return [2 /*return*/, { url: url }];
                });
            });
        };
        return UploadProviderLocal_1;
    }(_classSuper));
    __setFunctionName(_classThis, "UploadProviderLocal");
    (function () {
        var _a;
        var _metadata = typeof Symbol === "function" && Symbol.metadata ? Object.create((_a = _classSuper[Symbol.metadata]) !== null && _a !== void 0 ? _a : null) : void 0;
        __esDecorate(null, _classDescriptor = { value: _classThis }, _classDecorators, { kind: "class", name: _classThis.name, metadata: _metadata }, null, _classExtraInitializers);
        UploadProviderLocal = _classThis = _classDescriptor.value;
        if (_metadata) Object.defineProperty(_classThis, Symbol.metadata, { enumerable: true, configurable: true, writable: true, value: _metadata });
    })();
    _classThis.path = '/upload-local';
    (function () {
        __runInitializers(_classThis, _classExtraInitializers);
    })();
    return UploadProviderLocal = _classThis;
}();
exports.UploadProviderLocal = UploadProviderLocal;


// C:\grua-booking-system-25\server\dist\libraries\upload\internal\providers\aws\upload.provider.aws.js
"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __esDecorate = (this && this.__esDecorate) || function (ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {
    function accept(f) { if (f !== void 0 && typeof f !== "function") throw new TypeError("Function expected"); return f; }
    var kind = contextIn.kind, key = kind === "getter" ? "get" : kind === "setter" ? "set" : "value";
    var target = !descriptorIn && ctor ? contextIn["static"] ? ctor : ctor.prototype : null;
    var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});
    var _, done = false;
    for (var i = decorators.length - 1; i >= 0; i--) {
        var context = {};
        for (var p in contextIn) context[p] = p === "access" ? {} : contextIn[p];
        for (var p in contextIn.access) context.access[p] = contextIn.access[p];
        context.addInitializer = function (f) { if (done) throw new TypeError("Cannot add initializers after decoration has completed"); extraInitializers.push(accept(f || null)); };
        var result = (0, decorators[i])(kind === "accessor" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);
        if (kind === "accessor") {
            if (result === void 0) continue;
            if (result === null || typeof result !== "object") throw new TypeError("Object expected");
            if (_ = accept(result.get)) descriptor.get = _;
            if (_ = accept(result.set)) descriptor.set = _;
            if (_ = accept(result.init)) initializers.unshift(_);
        }
        else if (_ = accept(result)) {
            if (kind === "field") initializers.unshift(_);
            else descriptor[key] = _;
        }
    }
    if (target) Object.defineProperty(target, contextIn.name, descriptor);
    done = true;
};
var __runInitializers = (this && this.__runInitializers) || function (thisArg, initializers, value) {
    var useValue = arguments.length > 2;
    for (var i = 0; i < initializers.length; i++) {
        value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);
    }
    return useValue ? value : void 0;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (g && (g = 0, op[0] && (_ = 0)), _) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __setFunctionName = (this && this.__setFunctionName) || function (f, name, prefix) {
    if (typeof name === "symbol") name = name.description ? "[".concat(name.description, "]") : "";
    return Object.defineProperty(f, "name", { configurable: true, value: prefix ? "".concat(prefix, " ", name) : name });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.UploadProviderAws = void 0;
var client_s3_1 = require("@aws-sdk/client-s3");
var s3_request_presigner_1 = require("@aws-sdk/s3-request-presigner");
var common_1 = require("@nestjs/common");
var upload_provider_1 = require("@server/libraries/upload/upload.provider");
var ONE_HOUR_IN_SECONDS = 60 * 60;
var UploadProviderAws = function () {
    var _classDecorators = [(0, common_1.Injectable)()];
    var _classDescriptor;
    var _classExtraInitializers = [];
    var _classThis;
    var _classSuper = upload_provider_1.UploadProvider;
    var UploadProviderAws = _classThis = /** @class */ (function (_super) {
        __extends(UploadProviderAws_1, _super);
        function UploadProviderAws_1(loggerService, configurationService) {
            var _this = _super.call(this) || this;
            _this.loggerService = loggerService;
            _this.configurationService = configurationService;
            _this.logger = _this.loggerService.create({ name: 'UploadProviderAws' });
            return _this;
        }
        UploadProviderAws_1.prototype.initialise = function () {
            return __awaiter(this, void 0, void 0, function () {
                var accessKey, secretKey, error_1;
                return __generator(this, function (_a) {
                    switch (_a.label) {
                        case 0:
                            _a.trys.push([0, 2, , 3]);
                            accessKey = this.configurationService.get("SERVER_UPLOAD_AWS_ACCESS_KEY");
                            secretKey = this.configurationService.get("SERVER_UPLOAD_AWS_SECRET_KEY");
                            if (!accessKey && !secretKey) {
                                throw new Error('Set SERVER_UPLOAD_AWS_ACCESS_KEY && SERVER_UPLOAD_AWS_SECRET_KEY in your .env to activate');
                            }
                            if (!accessKey) {
                                throw new Error('Set SERVER_UPLOAD_AWS_ACCESS_KEY in your .env to activate');
                            }
                            if (!secretKey) {
                                throw new Error('Set SERVER_UPLOAD_AWS_SECRET_KEY in your .env to activate');
                            }
                            this.region = this.configurationService.get("SERVER_UPLOAD_AWS_REGION", 'us-east-1');
                            this.bucketPublicName = this.configurationService.get("SERVER_UPLOAD_AWS_BUCKET_PUBLIC_NAME");
                            if (!this.bucketPublicName) {
                                this.logger.warning("Set SERVER_UPLOAD_AWS_BUCKET_PUBLIC_NAME in your .env to activate a public bucket with infinite urls");
                            }
                            this.bucketPrivateName = this.configurationService.get("SERVER_UPLOAD_AWS_BUCKET_PRIVATE_NAME");
                            if (!this.bucketPrivateName) {
                                this.logger.warning("Set SERVER_UPLOAD_AWS_BUCKET_PRIVATE_NAME in your .env to activate a private bucket with signed urls");
                            }
                            this.client = new client_s3_1.S3Client({
                                region: this.region,
                                credentials: {
                                    accessKeyId: accessKey,
                                    secretAccessKey: secretKey,
                                },
                            });
                            return [4 /*yield*/, this.check()];
                        case 1:
                            _a.sent();
                            this.logger.success("AWS library active in region ".concat(this.region));
                            return [3 /*break*/, 3];
                        case 2:
                            error_1 = _a.sent();
                            this.logger.warning("AWS library failed to start");
                            throw new Error(error_1);
                        case 3: return [2 /*return*/];
                    }
                });
            });
        };
        UploadProviderAws_1.prototype.check = function () {
            return __awaiter(this, void 0, void 0, function () {
                var buckets, bucket, bucket;
                var _this = this;
                return __generator(this, function (_a) {
                    switch (_a.label) {
                        case 0: return [4 /*yield*/, this.listBuckets()];
                        case 1:
                            buckets = _a.sent();
                            if (this.bucketPrivateName) {
                                this.logger.log("Checking bucket \"".concat(this.bucketPrivateName, "\"..."));
                                bucket = buckets.find(function (bucket) { return bucket.name === _this.bucketPrivateName; });
                                if (bucket) {
                                    this.logger.success("Bucket \"".concat(this.bucketPrivateName, "\" is active"));
                                }
                                else {
                                    throw new Error("Bucket \"".concat(this.bucketPrivateName, "\" was not found"));
                                }
                            }
                            if (this.bucketPublicName) {
                                this.logger.log("Checking bucket \"".concat(this.bucketPublicName, "\"..."));
                                bucket = buckets.find(function (bucket) { return bucket.name === _this.bucketPublicName; });
                                if (bucket) {
                                    this.logger.success("Bucket \"".concat(this.bucketPublicName, "\" is active"));
                                }
                                else {
                                    throw new Error("Bucket \"".concat(this.bucketPublicName, "\" was not found"));
                                }
                            }
                            return [2 /*return*/];
                    }
                });
            });
        };
        UploadProviderAws_1.prototype.uploadPublic = function (options) {
            var _a;
            return __awaiter(this, void 0, void 0, function () {
                var file, key, command, url, error_2;
                return __generator(this, function (_b) {
                    switch (_b.label) {
                        case 0:
                            file = options.file;
                            key = this.ensureFilename(file.originalname);
                            command = new client_s3_1.PutObjectCommand({
                                Bucket: "".concat(this.bucketPublicName),
                                Key: this.ensureKey(key),
                                Body: file.buffer,
                                ContentType: (_a = file.mimetype) !== null && _a !== void 0 ? _a : 'image/png',
                            });
                            _b.label = 1;
                        case 1:
                            _b.trys.push([1, 3, , 4]);
                            return [4 /*yield*/, this.client.send(command)];
                        case 2:
                            _b.sent();
                            this.logger.success("File ".concat(file.originalname, " saved (public)"));
                            url = "".concat(this.getBaseUrlPublic(), "/").concat(key);
                            return [2 /*return*/, { url: url }];
                        case 3:
                            error_2 = _b.sent();
                            this.logger.error("".concat(error_2));
                            throw new Error("Could not upload public file with key \"".concat(key, "\""));
                        case 4: return [2 /*return*/];
                    }
                });
            });
        };
        UploadProviderAws_1.prototype.uploadPrivate = function (options) {
            var _a;
            return __awaiter(this, void 0, void 0, function () {
                var file, key, command, url, error_3;
                return __generator(this, function (_b) {
                    switch (_b.label) {
                        case 0:
                            file = options.file;
                            key = this.ensureFilename(file.originalname);
                            command = new client_s3_1.PutObjectCommand({
                                Bucket: "".concat(this.bucketPrivateName),
                                Key: this.ensureKey(key),
                                Body: file.buffer,
                                ContentType: (_a = file.mimetype) !== null && _a !== void 0 ? _a : 'image/png',
                            });
                            _b.label = 1;
                        case 1:
                            _b.trys.push([1, 3, , 4]);
                            return [4 /*yield*/, this.client.send(command)];
                        case 2:
                            _b.sent();
                            this.logger.success("File ".concat(file.originalname, " saved (private)"));
                            url = "".concat(this.getBaseUrlPrivate(), "/").concat(key);
                            return [2 /*return*/, { url: url }];
                        case 3:
                            error_3 = _b.sent();
                            this.logger.error("".concat(error_3));
                            throw new Error("Could not upload private file with key \"".concat(key, "\""));
                        case 4: return [2 /*return*/];
                    }
                });
            });
        };
        UploadProviderAws_1.prototype.fromPrivateToPublicUrl = function (_a) {
            var url = _a.url, _b = _a.expiresInSeconds, expiresInSeconds = _b === void 0 ? ONE_HOUR_IN_SECONDS : _b;
            return __awaiter(this, void 0, void 0, function () {
                var key, params, command, urlPublic;
                return __generator(this, function (_c) {
                    switch (_c.label) {
                        case 0:
                            if (!this.isUrlPrivate(url)) {
                                throw new Error("".concat(url, " must be a private url"));
                            }
                            key = this.extractKeyFromUrlPrivate(url);
                            params = {
                                Bucket: "".concat(this.bucketPrivateName),
                                Key: this.ensureKey(key),
                            };
                            command = new client_s3_1.GetObjectCommand(params);
                            return [4 /*yield*/, (0, s3_request_presigner_1.getSignedUrl)(this.client, command, {
                                    expiresIn: expiresInSeconds,
                                })];
                        case 1:
                            urlPublic = _c.sent();
                            return [2 /*return*/, { url: urlPublic }];
                    }
                });
            });
        };
        /* -------------------------------------------------------------------------- */
        /*                                   PRIVATE                                  */
        /* -------------------------------------------------------------------------- */
        UploadProviderAws_1.prototype.listBuckets = function () {
            return __awaiter(this, void 0, void 0, function () {
                var result, buckets;
                return __generator(this, function (_a) {
                    switch (_a.label) {
                        case 0: return [4 /*yield*/, this.client.send(new client_s3_1.ListBucketsCommand({}))];
                        case 1:
                            result = _a.sent();
                            buckets = result.Buckets.map(function (item) { return ({
                                name: item.Name,
                                dateCreation: item.CreationDate,
                            }); });
                            return [2 /*return*/, buckets];
                    }
                });
            });
        };
        UploadProviderAws_1.prototype.getBaseUrlPrivate = function () {
            return "https://".concat(this.bucketPrivateName, ".s3.").concat(this.region, ".amazonaws.com");
        };
        UploadProviderAws_1.prototype.getBaseUrlPublic = function () {
            return "https://".concat(this.bucketPublicName, ".s3.").concat(this.region, ".amazonaws.com");
        };
        UploadProviderAws_1.prototype.ensureKey = function (key) {
            var isPrefixed = key.startsWith('/');
            if (isPrefixed) {
                return key.slice(1);
            }
            return key;
        };
        UploadProviderAws_1.prototype.isUrlPrivate = function (url) {
            var baseUrlPrivate = this.getBaseUrlPrivate();
            var isPrivate = url.startsWith(baseUrlPrivate);
            return isPrivate;
        };
        UploadProviderAws_1.prototype.extractKeyFromUrlPrivate = function (url) {
            var baseUrlPrivate = this.getBaseUrlPrivate();
            return url.replace(baseUrlPrivate, '');
        };
        return UploadProviderAws_1;
    }(_classSuper));
    __setFunctionName(_classThis, "UploadProviderAws");
    (function () {
        var _a;
        var _metadata = typeof Symbol === "function" && Symbol.metadata ? Object.create((_a = _classSuper[Symbol.metadata]) !== null && _a !== void 0 ? _a : null) : void 0;
        __esDecorate(null, _classDescriptor = { value: _classThis }, _classDecorators, { kind: "class", name: _classThis.name, metadata: _metadata }, null, _classExtraInitializers);
        UploadProviderAws = _classThis = _classDescriptor.value;
        if (_metadata) Object.defineProperty(_classThis, Symbol.metadata, { enumerable: true, configurable: true, writable: true, value: _metadata });
        __runInitializers(_classThis, _classExtraInitializers);
    })();
    return UploadProviderAws = _classThis;
}();
exports.UploadProviderAws = UploadProviderAws;


// C:\grua-booking-system-25\server\dist\libraries\upload\internal\providers\local\upload.provider.local.js
"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __esDecorate = (this && this.__esDecorate) || function (ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {
    function accept(f) { if (f !== void 0 && typeof f !== "function") throw new TypeError("Function expected"); return f; }
    var kind = contextIn.kind, key = kind === "getter" ? "get" : kind === "setter" ? "set" : "value";
    var target = !descriptorIn && ctor ? contextIn["static"] ? ctor : ctor.prototype : null;
    var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});
    var _, done = false;
    for (var i = decorators.length - 1; i >= 0; i--) {
        var context = {};
        for (var p in contextIn) context[p] = p === "access" ? {} : contextIn[p];
        for (var p in contextIn.access) context.access[p] = contextIn.access[p];
        context.addInitializer = function (f) { if (done) throw new TypeError("Cannot add initializers after decoration has completed"); extraInitializers.push(accept(f || null)); };
        var result = (0, decorators[i])(kind === "accessor" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);
        if (kind === "accessor") {
            if (result === void 0) continue;
            if (result === null || typeof result !== "object") throw new TypeError("Object expected");
            if (_ = accept(result.get)) descriptor.get = _;
            if (_ = accept(result.set)) descriptor.set = _;
            if (_ = accept(result.init)) initializers.unshift(_);
        }
        else if (_ = accept(result)) {
            if (kind === "field") initializers.unshift(_);
            else descriptor[key] = _;
        }
    }
    if (target) Object.defineProperty(target, contextIn.name, descriptor);
    done = true;
};
var __runInitializers = (this && this.__runInitializers) || function (thisArg, initializers, value) {
    var useValue = arguments.length > 2;
    for (var i = 0; i < initializers.length; i++) {
        value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);
    }
    return useValue ? value : void 0;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (g && (g = 0, op[0] && (_ = 0)), _) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __setFunctionName = (this && this.__setFunctionName) || function (f, name, prefix) {
    if (typeof name === "symbol") name = name.description ? "[".concat(name.description, "]") : "";
    return Object.defineProperty(f, "name", { configurable: true, value: prefix ? "".concat(prefix, " ", name) : name });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.UploadProviderLocal = void 0;
var common_1 = require("@nestjs/common");
var serve_static_1 = require("@nestjs/serve-static");
var file_1 = require("@server/helpers/file");
var upload_provider_1 = require("@server/libraries/upload/upload.provider");
var path_1 = require("path");
var UploadProviderLocal = function () {
    var _classDecorators = [(0, common_1.Injectable)()];
    var _classDescriptor;
    var _classExtraInitializers = [];
    var _classThis;
    var _classSuper = upload_provider_1.UploadProvider;
    var UploadProviderLocal = _classThis = /** @class */ (function (_super) {
        __extends(UploadProviderLocal_1, _super);
        function UploadProviderLocal_1(loggerService, configurationService) {
            var _this = _super.call(this) || this;
            _this.loggerService = loggerService;
            _this.configurationService = configurationService;
            _this.pathPublic = ".".concat(UploadProviderLocal.path, "/public");
            _this.pathPrivate = ".".concat(UploadProviderLocal.path, "/private");
            _this.logger = _this.loggerService.create({ name: 'UploadProviderLocal' });
            return _this;
        }
        UploadProviderLocal_1.setup = function () {
            return serve_static_1.ServeStaticModule.forRoot({
                rootPath: (0, path_1.join)(file_1.FileHelper.getRoot(), ".".concat(this.path)),
                serveRoot: this.path,
            });
        };
        UploadProviderLocal_1.prototype.initialise = function () {
            try {
                file_1.FileHelper.writeFolder(this.pathPublic);
                this.staticServerUrl = "".concat(this.configurationService.getBaseUrl());
                this.logger.success("Upload Local is active");
            }
            catch (error) {
                this.logger.error("Upload Local failed to start: ".concat(error.message));
            }
            return;
        };
        UploadProviderLocal_1.prototype.uploadPublic = function (_a) {
            var file = _a.file;
            return __awaiter(this, void 0, void 0, function () {
                var content, filename, path, url;
                return __generator(this, function (_b) {
                    content = file.buffer;
                    filename = this.ensureFilename(file.originalname);
                    path = file_1.FileHelper.joinPaths(this.pathPublic, filename);
                    file_1.FileHelper.writeFile(path, content);
                    url = "".concat(this.staticServerUrl, "/").concat(path);
                    return [2 /*return*/, { url: url }];
                });
            });
        };
        UploadProviderLocal_1.prototype.uploadPrivate = function (_a) {
            var file = _a.file;
            return __awaiter(this, void 0, void 0, function () {
                var content, filename, path, url;
                return __generator(this, function (_b) {
                    content = file.buffer;
                    filename = this.ensureFilename(file.originalname);
                    path = file_1.FileHelper.joinPaths(this.pathPrivate, filename);
                    file_1.FileHelper.writeFile(path, content);
                    url = "".concat(this.staticServerUrl, "/").concat(path);
                    return [2 /*return*/, { url: url }];
                });
            });
        };
        UploadProviderLocal_1.prototype.fromPrivateToPublicUrl = function (_a) {
            var url = _a.url;
            return __awaiter(this, void 0, void 0, function () {
                return __generator(this, function (_b) {
                    return [2 /*return*/, { url: url }];
                });
            });
        };
        return UploadProviderLocal_1;
    }(_classSuper));
    __setFunctionName(_classThis, "UploadProviderLocal");
    (function () {
        var _a;
        var _metadata = typeof Symbol === "function" && Symbol.metadata ? Object.create((_a = _classSuper[Symbol.metadata]) !== null && _a !== void 0 ? _a : null) : void 0;
        __esDecorate(null, _classDescriptor = { value: _classThis }, _classDecorators, { kind: "class", name: _classThis.name, metadata: _metadata }, null, _classExtraInitializers);
        UploadProviderLocal = _classThis = _classDescriptor.value;
        if (_metadata) Object.defineProperty(_classThis, Symbol.metadata, { enumerable: true, configurable: true, writable: true, value: _metadata });
    })();
    _classThis.path = '/upload-local';
    (function () {
        __runInitializers(_classThis, _classExtraInitializers);
    })();
    return UploadProviderLocal = _classThis;
}();
exports.UploadProviderLocal = UploadProviderLocal;


// C:\grua-booking-system-25\server\dist\libraries\upload\internal\providers\aws\upload.provider.aws.js
"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __esDecorate = (this && this.__esDecorate) || function (ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {
    function accept(f) { if (f !== void 0 && typeof f !== "function") throw new TypeError("Function expected"); return f; }
    var kind = contextIn.kind, key = kind === "getter" ? "get" : kind === "setter" ? "set" : "value";
    var target = !descriptorIn && ctor ? contextIn["static"] ? ctor : ctor.prototype : null;
    var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});
    var _, done = false;
    for (var i = decorators.length - 1; i >= 0; i--) {
        var context = {};
        for (var p in contextIn) context[p] = p === "access" ? {} : contextIn[p];
        for (var p in contextIn.access) context.access[p] = contextIn.access[p];
        context.addInitializer = function (f) { if (done) throw new TypeError("Cannot add initializers after decoration has completed"); extraInitializers.push(accept(f || null)); };
        var result = (0, decorators[i])(kind === "accessor" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);
        if (kind === "accessor") {
            if (result === void 0) continue;
            if (result === null || typeof result !== "object") throw new TypeError("Object expected");
            if (_ = accept(result.get)) descriptor.get = _;
            if (_ = accept(result.set)) descriptor.set = _;
            if (_ = accept(result.init)) initializers.unshift(_);
        }
        else if (_ = accept(result)) {
            if (kind === "field") initializers.unshift(_);
            else descriptor[key] = _;
        }
    }
    if (target) Object.defineProperty(target, contextIn.name, descriptor);
    done = true;
};
var __runInitializers = (this && this.__runInitializers) || function (thisArg, initializers, value) {
    var useValue = arguments.length > 2;
    for (var i = 0; i < initializers.length; i++) {
        value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);
    }
    return useValue ? value : void 0;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (g && (g = 0, op[0] && (_ = 0)), _) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __setFunctionName = (this && this.__setFunctionName) || function (f, name, prefix) {
    if (typeof name === "symbol") name = name.description ? "[".concat(name.description, "]") : "";
    return Object.defineProperty(f, "name", { configurable: true, value: prefix ? "".concat(prefix, " ", name) : name });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.UploadProviderAws = void 0;
var client_s3_1 = require("@aws-sdk/client-s3");
var s3_request_presigner_1 = require("@aws-sdk/s3-request-presigner");
var common_1 = require("@nestjs/common");
var upload_provider_1 = require("@server/libraries/upload/upload.provider");
var ONE_HOUR_IN_SECONDS = 60 * 60;
var UploadProviderAws = function () {
    var _classDecorators = [(0, common_1.Injectable)()];
    var _classDescriptor;
    var _classExtraInitializers = [];
    var _classThis;
    var _classSuper = upload_provider_1.UploadProvider;
    var UploadProviderAws = _classThis = /** @class */ (function (_super) {
        __extends(UploadProviderAws_1, _super);
        function UploadProviderAws_1(loggerService, configurationService) {
            var _this = _super.call(this) || this;
            _this.loggerService = loggerService;
            _this.configurationService = configurationService;
            _this.logger = _this.loggerService.create({ name: 'UploadProviderAws' });
            return _this;
        }
        UploadProviderAws_1.prototype.initialise = function () {
            return __awaiter(this, void 0, void 0, function () {
                var accessKey, secretKey, error_1;
                return __generator(this, function (_a) {
                    switch (_a.label) {
                        case 0:
                            _a.trys.push([0, 2, , 3]);
                            accessKey = this.configurationService.get("SERVER_UPLOAD_AWS_ACCESS_KEY");
                            secretKey = this.configurationService.get("SERVER_UPLOAD_AWS_SECRET_KEY");
                            if (!accessKey && !secretKey) {
                                throw new Error('Set SERVER_UPLOAD_AWS_ACCESS_KEY && SERVER_UPLOAD_AWS_SECRET_KEY in your .env to activate');
                            }
                            if (!accessKey) {
                                throw new Error('Set SERVER_UPLOAD_AWS_ACCESS_KEY in your .env to activate');
                            }
                            if (!secretKey) {
                                throw new Error('Set SERVER_UPLOAD_AWS_SECRET_KEY in your .env to activate');
                            }
                            this.region = this.configurationService.get("SERVER_UPLOAD_AWS_REGION", 'us-east-1');
                            this.bucketPublicName = this.configurationService.get("SERVER_UPLOAD_AWS_BUCKET_PUBLIC_NAME");
                            if (!this.bucketPublicName) {
                                this.logger.warning("Set SERVER_UPLOAD_AWS_BUCKET_PUBLIC_NAME in your .env to activate a public bucket with infinite urls");
                            }
                            this.bucketPrivateName = this.configurationService.get("SERVER_UPLOAD_AWS_BUCKET_PRIVATE_NAME");
                            if (!this.bucketPrivateName) {
                                this.logger.warning("Set SERVER_UPLOAD_AWS_BUCKET_PRIVATE_NAME in your .env to activate a private bucket with signed urls");
                            }
                            this.client = new client_s3_1.S3Client({
                                region: this.region,
                                credentials: {
                                    accessKeyId: accessKey,
                                    secretAccessKey: secretKey,
                                },
                            });
                            return [4 /*yield*/, this.check()];
                        case 1:
                            _a.sent();
                            this.logger.success("AWS library active in region ".concat(this.region));
                            return [3 /*break*/, 3];
                        case 2:
                            error_1 = _a.sent();
                            this.logger.warning("AWS library failed to start");
                            throw new Error(error_1);
                        case 3: return [2 /*return*/];
                    }
                });
            });
        };
        UploadProviderAws_1.prototype.check = function () {
            return __awaiter(this, void 0, void 0, function () {
                var buckets, bucket, bucket;
                var _this = this;
                return __generator(this, function (_a) {
                    switch (_a.label) {
                        case 0: return [4 /*yield*/, this.listBuckets()];
                        case 1:
                            buckets = _a.sent();
                            if (this.bucketPrivateName) {
                                this.logger.log("Checking bucket \"".concat(this.bucketPrivateName, "\"..."));
                                bucket = buckets.find(function (bucket) { return bucket.name === _this.bucketPrivateName; });
                                if (bucket) {
                                    this.logger.success("Bucket \"".concat(this.bucketPrivateName, "\" is active"));
                                }
                                else {
                                    throw new Error("Bucket \"".concat(this.bucketPrivateName, "\" was not found"));
                                }
                            }
                            if (this.bucketPublicName) {
                                this.logger.log("Checking bucket \"".concat(this.bucketPublicName, "\"..."));
                                bucket = buckets.find(function (bucket) { return bucket.name === _this.bucketPublicName; });
                                if (bucket) {
                                    this.logger.success("Bucket \"".concat(this.bucketPublicName, "\" is active"));
                                }
                                else {
                                    throw new Error("Bucket \"".concat(this.bucketPublicName, "\" was not found"));
                                }
                            }
                            return [2 /*return*/];
                    }
                });
            });
        };
        UploadProviderAws_1.prototype.uploadPublic = function (options) {
            var _a;
            return __awaiter(this, void 0, void 0, function () {
                var file, key, command, url, error_2;
                return __generator(this, function (_b) {
                    switch (_b.label) {
                        case 0:
                            file = options.file;
                            key = this.ensureFilename(file.originalname);
                            command = new client_s3_1.PutObjectCommand({
                                Bucket: "".concat(this.bucketPublicName),
                                Key: this.ensureKey(key),
                                Body: file.buffer,
                                ContentType: (_a = file.mimetype) !== null && _a !== void 0 ? _a : 'image/png',
                            });
                            _b.label = 1;
                        case 1:
                            _b.trys.push([1, 3, , 4]);
                            return [4 /*yield*/, this.client.send(command)];
                        case 2:
                            _b.sent();
                            this.logger.success("File ".concat(file.originalname, " saved (public)"));
                            url = "".concat(this.getBaseUrlPublic(), "/").concat(key);
                            return [2 /*return*/, { url: url }];
                        case 3:
                            error_2 = _b.sent();
                            this.logger.error("".concat(error_2));
                            throw new Error("Could not upload public file with key \"".concat(key, "\""));
                        case 4: return [2 /*return*/];
                    }
                });
            });
        };
        UploadProviderAws_1.prototype.uploadPrivate = function (options) {
            var _a;
            return __awaiter(this, void 0, void 0, function () {
                var file, key, command, url, error_3;
                return __generator(this, function (_b) {
                    switch (_b.label) {
                        case 0:
                            file = options.file;
                            key = this.ensureFilename(file.originalname);
                            command = new client_s3_1.PutObjectCommand({
                                Bucket: "".concat(this.bucketPrivateName),
                                Key: this.ensureKey(key),
                                Body: file.buffer,
                                ContentType: (_a = file.mimetype) !== null && _a !== void 0 ? _a : 'image/png',
                            });
                            _b.label = 1;
                        case 1:
                            _b.trys.push([1, 3, , 4]);
                            return [4 /*yield*/, this.client.send(command)];
                        case 2:
                            _b.sent();
                            this.logger.success("File ".concat(file.originalname, " saved (private)"));
                            url = "".concat(this.getBaseUrlPrivate(), "/").concat(key);
                            return [2 /*return*/, { url: url }];
                        case 3:
                            error_3 = _b.sent();
                            this.logger.error("".concat(error_3));
                            throw new Error("Could not upload private file with key \"".concat(key, "\""));
                        case 4: return [2 /*return*/];
                    }
                });
            });
        };
        UploadProviderAws_1.prototype.fromPrivateToPublicUrl = function (_a) {
            var url = _a.url, _b = _a.expiresInSeconds, expiresInSeconds = _b === void 0 ? ONE_HOUR_IN_SECONDS : _b;
            return __awaiter(this, void 0, void 0, function () {
                var key, params, command, urlPublic;
                return __generator(this, function (_c) {
                    switch (_c.label) {
                        case 0:
                            if (!this.isUrlPrivate(url)) {
                                throw new Error("".concat(url, " must be a private url"));
                            }
                            key = this.extractKeyFromUrlPrivate(url);
                            params = {
                                Bucket: "".concat(this.bucketPrivateName),
                                Key: this.ensureKey(key),
                            };
                            command = new client_s3_1.GetObjectCommand(params);
                            return [4 /*yield*/, (0, s3_request_presigner_1.getSignedUrl)(this.client, command, {
                                    expiresIn: expiresInSeconds,
                                })];
                        case 1:
                            urlPublic = _c.sent();
                            return [2 /*return*/, { url: urlPublic }];
                    }
                });
            });
        };
        /* -------------------------------------------------------------------------- */
        /*                                   PRIVATE                                  */
        /* -------------------------------------------------------------------------- */
        UploadProviderAws_1.prototype.listBuckets = function () {
            return __awaiter(this, void 0, void 0, function () {
                var result, buckets;
                return __generator(this, function (_a) {
                    switch (_a.label) {
                        case 0: return [4 /*yield*/, this.client.send(new client_s3_1.ListBucketsCommand({}))];
                        case 1:
                            result = _a.sent();
                            buckets = result.Buckets.map(function (item) { return ({
                                name: item.Name,
                                dateCreation: item.CreationDate,
                            }); });
                            return [2 /*return*/, buckets];
                    }
                });
            });
        };
        UploadProviderAws_1.prototype.getBaseUrlPrivate = function () {
            return "https://".concat(this.bucketPrivateName, ".s3.").concat(this.region, ".amazonaws.com");
        };
        UploadProviderAws_1.prototype.getBaseUrlPublic = function () {
            return "https://".concat(this.bucketPublicName, ".s3.").concat(this.region, ".amazonaws.com");
        };
        UploadProviderAws_1.prototype.ensureKey = function (key) {
            var isPrefixed = key.startsWith('/');
            if (isPrefixed) {
                return key.slice(1);
            }
            return key;
        };
        UploadProviderAws_1.prototype.isUrlPrivate = function (url) {
            var baseUrlPrivate = this.getBaseUrlPrivate();
            var isPrivate = url.startsWith(baseUrlPrivate);
            return isPrivate;
        };
        UploadProviderAws_1.prototype.extractKeyFromUrlPrivate = function (url) {
            var baseUrlPrivate = this.getBaseUrlPrivate();
            return url.replace(baseUrlPrivate, '');
        };
        return UploadProviderAws_1;
    }(_classSuper));
    __setFunctionName(_classThis, "UploadProviderAws");
    (function () {
        var _a;
        var _metadata = typeof Symbol === "function" && Symbol.metadata ? Object.create((_a = _classSuper[Symbol.metadata]) !== null && _a !== void 0 ? _a : null) : void 0;
        __esDecorate(null, _classDescriptor = { value: _classThis }, _classDecorators, { kind: "class", name: _classThis.name, metadata: _metadata }, null, _classExtraInitializers);
        UploadProviderAws = _classThis = _classDescriptor.value;
        if (_metadata) Object.defineProperty(_classThis, Symbol.metadata, { enumerable: true, configurable: true, writable: true, value: _metadata });
        __runInitializers(_classThis, _classExtraInitializers);
    })();
    return UploadProviderAws = _classThis;
}();
exports.UploadProviderAws = UploadProviderAws;


// C:\grua-booking-system-25\server\dist\libraries\upload\internal\providers\local\upload.provider.local.js
"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __esDecorate = (this && this.__esDecorate) || function (ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {
    function accept(f) { if (f !== void 0 && typeof f !== "function") throw new TypeError("Function expected"); return f; }
    var kind = contextIn.kind, key = kind === "getter" ? "get" : kind === "setter" ? "set" : "value";
    var target = !descriptorIn && ctor ? contextIn["static"] ? ctor : ctor.prototype : null;
    var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});
    var _, done = false;
    for (var i = decorators.length - 1; i >= 0; i--) {
        var context = {};
        for (var p in contextIn) context[p] = p === "access" ? {} : contextIn[p];
        for (var p in contextIn.access) context.access[p] = contextIn.access[p];
        context.addInitializer = function (f) { if (done) throw new TypeError("Cannot add initializers after decoration has completed"); extraInitializers.push(accept(f || null)); };
        var result = (0, decorators[i])(kind === "accessor" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);
        if (kind === "accessor") {
            if (result === void 0) continue;
            if (result === null || typeof result !== "object") throw new TypeError("Object expected");
            if (_ = accept(result.get)) descriptor.get = _;
            if (_ = accept(result.set)) descriptor.set = _;
            if (_ = accept(result.init)) initializers.unshift(_);
        }
        else if (_ = accept(result)) {
            if (kind === "field") initializers.unshift(_);
            else descriptor[key] = _;
        }
    }
    if (target) Object.defineProperty(target, contextIn.name, descriptor);
    done = true;
};
var __runInitializers = (this && this.__runInitializers) || function (thisArg, initializers, value) {
    var useValue = arguments.length > 2;
    for (var i = 0; i < initializers.length; i++) {
        value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);
    }
    return useValue ? value : void 0;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (g && (g = 0, op[0] && (_ = 0)), _) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __setFunctionName = (this && this.__setFunctionName) || function (f, name, prefix) {
    if (typeof name === "symbol") name = name.description ? "[".concat(name.description, "]") : "";
    return Object.defineProperty(f, "name", { configurable: true, value: prefix ? "".concat(prefix, " ", name) : name });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.UploadProviderLocal = void 0;
var common_1 = require("@nestjs/common");
var serve_static_1 = require("@nestjs/serve-static");
var file_1 = require("@server/helpers/file");
var upload_provider_1 = require("@server/libraries/upload/upload.provider");
var path_1 = require("path");
var UploadProviderLocal = function () {
    var _classDecorators = [(0, common_1.Injectable)()];
    var _classDescriptor;
    var _classExtraInitializers = [];
    var _classThis;
    var _classSuper = upload_provider_1.UploadProvider;
    var UploadProviderLocal = _classThis = /** @class */ (function (_super) {
        __extends(UploadProviderLocal_1, _super);
        function UploadProviderLocal_1(loggerService, configurationService) {
            var _this = _super.call(this) || this;
            _this.loggerService = loggerService;
            _this.configurationService = configurationService;
            _this.pathPublic = ".".concat(UploadProviderLocal.path, "/public");
            _this.pathPrivate = ".".concat(UploadProviderLocal.path, "/private");
            _this.logger = _this.loggerService.create({ name: 'UploadProviderLocal' });
            return _this;
        }
        UploadProviderLocal_1.setup = function () {
            return serve_static_1.ServeStaticModule.forRoot({
                rootPath: (0, path_1.join)(file_1.FileHelper.getRoot(), ".".concat(this.path)),
                serveRoot: this.path,
            });
        };
        UploadProviderLocal_1.prototype.initialise = function () {
            try {
                file_1.FileHelper.writeFolder(this.pathPublic);
                this.staticServerUrl = "".concat(this.configurationService.getBaseUrl());
                this.logger.success("Upload Local is active");
            }
            catch (error) {
                this.logger.error("Upload Local failed to start: ".concat(error.message));
            }
            return;
        };
        UploadProviderLocal_1.prototype.uploadPublic = function (_a) {
            var file = _a.file;
            return __awaiter(this, void 0, void 0, function () {
                var content, filename, path, url;
                return __generator(this, function (_b) {
                    content = file.buffer;
                    filename = this.ensureFilename(file.originalname);
                    path = file_1.FileHelper.joinPaths(this.pathPublic, filename);
                    file_1.FileHelper.writeFile(path, content);
                    url = "".concat(this.staticServerUrl, "/").concat(path);
                    return [2 /*return*/, { url: url }];
                });
            });
        };
        UploadProviderLocal_1.prototype.uploadPrivate = function (_a) {
            var file = _a.file;
            return __awaiter(this, void 0, void 0, function () {
                var content, filename, path, url;
                return __generator(this, function (_b) {
                    content = file.buffer;
                    filename = this.ensureFilename(file.originalname);
                    path = file_1.FileHelper.joinPaths(this.pathPrivate, filename);
                    file_1.FileHelper.writeFile(path, content);
                    url = "".concat(this.staticServerUrl, "/").concat(path);
                    return [2 /*return*/, { url: url }];
                });
            });
        };
        UploadProviderLocal_1.prototype.fromPrivateToPublicUrl = function (_a) {
            var url = _a.url;
            return __awaiter(this, void 0, void 0, function () {
                return __generator(this, function (_b) {
                    return [2 /*return*/, { url: url }];
                });
            });
        };
        return UploadProviderLocal_1;
    }(_classSuper));
    __setFunctionName(_classThis, "UploadProviderLocal");
    (function () {
        var _a;
        var _metadata = typeof Symbol === "function" && Symbol.metadata ? Object.create((_a = _classSuper[Symbol.metadata]) !== null && _a !== void 0 ? _a : null) : void 0;
        __esDecorate(null, _classDescriptor = { value: _classThis }, _classDecorators, { kind: "class", name: _classThis.name, metadata: _metadata }, null, _classExtraInitializers);
        UploadProviderLocal = _classThis = _classDescriptor.value;
        if (_metadata) Object.defineProperty(_classThis, Symbol.metadata, { enumerable: true, configurable: true, writable: true, value: _metadata });
    })();
    _classThis.path = '/upload-local';
    (function () {
        __runInitializers(_classThis, _classExtraInitializers);
    })();
    return UploadProviderLocal = _classThis;
}();
exports.UploadProviderLocal = UploadProviderLocal;


// C:\grua-booking-system-25\server\dist\modules\authentication\application\authentication.application.event.js
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.AuthenticationApplicationEvent = void 0;
var AuthenticationApplicationEvent;
(function (AuthenticationApplicationEvent) {
    var UserPasswordResetRequested;
    (function (UserPasswordResetRequested) {
        UserPasswordResetRequested.key = 'authentication.application.user-password-reset-requested';
    })(UserPasswordResetRequested = AuthenticationApplicationEvent.UserPasswordResetRequested || (AuthenticationApplicationEvent.UserPasswordResetRequested = {}));
    var UserRegistered;
    (function (UserRegistered) {
        UserRegistered.key = 'authentication.application.user-registered';
    })(UserRegistered = AuthenticationApplicationEvent.UserRegistered || (AuthenticationApplicationEvent.UserRegistered = {}));
})(AuthenticationApplicationEvent || (exports.AuthenticationApplicationEvent = AuthenticationApplicationEvent = {}));


// C:\grua-booking-system-25\server\dist\modules\authentication\application\authentication.application.exception.js
"use strict";
var __esDecorate = (this && this.__esDecorate) || function (ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {
    function accept(f) { if (f !== void 0 && typeof f !== "function") throw new TypeError("Function expected"); return f; }
    var kind = contextIn.kind, key = kind === "getter" ? "get" : kind === "setter" ? "set" : "value";
    var target = !descriptorIn && ctor ? contextIn["static"] ? ctor : ctor.prototype : null;
    var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});
    var _, done = false;
    for (var i = decorators.length - 1; i >= 0; i--) {
        var context = {};
        for (var p in contextIn) context[p] = p === "access" ? {} : contextIn[p];
        for (var p in contextIn.access) context.access[p] = contextIn.access[p];
        context.addInitializer = function (f) { if (done) throw new TypeError("Cannot add initializers after decoration has completed"); extraInitializers.push(accept(f || null)); };
        var result = (0, decorators[i])(kind === "accessor" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);
        if (kind === "accessor") {
            if (result === void 0) continue;
            if (result === null || typeof result !== "object") throw new TypeError("Object expected");
            if (_ = accept(result.get)) descriptor.get = _;
            if (_ = accept(result.set)) descriptor.set = _;
            if (_ = accept(result.init)) initializers.unshift(_);
        }
        else if (_ = accept(result)) {
            if (kind === "field") initializers.unshift(_);
            else descriptor[key] = _;
        }
    }
    if (target) Object.defineProperty(target, contextIn.name, descriptor);
    done = true;
};
var __runInitializers = (this && this.__runInitializers) || function (thisArg, initializers, value) {
    var useValue = arguments.length > 2;
    for (var i = 0; i < initializers.length; i++) {
        value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);
    }
    return useValue ? value : void 0;
};
var __setFunctionName = (this && this.__setFunctionName) || function (f, name, prefix) {
    if (typeof name === "symbol") name = name.description ? "[".concat(name.description, "]") : "";
    return Object.defineProperty(f, "name", { configurable: true, value: prefix ? "".concat(prefix, " ", name) : name });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.AuthenticationApplicationException = void 0;
var common_1 = require("@nestjs/common");
var AuthenticationApplicationException = function () {
    var _classDecorators = [(0, common_1.Injectable)()];
    var _classDescriptor;
    var _classExtraInitializers = [];
    var _classThis;
    var AuthenticationApplicationException = _classThis = /** @class */ (function () {
        function AuthenticationApplicationException_1(service) {
            this.service = service;
        }
        AuthenticationApplicationException_1.prototype.invalidAccessToken = function () {
            return this.service.throw({
                status: common_1.HttpStatus.UNAUTHORIZED,
                code: 1,
                publicMessage: 'Access token is invalid',
            });
        };
        AuthenticationApplicationException_1.prototype.userEmailNotFound = function (email) {
            return this.service.throw({
                status: common_1.HttpStatus.UNAUTHORIZED,
                code: 2,
                publicMessage: 'Incorrect email or password',
                privateMessage: "User with email \"".concat(email, "\" was not found"),
            });
        };
        AuthenticationApplicationException_1.prototype.userPasswordNotFound = function (email) {
            return this.service.throw({
                status: common_1.HttpStatus.UNAUTHORIZED,
                code: 2,
                publicMessage: 'Incorrect email or password',
                privateMessage: "Password does not match user with email \"".concat(email, "\""),
            });
        };
        AuthenticationApplicationException_1.prototype.userEmailNotAvailable = function (email) {
            return this.service.throw({
                status: common_1.HttpStatus.CONFLICT,
                code: 3,
                publicMessage: 'Email is not available',
                privateMessage: "User can not register with email \"".concat(email, "\" as it is already taken."),
            });
        };
        AuthenticationApplicationException_1.prototype.invalidResetPasswordToken = function () {
            return this.service.throw({
                status: common_1.HttpStatus.FORBIDDEN,
                code: 4,
                publicMessage: 'Reset password token is invalid',
            });
        };
        AuthenticationApplicationException_1.prototype.invalidGoogleToken = function (error) {
            return this.service.throw({
                status: common_1.HttpStatus.FORBIDDEN,
                code: 1,
                publicMessage: 'Access token is invalid',
                cause: error,
            });
        };
        return AuthenticationApplicationException_1;
    }());
    __setFunctionName(_classThis, "AuthenticationApplicationException");
    (function () {
        var _metadata = typeof Symbol === "function" && Symbol.metadata ? Object.create(null) : void 0;
        __esDecorate(null, _classDescriptor = { value: _classThis }, _classDecorators, { kind: "class", name: _classThis.name, metadata: _metadata }, null, _classExtraInitializers);
        AuthenticationApplicationException = _classThis = _classDescriptor.value;
        if (_metadata) Object.defineProperty(_classThis, Symbol.metadata, { enumerable: true, configurable: true, writable: true, value: _metadata });
        __runInitializers(_classThis, _classExtraInitializers);
    })();
    return AuthenticationApplicationException = _classThis;
}();
exports.AuthenticationApplicationException = AuthenticationApplicationException;


// C:\grua-booking-system-25\server\dist\modules\authentication\application\authentication.controller.js


// C:\grua-booking-system-25\server\dist\modules\authentication\application\authentication.google.controller.js
"use strict";
var __runInitializers = (this && this.__runInitializers) || function (thisArg, initializers, value) {
    var useValue = arguments.length > 2;
    for (var i = 0; i < initializers.length; i++) {
        value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);
    }
    return useValue ? value : void 0;
};
var __esDecorate = (this && this.__esDecorate) || function (ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {
    function accept(f) { if (f !== void 0 && typeof f !== "function") throw new TypeError("Function expected"); return f; }
    var kind = contextIn.kind, key = kind === "getter" ? "get" : kind === "setter" ? "set" : "value";
    var target = !descriptorIn && ctor ? contextIn["static"] ? ctor : ctor.prototype : null;
    var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});
    var _, done = false;
    for (var i = decorators.length - 1; i >= 0; i--) {
        var context = {};
        for (var p in contextIn) context[p] = p === "access" ? {} : contextIn[p];
        for (var p in contextIn.access) context.access[p] = contextIn.access[p];
        context.addInitializer = function (f) { if (done) throw new TypeError("Cannot add initializers after decoration has completed"); extraInitializers.push(accept(f || null)); };
        var result = (0, decorators[i])(kind === "accessor" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);
        if (kind === "accessor") {
            if (result === void 0) continue;
            if (result === null || typeof result !== "object") throw new TypeError("Object expected");
            if (_ = accept(result.get)) descriptor.get = _;
            if (_ = accept(result.set)) descriptor.set = _;
            if (_ = accept(result.init)) initializers.unshift(_);
        }
        else if (_ = accept(result)) {
            if (kind === "field") initializers.unshift(_);
            else descriptor[key] = _;
        }
    }
    if (target) Object.defineProperty(target, contextIn.name, descriptor);
    done = true;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (g && (g = 0, op[0] && (_ = 0)), _) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __setFunctionName = (this && this.__setFunctionName) || function (f, name, prefix) {
    if (typeof name === "symbol") name = name.description ? "[".concat(name.description, "]") : "";
    return Object.defineProperty(f, "name", { configurable: true, value: prefix ? "".concat(prefix, " ", name) : name });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.GoogleByAuthenticationController = void 0;
var common_1 = require("@nestjs/common");
var authentication_1 = require("@server/core/authentication");
var authentication_application_event_1 = require("./authentication.application.event");
var GoogleByAuthenticationController = function () {
    var _classDecorators = [(0, common_1.Controller)('/v1/authentication/google')];
    var _classDescriptor;
    var _classExtraInitializers = [];
    var _classThis;
    var _instanceExtraInitializers = [];
    var _callback_decorators;
    var GoogleByAuthenticationController = _classThis = /** @class */ (function () {
        function GoogleByAuthenticationController_1(authenticationDomainFacade, userDomainFacade, googleService, loggerService, eventService, exception, cookieService) {
            this.authenticationDomainFacade = (__runInitializers(this, _instanceExtraInitializers), authenticationDomainFacade);
            this.userDomainFacade = userDomainFacade;
            this.googleService = googleService;
            this.loggerService = loggerService;
            this.eventService = eventService;
            this.exception = exception;
            this.cookieService = cookieService;
            this.logger = this.loggerService.create({
                name: 'GoogleByAuthenticationController',
            });
        }
        GoogleByAuthenticationController_1.prototype.callback = function (body, response) {
            return __awaiter(this, void 0, void 0, function () {
                var _a, name, email, token, user, error_1, registerData, data;
                var _this = this;
                return __generator(this, function (_b) {
                    switch (_b.label) {
                        case 0: return [4 /*yield*/, this.googleService
                                .verifyToken(body.token)
                                .catch(function (error) { return _this.exception.invalidGoogleToken(error); })];
                        case 1:
                            _a = _b.sent(), name = _a.name, email = _a.email;
                            _b.label = 2;
                        case 2:
                            _b.trys.push([2, 4, , 6]);
                            return [4 /*yield*/, this.userDomainFacade.findOneByEmailOrFail(email)];
                        case 3:
                            user = _b.sent();
                            token = this.authenticationDomainFacade.buildToken(user.id);
                            return [3 /*break*/, 6];
                        case 4:
                            error_1 = _b.sent();
                            return [4 /*yield*/, this.register(email, name)];
                        case 5:
                            registerData = _b.sent();
                            token = registerData.token;
                            return [3 /*break*/, 6];
                        case 6:
                            data = this.authenticationDomainFacade.setAccessToken(response, token);
                            return [2 /*return*/, data];
                    }
                });
            });
        };
        GoogleByAuthenticationController_1.prototype.register = function (email, name) {
            return __awaiter(this, void 0, void 0, function () {
                var user, token;
                return __generator(this, function (_a) {
                    switch (_a.label) {
                        case 0: return [4 /*yield*/, this.userDomainFacade.create({
                                email: email,
                                name: name,
                            })];
                        case 1:
                            _a.sent();
                            return [4 /*yield*/, this.userDomainFacade.findOneByEmailOrFail(email)];
                        case 2:
                            user = _a.sent();
                            return [4 /*yield*/, this.userDomainFacade.setVerified(user)];
                        case 3:
                            _a.sent();
                            token = this.authenticationDomainFacade.buildToken(user.id);
                            return [4 /*yield*/, this.eventService.emit(authentication_application_event_1.AuthenticationApplicationEvent.UserRegistered.key, { userId: user.id })];
                        case 4:
                            _a.sent();
                            this.logger.log("User ".concat(email, " registered with google"));
                            return [2 /*return*/, { token: token }];
                    }
                });
            });
        };
        return GoogleByAuthenticationController_1;
    }());
    __setFunctionName(_classThis, "GoogleByAuthenticationController");
    (function () {
        var _metadata = typeof Symbol === "function" && Symbol.metadata ? Object.create(null) : void 0;
        _callback_decorators = [(0, common_1.Post)('/callback'), authentication_1.Authentication.Public()];
        __esDecorate(_classThis, null, _callback_decorators, { kind: "method", name: "callback", static: false, private: false, access: { has: function (obj) { return "callback" in obj; }, get: function (obj) { return obj.callback; } }, metadata: _metadata }, null, _instanceExtraInitializers);
        __esDecorate(null, _classDescriptor = { value: _classThis }, _classDecorators, { kind: "class", name: _classThis.name, metadata: _metadata }, null, _classExtraInitializers);
        GoogleByAuthenticationController = _classThis = _classDescriptor.value;
        if (_metadata) Object.defineProperty(_classThis, Symbol.metadata, { enumerable: true, configurable: true, writable: true, value: _metadata });
        __runInitializers(_classThis, _classExtraInitializers);
    })();
    return GoogleByAuthenticationController = _classThis;
}();
exports.GoogleByAuthenticationController = GoogleByAuthenticationController;


// C:\grua-booking-system-25\server\dist\modules\authentication\application\index.js


// C:\grua-booking-system-25\server\dist\modules\authentication\domain\authentication.domain.module.js


// C:\grua-booking-system-25\server\dist\modules\authentication\infrastructure\guards\authentication.guard.js
"use strict";
var __esDecorate = (this && this.__esDecorate) || function (ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {
    function accept(f) { if (f !== void 0 && typeof f !== "function") throw new TypeError("Function expected"); return f; }
    var kind = contextIn.kind, key = kind === "getter" ? "get" : kind === "setter" ? "set" : "value";
    var target = !descriptorIn && ctor ? contextIn["static"] ? ctor : ctor.prototype : null;
    var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});
    var _, done = false;
    for (var i = decorators.length - 1; i >= 0; i--) {
        var context = {};
        for (var p in contextIn) context[p] = p === "access" ? {} : contextIn[p];
        for (var p in contextIn.access) context.access[p] = contextIn.access[p];
        context.addInitializer = function (f) { if (done) throw new TypeError("Cannot add initializers after decoration has completed"); extraInitializers.push(accept(f || null)); };
        var result = (0, decorators[i])(kind === "accessor" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);
        if (kind === "accessor") {
            if (result === void 0) continue;
            if (result === null || typeof result !== "object") throw new TypeError("Object expected");
            if (_ = accept(result.get)) descriptor.get = _;
            if (_ = accept(result.set)) descriptor.set = _;
            if (_ = accept(result.init)) initializers.unshift(_);
        }
        else if (_ = accept(result)) {
            if (kind === "field") initializers.unshift(_);
            else descriptor[key] = _;
        }
    }
    if (target) Object.defineProperty(target, contextIn.name, descriptor);
    done = true;
};
var __runInitializers = (this && this.__runInitializers) || function (thisArg, initializers, value) {
    var useValue = arguments.length > 2;
    for (var i = 0; i < initializers.length; i++) {
        value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);
    }
    return useValue ? value : void 0;
};
var __setFunctionName = (this && this.__setFunctionName) || function (f, name, prefix) {
    if (typeof name === "symbol") name = name.description ? "[".concat(name.description, "]") : "";
    return Object.defineProperty(f, "name", { configurable: true, value: prefix ? "".concat(prefix, " ", name) : name });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.AuthenticationGuard = void 0;
var common_1 = require("@nestjs/common");
var AuthenticationGuard = function () {
    var _classDecorators = [(0, common_1.Injectable)()];
    var _classDescriptor;
    var _classExtraInitializers = [];
    var _classThis;
    var AuthenticationGuard = _classThis = /** @class */ (function () {
        function AuthenticationGuard_1(reflector, service) {
            this.reflector = reflector;
            this.service = service;
        }
        AuthenticationGuard_1.prototype.canActivate = function (context) {
            return this.service.validateRequest(this.reflector, context);
        };
        return AuthenticationGuard_1;
    }());
    __setFunctionName(_classThis, "AuthenticationGuard");
    (function () {
        var _metadata = typeof Symbol === "function" && Symbol.metadata ? Object.create(null) : void 0;
        __esDecorate(null, _classDescriptor = { value: _classThis }, _classDecorators, { kind: "class", name: _classThis.name, metadata: _metadata }, null, _classExtraInitializers);
        AuthenticationGuard = _classThis = _classDescriptor.value;
        if (_metadata) Object.defineProperty(_classThis, Symbol.metadata, { enumerable: true, configurable: true, writable: true, value: _metadata });
        __runInitializers(_classThis, _classExtraInitializers);
    })();
    return AuthenticationGuard = _classThis;
}();
exports.AuthenticationGuard = AuthenticationGuard;


// C:\grua-booking-system-25\server\dist\modules\authentication\infrastructure\guards\authentication.guard.service.js
"use strict";
var __esDecorate = (this && this.__esDecorate) || function (ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {
    function accept(f) { if (f !== void 0 && typeof f !== "function") throw new TypeError("Function expected"); return f; }
    var kind = contextIn.kind, key = kind === "getter" ? "get" : kind === "setter" ? "set" : "value";
    var target = !descriptorIn && ctor ? contextIn["static"] ? ctor : ctor.prototype : null;
    var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});
    var _, done = false;
    for (var i = decorators.length - 1; i >= 0; i--) {
        var context = {};
        for (var p in contextIn) context[p] = p === "access" ? {} : contextIn[p];
        for (var p in contextIn.access) context.access[p] = contextIn.access[p];
        context.addInitializer = function (f) { if (done) throw new TypeError("Cannot add initializers after decoration has completed"); extraInitializers.push(accept(f || null)); };
        var result = (0, decorators[i])(kind === "accessor" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);
        if (kind === "accessor") {
            if (result === void 0) continue;
            if (result === null || typeof result !== "object") throw new TypeError("Object expected");
            if (_ = accept(result.get)) descriptor.get = _;
            if (_ = accept(result.set)) descriptor.set = _;
            if (_ = accept(result.init)) initializers.unshift(_);
        }
        else if (_ = accept(result)) {
            if (kind === "field") initializers.unshift(_);
            else descriptor[key] = _;
        }
    }
    if (target) Object.defineProperty(target, contextIn.name, descriptor);
    done = true;
};
var __runInitializers = (this && this.__runInitializers) || function (thisArg, initializers, value) {
    var useValue = arguments.length > 2;
    for (var i = 0; i < initializers.length; i++) {
        value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);
    }
    return useValue ? value : void 0;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (g && (g = 0, op[0] && (_ = 0)), _) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __setFunctionName = (this && this.__setFunctionName) || function (f, name, prefix) {
    if (typeof name === "symbol") name = name.description ? "[".concat(name.description, "]") : "";
    return Object.defineProperty(f, "name", { configurable: true, value: prefix ? "".concat(prefix, " ", name) : name });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.AuthenticationGuardService = void 0;
var common_1 = require("@nestjs/common");
var authentication_1 = require("@server/core/authentication");
var context_1 = require("@server/helpers/context");
var AuthenticationGuardService = function () {
    var _classDecorators = [(0, common_1.Injectable)()];
    var _classDescriptor;
    var _classExtraInitializers = [];
    var _classThis;
    var AuthenticationGuardService = _classThis = /** @class */ (function () {
        function AuthenticationGuardService_1(authenticationDomainFacade, userDomainFacade, exception) {
            this.authenticationDomainFacade = authenticationDomainFacade;
            this.userDomainFacade = userDomainFacade;
            this.exception = exception;
        }
        AuthenticationGuardService_1.prototype.validateRequest = function (reflector, context) {
            return __awaiter(this, void 0, void 0, function () {
                var isPublic, request, token, userId, payload, user;
                return __generator(this, function (_a) {
                    switch (_a.label) {
                        case 0:
                            isPublic = authentication_1.Authentication.isPublic(context, reflector);
                            if (isPublic) {
                                return [2 /*return*/, true];
                            }
                            request = context_1.ContextHelper.toRequest(context);
                            token = this.authenticationDomainFacade.getAccessToken(request);
                            try {
                                payload = this.authenticationDomainFacade.verifyTokenOrFail(token);
                                userId = payload.userId;
                            }
                            catch (error) {
                                this.exception.invalidAccessToken();
                            }
                            return [4 /*yield*/, this.userDomainFacade.findOneByIdOrFail(userId)];
                        case 1:
                            user = _a.sent();
                            return [4 /*yield*/, this.checkUserNotVerified(reflector, context, user)];
                        case 2:
                            _a.sent();
                            return [4 /*yield*/, this.checkUserVisitor(reflector, context, user)];
                        case 3:
                            _a.sent();
                            this.authenticationDomainFacade.assignRequestPayload(request, { user: user });
                            return [2 /*return*/, true];
                    }
                });
            });
        };
        AuthenticationGuardService_1.prototype.checkUserNotVerified = function (reflector, context, user) {
            return __awaiter(this, void 0, void 0, function () {
                var isUserNotVerifiedAllowed, isVerified, isVisitor;
                return __generator(this, function (_a) {
                    isUserNotVerifiedAllowed = authentication_1.Authentication.isUserNotVerifiedAllowed(context, reflector);
                    if (isUserNotVerifiedAllowed) {
                        return [2 /*return*/];
                    }
                    isVerified = this.userDomainFacade.isVerified(user);
                    isVisitor = this.userDomainFacade.isVisitor(user);
                    if (isVerified || isVisitor) {
                        return [2 /*return*/];
                    }
                    this.exception.userNotVerifiedUnauthorized(user);
                    return [2 /*return*/];
                });
            });
        };
        AuthenticationGuardService_1.prototype.checkUserVisitor = function (reflector, context, user) {
            return __awaiter(this, void 0, void 0, function () {
                var isUserVisitorAllowed, isVisitor;
                return __generator(this, function (_a) {
                    isUserVisitorAllowed = authentication_1.Authentication.isVisitorAllowed(context, reflector);
                    if (isUserVisitorAllowed) {
                        return [2 /*return*/];
                    }
                    isVisitor = this.userDomainFacade.isVisitor(user);
                    if (isVisitor) {
                        this.exception.userVisitorUnauthorized(user);
                    }
                    return [2 /*return*/];
                });
            });
        };
        return AuthenticationGuardService_1;
    }());
    __setFunctionName(_classThis, "AuthenticationGuardService");
    (function () {
        var _metadata = typeof Symbol === "function" && Symbol.metadata ? Object.create(null) : void 0;
        __esDecorate(null, _classDescriptor = { value: _classThis }, _classDecorators, { kind: "class", name: _classThis.name, metadata: _metadata }, null, _classExtraInitializers);
        AuthenticationGuardService = _classThis = _classDescriptor.value;
        if (_metadata) Object.defineProperty(_classThis, Symbol.metadata, { enumerable: true, configurable: true, writable: true, value: _metadata });
        __runInitializers(_classThis, _classExtraInitializers);
    })();
    return AuthenticationGuardService = _classThis;
}();
exports.AuthenticationGuardService = AuthenticationGuardService;


// C:\grua-booking-system-25\server\dist\modules\authentication\infrastructure\subscribers\authentication.communication.subscriber.js
"use strict";
var __runInitializers = (this && this.__runInitializers) || function (thisArg, initializers, value) {
    var useValue = arguments.length > 2;
    for (var i = 0; i < initializers.length; i++) {
        value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);
    }
    return useValue ? value : void 0;
};
var __esDecorate = (this && this.__esDecorate) || function (ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {
    function accept(f) { if (f !== void 0 && typeof f !== "function") throw new TypeError("Function expected"); return f; }
    var kind = contextIn.kind, key = kind === "getter" ? "get" : kind === "setter" ? "set" : "value";
    var target = !descriptorIn && ctor ? contextIn["static"] ? ctor : ctor.prototype : null;
    var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});
    var _, done = false;
    for (var i = decorators.length - 1; i >= 0; i--) {
        var context = {};
        for (var p in contextIn) context[p] = p === "access" ? {} : contextIn[p];
        for (var p in contextIn.access) context.access[p] = contextIn.access[p];
        context.addInitializer = function (f) { if (done) throw new TypeError("Cannot add initializers after decoration has completed"); extraInitializers.push(accept(f || null)); };
        var result = (0, decorators[i])(kind === "accessor" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);
        if (kind === "accessor") {
            if (result === void 0) continue;
            if (result === null || typeof result !== "object") throw new TypeError("Object expected");
            if (_ = accept(result.get)) descriptor.get = _;
            if (_ = accept(result.set)) descriptor.set = _;
            if (_ = accept(result.init)) initializers.unshift(_);
        }
        else if (_ = accept(result)) {
            if (kind === "field") initializers.unshift(_);
            else descriptor[key] = _;
        }
    }
    if (target) Object.defineProperty(target, contextIn.name, descriptor);
    done = true;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (g && (g = 0, op[0] && (_ = 0)), _) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __setFunctionName = (this && this.__setFunctionName) || function (f, name, prefix) {
    if (typeof name === "symbol") name = name.description ? "[".concat(name.description, "]") : "";
    return Object.defineProperty(f, "name", { configurable: true, value: prefix ? "".concat(prefix, " ", name) : name });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.AuthenticationCommunicationSubscriber = void 0;
var common_1 = require("@nestjs/common");
var event_emitter_1 = require("@nestjs/event-emitter");
var user_orchestrator_event_1 = require("@server/modules/user/orchestrators/user.orchestrator.event");
var application_1 = require("../../application");
var AuthenticationCommunicationSubscriber = function () {
    var _classDecorators = [(0, common_1.Injectable)()];
    var _classDescriptor;
    var _classExtraInitializers = [];
    var _classThis;
    var _instanceExtraInitializers = [];
    var _handleUserRegistered_decorators;
    var _handleResetPassword_decorators;
    var AuthenticationCommunicationSubscriber = _classThis = /** @class */ (function () {
        function AuthenticationCommunicationSubscriber_1(configurationService, userDomainFacade, authenticationDomainFacade, emailService) {
            this.configurationService = (__runInitializers(this, _instanceExtraInitializers), configurationService);
            this.userDomainFacade = userDomainFacade;
            this.authenticationDomainFacade = authenticationDomainFacade;
            this.emailService = emailService;
        }
        AuthenticationCommunicationSubscriber_1.prototype.handleUserRegistered = function (data) {
            var _a;
            return __awaiter(this, void 0, void 0, function () {
                var user, type;
                return __generator(this, function (_b) {
                    switch (_b.label) {
                        case 0: return [4 /*yield*/, this.userDomainFacade.findOneByIdOrFail(data.userId)];
                        case 1:
                            user = _b.sent();
                            type = this.emailService.Type.AUTHENTICATION_WELCOME;
                            return [4 /*yield*/, this.emailService.send({
                                    type: type,
                                    email: user.email,
                                    name: (_a = user.name) !== null && _a !== void 0 ? _a : user.email,
                                    subject: "Welcome",
                                    variables: {},
                                })];
                        case 2:
                            _b.sent();
                            return [2 /*return*/];
                    }
                });
            });
        };
        AuthenticationCommunicationSubscriber_1.prototype.handleResetPassword = function (data) {
            var _a;
            return __awaiter(this, void 0, void 0, function () {
                var user, token, url, urlResetPassword, type;
                return __generator(this, function (_b) {
                    switch (_b.label) {
                        case 0: return [4 /*yield*/, this.userDomainFacade.findOneByIdOrFail(data.userId)];
                        case 1:
                            user = _b.sent();
                            token = this.authenticationDomainFacade.buildTokenResetPassword(user);
                            url = this.configurationService.getClientBaseUrl();
                            urlResetPassword = "".concat(url, "/reset-password/").concat(token);
                            type = this.emailService.Type.AUTHENTICATION_FORGOT_PASSWORD;
                            return [4 /*yield*/, this.emailService.send({
                                    type: type,
                                    email: user.email,
                                    name: (_a = user.name) !== null && _a !== void 0 ? _a : user.email,
                                    subject: "Reset your password",
                                    variables: {
                                        url_password_reset: urlResetPassword,
                                    },
                                })];
                        case 2:
                            _b.sent();
                            return [2 /*return*/];
                    }
                });
            });
        };
        return AuthenticationCommunicationSubscriber_1;
    }());
    __setFunctionName(_classThis, "AuthenticationCommunicationSubscriber");
    (function () {
        var _metadata = typeof Symbol === "function" && Symbol.metadata ? Object.create(null) : void 0;
        _handleUserRegistered_decorators = [(0, event_emitter_1.OnEvent)(user_orchestrator_event_1.UserOrchestratorEvent.Verified.key)];
        _handleResetPassword_decorators = [(0, event_emitter_1.OnEvent)(application_1.AuthenticationApplicationEvent.UserPasswordResetRequested.key)];
        __esDecorate(_classThis, null, _handleUserRegistered_decorators, { kind: "method", name: "handleUserRegistered", static: false, private: false, access: { has: function (obj) { return "handleUserRegistered" in obj; }, get: function (obj) { return obj.handleUserRegistered; } }, metadata: _metadata }, null, _instanceExtraInitializers);
        __esDecorate(_classThis, null, _handleResetPassword_decorators, { kind: "method", name: "handleResetPassword", static: false, private: false, access: { has: function (obj) { return "handleResetPassword" in obj; }, get: function (obj) { return obj.handleResetPassword; } }, metadata: _metadata }, null, _instanceExtraInitializers);
        __esDecorate(null, _classDescriptor = { value: _classThis }, _classDecorators, { kind: "class", name: _classThis.name, metadata: _metadata }, null, _classExtraInitializers);
        AuthenticationCommunicationSubscriber = _classThis = _classDescriptor.value;
        if (_metadata) Object.defineProperty(_classThis, Symbol.metadata, { enumerable: true, configurable: true, writable: true, value: _metadata });
        __runInitializers(_classThis, _classExtraInitializers);
    })();
    return AuthenticationCommunicationSubscriber = _classThis;
}();
exports.AuthenticationCommunicationSubscriber = AuthenticationCommunicationSubscriber;


// C:\grua-booking-system-25\server\dist\modules\authentication\infrastructure\authentication.infrastructure.exception.js
"use strict";
var __esDecorate = (this && this.__esDecorate) || function (ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {
    function accept(f) { if (f !== void 0 && typeof f !== "function") throw new TypeError("Function expected"); return f; }
    var kind = contextIn.kind, key = kind === "getter" ? "get" : kind === "setter" ? "set" : "value";
    var target = !descriptorIn && ctor ? contextIn["static"] ? ctor : ctor.prototype : null;
    var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});
    var _, done = false;
    for (var i = decorators.length - 1; i >= 0; i--) {
        var context = {};
        for (var p in contextIn) context[p] = p === "access" ? {} : contextIn[p];
        for (var p in contextIn.access) context.access[p] = contextIn.access[p];
        context.addInitializer = function (f) { if (done) throw new TypeError("Cannot add initializers after decoration has completed"); extraInitializers.push(accept(f || null)); };
        var result = (0, decorators[i])(kind === "accessor" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);
        if (kind === "accessor") {
            if (result === void 0) continue;
            if (result === null || typeof result !== "object") throw new TypeError("Object expected");
            if (_ = accept(result.get)) descriptor.get = _;
            if (_ = accept(result.set)) descriptor.set = _;
            if (_ = accept(result.init)) initializers.unshift(_);
        }
        else if (_ = accept(result)) {
            if (kind === "field") initializers.unshift(_);
            else descriptor[key] = _;
        }
    }
    if (target) Object.defineProperty(target, contextIn.name, descriptor);
    done = true;
};
var __runInitializers = (this && this.__runInitializers) || function (thisArg, initializers, value) {
    var useValue = arguments.length > 2;
    for (var i = 0; i < initializers.length; i++) {
        value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);
    }
    return useValue ? value : void 0;
};
var __setFunctionName = (this && this.__setFunctionName) || function (f, name, prefix) {
    if (typeof name === "symbol") name = name.description ? "[".concat(name.description, "]") : "";
    return Object.defineProperty(f, "name", { configurable: true, value: prefix ? "".concat(prefix, " ", name) : name });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.AuthenticationInfrastructureException = void 0;
var common_1 = require("@nestjs/common");
var AuthenticationInfrastructureException = function () {
    var _classDecorators = [(0, common_1.Injectable)()];
    var _classDescriptor;
    var _classExtraInitializers = [];
    var _classThis;
    var AuthenticationInfrastructureException = _classThis = /** @class */ (function () {
        function AuthenticationInfrastructureException_1(service) {
            this.service = service;
        }
        AuthenticationInfrastructureException_1.prototype.invalidAccessToken = function () {
            return this.service.throw({
                status: common_1.HttpStatus.UNAUTHORIZED,
                code: 0,
                publicMessage: 'Access token is invalid',
            });
        };
        AuthenticationInfrastructureException_1.prototype.userNotVerifiedUnauthorized = function (user) {
            return this.service.throw({
                status: common_1.HttpStatus.UNAUTHORIZED,
                code: 1,
                publicMessage: 'You must verify your account',
                privateMessage: "User ".concat(user.email, " is not verified (").concat(user.status, ")"),
            });
        };
        AuthenticationInfrastructureException_1.prototype.userVisitorUnauthorized = function (user) {
            return this.service.throw({
                status: common_1.HttpStatus.UNAUTHORIZED,
                code: 2,
                publicMessage: 'You must create an account',
                privateMessage: "User visitor \"".concat(user.id, "\" is not authorized"),
            });
        };
        return AuthenticationInfrastructureException_1;
    }());
    __setFunctionName(_classThis, "AuthenticationInfrastructureException");
    (function () {
        var _metadata = typeof Symbol === "function" && Symbol.metadata ? Object.create(null) : void 0;
        __esDecorate(null, _classDescriptor = { value: _classThis }, _classDecorators, { kind: "class", name: _classThis.name, metadata: _metadata }, null, _classExtraInitializers);
        AuthenticationInfrastructureException = _classThis = _classDescriptor.value;
        if (_metadata) Object.defineProperty(_classThis, Symbol.metadata, { enumerable: true, configurable: true, writable: true, value: _metadata });
        __runInitializers(_classThis, _classExtraInitializers);
    })();
    return AuthenticationInfrastructureException = _classThis;
}();
exports.AuthenticationInfrastructureException = AuthenticationInfrastructureException;


// C:\grua-booking-system-25\server\dist\modules\authentication\infrastructure\authentication.infrastructure.module.js
"use strict";
var __esDecorate = (this && this.__esDecorate) || function (ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {
    function accept(f) { if (f !== void 0 && typeof f !== "function") throw new TypeError("Function expected"); return f; }
    var kind = contextIn.kind, key = kind === "getter" ? "get" : kind === "setter" ? "set" : "value";
    var target = !descriptorIn && ctor ? contextIn["static"] ? ctor : ctor.prototype : null;
    var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});
    var _, done = false;
    for (var i = decorators.length - 1; i >= 0; i--) {
        var context = {};
        for (var p in contextIn) context[p] = p === "access" ? {} : contextIn[p];
        for (var p in contextIn.access) context.access[p] = contextIn.access[p];
        context.addInitializer = function (f) { if (done) throw new TypeError("Cannot add initializers after decoration has completed"); extraInitializers.push(accept(f || null)); };
        var result = (0, decorators[i])(kind === "accessor" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);
        if (kind === "accessor") {
            if (result === void 0) continue;
            if (result === null || typeof result !== "object") throw new TypeError("Object expected");
            if (_ = accept(result.get)) descriptor.get = _;
            if (_ = accept(result.set)) descriptor.set = _;
            if (_ = accept(result.init)) initializers.unshift(_);
        }
        else if (_ = accept(result)) {
            if (kind === "field") initializers.unshift(_);
            else descriptor[key] = _;
        }
    }
    if (target) Object.defineProperty(target, contextIn.name, descriptor);
    done = true;
};
var __runInitializers = (this && this.__runInitializers) || function (thisArg, initializers, value) {
    var useValue = arguments.length > 2;
    for (var i = 0; i < initializers.length; i++) {
        value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);
    }
    return useValue ? value : void 0;
};
var __setFunctionName = (this && this.__setFunctionName) || function (f, name, prefix) {
    if (typeof name === "symbol") name = name.description ? "[".concat(name.description, "]") : "";
    return Object.defineProperty(f, "name", { configurable: true, value: prefix ? "".concat(prefix, " ", name) : name });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.AuthenticationInfrastructureModule = void 0;
var common_1 = require("@nestjs/common");
var core_1 = require("@nestjs/core");
var email_module_1 = require("@server/libraries/email/email.module");
var domain_1 = require("@server/modules/user/domain");
var domain_2 = require("../domain");
var authentication_infrastructure_exception_1 = require("./authentication.infrastructure.exception");
var authentication_guard_1 = require("./guards/authentication.guard");
var authentication_guard_service_1 = require("./guards/authentication.guard.service");
var authentication_communication_subscriber_1 = require("./subscribers/authentication.communication.subscriber");
var AuthenticationInfrastructureModule = function () {
    var _classDecorators = [(0, common_1.Global)(), (0, common_1.Module)({
            imports: [domain_1.UserDomainModule, domain_2.AuthenticationDomainModule, email_module_1.EmailModule],
            providers: [
                authentication_communication_subscriber_1.AuthenticationCommunicationSubscriber,
                authentication_guard_service_1.AuthenticationGuardService,
                authentication_infrastructure_exception_1.AuthenticationInfrastructureException,
            ],
            exports: [authentication_guard_service_1.AuthenticationGuardService],
        })];
    var _classDescriptor;
    var _classExtraInitializers = [];
    var _classThis;
    var AuthenticationInfrastructureModule = _classThis = /** @class */ (function () {
        function AuthenticationInfrastructureModule_1() {
        }
        AuthenticationInfrastructureModule_1.getGuards = function () {
            return [{ provide: core_1.APP_GUARD, useClass: authentication_guard_1.AuthenticationGuard }];
        };
        return AuthenticationInfrastructureModule_1;
    }());
    __setFunctionName(_classThis, "AuthenticationInfrastructureModule");
    (function () {
        var _metadata = typeof Symbol === "function" && Symbol.metadata ? Object.create(null) : void 0;
        __esDecorate(null, _classDescriptor = { value: _classThis }, _classDecorators, { kind: "class", name: _classThis.name, metadata: _metadata }, null, _classExtraInitializers);
        AuthenticationInfrastructureModule = _classThis = _classDescriptor.value;
        if (_metadata) Object.defineProperty(_classThis, Symbol.metadata, { enumerable: true, configurable: true, writable: true, value: _metadata });
        __runInitializers(_classThis, _classExtraInitializers);
    })();
    return AuthenticationInfrastructureModule = _classThis;
}();
exports.AuthenticationInfrastructureModule = AuthenticationInfrastructureModule;


// C:\grua-booking-system-25\server\dist\modules\authentication\infrastructure\index.js
"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", { value: true });
__exportStar(require("./authentication.infrastructure.module"), exports);
__exportStar(require("./guards/authentication.guard"), exports);


// C:\grua-booking-system-25\server\dist\modules\authentication\infrastructure\guards\authentication.guard.js
"use strict";
var __esDecorate = (this && this.__esDecorate) || function (ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {
    function accept(f) { if (f !== void 0 && typeof f !== "function") throw new TypeError("Function expected"); return f; }
    var kind = contextIn.kind, key = kind === "getter" ? "get" : kind === "setter" ? "set" : "value";
    var target = !descriptorIn && ctor ? contextIn["static"] ? ctor : ctor.prototype : null;
    var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});
    var _, done = false;
    for (var i = decorators.length - 1; i >= 0; i--) {
        var context = {};
        for (var p in contextIn) context[p] = p === "access" ? {} : contextIn[p];
        for (var p in contextIn.access) context.access[p] = contextIn.access[p];
        context.addInitializer = function (f) { if (done) throw new TypeError("Cannot add initializers after decoration has completed"); extraInitializers.push(accept(f || null)); };
        var result = (0, decorators[i])(kind === "accessor" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);
        if (kind === "accessor") {
            if (result === void 0) continue;
            if (result === null || typeof result !== "object") throw new TypeError("Object expected");
            if (_ = accept(result.get)) descriptor.get = _;
            if (_ = accept(result.set)) descriptor.set = _;
            if (_ = accept(result.init)) initializers.unshift(_);
        }
        else if (_ = accept(result)) {
            if (kind === "field") initializers.unshift(_);
            else descriptor[key] = _;
        }
    }
    if (target) Object.defineProperty(target, contextIn.name, descriptor);
    done = true;
};
var __runInitializers = (this && this.__runInitializers) || function (thisArg, initializers, value) {
    var useValue = arguments.length > 2;
    for (var i = 0; i < initializers.length; i++) {
        value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);
    }
    return useValue ? value : void 0;
};
var __setFunctionName = (this && this.__setFunctionName) || function (f, name, prefix) {
    if (typeof name === "symbol") name = name.description ? "[".concat(name.description, "]") : "";
    return Object.defineProperty(f, "name", { configurable: true, value: prefix ? "".concat(prefix, " ", name) : name });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.AuthenticationGuard = void 0;
var common_1 = require("@nestjs/common");
var AuthenticationGuard = function () {
    var _classDecorators = [(0, common_1.Injectable)()];
    var _classDescriptor;
    var _classExtraInitializers = [];
    var _classThis;
    var AuthenticationGuard = _classThis = /** @class */ (function () {
        function AuthenticationGuard_1(reflector, service) {
            this.reflector = reflector;
            this.service = service;
        }
        AuthenticationGuard_1.prototype.canActivate = function (context) {
            return this.service.validateRequest(this.reflector, context);
        };
        return AuthenticationGuard_1;
    }());
    __setFunctionName(_classThis, "AuthenticationGuard");
    (function () {
        var _metadata = typeof Symbol === "function" && Symbol.metadata ? Object.create(null) : void 0;
        __esDecorate(null, _classDescriptor = { value: _classThis }, _classDecorators, { kind: "class", name: _classThis.name, metadata: _metadata }, null, _classExtraInitializers);
        AuthenticationGuard = _classThis = _classDescriptor.value;
        if (_metadata) Object.defineProperty(_classThis, Symbol.metadata, { enumerable: true, configurable: true, writable: true, value: _metadata });
        __runInitializers(_classThis, _classExtraInitializers);
    })();
    return AuthenticationGuard = _classThis;
}();
exports.AuthenticationGuard = AuthenticationGuard;


// C:\grua-booking-system-25\server\dist\modules\authentication\infrastructure\guards\authentication.guard.service.js
"use strict";
var __esDecorate = (this && this.__esDecorate) || function (ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {
    function accept(f) { if (f !== void 0 && typeof f !== "function") throw new TypeError("Function expected"); return f; }
    var kind = contextIn.kind, key = kind === "getter" ? "get" : kind === "setter" ? "set" : "value";
    var target = !descriptorIn && ctor ? contextIn["static"] ? ctor : ctor.prototype : null;
    var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});
    var _, done = false;
    for (var i = decorators.length - 1; i >= 0; i--) {
        var context = {};
        for (var p in contextIn) context[p] = p === "access" ? {} : contextIn[p];
        for (var p in contextIn.access) context.access[p] = contextIn.access[p];
        context.addInitializer = function (f) { if (done) throw new TypeError("Cannot add initializers after decoration has completed"); extraInitializers.push(accept(f || null)); };
        var result = (0, decorators[i])(kind === "accessor" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);
        if (kind === "accessor") {
            if (result === void 0) continue;
            if (result === null || typeof result !== "object") throw new TypeError("Object expected");
            if (_ = accept(result.get)) descriptor.get = _;
            if (_ = accept(result.set)) descriptor.set = _;
            if (_ = accept(result.init)) initializers.unshift(_);
        }
        else if (_ = accept(result)) {
            if (kind === "field") initializers.unshift(_);
            else descriptor[key] = _;
        }
    }
    if (target) Object.defineProperty(target, contextIn.name, descriptor);
    done = true;
};
var __runInitializers = (this && this.__runInitializers) || function (thisArg, initializers, value) {
    var useValue = arguments.length > 2;
    for (var i = 0; i < initializers.length; i++) {
        value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);
    }
    return useValue ? value : void 0;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (g && (g = 0, op[0] && (_ = 0)), _) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __setFunctionName = (this && this.__setFunctionName) || function (f, name, prefix) {
    if (typeof name === "symbol") name = name.description ? "[".concat(name.description, "]") : "";
    return Object.defineProperty(f, "name", { configurable: true, value: prefix ? "".concat(prefix, " ", name) : name });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.AuthenticationGuardService = void 0;
var common_1 = require("@nestjs/common");
var authentication_1 = require("@server/core/authentication");
var context_1 = require("@server/helpers/context");
var AuthenticationGuardService = function () {
    var _classDecorators = [(0, common_1.Injectable)()];
    var _classDescriptor;
    var _classExtraInitializers = [];
    var _classThis;
    var AuthenticationGuardService = _classThis = /** @class */ (function () {
        function AuthenticationGuardService_1(authenticationDomainFacade, userDomainFacade, exception) {
            this.authenticationDomainFacade = authenticationDomainFacade;
            this.userDomainFacade = userDomainFacade;
            this.exception = exception;
        }
        AuthenticationGuardService_1.prototype.validateRequest = function (reflector, context) {
            return __awaiter(this, void 0, void 0, function () {
                var isPublic, request, token, userId, payload, user;
                return __generator(this, function (_a) {
                    switch (_a.label) {
                        case 0:
                            isPublic = authentication_1.Authentication.isPublic(context, reflector);
                            if (isPublic) {
                                return [2 /*return*/, true];
                            }
                            request = context_1.ContextHelper.toRequest(context);
                            token = this.authenticationDomainFacade.getAccessToken(request);
                            try {
                                payload = this.authenticationDomainFacade.verifyTokenOrFail(token);
                                userId = payload.userId;
                            }
                            catch (error) {
                                this.exception.invalidAccessToken();
                            }
                            return [4 /*yield*/, this.userDomainFacade.findOneByIdOrFail(userId)];
                        case 1:
                            user = _a.sent();
                            return [4 /*yield*/, this.checkUserNotVerified(reflector, context, user)];
                        case 2:
                            _a.sent();
                            return [4 /*yield*/, this.checkUserVisitor(reflector, context, user)];
                        case 3:
                            _a.sent();
                            this.authenticationDomainFacade.assignRequestPayload(request, { user: user });
                            return [2 /*return*/, true];
                    }
                });
            });
        };
        AuthenticationGuardService_1.prototype.checkUserNotVerified = function (reflector, context, user) {
            return __awaiter(this, void 0, void 0, function () {
                var isUserNotVerifiedAllowed, isVerified, isVisitor;
                return __generator(this, function (_a) {
                    isUserNotVerifiedAllowed = authentication_1.Authentication.isUserNotVerifiedAllowed(context, reflector);
                    if (isUserNotVerifiedAllowed) {
                        return [2 /*return*/];
                    }
                    isVerified = this.userDomainFacade.isVerified(user);
                    isVisitor = this.userDomainFacade.isVisitor(user);
                    if (isVerified || isVisitor) {
                        return [2 /*return*/];
                    }
                    this.exception.userNotVerifiedUnauthorized(user);
                    return [2 /*return*/];
                });
            });
        };
        AuthenticationGuardService_1.prototype.checkUserVisitor = function (reflector, context, user) {
            return __awaiter(this, void 0, void 0, function () {
                var isUserVisitorAllowed, isVisitor;
                return __generator(this, function (_a) {
                    isUserVisitorAllowed = authentication_1.Authentication.isVisitorAllowed(context, reflector);
                    if (isUserVisitorAllowed) {
                        return [2 /*return*/];
                    }
                    isVisitor = this.userDomainFacade.isVisitor(user);
                    if (isVisitor) {
                        this.exception.userVisitorUnauthorized(user);
                    }
                    return [2 /*return*/];
                });
            });
        };
        return AuthenticationGuardService_1;
    }());
    __setFunctionName(_classThis, "AuthenticationGuardService");
    (function () {
        var _metadata = typeof Symbol === "function" && Symbol.metadata ? Object.create(null) : void 0;
        __esDecorate(null, _classDescriptor = { value: _classThis }, _classDecorators, { kind: "class", name: _classThis.name, metadata: _metadata }, null, _classExtraInitializers);
        AuthenticationGuardService = _classThis = _classDescriptor.value;
        if (_metadata) Object.defineProperty(_classThis, Symbol.metadata, { enumerable: true, configurable: true, writable: true, value: _metadata });
        __runInitializers(_classThis, _classExtraInitializers);
    })();
    return AuthenticationGuardService = _classThis;
}();
exports.AuthenticationGuardService = AuthenticationGuardService;


// C:\grua-booking-system-25\server\dist\modules\authentication\infrastructure\subscribers\authentication.communication.subscriber.js
"use strict";
var __runInitializers = (this && this.__runInitializers) || function (thisArg, initializers, value) {
    var useValue = arguments.length > 2;
    for (var i = 0; i < initializers.length; i++) {
        value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);
    }
    return useValue ? value : void 0;
};
var __esDecorate = (this && this.__esDecorate) || function (ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {
    function accept(f) { if (f !== void 0 && typeof f !== "function") throw new TypeError("Function expected"); return f; }
    var kind = contextIn.kind, key = kind === "getter" ? "get" : kind === "setter" ? "set" : "value";
    var target = !descriptorIn && ctor ? contextIn["static"] ? ctor : ctor.prototype : null;
    var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});
    var _, done = false;
    for (var i = decorators.length - 1; i >= 0; i--) {
        var context = {};
        for (var p in contextIn) context[p] = p === "access" ? {} : contextIn[p];
        for (var p in contextIn.access) context.access[p] = contextIn.access[p];
        context.addInitializer = function (f) { if (done) throw new TypeError("Cannot add initializers after decoration has completed"); extraInitializers.push(accept(f || null)); };
        var result = (0, decorators[i])(kind === "accessor" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);
        if (kind === "accessor") {
            if (result === void 0) continue;
            if (result === null || typeof result !== "object") throw new TypeError("Object expected");
            if (_ = accept(result.get)) descriptor.get = _;
            if (_ = accept(result.set)) descriptor.set = _;
            if (_ = accept(result.init)) initializers.unshift(_);
        }
        else if (_ = accept(result)) {
            if (kind === "field") initializers.unshift(_);
            else descriptor[key] = _;
        }
    }
    if (target) Object.defineProperty(target, contextIn.name, descriptor);
    done = true;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (g && (g = 0, op[0] && (_ = 0)), _) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __setFunctionName = (this && this.__setFunctionName) || function (f, name, prefix) {
    if (typeof name === "symbol") name = name.description ? "[".concat(name.description, "]") : "";
    return Object.defineProperty(f, "name", { configurable: true, value: prefix ? "".concat(prefix, " ", name) : name });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.AuthenticationCommunicationSubscriber = void 0;
var common_1 = require("@nestjs/common");
var event_emitter_1 = require("@nestjs/event-emitter");
var user_orchestrator_event_1 = require("@server/modules/user/orchestrators/user.orchestrator.event");
var application_1 = require("../../application");
var AuthenticationCommunicationSubscriber = function () {
    var _classDecorators = [(0, common_1.Injectable)()];
    var _classDescriptor;
    var _classExtraInitializers = [];
    var _classThis;
    var _instanceExtraInitializers = [];
    var _handleUserRegistered_decorators;
    var _handleResetPassword_decorators;
    var AuthenticationCommunicationSubscriber = _classThis = /** @class */ (function () {
        function AuthenticationCommunicationSubscriber_1(configurationService, userDomainFacade, authenticationDomainFacade, emailService) {
            this.configurationService = (__runInitializers(this, _instanceExtraInitializers), configurationService);
            this.userDomainFacade = userDomainFacade;
            this.authenticationDomainFacade = authenticationDomainFacade;
            this.emailService = emailService;
        }
        AuthenticationCommunicationSubscriber_1.prototype.handleUserRegistered = function (data) {
            var _a;
            return __awaiter(this, void 0, void 0, function () {
                var user, type;
                return __generator(this, function (_b) {
                    switch (_b.label) {
                        case 0: return [4 /*yield*/, this.userDomainFacade.findOneByIdOrFail(data.userId)];
                        case 1:
                            user = _b.sent();
                            type = this.emailService.Type.AUTHENTICATION_WELCOME;
                            return [4 /*yield*/, this.emailService.send({
                                    type: type,
                                    email: user.email,
                                    name: (_a = user.name) !== null && _a !== void 0 ? _a : user.email,
                                    subject: "Welcome",
                                    variables: {},
                                })];
                        case 2:
                            _b.sent();
                            return [2 /*return*/];
                    }
                });
            });
        };
        AuthenticationCommunicationSubscriber_1.prototype.handleResetPassword = function (data) {
            var _a;
            return __awaiter(this, void 0, void 0, function () {
                var user, token, url, urlResetPassword, type;
                return __generator(this, function (_b) {
                    switch (_b.label) {
                        case 0: return [4 /*yield*/, this.userDomainFacade.findOneByIdOrFail(data.userId)];
                        case 1:
                            user = _b.sent();
                            token = this.authenticationDomainFacade.buildTokenResetPassword(user);
                            url = this.configurationService.getClientBaseUrl();
                            urlResetPassword = "".concat(url, "/reset-password/").concat(token);
                            type = this.emailService.Type.AUTHENTICATION_FORGOT_PASSWORD;
                            return [4 /*yield*/, this.emailService.send({
                                    type: type,
                                    email: user.email,
                                    name: (_a = user.name) !== null && _a !== void 0 ? _a : user.email,
                                    subject: "Reset your password",
                                    variables: {
                                        url_password_reset: urlResetPassword,
                                    },
                                })];
                        case 2:
                            _b.sent();
                            return [2 /*return*/];
                    }
                });
            });
        };
        return AuthenticationCommunicationSubscriber_1;
    }());
    __setFunctionName(_classThis, "AuthenticationCommunicationSubscriber");
    (function () {
        var _metadata = typeof Symbol === "function" && Symbol.metadata ? Object.create(null) : void 0;
        _handleUserRegistered_decorators = [(0, event_emitter_1.OnEvent)(user_orchestrator_event_1.UserOrchestratorEvent.Verified.key)];
        _handleResetPassword_decorators = [(0, event_emitter_1.OnEvent)(application_1.AuthenticationApplicationEvent.UserPasswordResetRequested.key)];
        __esDecorate(_classThis, null, _handleUserRegistered_decorators, { kind: "method", name: "handleUserRegistered", static: false, private: false, access: { has: function (obj) { return "handleUserRegistered" in obj; }, get: function (obj) { return obj.handleUserRegistered; } }, metadata: _metadata }, null, _instanceExtraInitializers);
        __esDecorate(_classThis, null, _handleResetPassword_decorators, { kind: "method", name: "handleResetPassword", static: false, private: false, access: { has: function (obj) { return "handleResetPassword" in obj; }, get: function (obj) { return obj.handleResetPassword; } }, metadata: _metadata }, null, _instanceExtraInitializers);
        __esDecorate(null, _classDescriptor = { value: _classThis }, _classDecorators, { kind: "class", name: _classThis.name, metadata: _metadata }, null, _classExtraInitializers);
        AuthenticationCommunicationSubscriber = _classThis = _classDescriptor.value;
        if (_metadata) Object.defineProperty(_classThis, Symbol.metadata, { enumerable: true, configurable: true, writable: true, value: _metadata });
        __runInitializers(_classThis, _classExtraInitializers);
    })();
    return AuthenticationCommunicationSubscriber = _classThis;
}();
exports.AuthenticationCommunicationSubscriber = AuthenticationCommunicationSubscriber;


// C:\grua-booking-system-25\server\dist\modules\authentication\application\authentication.application.event.js
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.AuthenticationApplicationEvent = void 0;
var AuthenticationApplicationEvent;
(function (AuthenticationApplicationEvent) {
    var UserPasswordResetRequested;
    (function (UserPasswordResetRequested) {
        UserPasswordResetRequested.key = 'authentication.application.user-password-reset-requested';
    })(UserPasswordResetRequested = AuthenticationApplicationEvent.UserPasswordResetRequested || (AuthenticationApplicationEvent.UserPasswordResetRequested = {}));
    var UserRegistered;
    (function (UserRegistered) {
        UserRegistered.key = 'authentication.application.user-registered';
    })(UserRegistered = AuthenticationApplicationEvent.UserRegistered || (AuthenticationApplicationEvent.UserRegistered = {}));
})(AuthenticationApplicationEvent || (exports.AuthenticationApplicationEvent = AuthenticationApplicationEvent = {}));


// C:\grua-booking-system-25\server\dist\modules\authentication\application\authentication.application.exception.js
"use strict";
var __esDecorate = (this && this.__esDecorate) || function (ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {
    function accept(f) { if (f !== void 0 && typeof f !== "function") throw new TypeError("Function expected"); return f; }
    var kind = contextIn.kind, key = kind === "getter" ? "get" : kind === "setter" ? "set" : "value";
    var target = !descriptorIn && ctor ? contextIn["static"] ? ctor : ctor.prototype : null;
    var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});
    var _, done = false;
    for (var i = decorators.length - 1; i >= 0; i--) {
        var context = {};
        for (var p in contextIn) context[p] = p === "access" ? {} : contextIn[p];
        for (var p in contextIn.access) context.access[p] = contextIn.access[p];
        context.addInitializer = function (f) { if (done) throw new TypeError("Cannot add initializers after decoration has completed"); extraInitializers.push(accept(f || null)); };
        var result = (0, decorators[i])(kind === "accessor" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);
        if (kind === "accessor") {
            if (result === void 0) continue;
            if (result === null || typeof result !== "object") throw new TypeError("Object expected");
            if (_ = accept(result.get)) descriptor.get = _;
            if (_ = accept(result.set)) descriptor.set = _;
            if (_ = accept(result.init)) initializers.unshift(_);
        }
        else if (_ = accept(result)) {
            if (kind === "field") initializers.unshift(_);
            else descriptor[key] = _;
        }
    }
    if (target) Object.defineProperty(target, contextIn.name, descriptor);
    done = true;
};
var __runInitializers = (this && this.__runInitializers) || function (thisArg, initializers, value) {
    var useValue = arguments.length > 2;
    for (var i = 0; i < initializers.length; i++) {
        value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);
    }
    return useValue ? value : void 0;
};
var __setFunctionName = (this && this.__setFunctionName) || function (f, name, prefix) {
    if (typeof name === "symbol") name = name.description ? "[".concat(name.description, "]") : "";
    return Object.defineProperty(f, "name", { configurable: true, value: prefix ? "".concat(prefix, " ", name) : name });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.AuthenticationApplicationException = void 0;
var common_1 = require("@nestjs/common");
var AuthenticationApplicationException = function () {
    var _classDecorators = [(0, common_1.Injectable)()];
    var _classDescriptor;
    var _classExtraInitializers = [];
    var _classThis;
    var AuthenticationApplicationException = _classThis = /** @class */ (function () {
        function AuthenticationApplicationException_1(service) {
            this.service = service;
        }
        AuthenticationApplicationException_1.prototype.invalidAccessToken = function () {
            return this.service.throw({
                status: common_1.HttpStatus.UNAUTHORIZED,
                code: 1,
                publicMessage: 'Access token is invalid',
            });
        };
        AuthenticationApplicationException_1.prototype.userEmailNotFound = function (email) {
            return this.service.throw({
                status: common_1.HttpStatus.UNAUTHORIZED,
                code: 2,
                publicMessage: 'Incorrect email or password',
                privateMessage: "User with email \"".concat(email, "\" was not found"),
            });
        };
        AuthenticationApplicationException_1.prototype.userPasswordNotFound = function (email) {
            return this.service.throw({
                status: common_1.HttpStatus.UNAUTHORIZED,
                code: 2,
                publicMessage: 'Incorrect email or password',
                privateMessage: "Password does not match user with email \"".concat(email, "\""),
            });
        };
        AuthenticationApplicationException_1.prototype.userEmailNotAvailable = function (email) {
            return this.service.throw({
                status: common_1.HttpStatus.CONFLICT,
                code: 3,
                publicMessage: 'Email is not available',
                privateMessage: "User can not register with email \"".concat(email, "\" as it is already taken."),
            });
        };
        AuthenticationApplicationException_1.prototype.invalidResetPasswordToken = function () {
            return this.service.throw({
                status: common_1.HttpStatus.FORBIDDEN,
                code: 4,
                publicMessage: 'Reset password token is invalid',
            });
        };
        AuthenticationApplicationException_1.prototype.invalidGoogleToken = function (error) {
            return this.service.throw({
                status: common_1.HttpStatus.FORBIDDEN,
                code: 1,
                publicMessage: 'Access token is invalid',
                cause: error,
            });
        };
        return AuthenticationApplicationException_1;
    }());
    __setFunctionName(_classThis, "AuthenticationApplicationException");
    (function () {
        var _metadata = typeof Symbol === "function" && Symbol.metadata ? Object.create(null) : void 0;
        __esDecorate(null, _classDescriptor = { value: _classThis }, _classDecorators, { kind: "class", name: _classThis.name, metadata: _metadata }, null, _classExtraInitializers);
        AuthenticationApplicationException = _classThis = _classDescriptor.value;
        if (_metadata) Object.defineProperty(_classThis, Symbol.metadata, { enumerable: true, configurable: true, writable: true, value: _metadata });
        __runInitializers(_classThis, _classExtraInitializers);
    })();
    return AuthenticationApplicationException = _classThis;
}();
exports.AuthenticationApplicationException = AuthenticationApplicationException;


// C:\grua-booking-system-25\server\dist\modules\authentication\application\authentication.application.module.js
"use strict";
var __esDecorate = (this && this.__esDecorate) || function (ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {
    function accept(f) { if (f !== void 0 && typeof f !== "function") throw new TypeError("Function expected"); return f; }
    var kind = contextIn.kind, key = kind === "getter" ? "get" : kind === "setter" ? "set" : "value";
    var target = !descriptorIn && ctor ? contextIn["static"] ? ctor : ctor.prototype : null;
    var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});
    var _, done = false;
    for (var i = decorators.length - 1; i >= 0; i--) {
        var context = {};
        for (var p in contextIn) context[p] = p === "access" ? {} : contextIn[p];
        for (var p in contextIn.access) context.access[p] = contextIn.access[p];
        context.addInitializer = function (f) { if (done) throw new TypeError("Cannot add initializers after decoration has completed"); extraInitializers.push(accept(f || null)); };
        var result = (0, decorators[i])(kind === "accessor" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);
        if (kind === "accessor") {
            if (result === void 0) continue;
            if (result === null || typeof result !== "object") throw new TypeError("Object expected");
            if (_ = accept(result.get)) descriptor.get = _;
            if (_ = accept(result.set)) descriptor.set = _;
            if (_ = accept(result.init)) initializers.unshift(_);
        }
        else if (_ = accept(result)) {
            if (kind === "field") initializers.unshift(_);
            else descriptor[key] = _;
        }
    }
    if (target) Object.defineProperty(target, contextIn.name, descriptor);
    done = true;
};
var __runInitializers = (this && this.__runInitializers) || function (thisArg, initializers, value) {
    var useValue = arguments.length > 2;
    for (var i = 0; i < initializers.length; i++) {
        value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);
    }
    return useValue ? value : void 0;
};
var __setFunctionName = (this && this.__setFunctionName) || function (f, name, prefix) {
    if (typeof name === "symbol") name = name.description ? "[".concat(name.description, "]") : "";
    return Object.defineProperty(f, "name", { configurable: true, value: prefix ? "".concat(prefix, " ", name) : name });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.AuthenticationApplicationModule = void 0;
var common_1 = require("@nestjs/common");
var google_1 = require("../../../libraries/google");
var domain_1 = require("../../../modules/user/domain");
var domain_2 = require("../domain");
var authentication_application_exception_1 = require("./authentication.application.exception");
var authentication_controller_1 = require("./authentication.controller");
var authentication_google_controller_1 = require("./authentication.google.controller");
var AuthenticationApplicationModule = function () {
    var _classDecorators = [(0, common_1.Module)({
            imports: [domain_2.AuthenticationDomainModule, domain_1.UserDomainModule, google_1.GoogleModule],
            controllers: [authentication_controller_1.AuthenticationController, authentication_google_controller_1.GoogleByAuthenticationController],
            providers: [authentication_application_exception_1.AuthenticationApplicationException],
            exports: [],
        })];
    var _classDescriptor;
    var _classExtraInitializers = [];
    var _classThis;
    var AuthenticationApplicationModule = _classThis = /** @class */ (function () {
        function AuthenticationApplicationModule_1() {
        }
        return AuthenticationApplicationModule_1;
    }());
    __setFunctionName(_classThis, "AuthenticationApplicationModule");
    (function () {
        var _metadata = typeof Symbol === "function" && Symbol.metadata ? Object.create(null) : void 0;
        __esDecorate(null, _classDescriptor = { value: _classThis }, _classDecorators, { kind: "class", name: _classThis.name, metadata: _metadata }, null, _classExtraInitializers);
        AuthenticationApplicationModule = _classThis = _classDescriptor.value;
        if (_metadata) Object.defineProperty(_classThis, Symbol.metadata, { enumerable: true, configurable: true, writable: true, value: _metadata });
        __runInitializers(_classThis, _classExtraInitializers);
    })();
    return AuthenticationApplicationModule = _classThis;
}();
exports.AuthenticationApplicationModule = AuthenticationApplicationModule;


// C:\grua-booking-system-25\server\dist\modules\authentication\application\authentication.controller.js
"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __runInitializers = (this && this.__runInitializers) || function (thisArg, initializers, value) {
    var useValue = arguments.length > 2;
    for (var i = 0; i < initializers.length; i++) {
        value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);
    }
    return useValue ? value : void 0;
};
var __esDecorate = (this && this.__esDecorate) || function (ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {
    function accept(f) { if (f !== void 0 && typeof f !== "function") throw new TypeError("Function expected"); return f; }
    var kind = contextIn.kind, key = kind === "getter" ? "get" : kind === "setter" ? "set" : "value";
    var target = !descriptorIn && ctor ? contextIn["static"] ? ctor : ctor.prototype : null;
    var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});
    var _, done = false;
    for (var i = decorators.length - 1; i >= 0; i--) {
        var context = {};
        for (var p in contextIn) context[p] = p === "access" ? {} : contextIn[p];
        for (var p in contextIn.access) context.access[p] = contextIn.access[p];
        context.addInitializer = function (f) { if (done) throw new TypeError("Cannot add initializers after decoration has completed"); extraInitializers.push(accept(f || null)); };
        var result = (0, decorators[i])(kind === "accessor" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);
        if (kind === "accessor") {
            if (result === void 0) continue;
            if (result === null || typeof result !== "object") throw new TypeError("Object expected");
            if (_ = accept(result.get)) descriptor.get = _;
            if (_ = accept(result.set)) descriptor.set = _;
            if (_ = accept(result.init)) initializers.unshift(_);
        }
        else if (_ = accept(result)) {
            if (kind === "field") initializers.unshift(_);
            else descriptor[key] = _;
        }
    }
    if (target) Object.defineProperty(target, contextIn.name, descriptor);
    done = true;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (g && (g = 0, op[0] && (_ = 0)), _) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __setFunctionName = (this && this.__setFunctionName) || function (f, name, prefix) {
    if (typeof name === "symbol") name = name.description ? "[".concat(name.description, "]") : "";
    return Object.defineProperty(f, "name", { configurable: true, value: prefix ? "".concat(prefix, " ", name) : name });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.AuthenticationController = void 0;
var common_1 = require("@nestjs/common");
var authentication_1 = require("@server/core/authentication");
var authentication_application_event_1 = require("./authentication.application.event");
var AuthenticationController = function () {
    var _classDecorators = [(0, common_1.Controller)('/v1/authentication')];
    var _classDescriptor;
    var _classExtraInitializers = [];
    var _classThis;
    var _instanceExtraInitializers = [];
    var _login_decorators;
    var _register_decorators;
    var _refresh_decorators;
    var _registerVisitor_decorators;
    var _sendEmailResetPassword_decorators;
    var _resetPassword_decorators;
    var _logout_decorators;
    var AuthenticationController = _classThis = /** @class */ (function () {
        function AuthenticationController_1(authenticationDomainFacade, exception, userDomainFacade, loggerService, event, cookieService) {
            this.authenticationDomainFacade = (__runInitializers(this, _instanceExtraInitializers), authenticationDomainFacade);
            this.exception = exception;
            this.userDomainFacade = userDomainFacade;
            this.loggerService = loggerService;
            this.event = event;
            this.cookieService = cookieService;
            this.logger = this.loggerService.create({
                name: 'AuthenticationController',
            });
        }
        AuthenticationController_1.prototype.login = function (body, response) {
            return __awaiter(this, void 0, void 0, function () {
                var email, password, user, token, data;
                var _this = this;
                return __generator(this, function (_a) {
                    switch (_a.label) {
                        case 0:
                            email = body.email, password = body.password;
                            return [4 /*yield*/, this.userDomainFacade
                                    .findOneByEmailWithPassword(email)
                                    .catch(function () { return _this.exception.userEmailNotFound(email); })];
                        case 1:
                            user = _a.sent();
                            return [4 /*yield*/, this.userDomainFacade
                                    .verifyPassword(user, password)
                                    .catch(function () { return _this.exception.userPasswordNotFound(email); })];
                        case 2:
                            _a.sent();
                            token = this.authenticationDomainFacade.buildToken(user.id);
                            data = this.authenticationDomainFacade.setAccessToken(response, token);
                            return [2 /*return*/, data];
                    }
                });
            });
        };
        AuthenticationController_1.prototype.register = function (request, body, response) {
            return __awaiter(this, void 0, void 0, function () {
                var email, password, userExisting, passwordHashed, user, token_1, payload, candidate, _a, token, data;
                return __generator(this, function (_b) {
                    switch (_b.label) {
                        case 0:
                            email = body.email, password = body.password;
                            return [4 /*yield*/, this.userDomainFacade
                                    .findOneByEmailOrFail(email)
                                    .catch(function () { })];
                        case 1:
                            userExisting = _b.sent();
                            if (userExisting) {
                                this.exception.userEmailNotAvailable(email);
                            }
                            return [4 /*yield*/, this.userDomainFacade.hashPassword(password)];
                        case 2:
                            passwordHashed = _b.sent();
                            _b.label = 3;
                        case 3:
                            _b.trys.push([3, 5, , 6]);
                            token_1 = this.authenticationDomainFacade.getAccessToken(request);
                            payload = this.authenticationDomainFacade.verifyTokenOrFail(token_1);
                            return [4 /*yield*/, this.userDomainFacade.findOneByIdOrFail(payload.userId)];
                        case 4:
                            candidate = _b.sent();
                            if (this.userDomainFacade.isVisitor(candidate)) {
                                user = candidate;
                            }
                            return [3 /*break*/, 6];
                        case 5:
                            _a = _b.sent();
                            return [3 /*break*/, 6];
                        case 6:
                            if (!user) return [3 /*break*/, 8];
                            return [4 /*yield*/, this.userDomainFacade.update(user, __assign(__assign({}, body), { password: passwordHashed }))];
                        case 7:
                            user = _b.sent();
                            return [3 /*break*/, 10];
                        case 8: return [4 /*yield*/, this.userDomainFacade.create(__assign(__assign({}, body), { password: passwordHashed }))];
                        case 9:
                            user = _b.sent();
                            _b.label = 10;
                        case 10:
                            token = this.authenticationDomainFacade.buildToken(user.id);
                            return [4 /*yield*/, this.event.emit(authentication_application_event_1.AuthenticationApplicationEvent.UserRegistered.key, { userId: user.id })];
                        case 11:
                            _b.sent();
                            data = this.authenticationDomainFacade.setAccessToken(response, token);
                            return [2 /*return*/, data];
                    }
                });
            });
        };
        AuthenticationController_1.prototype.refresh = function (request, response) {
            return __awaiter(this, void 0, void 0, function () {
                var token, userId, payload, user, tokenRefreshed, data, error_1;
                return __generator(this, function (_a) {
                    switch (_a.label) {
                        case 0:
                            token = this.authenticationDomainFacade.getAccessToken(request);
                            _a.label = 1;
                        case 1:
                            _a.trys.push([1, 3, , 4]);
                            userId = void 0;
                            try {
                                payload = this.authenticationDomainFacade.verifyTokenOrFail(token);
                                userId = payload.userId;
                            }
                            catch (error) {
                                this.exception.invalidAccessToken();
                            }
                            return [4 /*yield*/, this.userDomainFacade.findOneByIdOrFail(userId)];
                        case 2:
                            user = _a.sent();
                            tokenRefreshed = this.authenticationDomainFacade.buildToken(user.id);
                            data = this.authenticationDomainFacade.setAccessToken(response, tokenRefreshed);
                            return [2 /*return*/, data];
                        case 3:
                            error_1 = _a.sent();
                            this.cookieService.deleteAccessToken(response);
                            throw error_1;
                        case 4: return [2 /*return*/];
                    }
                });
            });
        };
        AuthenticationController_1.prototype.registerVisitor = function (request, response) {
            return __awaiter(this, void 0, void 0, function () {
                var user, token_2, payload, userId, _a, token, data;
                return __generator(this, function (_b) {
                    switch (_b.label) {
                        case 0:
                            _b.trys.push([0, 2, , 4]);
                            token_2 = this.authenticationDomainFacade.getAccessToken(request);
                            payload = this.authenticationDomainFacade.verifyTokenOrFail(token_2);
                            userId = payload.userId;
                            return [4 /*yield*/, this.userDomainFacade.findOneByIdOrFail(userId)];
                        case 1:
                            user = _b.sent();
                            return [3 /*break*/, 4];
                        case 2:
                            _a = _b.sent();
                            return [4 /*yield*/, this.userDomainFacade.create({})];
                        case 3:
                            user = _b.sent();
                            return [3 /*break*/, 4];
                        case 4:
                            token = this.authenticationDomainFacade.buildToken(user.id);
                            data = this.authenticationDomainFacade.setAccessToken(response, token);
                            return [2 /*return*/, data];
                    }
                });
            });
        };
        AuthenticationController_1.prototype.sendEmailResetPassword = function (body) {
            return __awaiter(this, void 0, void 0, function () {
                var user;
                return __generator(this, function (_a) {
                    switch (_a.label) {
                        case 0: return [4 /*yield*/, this.userDomainFacade
                                .findOneByEmailOrFail(body.email)
                                .catch(function () { return null; })];
                        case 1:
                            user = _a.sent();
                            if (!user) {
                                this.logger.log("".concat(body.email, " was not found. Reset password email skipped."));
                                return [2 /*return*/, {}];
                            }
                            return [4 /*yield*/, this.event.emit(authentication_application_event_1.AuthenticationApplicationEvent.UserPasswordResetRequested.key, { userId: user.id })];
                        case 2:
                            _a.sent();
                            return [2 /*return*/, {}];
                    }
                });
            });
        };
        AuthenticationController_1.prototype.resetPassword = function (body) {
            return __awaiter(this, void 0, void 0, function () {
                var userId, user, passwordHashed;
                var _this = this;
                return __generator(this, function (_a) {
                    switch (_a.label) {
                        case 0: return [4 /*yield*/, this.authenticationDomainFacade
                                .verifyTokenResetPasswordOrFail(body.token)
                                .catch(function () { return _this.exception.invalidResetPasswordToken(); })];
                        case 1:
                            userId = (_a.sent()).userId;
                            return [4 /*yield*/, this.userDomainFacade.findOneByIdOrFail(userId)];
                        case 2:
                            user = _a.sent();
                            return [4 /*yield*/, this.userDomainFacade.hashPassword(body.password)];
                        case 3:
                            passwordHashed = _a.sent();
                            return [4 /*yield*/, this.userDomainFacade.update(user, {
                                    password: passwordHashed,
                                })];
                        case 4:
                            _a.sent();
                            return [2 /*return*/, {}];
                    }
                });
            });
        };
        AuthenticationController_1.prototype.logout = function (response) {
            return __awaiter(this, void 0, void 0, function () {
                return __generator(this, function (_a) {
                    try {
                        this.cookieService.deleteAccessToken(response);
                    }
                    catch (error) {
                        console.log(error);
                    }
                    return [2 /*return*/, {}];
                });
            });
        };
        return AuthenticationController_1;
    }());
    __setFunctionName(_classThis, "AuthenticationController");
    (function () {
        var _metadata = typeof Symbol === "function" && Symbol.metadata ? Object.create(null) : void 0;
        _login_decorators = [(0, common_1.Post)('/login'), authentication_1.Authentication.Public()];
        _register_decorators = [(0, common_1.Post)('/register'), authentication_1.Authentication.Public()];
        _refresh_decorators = [(0, common_1.Post)('/refresh'), authentication_1.Authentication.Public()];
        _registerVisitor_decorators = [(0, common_1.Post)('/register-visitor'), authentication_1.Authentication.Public()];
        _sendEmailResetPassword_decorators = [(0, common_1.Post)('/reset-password-email'), authentication_1.Authentication.Public()];
        _resetPassword_decorators = [(0, common_1.Patch)('/reset-password'), authentication_1.Authentication.Public()];
        _logout_decorators = [(0, common_1.Post)('/logout'), authentication_1.Authentication.Public()];
        __esDecorate(_classThis, null, _login_decorators, { kind: "method", name: "login", static: false, private: false, access: { has: function (obj) { return "login" in obj; }, get: function (obj) { return obj.login; } }, metadata: _metadata }, null, _instanceExtraInitializers);
        __esDecorate(_classThis, null, _register_decorators, { kind: "method", name: "register", static: false, private: false, access: { has: function (obj) { return "register" in obj; }, get: function (obj) { return obj.register; } }, metadata: _metadata }, null, _instanceExtraInitializers);
        __esDecorate(_classThis, null, _refresh_decorators, { kind: "method", name: "refresh", static: false, private: false, access: { has: function (obj) { return "refresh" in obj; }, get: function (obj) { return obj.refresh; } }, metadata: _metadata }, null, _instanceExtraInitializers);
        __esDecorate(_classThis, null, _registerVisitor_decorators, { kind: "method", name: "registerVisitor", static: false, private: false, access: { has: function (obj) { return "registerVisitor" in obj; }, get: function (obj) { return obj.registerVisitor; } }, metadata: _metadata }, null, _instanceExtraInitializers);
        __esDecorate(_classThis, null, _sendEmailResetPassword_decorators, { kind: "method", name: "sendEmailResetPassword", static: false, private: false, access: { has: function (obj) { return "sendEmailResetPassword" in obj; }, get: function (obj) { return obj.sendEmailResetPassword; } }, metadata: _metadata }, null, _instanceExtraInitializers);
        __esDecorate(_classThis, null, _resetPassword_decorators, { kind: "method", name: "resetPassword", static: false, private: false, access: { has: function (obj) { return "resetPassword" in obj; }, get: function (obj) { return obj.resetPassword; } }, metadata: _metadata }, null, _instanceExtraInitializers);
        __esDecorate(_classThis, null, _logout_decorators, { kind: "method", name: "logout", static: false, private: false, access: { has: function (obj) { return "logout" in obj; }, get: function (obj) { return obj.logout; } }, metadata: _metadata }, null, _instanceExtraInitializers);
        __esDecorate(null, _classDescriptor = { value: _classThis }, _classDecorators, { kind: "class", name: _classThis.name, metadata: _metadata }, null, _classExtraInitializers);
        AuthenticationController = _classThis = _classDescriptor.value;
        if (_metadata) Object.defineProperty(_classThis, Symbol.metadata, { enumerable: true, configurable: true, writable: true, value: _metadata });
        __runInitializers(_classThis, _classExtraInitializers);
    })();
    return AuthenticationController = _classThis;
}();
exports.AuthenticationController = AuthenticationController;


// C:\grua-booking-system-25\server\dist\modules\authentication\application\authentication.dto.js
"use strict";
var __esDecorate = (this && this.__esDecorate) || function (ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {
    function accept(f) { if (f !== void 0 && typeof f !== "function") throw new TypeError("Function expected"); return f; }
    var kind = contextIn.kind, key = kind === "getter" ? "get" : kind === "setter" ? "set" : "value";
    var target = !descriptorIn && ctor ? contextIn["static"] ? ctor : ctor.prototype : null;
    var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});
    var _, done = false;
    for (var i = decorators.length - 1; i >= 0; i--) {
        var context = {};
        for (var p in contextIn) context[p] = p === "access" ? {} : contextIn[p];
        for (var p in contextIn.access) context.access[p] = contextIn.access[p];
        context.addInitializer = function (f) { if (done) throw new TypeError("Cannot add initializers after decoration has completed"); extraInitializers.push(accept(f || null)); };
        var result = (0, decorators[i])(kind === "accessor" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);
        if (kind === "accessor") {
            if (result === void 0) continue;
            if (result === null || typeof result !== "object") throw new TypeError("Object expected");
            if (_ = accept(result.get)) descriptor.get = _;
            if (_ = accept(result.set)) descriptor.set = _;
            if (_ = accept(result.init)) initializers.unshift(_);
        }
        else if (_ = accept(result)) {
            if (kind === "field") initializers.unshift(_);
            else descriptor[key] = _;
        }
    }
    if (target) Object.defineProperty(target, contextIn.name, descriptor);
    done = true;
};
var __runInitializers = (this && this.__runInitializers) || function (thisArg, initializers, value) {
    var useValue = arguments.length > 2;
    for (var i = 0; i < initializers.length; i++) {
        value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);
    }
    return useValue ? value : void 0;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.GoogleByAuthenticationCallbackDto = exports.AuthenticationSendEmailResetPasswordDto = exports.AuthenticationResetPasswordDto = exports.AuthenticationRegisterDto = exports.AuthenticationLoginDto = void 0;
var class_validator_1 = require("class-validator");
var AuthenticationLoginDto = function () {
    var _a;
    var _instanceExtraInitializers = [];
    var _email_decorators;
    var _email_initializers = [];
    var _password_decorators;
    var _password_initializers = [];
    return _a = /** @class */ (function () {
            function AuthenticationLoginDto() {
                this.email = (__runInitializers(this, _instanceExtraInitializers), __runInitializers(this, _email_initializers, void 0));
                this.password = __runInitializers(this, _password_initializers, void 0);
            }
            return AuthenticationLoginDto;
        }()),
        (function () {
            var _metadata = typeof Symbol === "function" && Symbol.metadata ? Object.create(null) : void 0;
            _email_decorators = [(0, class_validator_1.IsString)(), (0, class_validator_1.IsNotEmpty)()];
            _password_decorators = [(0, class_validator_1.IsString)(), (0, class_validator_1.IsNotEmpty)()];
            __esDecorate(null, null, _email_decorators, { kind: "field", name: "email", static: false, private: false, access: { has: function (obj) { return "email" in obj; }, get: function (obj) { return obj.email; }, set: function (obj, value) { obj.email = value; } }, metadata: _metadata }, _email_initializers, _instanceExtraInitializers);
            __esDecorate(null, null, _password_decorators, { kind: "field", name: "password", static: false, private: false, access: { has: function (obj) { return "password" in obj; }, get: function (obj) { return obj.password; }, set: function (obj, value) { obj.password = value; } }, metadata: _metadata }, _password_initializers, _instanceExtraInitializers);
            if (_metadata) Object.defineProperty(_a, Symbol.metadata, { enumerable: true, configurable: true, writable: true, value: _metadata });
        })(),
        _a;
}();
exports.AuthenticationLoginDto = AuthenticationLoginDto;
var AuthenticationRegisterDto = function () {
    var _a;
    var _instanceExtraInitializers = [];
    var _email_decorators;
    var _email_initializers = [];
    var _name_decorators;
    var _name_initializers = [];
    var _lastLogin_decorators;
    var _lastLogin_initializers = [];
    var _isActive_decorators;
    var _isActive_initializers = [];
    var _isVerified_decorators;
    var _isVerified_initializers = [];
    var _password_decorators;
    var _password_initializers = [];
    return _a = /** @class */ (function () {
            function AuthenticationRegisterDto() {
                this.email = (__runInitializers(this, _instanceExtraInitializers), __runInitializers(this, _email_initializers, void 0));
                this.name = __runInitializers(this, _name_initializers, void 0);
                this.lastLogin = __runInitializers(this, _lastLogin_initializers, void 0);
                this.isActive = __runInitializers(this, _isActive_initializers, void 0);
                this.isVerified = __runInitializers(this, _isVerified_initializers, void 0);
                this.password = __runInitializers(this, _password_initializers, void 0);
            }
            return AuthenticationRegisterDto;
        }()),
        (function () {
            var _metadata = typeof Symbol === "function" && Symbol.metadata ? Object.create(null) : void 0;
            _email_decorators = [(0, class_validator_1.IsEmail)(), (0, class_validator_1.IsNotEmpty)()];
            _name_decorators = [(0, class_validator_1.IsString)(), (0, class_validator_1.IsNotEmpty)()];
            _lastLogin_decorators = [(0, class_validator_1.IsOptional)()];
            _isActive_decorators = [(0, class_validator_1.IsNotEmpty)()];
            _isVerified_decorators = [(0, class_validator_1.IsNotEmpty)()];
            _password_decorators = [(0, class_validator_1.IsString)(), (0, class_validator_1.IsNotEmpty)(), (0, class_validator_1.MinLength)(8), (0, class_validator_1.MaxLength)(32), (0, class_validator_1.Matches)(/^(?=.*[a-zA-Z])(?=.*\d)(?=.*[^a-zA-Z\d]).*$/, {
                    message: 'Password must contain at least one letter, one number, and one special character.',
                })];
            __esDecorate(null, null, _email_decorators, { kind: "field", name: "email", static: false, private: false, access: { has: function (obj) { return "email" in obj; }, get: function (obj) { return obj.email; }, set: function (obj, value) { obj.email = value; } }, metadata: _metadata }, _email_initializers, _instanceExtraInitializers);
            __esDecorate(null, null, _name_decorators, { kind: "field", name: "name", static: false, private: false, access: { has: function (obj) { return "name" in obj; }, get: function (obj) { return obj.name; }, set: function (obj, value) { obj.name = value; } }, metadata: _metadata }, _name_initializers, _instanceExtraInitializers);
            __esDecorate(null, null, _lastLogin_decorators, { kind: "field", name: "lastLogin", static: false, private: false, access: { has: function (obj) { return "lastLogin" in obj; }, get: function (obj) { return obj.lastLogin; }, set: function (obj, value) { obj.lastLogin = value; } }, metadata: _metadata }, _lastLogin_initializers, _instanceExtraInitializers);
            __esDecorate(null, null, _isActive_decorators, { kind: "field", name: "isActive", static: false, private: false, access: { has: function (obj) { return "isActive" in obj; }, get: function (obj) { return obj.isActive; }, set: function (obj, value) { obj.isActive = value; } }, metadata: _metadata }, _isActive_initializers, _instanceExtraInitializers);
            __esDecorate(null, null, _isVerified_decorators, { kind: "field", name: "isVerified", static: false, private: false, access: { has: function (obj) { return "isVerified" in obj; }, get: function (obj) { return obj.isVerified; }, set: function (obj, value) { obj.isVerified = value; } }, metadata: _metadata }, _isVerified_initializers, _instanceExtraInitializers);
            __esDecorate(null, null, _password_decorators, { kind: "field", name: "password", static: false, private: false, access: { has: function (obj) { return "password" in obj; }, get: function (obj) { return obj.password; }, set: function (obj, value) { obj.password = value; } }, metadata: _metadata }, _password_initializers, _instanceExtraInitializers);
            if (_metadata) Object.defineProperty(_a, Symbol.metadata, { enumerable: true, configurable: true, writable: true, value: _metadata });
        })(),
        _a;
}();
exports.AuthenticationRegisterDto = AuthenticationRegisterDto;
var AuthenticationResetPasswordDto = function () {
    var _a;
    var _instanceExtraInitializers = [];
    var _token_decorators;
    var _token_initializers = [];
    var _password_decorators;
    var _password_initializers = [];
    return _a = /** @class */ (function () {
            function AuthenticationResetPasswordDto() {
                this.token = (__runInitializers(this, _instanceExtraInitializers), __runInitializers(this, _token_initializers, void 0));
                this.password = __runInitializers(this, _password_initializers, void 0);
            }
            return AuthenticationResetPasswordDto;
        }()),
        (function () {
            var _metadata = typeof Symbol === "function" && Symbol.metadata ? Object.create(null) : void 0;
            _token_decorators = [(0, class_validator_1.IsString)(), (0, class_validator_1.IsNotEmpty)()];
            _password_decorators = [(0, class_validator_1.IsString)(), (0, class_validator_1.IsNotEmpty)(), (0, class_validator_1.Matches)(/^(?=.*[a-zA-Z])(?=.*\d)(?=.*[^a-zA-Z\d]).*$/, {
                    message: 'Password must contain at least one letter, one number, and one special character.',
                })];
            __esDecorate(null, null, _token_decorators, { kind: "field", name: "token", static: false, private: false, access: { has: function (obj) { return "token" in obj; }, get: function (obj) { return obj.token; }, set: function (obj, value) { obj.token = value; } }, metadata: _metadata }, _token_initializers, _instanceExtraInitializers);
            __esDecorate(null, null, _password_decorators, { kind: "field", name: "password", static: false, private: false, access: { has: function (obj) { return "password" in obj; }, get: function (obj) { return obj.password; }, set: function (obj, value) { obj.password = value; } }, metadata: _metadata }, _password_initializers, _instanceExtraInitializers);
            if (_metadata) Object.defineProperty(_a, Symbol.metadata, { enumerable: true, configurable: true, writable: true, value: _metadata });
        })(),
        _a;
}();
exports.AuthenticationResetPasswordDto = AuthenticationResetPasswordDto;
var AuthenticationSendEmailResetPasswordDto = function () {
    var _a;
    var _instanceExtraInitializers = [];
    var _email_decorators;
    var _email_initializers = [];
    return _a = /** @class */ (function () {
            function AuthenticationSendEmailResetPasswordDto() {
                this.email = (__runInitializers(this, _instanceExtraInitializers), __runInitializers(this, _email_initializers, void 0));
            }
            return AuthenticationSendEmailResetPasswordDto;
        }()),
        (function () {
            var _metadata = typeof Symbol === "function" && Symbol.metadata ? Object.create(null) : void 0;
            _email_decorators = [(0, class_validator_1.IsEmail)(), (0, class_validator_1.IsNotEmpty)()];
            __esDecorate(null, null, _email_decorators, { kind: "field", name: "email", static: false, private: false, access: { has: function (obj) { return "email" in obj; }, get: function (obj) { return obj.email; }, set: function (obj, value) { obj.email = value; } }, metadata: _metadata }, _email_initializers, _instanceExtraInitializers);
            if (_metadata) Object.defineProperty(_a, Symbol.metadata, { enumerable: true, configurable: true, writable: true, value: _metadata });
        })(),
        _a;
}();
exports.AuthenticationSendEmailResetPasswordDto = AuthenticationSendEmailResetPasswordDto;
var GoogleByAuthenticationCallbackDto = function () {
    var _a;
    var _instanceExtraInitializers = [];
    var _token_decorators;
    var _token_initializers = [];
    return _a = /** @class */ (function () {
            function GoogleByAuthenticationCallbackDto() {
                this.token = (__runInitializers(this, _instanceExtraInitializers), __runInitializers(this, _token_initializers, void 0));
            }
            return GoogleByAuthenticationCallbackDto;
        }()),
        (function () {
            var _metadata = typeof Symbol === "function" && Symbol.metadata ? Object.create(null) : void 0;
            _token_decorators = [(0, class_validator_1.IsString)(), (0, class_validator_1.IsNotEmpty)()];
            __esDecorate(null, null, _token_decorators, { kind: "field", name: "token", static: false, private: false, access: { has: function (obj) { return "token" in obj; }, get: function (obj) { return obj.token; }, set: function (obj, value) { obj.token = value; } }, metadata: _metadata }, _token_initializers, _instanceExtraInitializers);
            if (_metadata) Object.defineProperty(_a, Symbol.metadata, { enumerable: true, configurable: true, writable: true, value: _metadata });
        })(),
        _a;
}();
exports.GoogleByAuthenticationCallbackDto = GoogleByAuthenticationCallbackDto;


// C:\grua-booking-system-25\server\dist\modules\authentication\application\authentication.google.controller.js
"use strict";
var __runInitializers = (this && this.__runInitializers) || function (thisArg, initializers, value) {
    var useValue = arguments.length > 2;
    for (var i = 0; i < initializers.length; i++) {
        value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);
    }
    return useValue ? value : void 0;
};
var __esDecorate = (this && this.__esDecorate) || function (ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {
    function accept(f) { if (f !== void 0 && typeof f !== "function") throw new TypeError("Function expected"); return f; }
    var kind = contextIn.kind, key = kind === "getter" ? "get" : kind === "setter" ? "set" : "value";
    var target = !descriptorIn && ctor ? contextIn["static"] ? ctor : ctor.prototype : null;
    var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});
    var _, done = false;
    for (var i = decorators.length - 1; i >= 0; i--) {
        var context = {};
        for (var p in contextIn) context[p] = p === "access" ? {} : contextIn[p];
        for (var p in contextIn.access) context.access[p] = contextIn.access[p];
        context.addInitializer = function (f) { if (done) throw new TypeError("Cannot add initializers after decoration has completed"); extraInitializers.push(accept(f || null)); };
        var result = (0, decorators[i])(kind === "accessor" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);
        if (kind === "accessor") {
            if (result === void 0) continue;
            if (result === null || typeof result !== "object") throw new TypeError("Object expected");
            if (_ = accept(result.get)) descriptor.get = _;
            if (_ = accept(result.set)) descriptor.set = _;
            if (_ = accept(result.init)) initializers.unshift(_);
        }
        else if (_ = accept(result)) {
            if (kind === "field") initializers.unshift(_);
            else descriptor[key] = _;
        }
    }
    if (target) Object.defineProperty(target, contextIn.name, descriptor);
    done = true;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (g && (g = 0, op[0] && (_ = 0)), _) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __setFunctionName = (this && this.__setFunctionName) || function (f, name, prefix) {
    if (typeof name === "symbol") name = name.description ? "[".concat(name.description, "]") : "";
    return Object.defineProperty(f, "name", { configurable: true, value: prefix ? "".concat(prefix, " ", name) : name });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.GoogleByAuthenticationController = void 0;
var common_1 = require("@nestjs/common");
var authentication_1 = require("@server/core/authentication");
var authentication_application_event_1 = require("./authentication.application.event");
var GoogleByAuthenticationController = function () {
    var _classDecorators = [(0, common_1.Controller)('/v1/authentication/google')];
    var _classDescriptor;
    var _classExtraInitializers = [];
    var _classThis;
    var _instanceExtraInitializers = [];
    var _callback_decorators;
    var GoogleByAuthenticationController = _classThis = /** @class */ (function () {
        function GoogleByAuthenticationController_1(authenticationDomainFacade, userDomainFacade, googleService, loggerService, eventService, exception, cookieService) {
            this.authenticationDomainFacade = (__runInitializers(this, _instanceExtraInitializers), authenticationDomainFacade);
            this.userDomainFacade = userDomainFacade;
            this.googleService = googleService;
            this.loggerService = loggerService;
            this.eventService = eventService;
            this.exception = exception;
            this.cookieService = cookieService;
            this.logger = this.loggerService.create({
                name: 'GoogleByAuthenticationController',
            });
        }
        GoogleByAuthenticationController_1.prototype.callback = function (body, response) {
            return __awaiter(this, void 0, void 0, function () {
                var _a, name, email, token, user, error_1, registerData, data;
                var _this = this;
                return __generator(this, function (_b) {
                    switch (_b.label) {
                        case 0: return [4 /*yield*/, this.googleService
                                .verifyToken(body.token)
                                .catch(function (error) { return _this.exception.invalidGoogleToken(error); })];
                        case 1:
                            _a = _b.sent(), name = _a.name, email = _a.email;
                            _b.label = 2;
                        case 2:
                            _b.trys.push([2, 4, , 6]);
                            return [4 /*yield*/, this.userDomainFacade.findOneByEmailOrFail(email)];
                        case 3:
                            user = _b.sent();
                            token = this.authenticationDomainFacade.buildToken(user.id);
                            return [3 /*break*/, 6];
                        case 4:
                            error_1 = _b.sent();
                            return [4 /*yield*/, this.register(email, name)];
                        case 5:
                            registerData = _b.sent();
                            token = registerData.token;
                            return [3 /*break*/, 6];
                        case 6:
                            data = this.authenticationDomainFacade.setAccessToken(response, token);
                            return [2 /*return*/, data];
                    }
                });
            });
        };
        GoogleByAuthenticationController_1.prototype.register = function (email, name) {
            return __awaiter(this, void 0, void 0, function () {
                var user, token;
                return __generator(this, function (_a) {
                    switch (_a.label) {
                        case 0: return [4 /*yield*/, this.userDomainFacade.create({
                                email: email,
                                name: name,
                            })];
                        case 1:
                            _a.sent();
                            return [4 /*yield*/, this.userDomainFacade.findOneByEmailOrFail(email)];
                        case 2:
                            user = _a.sent();
                            return [4 /*yield*/, this.userDomainFacade.setVerified(user)];
                        case 3:
                            _a.sent();
                            token = this.authenticationDomainFacade.buildToken(user.id);
                            return [4 /*yield*/, this.eventService.emit(authentication_application_event_1.AuthenticationApplicationEvent.UserRegistered.key, { userId: user.id })];
                        case 4:
                            _a.sent();
                            this.logger.log("User ".concat(email, " registered with google"));
                            return [2 /*return*/, { token: token }];
                    }
                });
            });
        };
        return GoogleByAuthenticationController_1;
    }());
    __setFunctionName(_classThis, "GoogleByAuthenticationController");
    (function () {
        var _metadata = typeof Symbol === "function" && Symbol.metadata ? Object.create(null) : void 0;
        _callback_decorators = [(0, common_1.Post)('/callback'), authentication_1.Authentication.Public()];
        __esDecorate(_classThis, null, _callback_decorators, { kind: "method", name: "callback", static: false, private: false, access: { has: function (obj) { return "callback" in obj; }, get: function (obj) { return obj.callback; } }, metadata: _metadata }, null, _instanceExtraInitializers);
        __esDecorate(null, _classDescriptor = { value: _classThis }, _classDecorators, { kind: "class", name: _classThis.name, metadata: _metadata }, null, _classExtraInitializers);
        GoogleByAuthenticationController = _classThis = _classDescriptor.value;
        if (_metadata) Object.defineProperty(_classThis, Symbol.metadata, { enumerable: true, configurable: true, writable: true, value: _metadata });
        __runInitializers(_classThis, _classExtraInitializers);
    })();
    return GoogleByAuthenticationController = _classThis;
}();
exports.GoogleByAuthenticationController = GoogleByAuthenticationController;


// C:\grua-booking-system-25\server\dist\modules\authentication\application\index.js
"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", { value: true });
__exportStar(require("./authentication.application.event"), exports);
__exportStar(require("./authentication.application.module"), exports);


// C:\grua-booking-system-25\server\dist\modules\authentication\domain\authentication.domain.facade.js
"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __esDecorate = (this && this.__esDecorate) || function (ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {
    function accept(f) { if (f !== void 0 && typeof f !== "function") throw new TypeError("Function expected"); return f; }
    var kind = contextIn.kind, key = kind === "getter" ? "get" : kind === "setter" ? "set" : "value";
    var target = !descriptorIn && ctor ? contextIn["static"] ? ctor : ctor.prototype : null;
    var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});
    var _, done = false;
    for (var i = decorators.length - 1; i >= 0; i--) {
        var context = {};
        for (var p in contextIn) context[p] = p === "access" ? {} : contextIn[p];
        for (var p in contextIn.access) context.access[p] = contextIn.access[p];
        context.addInitializer = function (f) { if (done) throw new TypeError("Cannot add initializers after decoration has completed"); extraInitializers.push(accept(f || null)); };
        var result = (0, decorators[i])(kind === "accessor" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);
        if (kind === "accessor") {
            if (result === void 0) continue;
            if (result === null || typeof result !== "object") throw new TypeError("Object expected");
            if (_ = accept(result.get)) descriptor.get = _;
            if (_ = accept(result.set)) descriptor.set = _;
            if (_ = accept(result.init)) initializers.unshift(_);
        }
        else if (_ = accept(result)) {
            if (kind === "field") initializers.unshift(_);
            else descriptor[key] = _;
        }
    }
    if (target) Object.defineProperty(target, contextIn.name, descriptor);
    done = true;
};
var __runInitializers = (this && this.__runInitializers) || function (thisArg, initializers, value) {
    var useValue = arguments.length > 2;
    for (var i = 0; i < initializers.length; i++) {
        value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);
    }
    return useValue ? value : void 0;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (g && (g = 0, op[0] && (_ = 0)), _) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __setFunctionName = (this && this.__setFunctionName) || function (f, name, prefix) {
    if (typeof name === "symbol") name = name.description ? "[".concat(name.description, "]") : "";
    return Object.defineProperty(f, "name", { configurable: true, value: prefix ? "".concat(prefix, " ", name) : name });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.AuthenticationDomainFacade = void 0;
var common_1 = require("@nestjs/common");
var configuration_1 = require("@server/core/configuration");
var request_1 = require("@server/helpers/request");
var Jwt = require("jsonwebtoken");
var TIME_24_HOURS = 60 * 60 * 24;
var AuthenticationDomainFacade = function () {
    var _classDecorators = [(0, common_1.Injectable)()];
    var _classDescriptor;
    var _classExtraInitializers = [];
    var _classThis;
    var AuthenticationDomainFacade = _classThis = /** @class */ (function () {
        function AuthenticationDomainFacade_1(configurationService, cookieService) {
            this.configurationService = configurationService;
            this.cookieService = cookieService;
        }
        /* ---------------------------------- TOKEN --------------------------------- */
        AuthenticationDomainFacade_1.prototype.buildToken = function (userId, expiresInSeconds) {
            if (expiresInSeconds === void 0) { expiresInSeconds = TIME_24_HOURS; }
            var payload = { userId: userId };
            var secret = this.getSecret();
            var token = Jwt.sign(payload, secret, { expiresIn: expiresInSeconds });
            return token;
        };
        AuthenticationDomainFacade_1.prototype.getAccessToken = function (request) {
            if (this.configurationService.getAuthenticationTokenMethod() ===
                configuration_1.ConfigurationServiceObject.AuthenticationTokenMethod.COOKIES) {
                return this.cookieService.getAccessToken(request);
            }
            else {
                return request_1.RequestHelper.getAuthorization(request);
            }
        };
        AuthenticationDomainFacade_1.prototype.setAccessToken = function (response, token) {
            if (this.configurationService.getAuthenticationTokenMethod() ===
                configuration_1.ConfigurationServiceObject.AuthenticationTokenMethod.COOKIES) {
                this.cookieService.setAccessToken(response, token);
                return {};
            }
            return { token: token };
        };
        AuthenticationDomainFacade_1.prototype.buildTokenResetPassword = function (user) {
            var payload = { userId: user.id };
            var secret = this.getSecret();
            var token = Jwt.sign(payload, secret, { expiresIn: TIME_24_HOURS });
            return token;
        };
        AuthenticationDomainFacade_1.prototype.verifyTokenOrFail = function (token) {
            var isError = typeof token !== 'string';
            if (isError) {
                throw new Error('Token must be defined');
            }
            var secret = this.getSecret();
            var payload = Jwt.verify(token, secret);
            return payload;
        };
        AuthenticationDomainFacade_1.prototype.verifyTokenResetPasswordOrFail = function (token) {
            return __awaiter(this, void 0, void 0, function () {
                var isError, secret, payload;
                return __generator(this, function (_a) {
                    isError = typeof token !== 'string';
                    if (isError) {
                        throw new Error('Token must be defined');
                    }
                    secret = this.getSecret();
                    payload = Jwt.verify(token, secret);
                    return [2 /*return*/, payload];
                });
            });
        };
        AuthenticationDomainFacade_1.prototype.assignRequestPayload = function (request, payload) {
            var _a, _b;
            var store = __assign({}, ((_a = request['store']) !== null && _a !== void 0 ? _a : {}));
            store.authentication = __assign(__assign({}, ((_b = store.authentication) !== null && _b !== void 0 ? _b : {})), { user: {
                    id: payload.user.id,
                    name: payload.user.name,
                    email: payload.user.email,
                } });
            request['store'] = store;
        };
        AuthenticationDomainFacade_1.prototype.getRequestPayload = function (request) {
            var _a, _b;
            return (_b = (_a = request['store']) === null || _a === void 0 ? void 0 : _a.authentication) !== null && _b !== void 0 ? _b : {};
        };
        AuthenticationDomainFacade_1.prototype.getSecret = function () {
            return this.configurationService.get('SERVER_AUTHENTICATION_SECRET');
        };
        return AuthenticationDomainFacade_1;
    }());
    __setFunctionName(_classThis, "AuthenticationDomainFacade");
    (function () {
        var _metadata = typeof Symbol === "function" && Symbol.metadata ? Object.create(null) : void 0;
        __esDecorate(null, _classDescriptor = { value: _classThis }, _classDecorators, { kind: "class", name: _classThis.name, metadata: _metadata }, null, _classExtraInitializers);
        AuthenticationDomainFacade = _classThis = _classDescriptor.value;
        if (_metadata) Object.defineProperty(_classThis, Symbol.metadata, { enumerable: true, configurable: true, writable: true, value: _metadata });
        __runInitializers(_classThis, _classExtraInitializers);
    })();
    return AuthenticationDomainFacade = _classThis;
}();
exports.AuthenticationDomainFacade = AuthenticationDomainFacade;


// C:\grua-booking-system-25\server\dist\modules\authentication\domain\authentication.domain.module.js
"use strict";
var __esDecorate = (this && this.__esDecorate) || function (ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {
    function accept(f) { if (f !== void 0 && typeof f !== "function") throw new TypeError("Function expected"); return f; }
    var kind = contextIn.kind, key = kind === "getter" ? "get" : kind === "setter" ? "set" : "value";
    var target = !descriptorIn && ctor ? contextIn["static"] ? ctor : ctor.prototype : null;
    var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});
    var _, done = false;
    for (var i = decorators.length - 1; i >= 0; i--) {
        var context = {};
        for (var p in contextIn) context[p] = p === "access" ? {} : contextIn[p];
        for (var p in contextIn.access) context.access[p] = contextIn.access[p];
        context.addInitializer = function (f) { if (done) throw new TypeError("Cannot add initializers after decoration has completed"); extraInitializers.push(accept(f || null)); };
        var result = (0, decorators[i])(kind === "accessor" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);
        if (kind === "accessor") {
            if (result === void 0) continue;
            if (result === null || typeof result !== "object") throw new TypeError("Object expected");
            if (_ = accept(result.get)) descriptor.get = _;
            if (_ = accept(result.set)) descriptor.set = _;
            if (_ = accept(result.init)) initializers.unshift(_);
        }
        else if (_ = accept(result)) {
            if (kind === "field") initializers.unshift(_);
            else descriptor[key] = _;
        }
    }
    if (target) Object.defineProperty(target, contextIn.name, descriptor);
    done = true;
};
var __runInitializers = (this && this.__runInitializers) || function (thisArg, initializers, value) {
    var useValue = arguments.length > 2;
    for (var i = 0; i < initializers.length; i++) {
        value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);
    }
    return useValue ? value : void 0;
};
var __setFunctionName = (this && this.__setFunctionName) || function (f, name, prefix) {
    if (typeof name === "symbol") name = name.description ? "[".concat(name.description, "]") : "";
    return Object.defineProperty(f, "name", { configurable: true, value: prefix ? "".concat(prefix, " ", name) : name });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.AuthenticationDomainModule = void 0;
var common_1 = require("@nestjs/common");
var typeorm_1 = require("@nestjs/typeorm");
var cookie_1 = require("@server/core/cookie");
var database_1 = require("@server/core/database");
var authorization_code_model_1 = require("../../authorization/domain/code/authorization.code.model");
var authentication_domain_facade_1 = require("./authentication.domain.facade");
var AuthenticationDomainModule = function () {
    var _classDecorators = [(0, common_1.Module)({
            imports: [
                database_1.DatabaseHelperModule,
                typeorm_1.TypeOrmModule.forFeature([authorization_code_model_1.AuthorizationCode]),
                cookie_1.CookieModule,
            ],
            providers: [authentication_domain_facade_1.AuthenticationDomainFacade],
            exports: [authentication_domain_facade_1.AuthenticationDomainFacade],
        })];
    var _classDescriptor;
    var _classExtraInitializers = [];
    var _classThis;
    var AuthenticationDomainModule = _classThis = /** @class */ (function () {
        function AuthenticationDomainModule_1() {
        }
        return AuthenticationDomainModule_1;
    }());
    __setFunctionName(_classThis, "AuthenticationDomainModule");
    (function () {
        var _metadata = typeof Symbol === "function" && Symbol.metadata ? Object.create(null) : void 0;
        __esDecorate(null, _classDescriptor = { value: _classThis }, _classDecorators, { kind: "class", name: _classThis.name, metadata: _metadata }, null, _classExtraInitializers);
        AuthenticationDomainModule = _classThis = _classDescriptor.value;
        if (_metadata) Object.defineProperty(_classThis, Symbol.metadata, { enumerable: true, configurable: true, writable: true, value: _metadata });
        __runInitializers(_classThis, _classExtraInitializers);
    })();
    return AuthenticationDomainModule = _classThis;
}();
exports.AuthenticationDomainModule = AuthenticationDomainModule;


// C:\grua-booking-system-25\server\dist\modules\authentication\domain\index.js
"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", { value: true });
__exportStar(require("./authentication.domain.facade"), exports);
__exportStar(require("./authentication.domain.module"), exports);


// C:\grua-booking-system-25\server\dist\modules\authentication\infrastructure\guards\authentication.guard.js
"use strict";
var __esDecorate = (this && this.__esDecorate) || function (ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {
    function accept(f) { if (f !== void 0 && typeof f !== "function") throw new TypeError("Function expected"); return f; }
    var kind = contextIn.kind, key = kind === "getter" ? "get" : kind === "setter" ? "set" : "value";
    var target = !descriptorIn && ctor ? contextIn["static"] ? ctor : ctor.prototype : null;
    var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});
    var _, done = false;
    for (var i = decorators.length - 1; i >= 0; i--) {
        var context = {};
        for (var p in contextIn) context[p] = p === "access" ? {} : contextIn[p];
        for (var p in contextIn.access) context.access[p] = contextIn.access[p];
        context.addInitializer = function (f) { if (done) throw new TypeError("Cannot add initializers after decoration has completed"); extraInitializers.push(accept(f || null)); };
        var result = (0, decorators[i])(kind === "accessor" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);
        if (kind === "accessor") {
            if (result === void 0) continue;
            if (result === null || typeof result !== "object") throw new TypeError("Object expected");
            if (_ = accept(result.get)) descriptor.get = _;
            if (_ = accept(result.set)) descriptor.set = _;
            if (_ = accept(result.init)) initializers.unshift(_);
        }
        else if (_ = accept(result)) {
            if (kind === "field") initializers.unshift(_);
            else descriptor[key] = _;
        }
    }
    if (target) Object.defineProperty(target, contextIn.name, descriptor);
    done = true;
};
var __runInitializers = (this && this.__runInitializers) || function (thisArg, initializers, value) {
    var useValue = arguments.length > 2;
    for (var i = 0; i < initializers.length; i++) {
        value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);
    }
    return useValue ? value : void 0;
};
var __setFunctionName = (this && this.__setFunctionName) || function (f, name, prefix) {
    if (typeof name === "symbol") name = name.description ? "[".concat(name.description, "]") : "";
    return Object.defineProperty(f, "name", { configurable: true, value: prefix ? "".concat(prefix, " ", name) : name });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.AuthenticationGuard = void 0;
var common_1 = require("@nestjs/common");
var AuthenticationGuard = function () {
    var _classDecorators = [(0, common_1.Injectable)()];
    var _classDescriptor;
    var _classExtraInitializers = [];
    var _classThis;
    var AuthenticationGuard = _classThis = /** @class */ (function () {
        function AuthenticationGuard_1(reflector, service) {
            this.reflector = reflector;
            this.service = service;
        }
        AuthenticationGuard_1.prototype.canActivate = function (context) {
            return this.service.validateRequest(this.reflector, context);
        };
        return AuthenticationGuard_1;
    }());
    __setFunctionName(_classThis, "AuthenticationGuard");
    (function () {
        var _metadata = typeof Symbol === "function" && Symbol.metadata ? Object.create(null) : void 0;
        __esDecorate(null, _classDescriptor = { value: _classThis }, _classDecorators, { kind: "class", name: _classThis.name, metadata: _metadata }, null, _classExtraInitializers);
        AuthenticationGuard = _classThis = _classDescriptor.value;
        if (_metadata) Object.defineProperty(_classThis, Symbol.metadata, { enumerable: true, configurable: true, writable: true, value: _metadata });
        __runInitializers(_classThis, _classExtraInitializers);
    })();
    return AuthenticationGuard = _classThis;
}();
exports.AuthenticationGuard = AuthenticationGuard;


// C:\grua-booking-system-25\server\dist\modules\authentication\infrastructure\guards\authentication.guard.service.js
"use strict";
var __esDecorate = (this && this.__esDecorate) || function (ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {
    function accept(f) { if (f !== void 0 && typeof f !== "function") throw new TypeError("Function expected"); return f; }
    var kind = contextIn.kind, key = kind === "getter" ? "get" : kind === "setter" ? "set" : "value";
    var target = !descriptorIn && ctor ? contextIn["static"] ? ctor : ctor.prototype : null;
    var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});
    var _, done = false;
    for (var i = decorators.length - 1; i >= 0; i--) {
        var context = {};
        for (var p in contextIn) context[p] = p === "access" ? {} : contextIn[p];
        for (var p in contextIn.access) context.access[p] = contextIn.access[p];
        context.addInitializer = function (f) { if (done) throw new TypeError("Cannot add initializers after decoration has completed"); extraInitializers.push(accept(f || null)); };
        var result = (0, decorators[i])(kind === "accessor" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);
        if (kind === "accessor") {
            if (result === void 0) continue;
            if (result === null || typeof result !== "object") throw new TypeError("Object expected");
            if (_ = accept(result.get)) descriptor.get = _;
            if (_ = accept(result.set)) descriptor.set = _;
            if (_ = accept(result.init)) initializers.unshift(_);
        }
        else if (_ = accept(result)) {
            if (kind === "field") initializers.unshift(_);
            else descriptor[key] = _;
        }
    }
    if (target) Object.defineProperty(target, contextIn.name, descriptor);
    done = true;
};
var __runInitializers = (this && this.__runInitializers) || function (thisArg, initializers, value) {
    var useValue = arguments.length > 2;
    for (var i = 0; i < initializers.length; i++) {
        value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);
    }
    return useValue ? value : void 0;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (g && (g = 0, op[0] && (_ = 0)), _) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __setFunctionName = (this && this.__setFunctionName) || function (f, name, prefix) {
    if (typeof name === "symbol") name = name.description ? "[".concat(name.description, "]") : "";
    return Object.defineProperty(f, "name", { configurable: true, value: prefix ? "".concat(prefix, " ", name) : name });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.AuthenticationGuardService = void 0;
var common_1 = require("@nestjs/common");
var authentication_1 = require("@server/core/authentication");
var context_1 = require("@server/helpers/context");
var AuthenticationGuardService = function () {
    var _classDecorators = [(0, common_1.Injectable)()];
    var _classDescriptor;
    var _classExtraInitializers = [];
    var _classThis;
    var AuthenticationGuardService = _classThis = /** @class */ (function () {
        function AuthenticationGuardService_1(authenticationDomainFacade, userDomainFacade, exception) {
            this.authenticationDomainFacade = authenticationDomainFacade;
            this.userDomainFacade = userDomainFacade;
            this.exception = exception;
        }
        AuthenticationGuardService_1.prototype.validateRequest = function (reflector, context) {
            return __awaiter(this, void 0, void 0, function () {
                var isPublic, request, token, userId, payload, user;
                return __generator(this, function (_a) {
                    switch (_a.label) {
                        case 0:
                            isPublic = authentication_1.Authentication.isPublic(context, reflector);
                            if (isPublic) {
                                return [2 /*return*/, true];
                            }
                            request = context_1.ContextHelper.toRequest(context);
                            token = this.authenticationDomainFacade.getAccessToken(request);
                            try {
                                payload = this.authenticationDomainFacade.verifyTokenOrFail(token);
                                userId = payload.userId;
                            }
                            catch (error) {
                                this.exception.invalidAccessToken();
                            }
                            return [4 /*yield*/, this.userDomainFacade.findOneByIdOrFail(userId)];
                        case 1:
                            user = _a.sent();
                            return [4 /*yield*/, this.checkUserNotVerified(reflector, context, user)];
                        case 2:
                            _a.sent();
                            return [4 /*yield*/, this.checkUserVisitor(reflector, context, user)];
                        case 3:
                            _a.sent();
                            this.authenticationDomainFacade.assignRequestPayload(request, { user: user });
                            return [2 /*return*/, true];
                    }
                });
            });
        };
        AuthenticationGuardService_1.prototype.checkUserNotVerified = function (reflector, context, user) {
            return __awaiter(this, void 0, void 0, function () {
                var isUserNotVerifiedAllowed, isVerified, isVisitor;
                return __generator(this, function (_a) {
                    isUserNotVerifiedAllowed = authentication_1.Authentication.isUserNotVerifiedAllowed(context, reflector);
                    if (isUserNotVerifiedAllowed) {
                        return [2 /*return*/];
                    }
                    isVerified = this.userDomainFacade.isVerified(user);
                    isVisitor = this.userDomainFacade.isVisitor(user);
                    if (isVerified || isVisitor) {
                        return [2 /*return*/];
                    }
                    this.exception.userNotVerifiedUnauthorized(user);
                    return [2 /*return*/];
                });
            });
        };
        AuthenticationGuardService_1.prototype.checkUserVisitor = function (reflector, context, user) {
            return __awaiter(this, void 0, void 0, function () {
                var isUserVisitorAllowed, isVisitor;
                return __generator(this, function (_a) {
                    isUserVisitorAllowed = authentication_1.Authentication.isVisitorAllowed(context, reflector);
                    if (isUserVisitorAllowed) {
                        return [2 /*return*/];
                    }
                    isVisitor = this.userDomainFacade.isVisitor(user);
                    if (isVisitor) {
                        this.exception.userVisitorUnauthorized(user);
                    }
                    return [2 /*return*/];
                });
            });
        };
        return AuthenticationGuardService_1;
    }());
    __setFunctionName(_classThis, "AuthenticationGuardService");
    (function () {
        var _metadata = typeof Symbol === "function" && Symbol.metadata ? Object.create(null) : void 0;
        __esDecorate(null, _classDescriptor = { value: _classThis }, _classDecorators, { kind: "class", name: _classThis.name, metadata: _metadata }, null, _classExtraInitializers);
        AuthenticationGuardService = _classThis = _classDescriptor.value;
        if (_metadata) Object.defineProperty(_classThis, Symbol.metadata, { enumerable: true, configurable: true, writable: true, value: _metadata });
        __runInitializers(_classThis, _classExtraInitializers);
    })();
    return AuthenticationGuardService = _classThis;
}();
exports.AuthenticationGuardService = AuthenticationGuardService;


// C:\grua-booking-system-25\server\dist\modules\authentication\infrastructure\subscribers\authentication.communication.subscriber.js
"use strict";
var __runInitializers = (this && this.__runInitializers) || function (thisArg, initializers, value) {
    var useValue = arguments.length > 2;
    for (var i = 0; i < initializers.length; i++) {
        value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);
    }
    return useValue ? value : void 0;
};
var __esDecorate = (this && this.__esDecorate) || function (ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {
    function accept(f) { if (f !== void 0 && typeof f !== "function") throw new TypeError("Function expected"); return f; }
    var kind = contextIn.kind, key = kind === "getter" ? "get" : kind === "setter" ? "set" : "value";
    var target = !descriptorIn && ctor ? contextIn["static"] ? ctor : ctor.prototype : null;
    var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});
    var _, done = false;
    for (var i = decorators.length - 1; i >= 0; i--) {
        var context = {};
        for (var p in contextIn) context[p] = p === "access" ? {} : contextIn[p];
        for (var p in contextIn.access) context.access[p] = contextIn.access[p];
        context.addInitializer = function (f) { if (done) throw new TypeError("Cannot add initializers after decoration has completed"); extraInitializers.push(accept(f || null)); };
        var result = (0, decorators[i])(kind === "accessor" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);
        if (kind === "accessor") {
            if (result === void 0) continue;
            if (result === null || typeof result !== "object") throw new TypeError("Object expected");
            if (_ = accept(result.get)) descriptor.get = _;
            if (_ = accept(result.set)) descriptor.set = _;
            if (_ = accept(result.init)) initializers.unshift(_);
        }
        else if (_ = accept(result)) {
            if (kind === "field") initializers.unshift(_);
            else descriptor[key] = _;
        }
    }
    if (target) Object.defineProperty(target, contextIn.name, descriptor);
    done = true;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (g && (g = 0, op[0] && (_ = 0)), _) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __setFunctionName = (this && this.__setFunctionName) || function (f, name, prefix) {
    if (typeof name === "symbol") name = name.description ? "[".concat(name.description, "]") : "";
    return Object.defineProperty(f, "name", { configurable: true, value: prefix ? "".concat(prefix, " ", name) : name });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.AuthenticationCommunicationSubscriber = void 0;
var common_1 = require("@nestjs/common");
var event_emitter_1 = require("@nestjs/event-emitter");
var user_orchestrator_event_1 = require("@server/modules/user/orchestrators/user.orchestrator.event");
var application_1 = require("../../application");
var AuthenticationCommunicationSubscriber = function () {
    var _classDecorators = [(0, common_1.Injectable)()];
    var _classDescriptor;
    var _classExtraInitializers = [];
    var _classThis;
    var _instanceExtraInitializers = [];
    var _handleUserRegistered_decorators;
    var _handleResetPassword_decorators;
    var AuthenticationCommunicationSubscriber = _classThis = /** @class */ (function () {
        function AuthenticationCommunicationSubscriber_1(configurationService, userDomainFacade, authenticationDomainFacade, emailService) {
            this.configurationService = (__runInitializers(this, _instanceExtraInitializers), configurationService);
            this.userDomainFacade = userDomainFacade;
            this.authenticationDomainFacade = authenticationDomainFacade;
            this.emailService = emailService;
        }
        AuthenticationCommunicationSubscriber_1.prototype.handleUserRegistered = function (data) {
            var _a;
            return __awaiter(this, void 0, void 0, function () {
                var user, type;
                return __generator(this, function (_b) {
                    switch (_b.label) {
                        case 0: return [4 /*yield*/, this.userDomainFacade.findOneByIdOrFail(data.userId)];
                        case 1:
                            user = _b.sent();
                            type = this.emailService.Type.AUTHENTICATION_WELCOME;
                            return [4 /*yield*/, this.emailService.send({
                                    type: type,
                                    email: user.email,
                                    name: (_a = user.name) !== null && _a !== void 0 ? _a : user.email,
                                    subject: "Welcome",
                                    variables: {},
                                })];
                        case 2:
                            _b.sent();
                            return [2 /*return*/];
                    }
                });
            });
        };
        AuthenticationCommunicationSubscriber_1.prototype.handleResetPassword = function (data) {
            var _a;
            return __awaiter(this, void 0, void 0, function () {
                var user, token, url, urlResetPassword, type;
                return __generator(this, function (_b) {
                    switch (_b.label) {
                        case 0: return [4 /*yield*/, this.userDomainFacade.findOneByIdOrFail(data.userId)];
                        case 1:
                            user = _b.sent();
                            token = this.authenticationDomainFacade.buildTokenResetPassword(user);
                            url = this.configurationService.getClientBaseUrl();
                            urlResetPassword = "".concat(url, "/reset-password/").concat(token);
                            type = this.emailService.Type.AUTHENTICATION_FORGOT_PASSWORD;
                            return [4 /*yield*/, this.emailService.send({
                                    type: type,
                                    email: user.email,
                                    name: (_a = user.name) !== null && _a !== void 0 ? _a : user.email,
                                    subject: "Reset your password",
                                    variables: {
                                        url_password_reset: urlResetPassword,
                                    },
                                })];
                        case 2:
                            _b.sent();
                            return [2 /*return*/];
                    }
                });
            });
        };
        return AuthenticationCommunicationSubscriber_1;
    }());
    __setFunctionName(_classThis, "AuthenticationCommunicationSubscriber");
    (function () {
        var _metadata = typeof Symbol === "function" && Symbol.metadata ? Object.create(null) : void 0;
        _handleUserRegistered_decorators = [(0, event_emitter_1.OnEvent)(user_orchestrator_event_1.UserOrchestratorEvent.Verified.key)];
        _handleResetPassword_decorators = [(0, event_emitter_1.OnEvent)(application_1.AuthenticationApplicationEvent.UserPasswordResetRequested.key)];
        __esDecorate(_classThis, null, _handleUserRegistered_decorators, { kind: "method", name: "handleUserRegistered", static: false, private: false, access: { has: function (obj) { return "handleUserRegistered" in obj; }, get: function (obj) { return obj.handleUserRegistered; } }, metadata: _metadata }, null, _instanceExtraInitializers);
        __esDecorate(_classThis, null, _handleResetPassword_decorators, { kind: "method", name: "handleResetPassword", static: false, private: false, access: { has: function (obj) { return "handleResetPassword" in obj; }, get: function (obj) { return obj.handleResetPassword; } }, metadata: _metadata }, null, _instanceExtraInitializers);
        __esDecorate(null, _classDescriptor = { value: _classThis }, _classDecorators, { kind: "class", name: _classThis.name, metadata: _metadata }, null, _classExtraInitializers);
        AuthenticationCommunicationSubscriber = _classThis = _classDescriptor.value;
        if (_metadata) Object.defineProperty(_classThis, Symbol.metadata, { enumerable: true, configurable: true, writable: true, value: _metadata });
        __runInitializers(_classThis, _classExtraInitializers);
    })();
    return AuthenticationCommunicationSubscriber = _classThis;
}();
exports.AuthenticationCommunicationSubscriber = AuthenticationCommunicationSubscriber;


// C:\grua-booking-system-25\server\dist\modules\authentication\infrastructure\authentication.infrastructure.exception.js
"use strict";
var __esDecorate = (this && this.__esDecorate) || function (ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {
    function accept(f) { if (f !== void 0 && typeof f !== "function") throw new TypeError("Function expected"); return f; }
    var kind = contextIn.kind, key = kind === "getter" ? "get" : kind === "setter" ? "set" : "value";
    var target = !descriptorIn && ctor ? contextIn["static"] ? ctor : ctor.prototype : null;
    var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});
    var _, done = false;
    for (var i = decorators.length - 1; i >= 0; i--) {
        var context = {};
        for (var p in contextIn) context[p] = p === "access" ? {} : contextIn[p];
        for (var p in contextIn.access) context.access[p] = contextIn.access[p];
        context.addInitializer = function (f) { if (done) throw new TypeError("Cannot add initializers after decoration has completed"); extraInitializers.push(accept(f || null)); };
        var result = (0, decorators[i])(kind === "accessor" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);
        if (kind === "accessor") {
            if (result === void 0) continue;
            if (result === null || typeof result !== "object") throw new TypeError("Object expected");
            if (_ = accept(result.get)) descriptor.get = _;
            if (_ = accept(result.set)) descriptor.set = _;
            if (_ = accept(result.init)) initializers.unshift(_);
        }
        else if (_ = accept(result)) {
            if (kind === "field") initializers.unshift(_);
            else descriptor[key] = _;
        }
    }
    if (target) Object.defineProperty(target, contextIn.name, descriptor);
    done = true;
};
var __runInitializers = (this && this.__runInitializers) || function (thisArg, initializers, value) {
    var useValue = arguments.length > 2;
    for (var i = 0; i < initializers.length; i++) {
        value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);
    }
    return useValue ? value : void 0;
};
var __setFunctionName = (this && this.__setFunctionName) || function (f, name, prefix) {
    if (typeof name === "symbol") name = name.description ? "[".concat(name.description, "]") : "";
    return Object.defineProperty(f, "name", { configurable: true, value: prefix ? "".concat(prefix, " ", name) : name });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.AuthenticationInfrastructureException = void 0;
var common_1 = require("@nestjs/common");
var AuthenticationInfrastructureException = function () {
    var _classDecorators = [(0, common_1.Injectable)()];
    var _classDescriptor;
    var _classExtraInitializers = [];
    var _classThis;
    var AuthenticationInfrastructureException = _classThis = /** @class */ (function () {
        function AuthenticationInfrastructureException_1(service) {
            this.service = service;
        }
        AuthenticationInfrastructureException_1.prototype.invalidAccessToken = function () {
            return this.service.throw({
                status: common_1.HttpStatus.UNAUTHORIZED,
                code: 0,
                publicMessage: 'Access token is invalid',
            });
        };
        AuthenticationInfrastructureException_1.prototype.userNotVerifiedUnauthorized = function (user) {
            return this.service.throw({
                status: common_1.HttpStatus.UNAUTHORIZED,
                code: 1,
                publicMessage: 'You must verify your account',
                privateMessage: "User ".concat(user.email, " is not verified (").concat(user.status, ")"),
            });
        };
        AuthenticationInfrastructureException_1.prototype.userVisitorUnauthorized = function (user) {
            return this.service.throw({
                status: common_1.HttpStatus.UNAUTHORIZED,
                code: 2,
                publicMessage: 'You must create an account',
                privateMessage: "User visitor \"".concat(user.id, "\" is not authorized"),
            });
        };
        return AuthenticationInfrastructureException_1;
    }());
    __setFunctionName(_classThis, "AuthenticationInfrastructureException");
    (function () {
        var _metadata = typeof Symbol === "function" && Symbol.metadata ? Object.create(null) : void 0;
        __esDecorate(null, _classDescriptor = { value: _classThis }, _classDecorators, { kind: "class", name: _classThis.name, metadata: _metadata }, null, _classExtraInitializers);
        AuthenticationInfrastructureException = _classThis = _classDescriptor.value;
        if (_metadata) Object.defineProperty(_classThis, Symbol.metadata, { enumerable: true, configurable: true, writable: true, value: _metadata });
        __runInitializers(_classThis, _classExtraInitializers);
    })();
    return AuthenticationInfrastructureException = _classThis;
}();
exports.AuthenticationInfrastructureException = AuthenticationInfrastructureException;


// C:\grua-booking-system-25\server\dist\modules\authentication\infrastructure\authentication.infrastructure.module.js
"use strict";
var __esDecorate = (this && this.__esDecorate) || function (ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {
    function accept(f) { if (f !== void 0 && typeof f !== "function") throw new TypeError("Function expected"); return f; }
    var kind = contextIn.kind, key = kind === "getter" ? "get" : kind === "setter" ? "set" : "value";
    var target = !descriptorIn && ctor ? contextIn["static"] ? ctor : ctor.prototype : null;
    var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});
    var _, done = false;
    for (var i = decorators.length - 1; i >= 0; i--) {
        var context = {};
        for (var p in contextIn) context[p] = p === "access" ? {} : contextIn[p];
        for (var p in contextIn.access) context.access[p] = contextIn.access[p];
        context.addInitializer = function (f) { if (done) throw new TypeError("Cannot add initializers after decoration has completed"); extraInitializers.push(accept(f || null)); };
        var result = (0, decorators[i])(kind === "accessor" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);
        if (kind === "accessor") {
            if (result === void 0) continue;
            if (result === null || typeof result !== "object") throw new TypeError("Object expected");
            if (_ = accept(result.get)) descriptor.get = _;
            if (_ = accept(result.set)) descriptor.set = _;
            if (_ = accept(result.init)) initializers.unshift(_);
        }
        else if (_ = accept(result)) {
            if (kind === "field") initializers.unshift(_);
            else descriptor[key] = _;
        }
    }
    if (target) Object.defineProperty(target, contextIn.name, descriptor);
    done = true;
};
var __runInitializers = (this && this.__runInitializers) || function (thisArg, initializers, value) {
    var useValue = arguments.length > 2;
    for (var i = 0; i < initializers.length; i++) {
        value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);
    }
    return useValue ? value : void 0;
};
var __setFunctionName = (this && this.__setFunctionName) || function (f, name, prefix) {
    if (typeof name === "symbol") name = name.description ? "[".concat(name.description, "]") : "";
    return Object.defineProperty(f, "name", { configurable: true, value: prefix ? "".concat(prefix, " ", name) : name });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.AuthenticationInfrastructureModule = void 0;
var common_1 = require("@nestjs/common");
var core_1 = require("@nestjs/core");
var email_module_1 = require("@server/libraries/email/email.module");
var domain_1 = require("@server/modules/user/domain");
var domain_2 = require("../domain");
var authentication_infrastructure_exception_1 = require("./authentication.infrastructure.exception");
var authentication_guard_1 = require("./guards/authentication.guard");
var authentication_guard_service_1 = require("./guards/authentication.guard.service");
var authentication_communication_subscriber_1 = require("./subscribers/authentication.communication.subscriber");
var AuthenticationInfrastructureModule = function () {
    var _classDecorators = [(0, common_1.Global)(), (0, common_1.Module)({
            imports: [domain_1.UserDomainModule, domain_2.AuthenticationDomainModule, email_module_1.EmailModule],
            providers: [
                authentication_communication_subscriber_1.AuthenticationCommunicationSubscriber,
                authentication_guard_service_1.AuthenticationGuardService,
                authentication_infrastructure_exception_1.AuthenticationInfrastructureException,
            ],
            exports: [authentication_guard_service_1.AuthenticationGuardService],
        })];
    var _classDescriptor;
    var _classExtraInitializers = [];
    var _classThis;
    var AuthenticationInfrastructureModule = _classThis = /** @class */ (function () {
        function AuthenticationInfrastructureModule_1() {
        }
        AuthenticationInfrastructureModule_1.getGuards = function () {
            return [{ provide: core_1.APP_GUARD, useClass: authentication_guard_1.AuthenticationGuard }];
        };
        return AuthenticationInfrastructureModule_1;
    }());
    __setFunctionName(_classThis, "AuthenticationInfrastructureModule");
    (function () {
        var _metadata = typeof Symbol === "function" && Symbol.metadata ? Object.create(null) : void 0;
        __esDecorate(null, _classDescriptor = { value: _classThis }, _classDecorators, { kind: "class", name: _classThis.name, metadata: _metadata }, null, _classExtraInitializers);
        AuthenticationInfrastructureModule = _classThis = _classDescriptor.value;
        if (_metadata) Object.defineProperty(_classThis, Symbol.metadata, { enumerable: true, configurable: true, writable: true, value: _metadata });
        __runInitializers(_classThis, _classExtraInitializers);
    })();
    return AuthenticationInfrastructureModule = _classThis;
}();
exports.AuthenticationInfrastructureModule = AuthenticationInfrastructureModule;


// C:\grua-booking-system-25\server\dist\modules\authentication\infrastructure\index.js
"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", { value: true });
__exportStar(require("./authentication.infrastructure.module"), exports);
__exportStar(require("./guards/authentication.guard"), exports);


// C:\grua-booking-system-25\server\dist\modules\authentication\infrastructure\guards\authentication.guard.js
"use strict";
var __esDecorate = (this && this.__esDecorate) || function (ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {
    function accept(f) { if (f !== void 0 && typeof f !== "function") throw new TypeError("Function expected"); return f; }
    var kind = contextIn.kind, key = kind === "getter" ? "get" : kind === "setter" ? "set" : "value";
    var target = !descriptorIn && ctor ? contextIn["static"] ? ctor : ctor.prototype : null;
    var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});
    var _, done = false;
    for (var i = decorators.length - 1; i >= 0; i--) {
        var context = {};
        for (var p in contextIn) context[p] = p === "access" ? {} : contextIn[p];
        for (var p in contextIn.access) context.access[p] = contextIn.access[p];
        context.addInitializer = function (f) { if (done) throw new TypeError("Cannot add initializers after decoration has completed"); extraInitializers.push(accept(f || null)); };
        var result = (0, decorators[i])(kind === "accessor" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);
        if (kind === "accessor") {
            if (result === void 0) continue;
            if (result === null || typeof result !== "object") throw new TypeError("Object expected");
            if (_ = accept(result.get)) descriptor.get = _;
            if (_ = accept(result.set)) descriptor.set = _;
            if (_ = accept(result.init)) initializers.unshift(_);
        }
        else if (_ = accept(result)) {
            if (kind === "field") initializers.unshift(_);
            else descriptor[key] = _;
        }
    }
    if (target) Object.defineProperty(target, contextIn.name, descriptor);
    done = true;
};
var __runInitializers = (this && this.__runInitializers) || function (thisArg, initializers, value) {
    var useValue = arguments.length > 2;
    for (var i = 0; i < initializers.length; i++) {
        value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);
    }
    return useValue ? value : void 0;
};
var __setFunctionName = (this && this.__setFunctionName) || function (f, name, prefix) {
    if (typeof name === "symbol") name = name.description ? "[".concat(name.description, "]") : "";
    return Object.defineProperty(f, "name", { configurable: true, value: prefix ? "".concat(prefix, " ", name) : name });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.AuthenticationGuard = void 0;
var common_1 = require("@nestjs/common");
var AuthenticationGuard = function () {
    var _classDecorators = [(0, common_1.Injectable)()];
    var _classDescriptor;
    var _classExtraInitializers = [];
    var _classThis;
    var AuthenticationGuard = _classThis = /** @class */ (function () {
        function AuthenticationGuard_1(reflector, service) {
            this.reflector = reflector;
            this.service = service;
        }
        AuthenticationGuard_1.prototype.canActivate = function (context) {
            return this.service.validateRequest(this.reflector, context);
        };
        return AuthenticationGuard_1;
    }());
    __setFunctionName(_classThis, "AuthenticationGuard");
    (function () {
        var _metadata = typeof Symbol === "function" && Symbol.metadata ? Object.create(null) : void 0;
        __esDecorate(null, _classDescriptor = { value: _classThis }, _classDecorators, { kind: "class", name: _classThis.name, metadata: _metadata }, null, _classExtraInitializers);
        AuthenticationGuard = _classThis = _classDescriptor.value;
        if (_metadata) Object.defineProperty(_classThis, Symbol.metadata, { enumerable: true, configurable: true, writable: true, value: _metadata });
        __runInitializers(_classThis, _classExtraInitializers);
    })();
    return AuthenticationGuard = _classThis;
}();
exports.AuthenticationGuard = AuthenticationGuard;


// C:\grua-booking-system-25\server\dist\modules\authentication\infrastructure\guards\authentication.guard.service.js
"use strict";
var __esDecorate = (this && this.__esDecorate) || function (ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {
    function accept(f) { if (f !== void 0 && typeof f !== "function") throw new TypeError("Function expected"); return f; }
    var kind = contextIn.kind, key = kind === "getter" ? "get" : kind === "setter" ? "set" : "value";
    var target = !descriptorIn && ctor ? contextIn["static"] ? ctor : ctor.prototype : null;
    var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});
    var _, done = false;
    for (var i = decorators.length - 1; i >= 0; i--) {
        var context = {};
        for (var p in contextIn) context[p] = p === "access" ? {} : contextIn[p];
        for (var p in contextIn.access) context.access[p] = contextIn.access[p];
        context.addInitializer = function (f) { if (done) throw new TypeError("Cannot add initializers after decoration has completed"); extraInitializers.push(accept(f || null)); };
        var result = (0, decorators[i])(kind === "accessor" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);
        if (kind === "accessor") {
            if (result === void 0) continue;
            if (result === null || typeof result !== "object") throw new TypeError("Object expected");
            if (_ = accept(result.get)) descriptor.get = _;
            if (_ = accept(result.set)) descriptor.set = _;
            if (_ = accept(result.init)) initializers.unshift(_);
        }
        else if (_ = accept(result)) {
            if (kind === "field") initializers.unshift(_);
            else descriptor[key] = _;
        }
    }
    if (target) Object.defineProperty(target, contextIn.name, descriptor);
    done = true;
};
var __runInitializers = (this && this.__runInitializers) || function (thisArg, initializers, value) {
    var useValue = arguments.length > 2;
    for (var i = 0; i < initializers.length; i++) {
        value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);
    }
    return useValue ? value : void 0;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (g && (g = 0, op[0] && (_ = 0)), _) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __setFunctionName = (this && this.__setFunctionName) || function (f, name, prefix) {
    if (typeof name === "symbol") name = name.description ? "[".concat(name.description, "]") : "";
    return Object.defineProperty(f, "name", { configurable: true, value: prefix ? "".concat(prefix, " ", name) : name });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.AuthenticationGuardService = void 0;
var common_1 = require("@nestjs/common");
var authentication_1 = require("@server/core/authentication");
var context_1 = require("@server/helpers/context");
var AuthenticationGuardService = function () {
    var _classDecorators = [(0, common_1.Injectable)()];
    var _classDescriptor;
    var _classExtraInitializers = [];
    var _classThis;
    var AuthenticationGuardService = _classThis = /** @class */ (function () {
        function AuthenticationGuardService_1(authenticationDomainFacade, userDomainFacade, exception) {
            this.authenticationDomainFacade = authenticationDomainFacade;
            this.userDomainFacade = userDomainFacade;
            this.exception = exception;
        }
        AuthenticationGuardService_1.prototype.validateRequest = function (reflector, context) {
            return __awaiter(this, void 0, void 0, function () {
                var isPublic, request, token, userId, payload, user;
                return __generator(this, function (_a) {
                    switch (_a.label) {
                        case 0:
                            isPublic = authentication_1.Authentication.isPublic(context, reflector);
                            if (isPublic) {
                                return [2 /*return*/, true];
                            }
                            request = context_1.ContextHelper.toRequest(context);
                            token = this.authenticationDomainFacade.getAccessToken(request);
                            try {
                                payload = this.authenticationDomainFacade.verifyTokenOrFail(token);
                                userId = payload.userId;
                            }
                            catch (error) {
                                this.exception.invalidAccessToken();
                            }
                            return [4 /*yield*/, this.userDomainFacade.findOneByIdOrFail(userId)];
                        case 1:
                            user = _a.sent();
                            return [4 /*yield*/, this.checkUserNotVerified(reflector, context, user)];
                        case 2:
                            _a.sent();
                            return [4 /*yield*/, this.checkUserVisitor(reflector, context, user)];
                        case 3:
                            _a.sent();
                            this.authenticationDomainFacade.assignRequestPayload(request, { user: user });
                            return [2 /*return*/, true];
                    }
                });
            });
        };
        AuthenticationGuardService_1.prototype.checkUserNotVerified = function (reflector, context, user) {
            return __awaiter(this, void 0, void 0, function () {
                var isUserNotVerifiedAllowed, isVerified, isVisitor;
                return __generator(this, function (_a) {
                    isUserNotVerifiedAllowed = authentication_1.Authentication.isUserNotVerifiedAllowed(context, reflector);
                    if (isUserNotVerifiedAllowed) {
                        return [2 /*return*/];
                    }
                    isVerified = this.userDomainFacade.isVerified(user);
                    isVisitor = this.userDomainFacade.isVisitor(user);
                    if (isVerified || isVisitor) {
                        return [2 /*return*/];
                    }
                    this.exception.userNotVerifiedUnauthorized(user);
                    return [2 /*return*/];
                });
            });
        };
        AuthenticationGuardService_1.prototype.checkUserVisitor = function (reflector, context, user) {
            return __awaiter(this, void 0, void 0, function () {
                var isUserVisitorAllowed, isVisitor;
                return __generator(this, function (_a) {
                    isUserVisitorAllowed = authentication_1.Authentication.isVisitorAllowed(context, reflector);
                    if (isUserVisitorAllowed) {
                        return [2 /*return*/];
                    }
                    isVisitor = this.userDomainFacade.isVisitor(user);
                    if (isVisitor) {
                        this.exception.userVisitorUnauthorized(user);
                    }
                    return [2 /*return*/];
                });
            });
        };
        return AuthenticationGuardService_1;
    }());
    __setFunctionName(_classThis, "AuthenticationGuardService");
    (function () {
        var _metadata = typeof Symbol === "function" && Symbol.metadata ? Object.create(null) : void 0;
        __esDecorate(null, _classDescriptor = { value: _classThis }, _classDecorators, { kind: "class", name: _classThis.name, metadata: _metadata }, null, _classExtraInitializers);
        AuthenticationGuardService = _classThis = _classDescriptor.value;
        if (_metadata) Object.defineProperty(_classThis, Symbol.metadata, { enumerable: true, configurable: true, writable: true, value: _metadata });
        __runInitializers(_classThis, _classExtraInitializers);
    })();
    return AuthenticationGuardService = _classThis;
}();
exports.AuthenticationGuardService = AuthenticationGuardService;


// C:\grua-booking-system-25\server\dist\modules\authentication\infrastructure\subscribers\authentication.communication.subscriber.js
"use strict";
var __runInitializers = (this && this.__runInitializers) || function (thisArg, initializers, value) {
    var useValue = arguments.length > 2;
    for (var i = 0; i < initializers.length; i++) {
        value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);
    }
    return useValue ? value : void 0;
};
var __esDecorate = (this && this.__esDecorate) || function (ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {
    function accept(f) { if (f !== void 0 && typeof f !== "function") throw new TypeError("Function expected"); return f; }
    var kind = contextIn.kind, key = kind === "getter" ? "get" : kind === "setter" ? "set" : "value";
    var target = !descriptorIn && ctor ? contextIn["static"] ? ctor : ctor.prototype : null;
    var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});
    var _, done = false;
    for (var i = decorators.length - 1; i >= 0; i--) {
        var context = {};
        for (var p in contextIn) context[p] = p === "access" ? {} : contextIn[p];
        for (var p in contextIn.access) context.access[p] = contextIn.access[p];
        context.addInitializer = function (f) { if (done) throw new TypeError("Cannot add initializers after decoration has completed"); extraInitializers.push(accept(f || null)); };
        var result = (0, decorators[i])(kind === "accessor" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);
        if (kind === "accessor") {
            if (result === void 0) continue;
            if (result === null || typeof result !== "object") throw new TypeError("Object expected");
            if (_ = accept(result.get)) descriptor.get = _;
            if (_ = accept(result.set)) descriptor.set = _;
            if (_ = accept(result.init)) initializers.unshift(_);
        }
        else if (_ = accept(result)) {
            if (kind === "field") initializers.unshift(_);
            else descriptor[key] = _;
        }
    }
    if (target) Object.defineProperty(target, contextIn.name, descriptor);
    done = true;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (g && (g = 0, op[0] && (_ = 0)), _) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __setFunctionName = (this && this.__setFunctionName) || function (f, name, prefix) {
    if (typeof name === "symbol") name = name.description ? "[".concat(name.description, "]") : "";
    return Object.defineProperty(f, "name", { configurable: true, value: prefix ? "".concat(prefix, " ", name) : name });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.AuthenticationCommunicationSubscriber = void 0;
var common_1 = require("@nestjs/common");
var event_emitter_1 = require("@nestjs/event-emitter");
var user_orchestrator_event_1 = require("@server/modules/user/orchestrators/user.orchestrator.event");
var application_1 = require("../../application");
var AuthenticationCommunicationSubscriber = function () {
    var _classDecorators = [(0, common_1.Injectable)()];
    var _classDescriptor;
    var _classExtraInitializers = [];
    var _classThis;
    var _instanceExtraInitializers = [];
    var _handleUserRegistered_decorators;
    var _handleResetPassword_decorators;
    var AuthenticationCommunicationSubscriber = _classThis = /** @class */ (function () {
        function AuthenticationCommunicationSubscriber_1(configurationService, userDomainFacade, authenticationDomainFacade, emailService) {
            this.configurationService = (__runInitializers(this, _instanceExtraInitializers), configurationService);
            this.userDomainFacade = userDomainFacade;
            this.authenticationDomainFacade = authenticationDomainFacade;
            this.emailService = emailService;
        }
        AuthenticationCommunicationSubscriber_1.prototype.handleUserRegistered = function (data) {
            var _a;
            return __awaiter(this, void 0, void 0, function () {
                var user, type;
                return __generator(this, function (_b) {
                    switch (_b.label) {
                        case 0: return [4 /*yield*/, this.userDomainFacade.findOneByIdOrFail(data.userId)];
                        case 1:
                            user = _b.sent();
                            type = this.emailService.Type.AUTHENTICATION_WELCOME;
                            return [4 /*yield*/, this.emailService.send({
                                    type: type,
                                    email: user.email,
                                    name: (_a = user.name) !== null && _a !== void 0 ? _a : user.email,
                                    subject: "Welcome",
                                    variables: {},
                                })];
                        case 2:
                            _b.sent();
                            return [2 /*return*/];
                    }
                });
            });
        };
        AuthenticationCommunicationSubscriber_1.prototype.handleResetPassword = function (data) {
            var _a;
            return __awaiter(this, void 0, void 0, function () {
                var user, token, url, urlResetPassword, type;
                return __generator(this, function (_b) {
                    switch (_b.label) {
                        case 0: return [4 /*yield*/, this.userDomainFacade.findOneByIdOrFail(data.userId)];
                        case 1:
                            user = _b.sent();
                            token = this.authenticationDomainFacade.buildTokenResetPassword(user);
                            url = this.configurationService.getClientBaseUrl();
                            urlResetPassword = "".concat(url, "/reset-password/").concat(token);
                            type = this.emailService.Type.AUTHENTICATION_FORGOT_PASSWORD;
                            return [4 /*yield*/, this.emailService.send({
                                    type: type,
                                    email: user.email,
                                    name: (_a = user.name) !== null && _a !== void 0 ? _a : user.email,
                                    subject: "Reset your password",
                                    variables: {
                                        url_password_reset: urlResetPassword,
                                    },
                                })];
                        case 2:
                            _b.sent();
                            return [2 /*return*/];
                    }
                });
            });
        };
        return AuthenticationCommunicationSubscriber_1;
    }());
    __setFunctionName(_classThis, "AuthenticationCommunicationSubscriber");
    (function () {
        var _metadata = typeof Symbol === "function" && Symbol.metadata ? Object.create(null) : void 0;
        _handleUserRegistered_decorators = [(0, event_emitter_1.OnEvent)(user_orchestrator_event_1.UserOrchestratorEvent.Verified.key)];
        _handleResetPassword_decorators = [(0, event_emitter_1.OnEvent)(application_1.AuthenticationApplicationEvent.UserPasswordResetRequested.key)];
        __esDecorate(_classThis, null, _handleUserRegistered_decorators, { kind: "method", name: "handleUserRegistered", static: false, private: false, access: { has: function (obj) { return "handleUserRegistered" in obj; }, get: function (obj) { return obj.handleUserRegistered; } }, metadata: _metadata }, null, _instanceExtraInitializers);
        __esDecorate(_classThis, null, _handleResetPassword_decorators, { kind: "method", name: "handleResetPassword", static: false, private: false, access: { has: function (obj) { return "handleResetPassword" in obj; }, get: function (obj) { return obj.handleResetPassword; } }, metadata: _metadata }, null, _instanceExtraInitializers);
        __esDecorate(null, _classDescriptor = { value: _classThis }, _classDecorators, { kind: "class", name: _classThis.name, metadata: _metadata }, null, _classExtraInitializers);
        AuthenticationCommunicationSubscriber = _classThis = _classDescriptor.value;
        if (_metadata) Object.defineProperty(_classThis, Symbol.metadata, { enumerable: true, configurable: true, writable: true, value: _metadata });
        __runInitializers(_classThis, _classExtraInitializers);
    })();
    return AuthenticationCommunicationSubscriber = _classThis;
}();
exports.AuthenticationCommunicationSubscriber = AuthenticationCommunicationSubscriber;


// C:\grua-booking-system-25\server\dist\modules\authorization\accessControl\authorization.accessControl.exception.js
"use strict";
var __esDecorate = (this && this.__esDecorate) || function (ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {
    function accept(f) { if (f !== void 0 && typeof f !== "function") throw new TypeError("Function expected"); return f; }
    var kind = contextIn.kind, key = kind === "getter" ? "get" : kind === "setter" ? "set" : "value";
    var target = !descriptorIn && ctor ? contextIn["static"] ? ctor : ctor.prototype : null;
    var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});
    var _, done = false;
    for (var i = decorators.length - 1; i >= 0; i--) {
        var context = {};
        for (var p in contextIn) context[p] = p === "access" ? {} : contextIn[p];
        for (var p in contextIn.access) context.access[p] = contextIn.access[p];
        context.addInitializer = function (f) { if (done) throw new TypeError("Cannot add initializers after decoration has completed"); extraInitializers.push(accept(f || null)); };
        var result = (0, decorators[i])(kind === "accessor" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);
        if (kind === "accessor") {
            if (result === void 0) continue;
            if (result === null || typeof result !== "object") throw new TypeError("Object expected");
            if (_ = accept(result.get)) descriptor.get = _;
            if (_ = accept(result.set)) descriptor.set = _;
            if (_ = accept(result.init)) initializers.unshift(_);
        }
        else if (_ = accept(result)) {
            if (kind === "field") initializers.unshift(_);
            else descriptor[key] = _;
        }
    }
    if (target) Object.defineProperty(target, contextIn.name, descriptor);
    done = true;
};
var __runInitializers = (this && this.__runInitializers) || function (thisArg, initializers, value) {
    var useValue = arguments.length > 2;
    for (var i = 0; i < initializers.length; i++) {
        value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);
    }
    return useValue ? value : void 0;
};
var __setFunctionName = (this && this.__setFunctionName) || function (f, name, prefix) {
    if (typeof name === "symbol") name = name.description ? "[".concat(name.description, "]") : "";
    return Object.defineProperty(f, "name", { configurable: true, value: prefix ? "".concat(prefix, " ", name) : name });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.AuthorizationAccessControlException = void 0;
var common_1 = require("@nestjs/common");
var AuthorizationAccessControlException = function () {
    var _classDecorators = [(0, common_1.Injectable)()];
    var _classDescriptor;
    var _classExtraInitializers = [];
    var _classThis;
    var AuthorizationAccessControlException = _classThis = /** @class */ (function () {
        function AuthorizationAccessControlException_1(service) {
            this.service = service;
        }
        AuthorizationAccessControlException_1.prototype.invalidPermission = function (error) {
            return this.service.throw({
                status: common_1.HttpStatus.FORBIDDEN,
                code: 1,
                publicMessage: 'User is not allowed',
                privateMessage: "User does not have access to this resource: ".concat(error.message),
            });
        };
        return AuthorizationAccessControlException_1;
    }());
    __setFunctionName(_classThis, "AuthorizationAccessControlException");
    (function () {
        var _metadata = typeof Symbol === "function" && Symbol.metadata ? Object.create(null) : void 0;
        __esDecorate(null, _classDescriptor = { value: _classThis }, _classDecorators, { kind: "class", name: _classThis.name, metadata: _metadata }, null, _classExtraInitializers);
        AuthorizationAccessControlException = _classThis = _classDescriptor.value;
        if (_metadata) Object.defineProperty(_classThis, Symbol.metadata, { enumerable: true, configurable: true, writable: true, value: _metadata });
        __runInitializers(_classThis, _classExtraInitializers);
    })();
    return AuthorizationAccessControlException = _classThis;
}();
exports.AuthorizationAccessControlException = AuthorizationAccessControlException;


// C:\grua-booking-system-25\server\dist\modules\authorization\accessControl\authorization.accessControl.module.js
"use strict";
var __runInitializers = (this && this.__runInitializers) || function (thisArg, initializers, value) {
    var useValue = arguments.length > 2;
    for (var i = 0; i < initializers.length; i++) {
        value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);
    }
    return useValue ? value : void 0;
};
var __esDecorate = (this && this.__esDecorate) || function (ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {
    function accept(f) { if (f !== void 0 && typeof f !== "function") throw new TypeError("Function expected"); return f; }
    var kind = contextIn.kind, key = kind === "getter" ? "get" : kind === "setter" ? "set" : "value";
    var target = !descriptorIn && ctor ? contextIn["static"] ? ctor : ctor.prototype : null;
    var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});
    var _, done = false;
    for (var i = decorators.length - 1; i >= 0; i--) {
        var context = {};
        for (var p in contextIn) context[p] = p === "access" ? {} : contextIn[p];
        for (var p in contextIn.access) context.access[p] = contextIn.access[p];
        context.addInitializer = function (f) { if (done) throw new TypeError("Cannot add initializers after decoration has completed"); extraInitializers.push(accept(f || null)); };
        var result = (0, decorators[i])(kind === "accessor" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);
        if (kind === "accessor") {
            if (result === void 0) continue;
            if (result === null || typeof result !== "object") throw new TypeError("Object expected");
            if (_ = accept(result.get)) descriptor.get = _;
            if (_ = accept(result.set)) descriptor.set = _;
            if (_ = accept(result.init)) initializers.unshift(_);
        }
        else if (_ = accept(result)) {
            if (kind === "field") initializers.unshift(_);
            else descriptor[key] = _;
        }
    }
    if (target) Object.defineProperty(target, contextIn.name, descriptor);
    done = true;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (g && (g = 0, op[0] && (_ = 0)), _) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __setFunctionName = (this && this.__setFunctionName) || function (f, name, prefix) {
    if (typeof name === "symbol") name = name.description ? "[".concat(name.description, "]") : "";
    return Object.defineProperty(f, "name", { configurable: true, value: prefix ? "".concat(prefix, " ", name) : name });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.AuthorizationByUserController = void 0;
var common_1 = require("@nestjs/common");
var AuthorizationByUserController = function () {
    var _classDecorators = [(0, common_1.Controller)('v1/users/me/authorization')];
    var _classDescriptor;
    var _classExtraInitializers = [];
    var _classThis;
    var _instanceExtraInitializers = [];
    var _getPermissions_decorators;
    var AuthorizationByUserController = _classThis = /** @class */ (function () {
        function AuthorizationByUserController_1(userDomainFacade, loggerService, authorizationDomainFacade, authenticationDomainFacade) {
            this.userDomainFacade = (__runInitializers(this, _instanceExtraInitializers), userDomainFacade);
            this.loggerService = loggerService;
            this.authorizationDomainFacade = authorizationDomainFacade;
            this.authenticationDomainFacade = authenticationDomainFacade;
            this.logger = this.loggerService.create({
                name: 'AuthorizationByUserController',
            });
        }
        AuthorizationByUserController_1.prototype.getPermissions = function (request) {
            return __awaiter(this, void 0, void 0, function () {
                var payload, user, roles;
                return __generator(this, function (_a) {
                    switch (_a.label) {
                        case 0:
                            payload = this.authenticationDomainFacade.getRequestPayload(request);
                            return [4 /*yield*/, this.userDomainFacade.findOneByIdOrFail(payload.user.id)];
                        case 1:
                            user = _a.sent();
                            return [4 /*yield*/, this.authorizationDomainFacade.role.findManyByUser(user)];
                        case 2:
                            roles = _a.sent();
                            return [2 /*return*/, { roles: roles }];
                    }
                });
            });
        };
        return AuthorizationByUserController_1;
    }());
    __setFunctionName(_classThis, "AuthorizationByUserController");
    (function () {
        var _metadata = typeof Symbol === "function" && Symbol.metadata ? Object.create(null) : void 0;
        _getPermissions_decorators = [(0, common_1.Get)('/permissions')];
        __esDecorate(_classThis, null, _getPermissions_decorators, { kind: "method", name: "getPermissions", static: false, private: false, access: { has: function (obj) { return "getPermissions" in obj; }, get: function (obj) { return obj.getPermissions; } }, metadata: _metadata }, null, _instanceExtraInitializers);
        __esDecorate(null, _classDescriptor = { value: _classThis }, _classDecorators, { kind: "class", name: _classThis.name, metadata: _metadata }, null, _classExtraInitializers);
        AuthorizationByUserController = _classThis = _classDescriptor.value;
        if (_metadata) Object.defineProperty(_classThis, Symbol.metadata, { enumerable: true, configurable: true, writable: true, value: _metadata });
        __runInitializers(_classThis, _classExtraInitializers);
    })();
    return AuthorizationByUserController = _classThis;
}();
exports.AuthorizationByUserController = AuthorizationByUserController;


// C:\grua-booking-system-25\server\dist\modules\authorization\application\index.js
"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", { value: true });
__exportStar(require("./authorization.application.module"), exports);


// C:\grua-booking-system-25\server\dist\modules\authorization\domain\code\authorization.code.facade.js
"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __esDecorate = (this && this.__esDecorate) || function (ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {
    function accept(f) { if (f !== void 0 && typeof f !== "function") throw new TypeError("Function expected"); return f; }
    var kind = contextIn.kind, key = kind === "getter" ? "get" : kind === "setter" ? "set" : "value";
    var target = !descriptorIn && ctor ? contextIn["static"] ? ctor : ctor.prototype : null;
    var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});
    var _, done = false;
    for (var i = decorators.length - 1; i >= 0; i--) {
        var context = {};
        for (var p in contextIn) context[p] = p === "access" ? {} : contextIn[p];
        for (var p in contextIn.access) context.access[p] = contextIn.access[p];
        context.addInitializer = function (f) { if (done) throw new TypeError("Cannot add initializers after decoration has completed"); extraInitializers.push(accept(f || null)); };
        var result = (0, decorators[i])(kind === "accessor" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);
        if (kind === "accessor") {
            if (result === void 0) continue;
            if (result === null || typeof result !== "object") throw new TypeError("Object expected");
            if (_ = accept(result.get)) descriptor.get = _;
            if (_ = accept(result.set)) descriptor.set = _;
            if (_ = accept(result.init)) initializers.unshift(_);
        }
        else if (_ = accept(result)) {
            if (kind === "field") initializers.unshift(_);
            else descriptor[key] = _;
        }
    }
    if (target) Object.defineProperty(target, contextIn.name, descriptor);
    done = true;
};
var __runInitializers = (this && this.__runInitializers) || function (thisArg, initializers, value) {
    var useValue = arguments.length > 2;
    for (var i = 0; i < initializers.length; i++) {
        value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);
    }
    return useValue ? value : void 0;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (g && (g = 0, op[0] && (_ = 0)), _) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __setFunctionName = (this && this.__setFunctionName) || function (f, name, prefix) {
    if (typeof name === "symbol") name = name.description ? "[".concat(name.description, "]") : "";
    return Object.defineProperty(f, "name", { configurable: true, value: prefix ? "".concat(prefix, " ", name) : name });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.AuthorizationCodeFacade = void 0;
var common_1 = require("@nestjs/common");
var utility_1 = require("@server/helpers/utility");
var authorization_domain_event_1 = require("../authorization.domain.event");
var authorization_code_model_1 = require("./authorization.code.model");
var AuthorizationCodeFacade = function () {
    var _classDecorators = [(0, common_1.Injectable)()];
    var _classDescriptor;
    var _classExtraInitializers = [];
    var _classThis;
    var AuthorizationCodeFacade = _classThis = /** @class */ (function () {
        function AuthorizationCodeFacade_1(repository, databaseHelper, exception, eventService) {
            this.repository = repository;
            this.databaseHelper = databaseHelper;
            this.exception = exception;
            this.eventService = eventService;
        }
        AuthorizationCodeFacade_1.prototype.createOrFail = function (values, user) {
            return __awaiter(this, void 0, void 0, function () {
                var keyPublic, keyPrivate, code, codeCreated;
                return __generator(this, function (_a) {
                    switch (_a.label) {
                        case 0: return [4 /*yield*/, this.buildKey()];
                        case 1:
                            keyPublic = _a.sent();
                            return [4 /*yield*/, this.buildKey()];
                        case 2:
                            keyPrivate = _a.sent();
                            code = __assign(__assign({}, values), { userId: user.id, keyPublic: keyPublic, keyPrivate: keyPrivate });
                            return [4 /*yield*/, this.repository.save(code)];
                        case 3:
                            codeCreated = _a.sent();
                            return [4 /*yield*/, this.eventService.emit(authorization_domain_event_1.AuthorizationDomainEvent.CodeCreated.key, { authorizationCodeId: code.id })];
                        case 4:
                            _a.sent();
                            return [2 /*return*/, codeCreated];
                    }
                });
            });
        };
        AuthorizationCodeFacade_1.prototype.check = function (code) {
            return __awaiter(this, void 0, void 0, function () {
                var minutes, dateCreated, dateExpiration, dateNow;
                return __generator(this, function (_a) {
                    minutes = code.durationMinutes;
                    dateCreated = new Date(code.dateCreated);
                    dateExpiration = new Date(dateCreated.getTime() + minutes * 60000);
                    dateNow = new Date();
                    if (dateNow > dateExpiration) {
                        throw new Error("Code is expired (".concat(dateNow.getTime(), " > ").concat(dateExpiration.getTime(), ")"));
                    }
                    return [2 /*return*/];
                });
            });
        };
        AuthorizationCodeFacade_1.prototype.setStatusExpired = function (code) {
            return __awaiter(this, void 0, void 0, function () {
                return __generator(this, function (_a) {
                    return [2 /*return*/, this.update(code, {
                            status: authorization_code_model_1.AuthorizationCodeStatus.EXPIRED,
                        })];
                });
            });
        };
        AuthorizationCodeFacade_1.prototype.setStatusUsed = function (code) {
            return __awaiter(this, void 0, void 0, function () {
                return __generator(this, function (_a) {
                    return [2 /*return*/, this.update(code, {
                            status: authorization_code_model_1.AuthorizationCodeStatus.USED,
                        })];
                });
            });
        };
        AuthorizationCodeFacade_1.prototype.create = function (code) {
            return __awaiter(this, void 0, void 0, function () {
                return __generator(this, function (_a) {
                    return [2 /*return*/, this.repository.save(code)];
                });
            });
        };
        AuthorizationCodeFacade_1.prototype.update = function (code, values) {
            return __awaiter(this, void 0, void 0, function () {
                var codeUpdated;
                return __generator(this, function (_a) {
                    codeUpdated = __assign(__assign({}, code), values);
                    return [2 /*return*/, this.repository.save(codeUpdated)];
                });
            });
        };
        AuthorizationCodeFacade_1.prototype.findOneByIdOrFail = function (codeId) {
            return __awaiter(this, void 0, void 0, function () {
                var code;
                return __generator(this, function (_a) {
                    switch (_a.label) {
                        case 0:
                            if (!codeId) {
                                this.databaseHelper.invalidQueryWhere('codeId');
                            }
                            return [4 /*yield*/, this.repository.findOne({ where: { id: codeId } })];
                        case 1:
                            code = _a.sent();
                            if (!code) {
                                this.exception.codeNotFoundById(codeId);
                            }
                            return [2 /*return*/, code];
                    }
                });
            });
        };
        AuthorizationCodeFacade_1.prototype.findOneActiveOrFail = function (user, keyPrivate, keyPublic) {
            return __awaiter(this, void 0, void 0, function () {
                var code;
                return __generator(this, function (_a) {
                    switch (_a.label) {
                        case 0: return [4 /*yield*/, this.repository.findOne({
                                where: {
                                    userId: user.id,
                                    keyPrivate: keyPrivate,
                                    keyPublic: keyPublic,
                                    status: authorization_code_model_1.AuthorizationCodeStatus.ACTIVE,
                                },
                            })];
                        case 1:
                            code = _a.sent();
                            if (!code) {
                                this.exception.codeNotFoundByKeys(user, keyPrivate, keyPublic);
                            }
                            return [2 /*return*/, code];
                    }
                });
            });
        };
        AuthorizationCodeFacade_1.prototype.findManyByUserAndType = function (user, type) {
            return __awaiter(this, void 0, void 0, function () {
                var codes;
                return __generator(this, function (_a) {
                    switch (_a.label) {
                        case 0:
                            if (!type) {
                                this.databaseHelper.invalidQueryWhere('type');
                            }
                            return [4 /*yield*/, this.repository.find({
                                    where: { userId: user.id, type: type },
                                })];
                        case 1:
                            codes = _a.sent();
                            return [2 /*return*/, codes];
                    }
                });
            });
        };
        AuthorizationCodeFacade_1.prototype.delete = function (code) {
            return __awaiter(this, void 0, void 0, function () {
                return __generator(this, function (_a) {
                    switch (_a.label) {
                        case 0: return [4 /*yield*/, this.repository.softDelete({ id: code.id })];
                        case 1:
                            _a.sent();
                            return [2 /*return*/];
                    }
                });
            });
        };
        AuthorizationCodeFacade_1.prototype.getKeyPrivate = function (authorizationCode) {
            return authorizationCode.keyPrivate;
        };
        AuthorizationCodeFacade_1.prototype.buildKey = function () {
            return __awaiter(this, void 0, void 0, function () {
                return __generator(this, function (_a) {
                    return [2 /*return*/, utility_1.Utility.buildRandomAlphanumericString(8)];
                });
            });
        };
        return AuthorizationCodeFacade_1;
    }());
    __setFunctionName(_classThis, "AuthorizationCodeFacade");
    (function () {
        var _metadata = typeof Symbol === "function" && Symbol.metadata ? Object.create(null) : void 0;
        __esDecorate(null, _classDescriptor = { value: _classThis }, _classDecorators, { kind: "class", name: _classThis.name, metadata: _metadata }, null, _classExtraInitializers);
        AuthorizationCodeFacade = _classThis = _classDescriptor.value;
        if (_metadata) Object.defineProperty(_classThis, Symbol.metadata, { enumerable: true, configurable: true, writable: true, value: _metadata });
        __runInitializers(_classThis, _classExtraInitializers);
    })();
    return AuthorizationCodeFacade = _classThis;
}();
exports.AuthorizationCodeFacade = AuthorizationCodeFacade;


// C:\grua-booking-system-25\server\dist\modules\authorization\domain\code\authorization.code.model.js
"use strict";
var __esDecorate = (this && this.__esDecorate) || function (ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {
    function accept(f) { if (f !== void 0 && typeof f !== "function") throw new TypeError("Function expected"); return f; }
    var kind = contextIn.kind, key = kind === "getter" ? "get" : kind === "setter" ? "set" : "value";
    var target = !descriptorIn && ctor ? contextIn["static"] ? ctor : ctor.prototype : null;
    var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});
    var _, done = false;
    for (var i = decorators.length - 1; i >= 0; i--) {
        var context = {};
        for (var p in contextIn) context[p] = p === "access" ? {} : contextIn[p];
        for (var p in contextIn.access) context.access[p] = contextIn.access[p];
        context.addInitializer = function (f) { if (done) throw new TypeError("Cannot add initializers after decoration has completed"); extraInitializers.push(accept(f || null)); };
        var result = (0, decorators[i])(kind === "accessor" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);
        if (kind === "accessor") {
            if (result === void 0) continue;
            if (result === null || typeof result !== "object") throw new TypeError("Object expected");
            if (_ = accept(result.get)) descriptor.get = _;
            if (_ = accept(result.set)) descriptor.set = _;
            if (_ = accept(result.init)) initializers.unshift(_);
        }
        else if (_ = accept(result)) {
            if (kind === "field") initializers.unshift(_);
            else descriptor[key] = _;
        }
    }
    if (target) Object.defineProperty(target, contextIn.name, descriptor);
    done = true;
};
var __runInitializers = (this && this.__runInitializers) || function (thisArg, initializers, value) {
    var useValue = arguments.length > 2;
    for (var i = 0; i < initializers.length; i++) {
        value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);
    }
    return useValue ? value : void 0;
};
var __setFunctionName = (this && this.__setFunctionName) || function (f, name, prefix) {
    if (typeof name === "symbol") name = name.description ? "[".concat(name.description, "]") : "";
    return Object.defineProperty(f, "name", { configurable: true, value: prefix ? "".concat(prefix, " ", name) : name });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.AuthorizationCode = exports.AuthorizationCodeStatus = exports.AuthorizationCodeType = void 0;
var class_validator_1 = require("class-validator");
var domain_1 = require("@server/modules/user/domain");
var typeorm_1 = require("typeorm");
var AuthorizationCodeType;
(function (AuthorizationCodeType) {
    AuthorizationCodeType["USER_VERIFICATION"] = "user.verification";
})(AuthorizationCodeType || (exports.AuthorizationCodeType = AuthorizationCodeType = {}));
var AuthorizationCodeStatus;
(function (AuthorizationCodeStatus) {
    AuthorizationCodeStatus["ACTIVE"] = "ACTIVE";
    AuthorizationCodeStatus["USED"] = "USED";
    AuthorizationCodeStatus["EXPIRED"] = "EXPIRED";
})(AuthorizationCodeStatus || (exports.AuthorizationCodeStatus = AuthorizationCodeStatus = {}));
var AuthorizationCode = function () {
    var _classDecorators = [(0, typeorm_1.Entity)()];
    var _classDescriptor;
    var _classExtraInitializers = [];
    var _classThis;
    var _instanceExtraInitializers = [];
    var _id_decorators;
    var _id_initializers = [];
    var _keyPublic_decorators;
    var _keyPublic_initializers = [];
    var _keyPrivate_decorators;
    var _keyPrivate_initializers = [];
    var _durationMinutes_decorators;
    var _durationMinutes_initializers = [];
    var _type_decorators;
    var _type_initializers = [];
    var _status_decorators;
    var _status_initializers = [];
    var _dateCreated_decorators;
    var _dateCreated_initializers = [];
    var _dateDeleted_decorators;
    var _dateDeleted_initializers = [];
    var _userId_decorators;
    var _userId_initializers = [];
    var _user_decorators;
    var _user_initializers = [];
    var AuthorizationCode = _classThis = /** @class */ (function () {
        function AuthorizationCode_1() {
            this.id = (__runInitializers(this, _instanceExtraInitializers), __runInitializers(this, _id_initializers, void 0));
            this.keyPublic = __runInitializers(this, _keyPublic_initializers, void 0);
            this.keyPrivate = __runInitializers(this, _keyPrivate_initializers, void 0);
            this.durationMinutes = __runInitializers(this, _durationMinutes_initializers, void 0);
            this.type = __runInitializers(this, _type_initializers, void 0);
            this.status = __runInitializers(this, _status_initializers, void 0);
            this.dateCreated = __runInitializers(this, _dateCreated_initializers, void 0);
            this.dateDeleted = __runInitializers(this, _dateDeleted_initializers, void 0);
            /* -------------------------------- RELATIONS ------------------------------- */
            this.userId = __runInitializers(this, _userId_initializers, void 0);
            this.user = __runInitializers(this, _user_initializers, void 0);
        }
        return AuthorizationCode_1;
    }());
    __setFunctionName(_classThis, "AuthorizationCode");
    (function () {
        var _metadata = typeof Symbol === "function" && Symbol.metadata ? Object.create(null) : void 0;
        _id_decorators = [(0, typeorm_1.PrimaryGeneratedColumn)('uuid')];
        _keyPublic_decorators = [(0, typeorm_1.Column)()];
        _keyPrivate_decorators = [(0, typeorm_1.Column)()];
        _durationMinutes_decorators = [(0, typeorm_1.Column)({ default: 60 }), (0, class_validator_1.Min)(0)];
        _type_decorators = [(0, typeorm_1.Column)({ enum: AuthorizationCodeType })];
        _status_decorators = [(0, typeorm_1.Column)({
                enum: AuthorizationCodeStatus,
                default: AuthorizationCodeStatus.ACTIVE,
            })];
        _dateCreated_decorators = [(0, typeorm_1.CreateDateColumn)({ type: 'timestamp with time zone' })];
        _dateDeleted_decorators = [(0, typeorm_1.DeleteDateColumn)()];
        _userId_decorators = [(0, typeorm_1.Column)()];
        _user_decorators = [(0, typeorm_1.ManyToOne)(function () { return domain_1.User; }), (0, typeorm_1.JoinColumn)({ name: 'userId' })];
        __esDecorate(null, null, _id_decorators, { kind: "field", name: "id", static: false, private: false, access: { has: function (obj) { return "id" in obj; }, get: function (obj) { return obj.id; }, set: function (obj, value) { obj.id = value; } }, metadata: _metadata }, _id_initializers, _instanceExtraInitializers);
        __esDecorate(null, null, _keyPublic_decorators, { kind: "field", name: "keyPublic", static: false, private: false, access: { has: function (obj) { return "keyPublic" in obj; }, get: function (obj) { return obj.keyPublic; }, set: function (obj, value) { obj.keyPublic = value; } }, metadata: _metadata }, _keyPublic_initializers, _instanceExtraInitializers);
        __esDecorate(null, null, _keyPrivate_decorators, { kind: "field", name: "keyPrivate", static: false, private: false, access: { has: function (obj) { return "keyPrivate" in obj; }, get: function (obj) { return obj.keyPrivate; }, set: function (obj, value) { obj.keyPrivate = value; } }, metadata: _metadata }, _keyPrivate_initializers, _instanceExtraInitializers);
        __esDecorate(null, null, _durationMinutes_decorators, { kind: "field", name: "durationMinutes", static: false, private: false, access: { has: function (obj) { return "durationMinutes" in obj; }, get: function (obj) { return obj.durationMinutes; }, set: function (obj, value) { obj.durationMinutes = value; } }, metadata: _metadata }, _durationMinutes_initializers, _instanceExtraInitializers);
        __esDecorate(null, null, _type_decorators, { kind: "field", name: "type", static: false, private: false, access: { has: function (obj) { return "type" in obj; }, get: function (obj) { return obj.type; }, set: function (obj, value) { obj.type = value; } }, metadata: _metadata }, _type_initializers, _instanceExtraInitializers);
        __esDecorate(null, null, _status_decorators, { kind: "field", name: "status", static: false, private: false, access: { has: function (obj) { return "status" in obj; }, get: function (obj) { return obj.status; }, set: function (obj, value) { obj.status = value; } }, metadata: _metadata }, _status_initializers, _instanceExtraInitializers);
        __esDecorate(null, null, _dateCreated_decorators, { kind: "field", name: "dateCreated", static: false, private: false, access: { has: function (obj) { return "dateCreated" in obj; }, get: function (obj) { return obj.dateCreated; }, set: function (obj, value) { obj.dateCreated = value; } }, metadata: _metadata }, _dateCreated_initializers, _instanceExtraInitializers);
        __esDecorate(null, null, _dateDeleted_decorators, { kind: "field", name: "dateDeleted", static: false, private: false, access: { has: function (obj) { return "dateDeleted" in obj; }, get: function (obj) { return obj.dateDeleted; }, set: function (obj, value) { obj.dateDeleted = value; } }, metadata: _metadata }, _dateDeleted_initializers, _instanceExtraInitializers);
        __esDecorate(null, null, _userId_decorators, { kind: "field", name: "userId", static: false, private: false, access: { has: function (obj) { return "userId" in obj; }, get: function (obj) { return obj.userId; }, set: function (obj, value) { obj.userId = value; } }, metadata: _metadata }, _userId_initializers, _instanceExtraInitializers);
        __esDecorate(null, null, _user_decorators, { kind: "field", name: "user", static: false, private: false, access: { has: function (obj) { return "user" in obj; }, get: function (obj) { return obj.user; }, set: function (obj, value) { obj.user = value; } }, metadata: _metadata }, _user_initializers, _instanceExtraInitializers);
        __esDecorate(null, _classDescriptor = { value: _classThis }, _classDecorators, { kind: "class", name: _classThis.name, metadata: _metadata }, null, _classExtraInitializers);
        AuthorizationCode = _classThis = _classDescriptor.value;
        if (_metadata) Object.defineProperty(_classThis, Symbol.metadata, { enumerable: true, configurable: true, writable: true, value: _metadata });
        __runInitializers(_classThis, _classExtraInitializers);
    })();
    return AuthorizationCode = _classThis;
}();
exports.AuthorizationCode = AuthorizationCode;


// C:\grua-booking-system-25\server\dist\modules\authorization\domain\role\authorization.role.facade.js
"use strict";
var __esDecorate = (this && this.__esDecorate) || function (ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {
    function accept(f) { if (f !== void 0 && typeof f !== "function") throw new TypeError("Function expected"); return f; }
    var kind = contextIn.kind, key = kind === "getter" ? "get" : kind === "setter" ? "set" : "value";
    var target = !descriptorIn && ctor ? contextIn["static"] ? ctor : ctor.prototype : null;
    var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});
    var _, done = false;
    for (var i = decorators.length - 1; i >= 0; i--) {
        var context = {};
        for (var p in contextIn) context[p] = p === "access" ? {} : contextIn[p];
        for (var p in contextIn.access) context.access[p] = contextIn.access[p];
        context.addInitializer = function (f) { if (done) throw new TypeError("Cannot add initializers after decoration has completed"); extraInitializers.push(accept(f || null)); };
        var result = (0, decorators[i])(kind === "accessor" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);
        if (kind === "accessor") {
            if (result === void 0) continue;
            if (result === null || typeof result !== "object") throw new TypeError("Object expected");
            if (_ = accept(result.get)) descriptor.get = _;
            if (_ = accept(result.set)) descriptor.set = _;
            if (_ = accept(result.init)) initializers.unshift(_);
        }
        else if (_ = accept(result)) {
            if (kind === "field") initializers.unshift(_);
            else descriptor[key] = _;
        }
    }
    if (target) Object.defineProperty(target, contextIn.name, descriptor);
    done = true;
};
var __runInitializers = (this && this.__runInitializers) || function (thisArg, initializers, value) {
    var useValue = arguments.length > 2;
    for (var i = 0; i < initializers.length; i++) {
        value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);
    }
    return useValue ? value : void 0;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (g && (g = 0, op[0] && (_ = 0)), _) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __setFunctionName = (this && this.__setFunctionName) || function (f, name, prefix) {
    if (typeof name === "symbol") name = name.description ? "[".concat(name.description, "]") : "";
    return Object.defineProperty(f, "name", { configurable: true, value: prefix ? "".concat(prefix, " ", name) : name });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.AuthorizationRoleFacade = void 0;
var common_1 = require("@nestjs/common");
var AuthorizationRoleFacade = function () {
    var _classDecorators = [(0, common_1.Injectable)()];
    var _classDescriptor;
    var _classExtraInitializers = [];
    var _classThis;
    var AuthorizationRoleFacade = _classThis = /** @class */ (function () {
        function AuthorizationRoleFacade_1(repository, databaseHelper) {
            this.repository = repository;
            this.databaseHelper = databaseHelper;
        }
        AuthorizationRoleFacade_1.prototype.findManyByUser = function (user) {
            return __awaiter(this, void 0, void 0, function () {
                var roles;
                return __generator(this, function (_a) {
                    switch (_a.label) {
                        case 0: return [4 /*yield*/, this.repository
                                .createQueryBuilder('role')
                                .innerJoin('role.roleUsers', 'roleUser', 'roleUser.userId = :userId', {
                                userId: user.id,
                            })
                                .getMany()];
                        case 1:
                            roles = _a.sent();
                            return [2 /*return*/, roles];
                    }
                });
            });
        };
        AuthorizationRoleFacade_1.prototype.findOneByNameOrFail = function (name) {
            return __awaiter(this, void 0, void 0, function () {
                var role;
                return __generator(this, function (_a) {
                    switch (_a.label) {
                        case 0: return [4 /*yield*/, this.repository
                                .createQueryBuilder('role')
                                .leftJoinAndSelect('role.roleUsers', 'roleUser')
                                .where('role.name = :name', { name: name })
                                .getOne()];
                        case 1:
                            role = _a.sent();
                            if (!role) {
                                this.databaseHelper.notFoundByQuery({ name: name });
                            }
                            return [2 /*return*/, role];
                    }
                });
            });
        };
        return AuthorizationRoleFacade_1;
    }());
    __setFunctionName(_classThis, "AuthorizationRoleFacade");
    (function () {
        var _metadata = typeof Symbol === "function" && Symbol.metadata ? Object.create(null) : void 0;
        __esDecorate(null, _classDescriptor = { value: _classThis }, _classDecorators, { kind: "class", name: _classThis.name, metadata: _metadata }, null, _classExtraInitializers);
        AuthorizationRoleFacade = _classThis = _classDescriptor.value;
        if (_metadata) Object.defineProperty(_classThis, Symbol.metadata, { enumerable: true, configurable: true, writable: true, value: _metadata });
        __runInitializers(_classThis, _classExtraInitializers);
    })();
    return AuthorizationRoleFacade = _classThis;
}();
exports.AuthorizationRoleFacade = AuthorizationRoleFacade;


// C:\grua-booking-system-25\server\dist\modules\authorization\domain\role\authorization.role.model.js
"use strict";
var __esDecorate = (this && this.__esDecorate) || function (ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {
    function accept(f) { if (f !== void 0 && typeof f !== "function") throw new TypeError("Function expected"); return f; }
    var kind = contextIn.kind, key = kind === "getter" ? "get" : kind === "setter" ? "set" : "value";
    var target = !descriptorIn && ctor ? contextIn["static"] ? ctor : ctor.prototype : null;
    var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});
    var _, done = false;
    for (var i = decorators.length - 1; i >= 0; i--) {
        var context = {};
        for (var p in contextIn) context[p] = p === "access" ? {} : contextIn[p];
        for (var p in contextIn.access) context.access[p] = contextIn.access[p];
        context.addInitializer = function (f) { if (done) throw new TypeError("Cannot add initializers after decoration has completed"); extraInitializers.push(accept(f || null)); };
        var result = (0, decorators[i])(kind === "accessor" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);
        if (kind === "accessor") {
            if (result === void 0) continue;
            if (result === null || typeof result !== "object") throw new TypeError("Object expected");
            if (_ = accept(result.get)) descriptor.get = _;
            if (_ = accept(result.set)) descriptor.set = _;
            if (_ = accept(result.init)) initializers.unshift(_);
        }
        else if (_ = accept(result)) {
            if (kind === "field") initializers.unshift(_);
            else descriptor[key] = _;
        }
    }
    if (target) Object.defineProperty(target, contextIn.name, descriptor);
    done = true;
};
var __runInitializers = (this && this.__runInitializers) || function (thisArg, initializers, value) {
    var useValue = arguments.length > 2;
    for (var i = 0; i < initializers.length; i++) {
        value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);
    }
    return useValue ? value : void 0;
};
var __setFunctionName = (this && this.__setFunctionName) || function (f, name, prefix) {
    if (typeof name === "symbol") name = name.description ? "[".concat(name.description, "]") : "";
    return Object.defineProperty(f, "name", { configurable: true, value: prefix ? "".concat(prefix, " ", name) : name });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.AuthorizationRole = void 0;
var typeorm_1 = require("typeorm");
var authorization_roleUser_model_1 = require("./authorization.roleUser.model");
var AuthorizationRole = function () {
    var _classDecorators = [(0, typeorm_1.Entity)()];
    var _classDescriptor;
    var _classExtraInitializers = [];
    var _classThis;
    var _instanceExtraInitializers = [];
    var _id_decorators;
    var _id_initializers = [];
    var _name_decorators;
    var _name_initializers = [];
    var _roleUsers_decorators;
    var _roleUsers_initializers = [];
    var AuthorizationRole = _classThis = /** @class */ (function () {
        function AuthorizationRole_1() {
            this.id = (__runInitializers(this, _instanceExtraInitializers), __runInitializers(this, _id_initializers, void 0));
            this.name = __runInitializers(this, _name_initializers, void 0);
            this.roleUsers = __runInitializers(this, _roleUsers_initializers, void 0);
        }
        return AuthorizationRole_1;
    }());
    __setFunctionName(_classThis, "AuthorizationRole");
    (function () {
        var _metadata = typeof Symbol === "function" && Symbol.metadata ? Object.create(null) : void 0;
        _id_decorators = [(0, typeorm_1.PrimaryGeneratedColumn)('uuid')];
        _name_decorators = [(0, typeorm_1.Column)()];
        _roleUsers_decorators = [(0, typeorm_1.OneToMany)(function () { return authorization_roleUser_model_1.AuthorizationRoleUser; }, function (roleUser) { return roleUser.role; })];
        __esDecorate(null, null, _id_decorators, { kind: "field", name: "id", static: false, private: false, access: { has: function (obj) { return "id" in obj; }, get: function (obj) { return obj.id; }, set: function (obj, value) { obj.id = value; } }, metadata: _metadata }, _id_initializers, _instanceExtraInitializers);
        __esDecorate(null, null, _name_decorators, { kind: "field", name: "name", static: false, private: false, access: { has: function (obj) { return "name" in obj; }, get: function (obj) { return obj.name; }, set: function (obj, value) { obj.name = value; } }, metadata: _metadata }, _name_initializers, _instanceExtraInitializers);
        __esDecorate(null, null, _roleUsers_decorators, { kind: "field", name: "roleUsers", static: false, private: false, access: { has: function (obj) { return "roleUsers" in obj; }, get: function (obj) { return obj.roleUsers; }, set: function (obj, value) { obj.roleUsers = value; } }, metadata: _metadata }, _roleUsers_initializers, _instanceExtraInitializers);
        __esDecorate(null, _classDescriptor = { value: _classThis }, _classDecorators, { kind: "class", name: _classThis.name, metadata: _metadata }, null, _classExtraInitializers);
        AuthorizationRole = _classThis = _classDescriptor.value;
        if (_metadata) Object.defineProperty(_classThis, Symbol.metadata, { enumerable: true, configurable: true, writable: true, value: _metadata });
        __runInitializers(_classThis, _classExtraInitializers);
    })();
    return AuthorizationRole = _classThis;
}();
exports.AuthorizationRole = AuthorizationRole;


// C:\grua-booking-system-25\server\dist\modules\authorization\domain\role\authorization.roleUser.facade.js
